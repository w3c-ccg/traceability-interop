{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9642cbc0-708e-4b67-b393-92e23574832e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b5340b96-1a29-4f76-9041-5a4a46653bbe",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2832b64c-6231-44e1-b8dd-5c522b8e4314",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ed2c2718-1637-411b-9db5-a6505bcf22b5"
                }
              }
            ]
          },
          {
            "id": "e841a694-fa48-4c43-a873-ca9b5ff6c132",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c6a0a6a9-ebae-4920-8439-ea49cb116ad5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1babb78c-2da9-457a-b1ba-4d6ea721ca8e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e3c29bc4-2e9d-4b92-b7c1-b0ec7a1e0ce8",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "0bf29922-4656-494c-9b8f-a029b0786ae7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2e87f362-beb8-400f-8302-9c02fdec8087",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c68a0259-0368-417a-807a-183e887bc0ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e4eb6f84-3fb5-4d06-919c-d97c2649428b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "62ca0c31-500f-4964-a1a3-115c729adcba",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bac09d0f-5edb-41d5-836c-e7a5f3dab234"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5977dc71-2a06-436f-8ff6-fc7710e4b908",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d41d00ae-5729-4584-b5f0-baac87190a97"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "35464117-d554-4ad2-9bc4-97b72e9e754c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "1eac6b8b-8c86-404a-a789-c73ffc7f0bb8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2a4f428b-aad5-49ad-8075-2189df880a71",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2ba0854f-3a9d-4513-8beb-713c6323bdb3"
            }
          }
        ]
      },
      {
        "id": "449b3505-54f0-481d-9f76-2082e83022d1",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "344493f4-786f-4761-a72b-8bc63f834da4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "afb14c9c-f46f-40d5-be94-d37a590f1f8e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "74699ed8-6824-4f50-9002-d825a0966fc2",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f04c691e-22f8-49f3-8530-36e4cd8f17e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a479b7ff-0cbe-44ee-abb1-93a74def223c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "443a627c-69fe-4c78-a6e5-0f98bf840adc",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "332b7bbb-c96e-4c12-a076-afe7846b4e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c60e699e-f2cb-408d-ac1e-92e7d3c1f45f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22c2158c-92c8-4ef0-af94-ab80820b3d0e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b1f0ed-3e31-486c-9739-c206e24c1900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b56c3726-ab56-477e-8327-a32565f5d291"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d756d1eb-06a5-4fe4-9c7d-78cbf778badf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7e840499-6010-45e8-bb4d-65a81d91d0eb",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd733af-2537-4274-95b6-b47827f88845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "69d4af49-05eb-4eab-bfa1-f0142f19639c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40696056-c573-48be-b698-8b29ad0fcfa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3946891a-1345-46b9-951a-97c5f9c9a96a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e3907f94-d006-420a-9806-88820ac7df34",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ec1e5bed-6235-47ca-a91b-3279450b6d32",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4c8bb96-15c2-49cd-8a7f-802c949a7a68",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c5e9c83d-bd1b-496d-b186-65393e8f7831"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7411a370-cd4a-48ee-9381-ec115520174c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "04362ea9-6282-467b-9868-b0e8d3d03fc4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "20192c46-ab51-4a93-a133-6d72af76d63b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f5c7c5be-fce5-4f85-a27f-8b9ae69113b0"
            }
          }
        ]
      },
      {
        "id": "7a3bf117-d063-4d6d-aff2-c65f8b5218ff",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "6bd6166b-942b-45df-bd46-7f267fb1ca66",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4d5810ec-4b5f-48e1-b815-4a666a1332db",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "67537d41-cfe8-4325-ab2a-a23909e05659",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b6c03fa-a292-4099-8275-ffd7464d55a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32cc5a39-753b-4c85-814d-c0985908d53b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20ecbffb-53be-4b49-8aac-96465b1385c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81bfca01-a97f-4750-a352-faf0b1485da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa7fbe6-b1cc-4bc2-815b-5aaf96dcc24d",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea67c38-bc20-4fef-a35d-d6493346964e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64ae18ea-ebd9-4e0f-91c9-718178871dfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9049bcb-c355-4319-a28c-02e273748243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d5252c1-813e-4f98-b6f1-472b63ebbda2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e41b3a3-3e7c-4ee0-a970-cc8b6828cecc",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "241f4558-fd43-407a-ac14-534df2cc2e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e026ec6-2038-4403-9eb2-3f442051d60e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eabb0885-55b2-4d91-a029-939853850277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d991c473-84ee-4ab0-b861-17d57010f350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "664d86b8-1d85-4020-a230-ed5c9e34502d",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8804fe1a-4794-4f85-96a4-dd0635779012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a31c0500-edcd-4335-9a56-aaf52422b970"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98875bc4-9b74-47e5-b6b1-c899606cfb8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a118f11d-c4d3-413e-86db-c73555b62a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c918d92-4dac-4dff-a253-08954325dc65",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcf72e91-400f-42aa-b84d-b53e203bafd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b48108b9-f557-4a90-83f7-436d0a152186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af4b7640-db3a-4bda-88eb-8ae129cd7885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "513477e2-3e3b-45a0-bfc2-6b8f0c52314f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53399dcc-3280-4733-bb26-aa1792e0a211",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0630b286-c188-4ce4-8aac-16c4ae426629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47c50d80-0366-4e7e-bbb7-adf874eeb195"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6978033-a1e9-418d-a278-4141c0caed43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2fafe70-833e-40ab-b8a3-42ad19621f95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "547fc612-a7b9-4d12-a223-4339a9ba3c63",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83770b71-a6fb-4845-8549-ed1b288000c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbd592ee-79f6-4d00-b433-db3eed4cb7da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d8fb511-07c7-4e87-901d-3dd2067ed44a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b608d3e-6fd6-4320-ab1b-717ce52a96d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3d56b6b-eca8-4ceb-86ac-a5c1c528ecfb",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d78f8ea-b4ba-4511-8476-b2fbe10fd172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d84156ea-86ed-4a78-828a-e619e2d62ebb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bdb239d-80bf-412b-a79d-1a97887aa340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5b59e8e-6ce8-4e7a-8901-52720f415e30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c429bfa8-dc05-430b-8199-1194554fc863",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d6f58fe-beed-4a65-b553-d84cc1cc95df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2fcf630-7545-4559-b884-689671bf8834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f0e841-f2b5-470c-a6fd-e496dd500cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c74aa7c-5cc9-4e46-b1d2-7804cdccc2db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3f82af7-6fab-4487-94af-9706aa7f6773",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ab112e-c42c-42b4-b896-da4d3b2ed087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4cbe72a-b143-417e-8e92-939d5f07628e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d1c9df8-b137-487a-8ecc-0082f0959716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9feedb6c-7d0c-417e-97cb-bb614b93dd9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e117c555-b159-4204-988b-24725d6ff6d8",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2f325d9-e622-4797-9bb1-e85ecea52a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e194091d-048d-4e94-9936-ae7979d0022b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b927b89-41e1-4149-bdfb-6f4aee8086a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4002111f-fa02-4de8-8e97-0de2671458d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc74041-0275-405f-8042-886ba813b221",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c88665-5b2a-482c-b477-d92a306fcaa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa43b543-5901-488f-a9b1-a5da83cd97e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a6b9983-1e62-4798-a53c-312f2f4bec93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0e85b0e-860f-41c8-9954-ff7dffa8fc90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a66cc036-7af7-467a-84f3-e260bfe4a402",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fdc9fbe-7253-4788-a80d-3c2c8dff09b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8e270ba-8c79-4a18-a590-1a8e5e02f6e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "571db436-ddf7-4620-a0a9-b159166c12c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f95e68f-246b-453d-b538-ff0ad52ebdb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "402a6f29-c346-444f-ae0b-22e80580ee66",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66dd8a4a-f5ed-4b18-bb03-b2c58f4841c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "344e6197-376f-41cd-9134-26769d49ec96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74530fce-ca29-4cc3-ba33-b1f59f9556c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45c358d1-0de9-411c-b2f6-54cee01fec2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5257a39b-c33f-46c0-b48f-0904caf17c42",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4001f310-2c74-449f-8f27-044dface08ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28db3d3d-1bb0-493a-9d02-ade88981f455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d59e4e7f-bf9b-4b02-a1c9-d04bce6e9724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "015b2511-e605-428c-aed0-e5a9f67b5dd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dc753ae-8c69-40db-962d-8dc8f96340b3",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a3378d-715f-4e20-b350-d4f31c751318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdf5d617-b78a-44c3-9e6d-d475d09e1b34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db633df5-8b39-4421-8cfd-e21066aa00ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43c2fb7b-3126-4038-adeb-a49de54d1238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc6a1ff1-738d-41e7-b4e9-0ddff33790a0",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "853c92c0-353b-4c63-998f-1dbf570d5450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "572db8fa-044a-4847-9505-85e16a9c1a6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "281a5ee8-bf47-4ac1-9de2-34c02162f190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03b599fb-a35e-4e1e-bbd8-e12bb5b09bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4162658a-83b3-4cd0-8716-0f0aeb453355",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d416f5-dfa4-4654-8b5a-81fc0509c102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2515122-4b11-4d0d-8a61-2a47ecd973cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "520cad5f-d072-4bb9-a370-0b16e2855ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9f45ee7-12d3-45c9-8176-ead121441944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98702d67-beb8-4264-91bd-1ef8d1e4f38f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c21554b-a3c1-412d-8ce3-98a64b275937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f04eca2-55f0-41fa-9b2c-c8f143fb4abb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e459cc-d2a3-4a87-8cf0-c297c3ad7463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "04f98892-0769-42f5-81cc-fa8173a0bca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d43d66a-9010-4924-b895-0d7142f9a719",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a78bb84-0f4f-4b44-9445-bd0ca4f7518e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "604189b2-5a2b-43a3-bbf2-112eb2f9ad62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4106dd59-cd65-49c4-b028-3ea255597f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "98f40c39-18cf-4ccd-b95b-0d76bb4db8b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac4b297f-c2f3-4b2e-9de1-d753637f1839",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51de3951-42ad-4a9a-b865-01be2ca7f619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54fbf467-52c4-4418-8f25-b21b260cbd06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d654bad-4a29-41ea-8300-3626a6bfeaf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c3bc238-e7ad-490d-9bcb-698e0719ac91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab3f191-8a44-4fcb-a6e6-871352067a51",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17cf1404-5d4b-4036-9429-2fd89e7135fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a54da32-4efb-4ef2-9bab-6eeb24519022"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17cd5b60-2ece-47a5-8348-9d9b1963bd99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e68b1f3-ea70-4f00-a25c-f78298a057f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b75869b-8ec5-47c3-a188-cb5fc139baef",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6db9b77-bdf2-408b-be6f-ed565cf76cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5ef021a-ca0f-4acc-944f-b7baa64aeb83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd234722-bc2f-4b0f-9c61-bdc3cb51c20c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b5a4a004-c9b2-46c3-a5e3-2cb7e018cda0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b578eacb-ff06-4510-ba02-8d78bcf39a97",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2c2cb2-623e-40ba-b0bb-4fdffba389c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5bd08a2-ab7e-40a1-81f7-4efc960daf0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a20f7c9-2819-4250-990c-fdb46dba2e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "72b51cd7-b426-4108-8be5-305ed1c4e0ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d5c073-c871-41a5-986f-eb276fa13ef7",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e13fed4c-98e5-493f-8787-da027d45f8a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b090449-a4fa-476e-a47d-b41840ab9b9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4525ae50-6f22-45ea-93de-98460c81d1da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe8d24f0-8667-4a80-ac3e-017ea15f3e29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b1bc988-8130-48eb-b308-9615faaccdab",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "765ec902-fe52-48c9-904e-f010fea1141a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffa3cde6-482e-4f9f-be1f-0ea8ecd85e8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b2fe2f-85d6-4141-890d-0f61cacd8e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ab4876f-8f39-410c-8bdf-b2f5048a6e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a206c42b-6987-40ed-9e7e-70088ae032ad",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c333953-9197-48fe-acc7-f56aedde98ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ea6d469-b168-4d90-9dab-d8c43de9daef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad89d1f2-afa8-47f5-b904-f0c529328087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "29bc26bb-1081-482b-8838-5a60a83ab2fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "750e19b1-6365-4dd8-95de-8f116f986593",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad5d070-97a6-4afa-a712-7ad9fd9b9012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ef251ea-20d9-4e51-b8c8-d32e9e5d45e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf3a72f2-72a1-4f7d-b650-e99f760898c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2fbaa15-3af3-4d2c-9de9-af0a672aadbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8048d8b6-7cb1-4af5-9cbe-17d074439410",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae89295b-210a-4c3c-9fce-867064b5100e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e807c21-72b9-4eeb-8790-4678eef6755e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fee74732-4afc-47b5-ada4-77a97b387396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "77954dac-64d2-4f11-a438-2ae53cc3dad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "614d6ac5-9500-4614-8657-fa4cd0bda128",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df67182d-3b54-406a-9bc4-72cf1b8da450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29dccff7-86b0-4c75-94dd-5c6783d9a3ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc54216-bf16-4dba-b458-c9a5a1a36c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cceb961-69be-4a21-a978-ef9cf68d6fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "267cca2a-6e4a-475e-965e-5f3caaddc82a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6d0a8ce-af53-4533-8d31-7ce6f88bfa91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "201171a5-c018-4ccb-9c0e-afd47f727232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc7ee1d-a258-4499-a30f-47a117760f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5c3125a-f79d-4c72-b5ee-9953cbca7f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb30e17c-a487-497b-89a3-d300e88a62c6",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e64a1e18-04cc-4234-9007-868397ee2860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49c46066-ba72-4b12-a9f8-e31b9774fc83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a17e6f64-956d-44f8-ba8f-24e33d93ac49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c1c5be9-2166-4e99-8de8-67cb6516ce04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c0c038f-3db9-4940-b2e2-3af5685974bd",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33df3baa-e09d-4d3f-8029-f84831a9a5a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f829025f-9468-4a6b-80f3-ccb802136a42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f17a1f7-117c-47c6-be02-ebf3815bada2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d47f2af0-2f39-43a9-b019-02beb6acb2b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8311596a-42d4-472b-8f2f-4bcfed0dedb8",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "296ca010-cf94-41f7-bdbc-1e3634d18f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "777325b7-e10f-4491-8afa-1ca170dc6703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7648f34a-9b2d-44d0-93c4-3e6402eeb998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3be46bf6-d44e-4903-b41d-1d9f99d97e28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be3384c4-7b84-41cc-8395-d59d3ba9122b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8ac71bc-06ed-4268-8f90-6246d10123d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeb048fc-d5f1-4cc4-b594-33df188fd810"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e95bfb-29e6-461e-a165-40f5dc91ce58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "bb83725a-277c-4df1-9f23-7d3ba99b3c06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "534e108a-e7f6-44d2-9ac1-2af2cb1b3bb1",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38378d79-0c19-4c3e-bd4b-d52fb6b183f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "65456b30-d08f-4fc5-ba52-cec73e455402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10bd385f-8135-4e5a-ab6d-4e8065c45fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6ddf1694-512b-40f9-94cd-fba0f88eb4de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f24144bd-f50e-4e9d-8d2e-17c83fbddb50",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "767240e8-5b94-4991-99eb-54fd499adbdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15571ae5-479b-4f1a-8ced-117257303449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f909bc85-d6a0-46a0-b3e8-a5c3b934d2eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "acee3fb1-b897-463b-bc6f-99ccb6b518c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f840e19a-e7d8-47f5-81b0-074e3c9556d4",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86485ee9-559f-477e-bc39-e0b7c1002e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5e4b286-ee8f-4287-ba14-c74d919608c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4732b4b1-aeaa-435c-99c4-b17b9ee770cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c813d80-20aa-4ff4-9de3-0798c761b587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bede86b6-7962-45c4-a5ba-9588ec1d0224",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1feaefd8-c38c-4733-ad7b-d6856ecde368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd4583cb-e6c1-46c3-9715-6d4f803789cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23695e9e-158c-42b7-a5fa-146af550b21c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c5f3571-27bf-4c9d-9b3b-89df573029b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e9e3ad6-ed6a-4e21-a3b1-9ba5eb50cc5a",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f326fb-692d-4560-80a8-f856f394dad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c161a74c-525c-4165-9409-da018f8e1fe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad08a5ca-a6bf-40e1-a878-9f5bfd326e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0eb0581a-a9b7-4db5-ad39-8c2dd5afc3ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd60dcd6-dc41-4537-9ac2-002e23599bae",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62514800-b054-47dd-8bf1-c7dd6402c9e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7c68654-4c71-42e4-8c30-59875188f027"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81882817-4d13-450c-9b35-498bd5d17a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "393a9785-45b4-4e01-b436-ab73dab5ffac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f34ff974-5b75-4f6a-a980-4c0da1e86de8",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc8a9e2-2682-425c-8595-7a8ddc58233e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89ad077a-a923-456d-b03b-90479262a08e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bbeccd7-c47a-4a2b-8f59-3544355c7a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "4f4c2a84-d322-458b-8f43-8a07cee70fee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4632bcf5-1676-42f3-90c8-4719b8d9976f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f53cb7f6-e65c-499d-944c-b6599a65da78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98f06d46-1224-46e9-90f6-3f9fde03276c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f19856-a5f9-4423-b2d6-27dce9897f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "173fe359-f586-4c57-bed5-7e7e5525d327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ad04f84-849c-4da5-a9a7-af509331bf51",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f151a1-4fdf-437b-8515-e0fdd2de33cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17405b53-8f08-4a27-8bd8-4415f244e47d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e52e93a3-6934-4fc3-8bdb-5c5ef22d3eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "977d560e-2fc1-425a-9630-08d38735b867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c985539a-0ddd-4cf7-a50a-9b4a72b7b72c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa3bf1c8-7414-445e-a6bf-029bfe4f6635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "931d9e2a-9d39-471b-9343-f83f8e27b450"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a8caaf-ee51-4cd8-8831-e8e89c524def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa67e6e2-593d-4edf-a7b1-6f10b393da17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a83353fd-e38b-463b-ad59-331b314f2060",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bacaf98b-41c7-43e8-a3b2-bf251b6ba5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b7e35fa-3c35-40b0-ba57-91991d72c79b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baa120e7-e05b-4b43-b7ba-cf3bffd61199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7d8ae8c-c54c-49b8-a463-0772f0305b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1576afe-8081-4875-bae4-2320d0c29212",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b76f4c97-6d27-4663-8689-520ed4723c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c9726c8-10e0-40cd-a901-415c24ff6c54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39832672-346a-4e93-96de-46eb9ede5b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "82a87bee-6e02-4368-9d25-47ed5405759a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b3148a-046d-4b71-8ed4-d161cf255677",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ceede26-0ec5-4732-9cd8-d7f91f526329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2f2b830-842f-4f23-aae8-4bb7683889a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ccd0634-c69b-4eec-8166-0f18ffded266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bfad565-fa38-487a-9cc4-6b990a09eaf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1be25ed6-c5e9-4ff9-89d0-fed69a86e181",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec814ea-72b7-4004-97ec-98c4d66e8576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "949780f4-419c-45b0-95ab-108788fe57dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae2aba5-17fa-4fed-9243-bb1c4d0924f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a3e4474-3b52-4f68-b1f2-c6eb37a76a6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6707fe63-25b9-4cbe-8b89-df1e19c66918",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec094c70-c627-455a-a934-f979b0c00452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "487487b8-25b7-4741-a18d-e0032336d37d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b2bce87-d749-44ce-9a45-493695368eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6e2553e7-5818-42ef-909d-3f3d94c9e04f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66771b92-35fa-4cda-8fcd-65cd87030aaa",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a52d660c-6b85-4d79-b944-ce28315468ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37b83d80-5e32-43ce-908d-5f76cfa4b4ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa467d4b-2b78-4425-aa32-2e3d1a4fee1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c66fb26-b2ec-4d47-ae4e-d7dc68f85205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "540ceb2e-a15e-4c7d-8ec2-7f3461e0a6af",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8ec2c2a-eb47-4790-96b5-60dc6c6d6d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1b8e759-b6f4-4334-849f-402367d21c04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6854f5dc-11fb-4b0f-beea-d4404171b446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "669ab040-bf06-4949-96b9-1ed00d9b672f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e35c3f4e-fda9-458f-871e-73b0e19b1cce",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31d2d275-b84a-4186-a8b9-e7a573e65a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89375273-50c0-4e7d-9bc5-3cbab72a9c29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93994d4e-c674-4a7f-a68c-e6a6794490ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "572867e6-fdd3-495a-89fa-1415ddd846db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd2f174-7a0c-41f5-b323-545e0504a8f1",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f20e1ca-6887-4673-a265-98111532123c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5cbffe0-c865-45e6-8397-edc54fd03254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78c587fc-ced8-48b2-bb1a-b5b13ae1c774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6413f76-5c86-464a-8187-aac52b68a15b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd32ca2-72b9-4a41-b042-27511b1c0887",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32647773-76a9-4ab5-9ffc-731e76c09447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5352a18-51af-47a5-b07c-03858f396506"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ac0d82-b940-4442-b956-565d77fe99ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "92ed544c-4412-43fc-987b-64d79447cc5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a8e18b-6103-4262-9cc8-f1ab16e18955",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df1ab559-2bfe-4839-855a-975b2ae3f126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa160ef3-c330-47bf-a15c-78969e0016c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "859d1a61-0a49-4443-8621-0493c4471c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "0e403de6-ff21-40ce-bf18-cfb24c06c9e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "273b1ba0-3957-4aad-8f3f-7ebf8bb63dc8",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "967ccea3-ff6b-43b4-8ac7-ee3448f5586c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63a7cae7-0aeb-41c9-84ea-0aa55da98b10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d1dd443-b36a-4203-838e-26f9e831ef4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "aff540e3-4842-4c52-bbb4-b900157e88bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b0f760-e2cc-4719-9a9b-7b1ebbed7015",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f70933-52a5-4abe-904b-9c3a78bc780e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c4f8187-0912-401e-860f-c6e82420205d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bacb12c-a139-4bb9-8b70-f59ca28bbf00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8674db0a-a3f8-4383-87ce-0d5c6c032aec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda85bc2-1199-436e-83ad-9981b0a5142d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c8bbeb-9f8a-48bc-8fb9-8fa7b9882631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e668513c-68d6-4e57-b3d8-a83aada444fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e908a2b8-0baa-4c89-be6e-c266c9dfa649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7744a36-ac40-4749-808d-bd99f566e8e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85da506d-0e63-4895-a058-7ecaaf00eda5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "410822e4-b983-450f-bf56-ea3fd1074d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e19daa61-6f70-42e0-82e4-f2d7d437a433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd200fe1-6ce6-4aa5-9cf5-6eb0a17a0877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8195b095-5f51-412e-836c-c254f553e69d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a271c28-7c1a-4f1b-bf83-2daa91fa8e77",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f0c2cd-0555-40a2-890b-6d3a68b395d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc007964-ac80-4b04-9af6-527f9a2aa8b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbebefd1-ab90-4f20-a20d-8f1edad670f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1bfd2df9-efe3-47f0-ad48-7bce32ef3027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f50373-73f8-4f30-bced-d8240dc30191",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f24836a-43da-473a-b14e-17809d7f90a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "938882cc-ff13-4bec-bf68-bb7cb95aa805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a017b784-167a-40d2-b721-bde8334f09f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "34027a1e-3573-45c4-86bf-039eef113bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecaca1a4-10aa-4858-be6e-91c17c16e9e5",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aefe8a3b-cb20-45f4-b927-43d9a93fbfa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd2d2bb0-6f93-48e7-9478-8b96ff841e30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c13ab2-1619-4637-bf44-de8581c42674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8dd83e2-6b0e-474b-8362-5efcc70ead19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "975691f2-037e-437d-b4bf-537c008ac5aa",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33cada8a-ff67-4c44-b143-bdf0f082eaf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68345875-83b0-4043-8d5a-52100dece0b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e41fdef5-4f93-428b-898b-89fc112d3c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a61a1d27-b74c-494c-976d-54bc74742d87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e58337f9-c438-4adf-a286-3a61dc533d10",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd55b9f2-44ff-4ac7-9764-54414b285821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "561d19de-96b2-42b9-87b5-475ebc5acf52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9566c33-fa06-4a6d-bed6-eca64973f237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a298292f-b47f-4344-a054-7dc76d5dabc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fbb4926-5493-40cf-8148-9be1205da8eb",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8f62273-069f-49de-99d1-8204fec122b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "742b789b-da13-43c6-9ba7-282c01793c38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dad54fc-8e0f-4ed0-8362-35922d26476a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf8dfbaf-7bf8-44da-84c5-65efff921624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54fdb123-4ab9-4552-91ed-e25d8581569a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ef714b-7b5a-4495-8a95-2c60a81396f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "922868e1-8824-4668-bfa8-58586243a84d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "703019d0-beb3-47fc-a1dc-d8269c7c7560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "78d7c4ee-5b45-4a77-a762-fb1076b7981a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c6a5c05-a141-4e9f-b288-a607ae9451f5",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a0c927-d10e-4c69-ab3c-276918672043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbdea089-a142-401c-b0ff-c32f9d5a4bcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "125eb0c1-9273-40d6-8824-2f90990dc96e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "51e80373-0c84-43c2-9921-262240225b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ccd298-85af-4ef9-affd-b1ba8ecde543",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2cfff1b-4ce8-45b0-a42a-c8e644d0c27f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5481e40-86fe-43e1-bbfd-72477ad22d53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ebfced-0281-4367-a798-a4f162681703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a62aed1c-5872-4d41-8301-f9df45a0af3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5064886-4603-4394-8b1f-af39db47c5ec",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c495f71b-bcd2-4010-a7ec-1f5b225eb696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7035510-34c8-42fa-868f-2483d7cb168a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2289070e-8df7-4e08-ae10-fb7b02eb7658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5726af17-af27-4e9f-8c64-b1456f040de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3a10f26-9d6f-431a-991f-468c10e11c0a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf114792-5c45-464c-b4fe-b1db904985d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0a0b408-a60f-40ee-a562-7660da1db811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "886264d2-afb1-43cb-8e90-5a3cc37fae24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "27eedf97-fdd5-4649-bf2c-eb3ab84e7c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94ecaca1-00b8-4b9c-938c-471729f27529",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6961306a-7c6f-4aa3-be61-8c6ef46815bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4adc526c-c647-4e10-81bf-673f82659059"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "902f3902-04db-4caf-b6f4-4ee8e7256893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bad0959-5c72-455f-9184-b7b4a9a89b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c81f9e-dbb6-4887-8e8a-904bd0364949",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5ff3601-71ca-47ad-9cb4-e4fdb45aee58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dd0cc9f-540d-423f-b7e5-aa8948c91c1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ead8d9-7cf1-409c-b280-d62ddac9dda7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "90fe431b-fe93-44af-911f-51ceff3f7a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa838d0-1134-4be6-9fe0-de041b49ccf1",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b2f28f6-9065-4873-9a33-9776bc8b288f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0d28b33-4af7-486a-a9d8-6d9f526a9952"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "347d4038-b22c-4351-be32-bba181c59550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2178a18e-0b69-4663-b57c-5c7fc7b35399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c694a8d3-c0d1-477b-8b3f-c3c7e7f3cf22",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "946122a3-1e45-4c6d-8a9c-047b78783506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d08df1e-eb3a-4b21-84db-3c03799a4ff1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d790c02-7346-43b6-aa72-451c1382da8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c80187e-f465-4667-998e-6b12017a6f35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e001b6f8-97a2-499f-8f46-8cd054095bc7",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e11256d5-306d-4cd0-9217-0e372209a401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a843c5e5-6e71-4791-be62-7784b321e817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f1b7b6-f817-43b3-9ad8-7a4bdca88d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4667ad02-1a9a-4f4a-b0e8-42a0f73ac14a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b6277a-2028-4976-b58b-7c643b309799",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c0b9ff-3a6c-4c26-9105-f38f640956ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db15d2b0-b017-47c1-add3-c623e5e4deb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daac326f-bbc1-4a79-b043-00ac25c23699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "38d1a96b-a77f-485d-90d1-9cb03fff9335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2fcbec1-bcfd-41f2-874a-3e900fa3fedd",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f4baa9-1bee-42db-8094-871c19340276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bfc8f85-b910-4f31-ad9e-62aed2714add"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb3ebc3-77e4-4490-b784-79f5054dc54d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e0f5e66-4663-401b-8471-8d305d8e6e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b7080f-a76e-4f55-8803-a3ecd4b8ebce",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea46e2ff-f50b-4486-a003-b91c4e64b6e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ad21891-4d32-4e47-b281-438dd290fa43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d6b222e-5dfa-4561-b05b-180e2251353b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c95e87ed-f498-4286-8b8b-cfdfa0856db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a130dfe7-fc76-4bcd-9ba2-7b1688b5dd3d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0745d560-676c-4cbb-9505-a95cbc2b3562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a124b70-ed13-4b7c-a5f2-4850aae51f4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d7961a-9ccb-4686-9693-fcec38552875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1e5661d5-50c3-47a5-b99c-12f58da052af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1155fa0e-a28f-450e-ab8a-df896d43336e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0baabb6c-8218-4346-b76c-14d3eb8064e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99967112-b122-481d-94a2-91aebf4da36f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78dd863a-8b85-41e7-b382-ede5d3247b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "72989f70-fbdb-4293-9016-b0c34ea6bd6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d92eab4-08fd-4e61-8390-edf2c9d57fb4",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7021c85-1770-4722-874f-790babeb88c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58e0b4e4-b332-4616-91d2-bddc1508a1db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ae163f-0f16-4254-96fa-5f4e196a015e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6cc1a04-5d15-4684-ad05-f55f1d3b17eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f05019f-ff29-422e-87ea-f9c382e6a9fe",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f730e40-2a0b-4d3a-b10f-7a75bc452390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3e193af-5394-438a-9a1d-75f453dc4ff3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f458344d-2dcd-4320-b64c-98f2ce4640dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ce386d6-71a6-402f-a0e4-2d5f976e111f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "974ec031-d095-480e-bfa5-13f32be795d0",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fad670e-4c58-4d45-98c0-b13bc97605d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc7ded45-1ad1-4a9f-a30e-16cdc9d6475b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42916b66-d570-4140-b9d0-1230b005c4b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e326b02-98d8-402c-93ed-9a3bce3b1224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df0d684f-d827-4c79-92dc-a67dc970d3ba",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f321fce4-a52d-49d3-86b8-a1d8246a0b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29f2e183-264a-4d1c-abf0-10a5f1bb10c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f67484f2-5513-44eb-8d71-b45b2b3d4fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "01466f64-85fa-48bf-b88e-31f50312e5a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "318a482f-229f-4e26-a4a5-d9eea73d2d54",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b3b4f82-980d-4326-80d9-e03299783ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8829c665-c547-4fbe-8287-63c17b072032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b2009f8-c58c-4ed2-9073-289a872c4559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "449aefe0-21a4-4688-82b8-049b168d0703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27413e5a-5a0c-42e6-aa93-d6385a36e7ce",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5496c8b4-64b1-4ed6-85fa-5be1e72706ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95c08705-3098-40d5-86c0-726713a1acad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "609e8382-fd86-4c8d-8e7d-1f6ab3b2f15e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a520077-c8dd-4e40-bab3-fe1408c61000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12217dd2-0899-4583-a97d-0168458274d2",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bffdadf-1ed7-4aa7-be9c-b388a79d14eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c0de616-bdf0-40aa-bb56-a7c08da21409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "617f4b4a-7848-4928-b431-cf00b0520b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "638b644c-42a2-4105-8610-da8d26be125c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91c92a63-eaa1-4342-a172-9df439e8c7b9",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f4e049a-6c5a-4e27-bbed-aea7ff5fb539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8aabeb5-d4c1-4cc8-8e30-2e0f42f4771e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c79e386-c495-49be-9792-c13985ed27af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "32c1f70d-7cba-452b-a46c-7a352337ee9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e676e79-a567-4136-a606-dab8cc7e779f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c43bb91-c520-41b9-b384-d26a192a9efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b3873d9-6cd2-463c-9399-4c8716d9413f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b82761ff-5721-4df5-a236-757c11009bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a34c811f-1a20-48ee-8c9c-381308a6212d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91c883fd-0627-4563-865c-5339ad9fefce",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "244dd125-9efc-4ae8-b564-254d7ed5ec28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2481535e-3db6-4b6f-a56f-ea95c5cc8381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e65775be-6cee-420c-9e3c-ed08c79a5940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "694dc0b2-5fb5-45f3-9647-340709ea6289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f154f6-4deb-4f57-a83b-135d3bd2d883",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4535cdf-0e26-4b77-b4fd-c024afa5a8f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5ca1d3d5-9f81-4c13-983c-980b19f817f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a02c256-f375-4dbe-a2de-940d56af818b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "60d1458c-dff6-44be-a6e9-66b120703722"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1f32f6a7-423b-4f73-9531-d56fb46dd1e0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d946b994-a95d-449c-9c1d-d22788d436d7",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede4b7e0-c9a1-4816-8b0d-b37dc6cd1ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6db26d4f-1abb-482e-9d5b-9ea06ad01851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ffed43-9ab5-4b2a-9057-d209037e99b0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c29207f-8afb-4402-bd37-cf3dd30222c9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "65b3afa9-4889-46ed-b188-93a6174833d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c7f3ff75-64d5-40de-bd78-1b464ff6ace5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8b89106-d685-4028-919f-022635dda147",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8ed3e002-673a-4e32-a04b-0a96436e4d5f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0a152ca8-cac3-4106-bf1e-fb793a7ee318",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c3295bd4-707a-4670-8cbd-fe6f13ea2184"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bd7836e4-c759-41df-b867-9191c023fdbb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3531f592-961d-42ad-bf9a-e3ce4905f239"
                }
              }
            ]
          },
          {
            "id": "dd181b8f-7b1e-4295-ba64-ab8ef940a61e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fce28f54-fd33-4743-ae7a-55e067219e26",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "9a587696-20c6-44d5-92f0-6ccd2505f3be",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f165af4-b13b-4cf2-8e8a-da9a433a0bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a872a86b-89a8-4ddf-a200-9baa38e7612e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e66f1a0b-704d-4a19-a294-3de7faa54ed0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21af32c8-d263-477b-967c-353a25fb881f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9a993d80-6583-4be1-ab3b-b58a30060176",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b0ea240-b98c-408c-b863-3e144c3a5bff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2847094e-482c-4359-b06c-dd46a9318d89"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92ae94fd-1ccc-46b9-bea7-c733f3f87a3c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "282d3030-53e8-42fd-911f-6589db14a343"
                    }
                  }
                ]
              },
              {
                "id": "5f01d46d-1a9e-4711-9f8b-2d0c228a520b",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a101af1-6f2b-4504-b45c-ba70293e5987",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "713b52f7-7a86-4d92-9a82-d059956c7f8d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a64af510-f0df-48bf-9739-f6b869194d19",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dae3b72e-f325-4149-9229-7e765a431a7f"
                    }
                  }
                ]
              },
              {
                "id": "b058ccb1-9f2f-467d-8b65-ce5b0633200e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d35346c-5c4e-419d-8aa0-b4bf520a4e07",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7a143cc4-8104-4473-9291-2e037c5c9cd0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c50a197-ec94-4579-8add-10f4961a0082",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9d6d4adb-8af4-482e-ba61-4d1a133064b1"
                    }
                  }
                ]
              },
              {
                "id": "73328386-1199-45ea-95dd-83b549ef702f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cbc4d9d4-24e2-4a85-8f67-5817c24a1c07",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7c2c594a-408f-4d47-9da7-11eeaab855f3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b3dd0ac-c641-4732-9903-5d161609e48f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "606511a0-302e-4823-a33a-d6141d0ee4fd"
                    }
                  }
                ]
              },
              {
                "id": "6882c8ee-2b41-486e-8a7d-e47fa354bf82",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9820f576-7d33-4fc5-9a58-c5c0a4a8b887",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1c8c7bb0-19dc-4ba5-b6e9-d46bf37331b9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9dd6c7df-ddcf-4e59-bd85-3ddd64109059",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e5000abd-df93-4fbc-a768-9d9e2a7071d8"
                    }
                  }
                ]
              },
              {
                "id": "84b709db-6000-4dc0-bc8a-aacfccbf8004",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc69ac4d-c7ee-45da-8016-2d5771f7ff5a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f3baada3-bc4a-4cca-a685-4352c4bf5e48"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7e509927-04f1-4e95-929d-7fac5b22ccbe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bc5e3bd5-95dc-49e3-89a7-212f53a8f130"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ed49b0e4-d846-4898-98c6-75a2930e3adf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "915133fc-dc23-44ab-aed6-09747a12d627"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3c845dad-9927-48c3-aa8d-81e640911816",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6ea6172e-fcd9-40b2-bb1e-da24ad1a5c64"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "be27e013-a63f-4afc-91c8-97c908b716ec",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b580cb17-63d7-4d78-9d7e-4a0601b95802"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "13063a9b-db95-4629-829e-e78f335361b1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7a4dd90a-ac83-4704-a119-b791be5dc8b2"
            }
          }
        ]
      },
      {
        "id": "744da340-1548-4290-8fc2-eb2e138b3334",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c2d0d026-184b-4d0c-8222-7c4b83dd4cf0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "664d87ec-a0f9-4a78-aeb8-9676ca8dc16e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "91545844-70fe-4f97-b941-59bf58ecddd3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daceb0d9-ea42-43c5-bf55-6f78c931fbb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c68c8bb-8091-4721-b248-1a3f2c82bb63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e54ad5db-2ce2-4d11-91d9-395731d0d31e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "94d92efc-835b-4ed2-b8e3-6cf19898679b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e558e188-2821-49aa-9380-e881d1995c38",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5243c55-3136-4fb0-8ca1-8c2274efaa3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43fcdd10-680f-4c69-b471-cc9394c7743a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "848b265b-6d7b-4e10-afac-8762516c2c86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e76c808-b6f5-435f-90fc-18733f6cbf6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58075302-4fad-48b5-bd43-9f3822aaf117",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c7db657-75e3-4d09-98ac-15f4e08e87d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f358547-c62c-4df1-b756-0fefd3858099"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d9df00-4c31-4711-b30a-04a04f790ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad516ca2-9e2f-440d-a884-b32965ea8337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ffa5944-4f47-44cd-9c27-83828226ad4c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b661a3-2bca-47dd-ba7d-915ba5dc1d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8580afd2-6005-4932-8a00-6762481fc40f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67be891e-da37-4b6c-92cd-d22349b2ab2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "24f6354a-491c-4493-8e2e-a0c1a288c007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f0694e2-7303-4def-9cdb-71162cbee0b4",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "897f8517-d6c5-4697-86a1-906f91beaa59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cd93638-47da-42e2-a9b8-3ba07416d9ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c14de9-5b3a-4c3e-a937-bc17b8cf0679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "845cb37b-2774-464b-9335-1ee56a81a7e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e69f9b65-92d0-4cf4-81af-4e591095bad5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d624cc6b-c7bd-4f04-bebd-f9247b78bc1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d486fcf-fe06-4596-8574-ee419254e098"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a5d6cf5-97dd-42ce-826e-e6d297ab979e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "adb3a884-6fa9-4764-b0c3-ef817164bb51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a6f8c0-4a8f-458e-a3ac-1d0716632de3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab40c412-6146-4538-b352-bbd6b5634060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4015f473-f429-46a1-aa39-b2eef9ec3c54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b55d1990-2bdb-481e-90d3-91bb376f5895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "af5e4ec2-9f37-408b-8034-6ab6bd9b4873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fdd452d-a0c9-4d39-b2e5-0ff00bec7791",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab1d8023-c1f1-4326-8c5c-26e1075297ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cb318d6-a904-41ce-8817-9b51d4de00d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d26ec013-0943-4a77-a388-521af4b6b67c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "03cfa3a9-8d93-40a3-b723-3f8ca9cfd911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413219f6-4177-439e-a23d-02e39b669e18",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2946fea9-cf6c-435d-8517-62cd30945f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2409cf6e-a2d7-448e-9bec-036b371ce716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0e7f993-6acf-4df7-87c3-6c9e0cbcdb02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae611228-a526-4f01-8985-857076f6dd4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1985007b-2d16-4d0a-a00f-fae4299d237d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a17dfe0-7a32-48d6-8128-c4f8abaa1a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63adb61c-a386-4dfc-bc01-02039107cd90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97493cee-ff81-4e1e-b3a6-80770a7a1fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b955307f-82bd-4db1-baea-c174367af258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "226ca2c7-78ba-4bb4-a635-0223ee8ec065",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1efee8b3-2387-490d-b995-7c0009cb3ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85f2d9d0-e25d-478f-90aa-c198904980da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee6ba3f-99d4-4b81-9b9e-67fbd2d799a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2133bcca-8def-4fb4-b430-421b53872c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb49caef-3da5-4eba-b424-6f6f8fa0c2e4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22b6e2d7-13e4-4413-ae0f-e5a7236764db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dee47c75-4e33-4125-9525-9b5e4a1c092c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc45a37-e9e5-4e20-b17c-fe3f8e8d8e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b27c9ad2-4f4f-4baa-b409-22c30032eb20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc185a8-275c-4154-85cf-84998bc10a24",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1243b323-695c-4f04-ab81-89aa0ac3f5e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81294988-69d7-4e1a-b334-20c9ede1a8cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c387df37-bf0e-4cde-9b76-329fc0c10d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c651fb01-2375-4e6d-bb8d-2b015d6b128f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c01d01-36ef-4310-b426-50d1d2e50997",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b15b7324-a67b-4158-9dab-706f24f0de7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "995cd99b-9c2d-429f-8b34-74b37475851c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cadc32d5-7861-4c6e-9134-f71bd7cb8766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "43a0a4e0-166f-40b4-b7a5-197285c29a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4dc03ca-575d-4acc-998d-3021b93bdd25",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe044ae-e93b-4556-9e0c-6a164b0def57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34f84577-d3e8-48de-86c5-a504f017ea7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c699c82-43da-4952-901d-9d3dc637a7fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "241ba57d-552c-4212-9a12-60cb1d6903dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f0e7afc-b81b-4580-beb2-1039e72c64ec",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f815128-e628-4f53-a2d9-cea73ac4557c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f4a5479-c732-403a-9ebe-da94a25280ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc8b118-67f5-4441-9461-5d931e84de7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "baa755d4-c914-4f1f-a882-eb207e1c0c3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7193aac2-e72a-4cab-b32a-72c7df46f27c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d7ae080-cbfe-4e27-aefe-1fa50ecfd1d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "467875aa-95c1-44b2-bd41-6cf1232236cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9c6ed70-3bc2-4e9b-8b48-ecbbc9b9f831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "be442fa4-e822-4fac-b60c-6b8d09c3d415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da9779c-ff5d-452c-a89a-590d826ab5a0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d101072d-f7ff-4931-9a3d-6f8cd80881e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b5f88ab-fc4b-40d5-b48e-9c9fefeecd6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e12f134-f937-4dde-8af1-77984ae68ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb261816-4c66-4243-baf2-732103daafd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fda9ed5b-aa91-4ba0-aa56-e920a91ed25d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37758f5b-0353-4dfb-b0d4-4293900b1a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52a361a6-159d-4545-aadd-03fcf4fb5291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c2bcd8-0936-4641-b1e9-1470fa718256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04ad02a0-4372-4fa2-8018-d5442d067aa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a053da-e8e5-40ae-a1ce-3e03944a9e59",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f88593e1-9bd0-4362-8f8d-909fdecf1dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0bf0f10-84e2-403d-bc14-433431d6b995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b58376db-bfe3-4f66-a92f-d0bd6eefc5ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5123f92a-7cd0-4de2-880d-e56a3d09bd68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "352e3310-0d70-41db-b5ea-08415b0237b2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3839489-7717-447d-aa29-3fa777ae4b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe4a90cf-0e99-4e8e-bdb2-305729d66dec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3519048-65a2-487f-86d7-f886db46af29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fac63bcc-e4a7-4d16-a612-f9db20ea3852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eab9024d-4136-4974-b71c-abce661052a8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d723b3d-c00f-41c0-ab71-55de7b152c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3e60221-569a-4fd5-9d04-5c12e952a9bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "485c2ce8-d8a6-4f14-92f7-90a8558cb083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "235641e5-55cb-4492-916e-ec6b8a8cfe5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00392545-b750-4d20-b4dc-1191ea97bc6e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a02ef1-34ba-40fd-86f0-fcd764da3b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36d5d6ed-a7aa-4b25-ac44-0c12c1e89ac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36876b77-d73b-43b8-a4f2-9a99dfcf150d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c4a755f-63be-447c-a796-275d7ef3da80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21cbafba-64a5-42f0-91d2-c72f5cbe6f75",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cade91c-a044-4d64-8c16-be826ad9ac7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "172135ec-e040-4443-9b85-693d751d3040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46baad4e-afda-4557-acac-3cdfedefc884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70c4963a-39a9-4dad-a44e-2046870a02db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbad2502-5fbf-40d7-b854-8e7b522d8999",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a22da55-a70c-4915-9ceb-ded21513b4b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc6c5143-17bd-4634-a186-e62dd438fe49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58859940-dc16-49b3-ab40-5d9dd0a1cb9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2abf022-22ef-41a0-af88-bb2dffb06cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef72bd1-03ab-48e6-8917-2939eeb50d52",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9907707c-b548-4fc4-8e37-cc5251b20b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "411fafb9-f716-4456-9afb-51e9f68b107f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b9dc06-db55-4a66-aeda-67ed82727080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82832932-4388-4ab8-91d4-a1f0c9ced9c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e752e387-fcec-4d2d-9422-6b9ecf481825",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "931de7d9-b3be-4b87-bf74-069740205364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb140745-1c2d-4d92-bfe6-300de561a9c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a3171b-a5f3-4ab4-8c39-751632d9586a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34aae28f-d65c-4a08-8851-3709c398365d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a9e6455-95e7-45c3-b364-9dbad49a05c5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e4756b-8fd6-40b1-b6cd-c4478b71ea16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bafd210e-b5c7-4a92-8e04-0ed0c946bca4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "653f9ef6-aa5c-4b1e-a5f3-ee759df413f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1202fe0-84dd-425b-bd50-befc23d35648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9f0340e-0dae-4dff-9e1e-66c3d12ef8f6",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81489a6e-e90b-46b5-8f7a-45629b22d8af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "604da652-cc40-4026-9798-9d6f4e67b77f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc37e06a-02f8-49fd-b243-e85e963a4403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "657e8063-08ce-40a4-b169-a48889d75c06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "184eb0e4-4c45-4093-835f-76eb3d82a674",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b4e124-43dc-4439-a498-546914dbb492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b3a352a-a09f-476c-837e-b3e6b5b7fbbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90da3b6c-45b1-4d54-ad2b-af82bccec1ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad72d66a-8029-4fe5-b993-d8580aa6c322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa9b475-f389-4edc-9e2f-01564da1b093",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "062148d6-f9d3-48e2-8e8e-2374bef4da98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65f94de1-fe31-4455-9ce4-4f60090694ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97062a25-4343-4fe9-ac0c-fc0bae2de9d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25f66463-d179-4964-8a7d-d01dfa51d24d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a3165a3-f5af-4122-8140-1c7f8e7065ec",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ffbdc8-da32-4525-8304-0bf9e47b0ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "042d2070-6141-4ace-8aa9-19abcfdeaa6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e07fef1b-afc1-42a6-9239-9b63cc9190f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11144f5a-0fb0-4039-83f8-8233be1e92fd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e889f08a-4c5a-4115-988f-ccf34dd1950a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0448a374-975b-4b60-8a81-1e026bc6dd0f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3be885e4-cc35-4b1b-b411-aa3fa07810f0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "385ba475-99b3-43a3-a795-941aca546b3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d34f0bc-6e82-4959-a1bf-9d4595d9b989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "10134fb2-8053-416a-a070-34c64c90c621"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a03de1c4-e166-4072-8f8d-b2af562cf91a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31e37808-6c83-40e2-8c4d-eb7a17dbd7ce"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad42c192-1dd2-477c-b35f-0f7a93b3574c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b55c5af-aaed-4c43-87de-8c399721776a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a84bd2a3-adc2-4c62-a2a7-f2a3a7f5e1d7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bd006d0b-83c4-4e3e-bb1f-1f058d87d16c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "99c6fb03-474a-458d-8c7f-6e12e15b18ba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7ba03851-b314-4ff0-baeb-2fecae2c5641"
            }
          }
        ]
      },
      {
        "id": "1e6f487f-1c66-4e84-9b88-b8fe770d059b",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "455229f2-9ca6-4a65-bc1e-aba4e6d825ca",
            "name": "Negative Testing",
            "item": [
              {
                "id": "94f85219-4c6a-4c5b-8710-ae6379ca9ca2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9bf5f2d3-aec2-4545-82cf-ecc610b7f17b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f96ffde-1f3b-4176-b3ef-2f3dd1a7bef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dacb48b-6cf9-4846-842d-08818c224382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f30f7af2-ca25-48c6-bb71-053e4620fd65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e57d299d-10a5-49cc-a5f7-8ea5362fbc5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c030ea-0374-45e5-bb50-c0d1a9f37672",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3601a91c-edb1-4d78-86ef-302b50210aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e5a7c92-8e00-45cb-8155-fe424a7a1c43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11d1799c-ec90-4a51-8fa7-30567e987624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdb330e2-1bba-4404-b418-3e35cf86baf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e25a939-be5a-4bd1-95c9-27ff611da78f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f694e4f2-9a9c-4aee-a949-b0343aac8c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7a0f016-c107-46e1-885a-4ea074baace4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3183480-7ece-40c7-b541-93425f92c687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b4d3508-cfbf-4dea-88c9-9497d91ed6e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d4e4ee5-c65e-406f-84b8-fe1e3b37f318",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "030a36b3-8702-4bc3-bff6-235a87d7f3b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "971f1a89-4b46-4f72-9b8b-a44c88fa829b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8066588-4c73-476c-b9b9-f86e7ba0e400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b099da75-b1e1-4a40-b42d-561ccf240997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcd32c5a-7442-4c3a-8976-5af2344e387f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4223f1d-fdab-4441-b350-f45bbfe0a52b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f483dfbe-e4f6-48b9-bea9-e7345388aa29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac25d60-80e4-4697-b6d9-df3c2907c3ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6dba590f-eb06-43e0-b876-6990829d3265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c2cf014-fe9f-4596-8835-2664cc820fa1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c7fc549-a8da-44ee-a091-10e4cfe439bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c3c7ece-67b7-49c9-8a3b-ed89a71a5902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25cc3232-4eee-4c9a-b70e-3b12d1f48a32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "39e0404b-16ec-4b53-aad1-7c326fb19d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27598a5-be6a-4c72-a5c3-5fb7d18847e4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a066c77b-97e7-40af-b4b1-f000f17c8fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86cf009a-44f2-47b5-9e0c-120590b7b8fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5804786-4ee8-4e80-b5d2-8cc2eea335eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec59e73b-f2c1-4f4f-85b8-4f239c987e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6e2b2da-d6b0-4e29-a568-3885913fd65a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee86d62-3112-41a8-b1b5-c8e8aa975428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7db91f74-35c6-4d87-8860-43e703cadf78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00acae7b-d54d-48b8-984a-1c6904d3ef60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "844126e5-c727-43ea-9273-5c0c0bb1c007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bd309d2-86d8-40a5-8be3-1a9d5e684fb0",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f5efe3-6ffb-4f44-9290-cae20a4e54ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93531615-ad43-48c0-8c13-d9ec36cff107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85dcef4b-852d-43ae-8a91-94d72b11567c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "521fd8c5-8625-4671-9c83-312da0122135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fe98d7f-a92e-42d2-a17f-e250e07dfbf0",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9935824a-83c2-4aed-a0b2-30f19d975521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08559d56-717d-4b18-b59e-7cdde7cdeeba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b22050fd-6db6-41e0-998c-c6b81454fa6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "53fdc018-e00d-43ee-a547-d6564a500b4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cfba339-6754-48e4-aabd-aaf4482d3cf2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e3b1d5-004c-41b0-890a-df96d2d25af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35247d5b-8a9d-4f8c-96a6-3e6974050329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf300e88-dbcc-49dc-99c8-e8cffc852505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "cb542ef2-5faa-40b7-ad5b-aecf2afe3535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "200b9a3d-4e6b-40b6-a5d8-96f8dec6ecd2",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f322815-8159-427c-b7c6-9b221809af12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0703901-3732-49ea-a7eb-525d6a49b1e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a146c1f-5acf-4b55-a419-7218c0efd750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f24e8c4f-4d84-4370-8d8b-66a89f2b400b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ed35ef-bdfd-4cf9-9ab2-b99c43aa9ea5",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d3fe185-6543-4a16-9679-3461299d946e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05141b27-ebde-475d-a157-a03c35ea8731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b9aff2d-5cb6-4e00-9841-35ec4f732c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "af1894d2-4f18-4edc-b9d7-e39523c3619a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b06d59de-ea72-4b08-a0b0-b38cf3867609",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "006d1645-3bc3-4ec7-a7bd-6358819abe3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76635929-f65b-4588-8690-b0e1ebd96876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c406a41-c3e2-48b9-9b26-d82887529492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "387b3277-ad6e-4d57-8726-94f9bb289129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58338ffc-98d1-4785-aa08-64c97ea1196f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "637f3ee6-e638-4c3a-8dce-e9bb746424f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c65acf7e-22ce-448b-8806-c88383073faa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad45ac6-2dea-4290-951a-9aa882110e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7f1138f-f3a4-405e-9b51-79f44f58206d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac0f71f1-0e17-47dd-a12f-091b5c03e1d3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d55deeae-5e92-4846-9813-99dbf74971bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ee5b20e-c70e-4e95-84f5-d914e278a556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30a191ee-112d-448e-8d62-37c486b88bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "303a52a9-fc18-4856-862a-23656fbe4a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c49544f4-8533-4536-a83c-3212bcb31806",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c032909-5733-47ad-a505-f9aa1e2de795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37c07543-c7d3-420f-bf92-07f5a1f80355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e05b71-f731-43e7-b7b9-22293b5fd1c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "bef4a8cb-56f0-4150-92b4-26f429b74bff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47cfd486-6bab-4479-9a83-18c513844bb1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd61f583-0b7f-4bc4-9113-91014c675b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6278dff-18c0-4165-8ae4-4cbf68626a78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec712218-f048-4d12-a450-4863ff20f85c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c388ff5-d126-4093-b1e9-a9dd76b23eb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f94dffe7-3989-495c-9ec2-c708f98b9a67",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4769aac0-9ce8-4f5e-9cb8-11f63ec97905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1befc6a1-4e07-48a9-a56f-a1a097c8b1e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d2abc63-90a8-4f2b-bed7-45a651baef3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ea8cb7a-364b-4ead-8f41-34329eacf7cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c42c5c0-1d03-490f-b9b7-874367e996c4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d551c3-5d47-4353-b713-4bfe5dd9e79f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7106600-a5f3-4e19-9332-4956e7248e3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "615c1534-ba13-4924-9ec6-ea85d08bae56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c63d33a-846d-47ee-b88f-ad4622bc2b18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6b3a583-34d6-42ca-ab48-59157155faed",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1202905c-bb14-4960-9f0a-7347fd216b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ee5ec89-fb3d-45c5-ad15-c845d5b48d25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd88bb1-5cb4-45e7-8ccd-4e4e4e1a8755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03b8d4b2-4d36-43fc-bad1-aa4fc4f9dcb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ecefb32-fc73-48c6-94b0-9bd6d0bbe592",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f8f23e-e851-40f1-8fcb-43b989efc6a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ae01c2e-acdb-4a3c-a356-11a9a10dbdb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62cf2d7-3e1f-4686-900d-8608ada96ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f203a350-827d-481e-a266-6f8f9fef8f0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9911da9-8354-477b-9d6e-54c269622de1",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3837a02a-e5de-4b20-a3d1-be4b2c78f6d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffc049f0-9da5-44de-b092-5fba594b68da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f35e6958-5e26-4b37-be69-da4384425358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80183e0d-6ee5-4d5d-bdc5-6d176ee5473c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f42446ce-668c-41dd-a95d-980888d1e7ef",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b115f65-1542-4520-801f-73988bcddb1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dabe2f0e-5049-4e1f-86a3-9e46002f5410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8fb941a-98ec-4413-97ec-add8c9bd46ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55970b89-b3cc-4694-bd47-def9fa50390c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff94fbc9-369a-4cb9-9d6a-b8d8c0e5270e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7641540f-ea24-458a-9549-2ce964c6a616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac6f18eb-9600-4ef6-8a6b-d8b6d23ae67d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26311273-abb6-427e-a487-0dcae5674ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85d5f0b1-43a6-4a97-987d-3806fff0a0d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fcdb171-9836-4b1a-b59a-d109648311b2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0efbc1da-4e8c-4e95-91f8-10e4d918425b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cd17550-4ec4-4748-8482-4b55145a41dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f54f5ff3-7faa-4706-8c5b-db21864a3167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "408583db-1459-473e-9a93-5dc40a9d4699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc71c3bb-a69f-4f60-9f1e-f08affa20c21",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0739e15-f7ae-4da4-bb1e-847a3a66c532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "047a520a-50da-4b1c-9a90-3deef8c60637"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc5bbf6-3c2b-4305-b599-b730536cdc42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ae6a028-bd43-4cff-a4c0-53c23e73030e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc424a18-11e0-42e0-9e0a-4a4ff65ebd72",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec6528dc-980d-49f5-8d0b-fc40478536d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "808d58b4-3436-4761-ada4-56820cb4f5de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "192b2c2a-1d14-4d19-8224-98eb42128d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c24527a-b3b7-457a-b7b3-13c3b768bd88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a0b1029-37ba-4a72-96a3-9acc99fb7550",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b97329-b7c4-4d3a-901d-5bf12e4435dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe58d5fb-b6fb-4e4e-8340-f6322d8ba8d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae76eb88-d24a-4254-af14-c68686e105b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16477053-de51-42d3-a520-332cd444bef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b8e813-f70f-404d-856f-09be9179e8de",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65bba95c-d3b1-4373-b529-c3c474243d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "350543a4-a4c0-4b5d-ac9b-6d27b9d496c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e29a86c-a5d0-47ba-984a-8b487ffeb7a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e27a913f-09a0-4207-afbc-147e41bb7719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "646258f2-8cb8-48c9-b9f3-efa5ddb5b7a0",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62400b1a-4242-4dd3-bf14-9ef0b1838f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5263a58b-9d2d-4bf4-b2fb-97c9b8222599"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b91315d-5ece-4c8b-b666-d621f30e46c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce46889f-27da-4faf-9fa8-b71b1c3cec22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d14811bc-8b5c-4429-87c3-76f66bf3ad8d",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "277681c3-1766-4af9-82a9-752715bd5bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bf64812-e033-4411-b5c2-caf9f8dbdaa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a18a8f1a-c5ee-456c-978c-957e9123afe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f25b3985-c480-4f8a-9936-a5c2c0c4acc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba397d9c-8471-4eab-bed6-1683729c0ce2",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36e0b870-e40d-475b-b408-f591fcdbc059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2edec4e-54be-47fa-b60d-4c723ae6e271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c0afb8-0799-4ef2-9b4e-04b58a4d3760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ac469f2-57db-4202-9c85-0f9a6f78a1b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3467da9-9219-4138-9158-9bc8f75240af",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "419c7718-686e-41f1-886d-8c186e32d011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "541b9476-b928-45f7-b17d-84e777a8f2ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c463352c-2b6f-491d-ad6c-473888c9f3a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fcb76ce-8e1b-40b2-a1bd-19266e222625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd5fb15f-b038-49bc-a86b-2ab4e15454d4",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8179841-58e6-414e-8792-1c4912c46d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "762af673-de37-45cc-8f1c-3e56f8431508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f6f14c-f04c-4c58-98fa-416717e2ecc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "809638eb-5b6e-41e7-8816-f7645b801dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57d5c74b-2ac5-491f-82e3-2e1fbd532971",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd90262-fe7c-4360-88ef-cf553c95faa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7308614-5bac-435d-bc09-524d8cf5cb25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42df86ae-67ad-4d7f-9361-005ee3c4c959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9742779-faf8-4c08-b684-8eefa2c3bfc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1657111e-d7f0-4d5d-aced-49e92c974b3c",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b468d74d-48fe-4f29-b3cb-80e1e15abdd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd814a37-84e0-48b0-a187-49373bc2c6ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d77bb83-9108-46b8-8e9b-a83e7d0392f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9d293c6-6990-4c48-b995-4607a836f7b3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2f6dd265-344a-47c2-af3f-e76834e87b6a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b15aea27-b721-41e5-b984-2615a3d1f629",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83128433-b0ff-401c-b5c4-2512d24334ef",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fac1c1d3-f352-45b1-a672-6f09c9449301"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c76192d4-6944-41ff-9e5d-c34f2e5bebaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4f5f2111-fe4f-49e8-abc2-945f758e1179"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6d7ee2da-bc0e-4bd2-8c3f-4ac229ca1066",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "043f40c4-0a48-4b46-8e8a-1f5c47c53d9d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f976196-2877-4751-b646-6fc184b8292a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "39a9bc29-f659-44d1-ae1f-879ecca50be6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2a30c95b-f2b4-40dd-8e00-7539536d8b8d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8dbfb350-e5be-421e-a598-fd51b2e62170"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e2b67b7d-3531-4247-99a2-1448d67e5157",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5c539da8-bee3-4625-96a3-637352857f69"
            }
          }
        ]
      },
      {
        "id": "5ad7b0b7-a502-46cc-9b77-6a8e38256a91",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "5aad521f-ed96-4d33-93e4-53b7f06f1fb0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ae332dc2-6254-479a-a2c7-7c7c4f3973f7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "13e6c03c-b4df-4e63-9919-4d7780bfd78d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec92c42-f456-46b2-89be-590d12a0e596",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf9266b2-07be-4fd5-aa66-3acf6f98353c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f612bd-ea94-4aa4-8f82-d39abd576e68",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e20c02-14fa-49d4-b88e-21095157d6c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cda1f54-1e4f-47ea-a175-8fe8f2b60a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4555381f-a6e3-4a04-a0f9-7efb17d7775b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc2c8c8-6313-40c2-a9ea-301f4f758ed9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3a9f889-35f8-4d90-a6b5-9eacf0bb2bd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ebd328f-fcc0-4375-8071-caef467648ac",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb01d6b9-d29c-4820-9e84-6f7647b4a5a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf4d8213-1975-458f-9c6e-9e10a777f721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bae3007-f12a-40f7-beee-b9e26688796f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f6cbff-428c-4b3b-b728-0e8054954cda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0bfbef6-075c-451d-9546-bf41763a0dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5588d0-01c6-4661-9013-c4938e77fa9f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbbc3e0b-50de-41e1-91d6-0bf3fcebd466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5386ea47-37b9-4cc9-9b63-b332e00f4579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5becce1-338e-4773-a0d2-88c82ebede09",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb60439-046d-41e6-b494-0d24b4917c07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39ba8986-38bf-4480-8819-ff735b56b636"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "749ca4fe-2fb3-4cf8-a9d5-a10e5c0ffead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "939ab7c4-dc82-416f-9326-3605717618b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab4b55d-f5ca-4ee3-bbac-97ca5a95e03f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa31846-e48a-4c7c-8120-790011da8401",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a2cb51b-b98f-47f7-a43c-db80f42c420e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea6a728-6055-49c1-8873-c2cfc34181e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48b3f82f-8101-47f6-a300-788559921edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03127db0-66d3-4215-b6c5-a4386880c67f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3009c5bf-2c21-41cb-979b-8c0ae93be085",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f73a32c-fd5c-49b1-9e27-c6cf7cb3fd28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a74c2f-004e-4590-a9af-c5759eb0908f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1516791f-bc29-4cc7-a441-825fff2ded32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "658ef9e5-cab3-4eeb-b015-983cb8b852ba",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cfdbb98-8a76-46af-91c4-2c2954e5fa13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a81e01f-6f8f-4658-8a8a-ade008c5938f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f08d1304-9af4-4264-8ef0-84fb028f42c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c58f0ded-ff09-478a-843e-1bb876ec8740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c346b8c8-edab-4af9-8c47-7f65c9762bca",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "358ab887-32e7-468c-aa49-b15870e258f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0ed49b7-153f-4c2c-b615-0bd3cdd1af31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d70f83-8517-414f-83a4-04754140f938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a19ec7d-2785-46d6-91de-03402b7b8634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86041934-0c34-4974-9cdd-41c6ad11f1df",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f58fecf9-b7df-4c4a-ae66-7c20141d2f9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d03b6186-6820-4aa3-95b1-50291ae3efb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6088d6ed-1a81-4d5a-a3df-5be585c73267",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc9ee22e-c7c0-4007-962d-94277642dbc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "193e73ea-d7bb-4d97-b944-642f733bcb2f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac94035-0d54-447c-a5c5-307db0455995",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7f9893d-b3e2-4f15-9cfa-56f862c32708"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "203dce2d-3fb7-4589-ad84-a75c489191f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cdfa8e8-d728-469d-b9e5-4a5e7c306f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2006f745-1ca1-4ead-a9db-1b740428ef63",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df4b6dec-fe74-4840-9311-72df9064ae34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfd25fff-9b01-447e-9459-b3c1b5afa466"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "316a2b10-2f8d-43f2-b6c4-ce92806f78fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a06f17a-fea4-49b1-8564-882975ff6bf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2fb1920-8bbe-4848-9c3a-ff359ad87288",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cca69259-3d86-4f9e-b5b5-2e7c1f49f2a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fada53dd-660f-471f-8c7e-a6716ea7069e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e28635a-3044-46b8-9294-1c2d4ece1638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "055a84a4-d168-46d5-a4a4-c2a42c7520a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccfb8dd1-afbb-4371-8c1b-21b964a47353",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "361bd2a3-6233-4080-8ec0-2b9dadd6202f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "010efb17-076f-42ab-b666-ecd6fae6ed66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b85137c-83f4-431f-bd7f-68aa2d7e13b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e77828c7-fc41-4b67-b5b8-6ea09d079c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "769852a3-84db-42e1-9545-6b6139001760",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c3e75db-d179-40e0-97e3-cf3e5b1b2637",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b710f60-e777-44ec-8b53-eb644f29e4a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf186446-e2fe-47c9-93ce-8e83f428bc81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c98b3994-6fb6-4e1d-8928-d41f4cd26cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48d3bcc4-fed4-41cb-8601-84143cbe8cad",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33625019-40b1-4279-9b2d-1c2d6b9f93f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2678c336-2e18-4d83-abaf-fe9d647ae623"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a0f3048-b2bd-4bdf-bf41-87d37f90023a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e0d5045-409c-4cc7-8880-02aa12d744c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8baa99f6-bdd3-4840-abce-c1fc1c27fcec",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dbd6721-f9e4-4925-ad3f-d6c1b83a9859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a7d8752-688f-4cb7-a773-b63b6bfae0ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d857f16-8572-4963-bb38-ce6287fe13da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b68505e-d8cb-4546-ae81-de7292abb531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e41c6b1-4627-41f0-a82d-78e0e8d7e656",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ddbd8b2-b461-4853-9eb3-639aaf357862",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66ed51b1-1652-418b-a784-6342025fd19b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2bb6cdb-c5fd-4815-9ab1-84fe46976309",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "434861b5-8dca-438d-afe4-9506e97e450b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70c27bc4-3a63-4d3d-973a-6077e2f01b85",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b56d6fc-1b2a-4792-b4f5-0dd485402870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c04bdf05-4286-42f6-bf40-50f455deff09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e921d2-e457-4ef2-8980-c7e6048f099d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8d2b54a-e94d-493f-b43e-f02be2a3ab4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59a53fd1-93a5-42eb-9962-16a48bec090f",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd16d11-2f3a-489e-b6c0-fc7d36e47ce3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "913382dc-46d0-4c54-a3a8-2733cf91cbd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "894c6568-b264-4c11-856e-c436dccd1207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b69b4b3-5460-4e9c-b431-9dfe3f75dc66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44d287cf-bdd8-4daa-bc01-f600623fc755",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b3da9c-0118-4ff6-8dd9-e196cebbfa6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51df63a9-b638-4992-92c9-83971a7934c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea00078e-101e-4ee4-82e5-50f469b24b67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efea69f0-e6a2-4c90-8501-9f44e1ba598a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd83abf-b367-4793-931c-4f2a6fff89d6",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f71d735-a4dc-4807-a2df-668df3b9d126",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3123196d-c31f-46f0-808b-e3616641510f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecdaaf8f-fcbf-4d5e-91f9-a7128084887d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc015dbc-3990-452a-9ffc-221fb353e877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "588da59c-1db0-4891-977a-e04f175fc5af",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d7b876-6519-4258-b31a-c9dbc103d726",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f16c344f-8a6a-444b-b825-95b0b7209d7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c228a283-4ad9-4403-b293-f5eaa8a1f5ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df72d99d-aa29-4806-882d-33e3fad727c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d2fb59c-28b5-4ca7-b6f5-49c70d0f1cbf",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd3427c-fae8-49c3-88e0-460c7585be93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edceee47-7237-42da-96d6-ebc5ce10a0e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa5c351d-8109-4f90-a909-69a105455b38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2621f0a5-4e47-4dee-a32c-6f72dedc264b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c6e2103-6e27-4e7f-838e-4220955e32d8",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2348c67e-74a9-49d6-b82c-4bdfa2c1402b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59b35989-99dd-4697-b20b-099d8c1754cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c8c443c-06d6-459d-8cf1-b12a6829c746",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97644115-2411-4d62-867a-95af7dbb2293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6150dea-1d5f-496a-84a2-2f40b5de8169",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8cba2a-19d4-429b-89e0-973bc25e235c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aee899b-0f79-450a-ae74-d9a22ef5080c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce850f61-41d2-4c2a-946c-cd3d92fc6460",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b414846-975d-4ee3-a96e-4012d58af72f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff6e085e-7431-4671-8192-402f42a3c152",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8087122-c59d-4d43-ac53-0023955cb7ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5df64536-5efb-458e-bdbd-c9974b912cf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8207cd1f-ec52-4fad-aafb-a031798311ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a1a69ad-323f-4caa-8797-bc55ef69546e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb63b317-4376-4c2d-9600-b86bbafc4d4d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40f49ed4-4185-4aaf-8a65-f8f05095be9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c0bb08f-4451-45d0-af4e-c2eb9588fa7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e3279c-81fa-48d8-82d4-6b0045894141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6dad88c-2194-4b77-9b12-295bef28ee30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "284cc25c-d283-4bfd-a80b-c99bfa1adae0",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "002ff745-2444-4407-a39a-366d42e57eb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89df8ddc-ec7d-4d8e-aa6c-999348bec8ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f93236-b8d8-40dc-b59f-01015a80a2e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c6d0691-0436-4de7-a99c-0b6c40db8386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3503e74-dbd6-4206-80df-8b2f262cd767",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6514aaa7-2559-4c30-8b89-f7672b944412",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30dbea98-d54d-407f-b7ed-51aba419c254"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d7fcf61-bc55-43e9-b461-9e1e51d3c4b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6c3bb43-130d-423c-85d5-a56d7de28466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbef0694-f7e3-4a47-b471-23a8d974a381",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a27ea97-8dac-4b52-ba6a-d5c54cd6fa0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4792431b-d464-4be9-9866-c2a756fac266"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b51dafa-f111-48ef-b4e7-d0b5787f3618",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "021db805-e49d-4ed1-ada4-6ed6b1a01591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc79567-8071-496d-87ec-f1a39cfcd240",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c0cde09-8923-4c7e-a275-f6621c7e0019",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e969025-9a38-4c83-8699-0a07fe6e36ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec2136b-1db8-44e0-acff-780226f76f56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ddd4273-9a9a-46a3-8b07-18cd24101350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca8a8402-5384-403f-bccf-22a05674a39f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be0a4ae-91bf-43fe-8d19-0af66e40c880",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3319df33-465c-49d8-ab81-1d4854ddb732"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2256ff7-34eb-4971-a132-9bf1b758eb39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bad5aa9d-a5e6-4672-9052-dd74a5a1165d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "305f48be-13a0-47ec-9802-9d02019f1ed1",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d335a3e-0198-4b3f-afae-3174450c573d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97e1d50d-268f-4d1c-945d-f27fd406ff20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c18094-bf9f-4451-bc05-77bbdc943991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e36ad7b-93de-4933-bcbc-077fe321ca85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce161b75-de50-4090-a612-7dbdbab16c18",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b4faac-9434-4d84-943d-d58ca321bf46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c7b9427-36fc-464b-b027-3a8b521a5440"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da8b658-ef18-42f4-bf41-a8bc02fbd5f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b461bfb-0cbc-4741-8d4d-870f4b33b0f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d3deb7-4592-411f-897d-593b71b9fe92",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82b56fc9-54e1-47c2-9e44-011dde688993",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59215f86-f0bf-44d0-91e3-0a497a2f88c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e2fde7f-59aa-405b-a1e1-066902feaac7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fa37624-af9a-4499-8ac5-1530d6948aeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2477ccae-c4c8-4c2d-b8c3-62867bdfdbdf",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "229bfefb-3a75-4c67-9bf8-d1bbd78387e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cb23875-cd28-4868-9696-4223ff60f3fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc88f3b6-1aef-43b8-8f18-5812d4555306",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62d1eb7c-35dc-4311-a09f-3ff0dce489a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf46460-e538-44aa-9e34-bf1e381cc277",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35ff6530-6ed3-441d-9463-7de080a546bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bfa4752-e37e-447f-9951-0c1418d081ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d5fccb-be78-4da5-886a-4d5dd127c103",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aafba3e-a0a6-42b4-950b-306d72fb0227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fc2fa72-ad90-4d2c-80c7-341de435ee8a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5808a90b-0230-4ef7-ab6c-c957cd1c4a40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63521f4b-a586-4ee1-baa9-f4621ed2b4a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "407ee7fc-c50d-4080-bb27-6589dc423fda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b5b52db-a943-4219-a0d9-5e427b487c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c21419f5-1ff7-4a56-9d1b-1326ec62042f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd54971-9aa2-4bde-9ceb-9562b70f5e63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dad8aa7-a2cc-400d-851c-2b0795652f57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c844336-060a-4cb8-ada3-b82b3ffece04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc36fbda-5020-4a3d-b834-c08f11796c80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9119d5b-a62a-4099-b4e3-442c401f0774",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21e4ba6c-e14c-446b-a426-10f39be25d6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd429591-d5c6-4a92-9252-1128add4b7c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d07fd408-a8fa-44e3-99a0-3d3f9d981079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cb4669b-02c5-4212-a4d2-8dea69d057a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d90726-4b6d-45ec-9fac-44d3f0121fd8",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c10e443a-518c-451f-b858-9fc56b161d67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed92f922-2732-4031-95f5-08229db3e8c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00a318dd-2d16-44bc-8e3d-e8dc58afafa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bafc18bf-4924-40ce-b642-969291a7ec37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dde03a1-35e1-4b58-bedd-b158298e453d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af1ebddf-bc7d-457e-9c7f-d368b91b6591",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c2598db-2c8f-4836-93cc-2135181cc7cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b26f03d-6b36-4383-a198-aa8106b61dfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "777055b2-3183-449e-9d6a-b114da480a2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd0b6b5d-1384-4999-b61f-725144c3d7ba",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "148426d2-f4e4-443e-9f65-8755adc5f9c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d1e105d-b1b9-4cdf-b839-2dd20e977a25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db8cd90-79dc-4f4f-b532-6b1d0c9b3d00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "375bd3ed-8e01-480f-b61a-278e72e96eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "858f8607-7500-44a4-96e7-a8533b8d9c60",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef20b090-29e7-4183-bab4-b8654aac505b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaf6e0aa-ddce-459d-b986-ccd4a5d264b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e74eaac-0cab-453e-b728-44d14dfe0f4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b7cfb53-f7f0-462a-abcd-c4b3dfd12291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab60d61f-b3df-4053-b0cb-1c5851f6d595",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "374faf17-a84c-4bb0-9c43-c00da81142d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d5989ab-b45c-4289-b9e5-565038388708"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20eb7617-e80c-4b63-b846-cb6f62af8596",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ed60a5a-94fd-4355-93cc-2083388e9c07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd0d00f4-d9d9-4ca4-9a53-b655d11631e6",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ade2e2bf-8240-448e-80d6-82cae9d1de2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "897af759-c929-4414-b67e-db6b795d6ef0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8479056-6307-4ab0-b58b-683405e1dd92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57107d6e-2b70-4851-808a-1ff4356bb868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3326b5b-d898-4fcb-97b4-7e1a628236c0",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5783870b-789c-4830-a4fc-392cb3d41ed1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4b4f5c4-2b50-48de-a111-f9550d2ba506"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f750ea79-5322-4876-abad-43f59de3d9c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b5fbcb5-ec25-4d27-8e73-4899ff69d946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf4c215-c463-41f2-924a-f7a7af9650e1",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5702b89d-2a90-4e1d-ab44-226a65d83395",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "827df6ca-4b26-4f2c-83bc-976fd637936b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50060a1f-7dbb-4157-89a2-ed916e95c081",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3beccbbf-5399-49bc-821e-29efa4846cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e642e1f-779a-4cf0-a115-02c30b1600cc",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b05739c-f75b-4f20-9dc3-202cb391d6e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c49ab29d-bf52-4fac-b7e9-321c4016d425"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba062ded-82f8-45ce-a3a1-b3995848d007",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77bd6dca-df8b-49ec-85d5-6b186fdf9165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f28649c-21ff-4e68-b789-10b0623180f8",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "766f0203-e600-40b9-853f-e1bc15cbb906",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f91a6f1-a69c-4e69-927d-d7dc2015a1d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3156453b-8ca4-42a8-9a26-40f56d3f309b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c41ce30b-570d-40ef-93cd-b0b3edb6385d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "add23674-b5c2-45c4-9d72-1a74d0e1bb92",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b449ac4a-bd1b-4d00-a1b8-4c4abd4d07fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20e110bc-57c6-46ae-872f-f4b0a19b6435"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe4faff-714f-43d0-91a9-296e7a820ec3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c818da7f-9d38-4093-87d7-6a5e5a1e30ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "454bb413-faf3-4a50-b985-100c0072fdd7",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a35eb80-5fc0-4cb3-81f1-86e29ed461e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76fd0400-3438-494b-a1e7-63f220f71233"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b5bde93-9266-45e5-9308-5742d48b9658",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "893af44b-47bb-479c-9d81-0cf4372b2b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d5a45b-60d5-4604-8a6a-e9917b6914b7",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b9813b-2105-4fd0-a59d-75db1fe36421",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e3a3fec-3124-4897-974c-efd25743ae9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca15a93-1c15-45b9-afcc-3468a06f32f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45eba1ba-d86b-44ba-a3ea-b2b0650bca42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78764021-5c44-4bbd-b930-e997b4dc5e00",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c96a8a53-7cef-48fc-852b-fe61bcfd9a7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92c85c8f-e9a7-4d84-a487-61e3e7447d64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c7943ca-d28a-4c68-93b9-1f5c8c26a025",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eed679ef-e3cd-4a22-b856-9a5dbf4958b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5fee3f6-0e8d-46d5-832b-8940e1e7ed22",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2f7854a-c8d2-4f4d-a3ca-51c0a9e80034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "137e89e5-1531-40ef-83c0-3f569be249f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4076b1df-6bac-4cfb-a93b-b13f1f15b43b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "424f9dae-d53f-4303-99fb-bc2d8c9f5cf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4213c2a7-803d-407d-ad17-ff95aac37e3a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "790332ef-4b5a-4a1c-beb2-99fae6990943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "446c9b73-498d-458c-96a6-05632796f159"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f99c253a-9533-4123-ad76-b43a96eec92b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f51a634-1277-453a-bc7a-70d250b3cf26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6089aed-8a94-4c70-8997-26a687f9d5d8",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b14bafe2-6f39-48f2-8ed5-e79515376f2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b46f4061-27c3-4ca9-8b14-bf9dd649fe49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be5888f6-b893-4bd9-b9bd-df5bb6d4d1aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cca5cc2d-e6d9-4acf-b118-ab3202cb2d22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb40ca69-6be7-466f-b1e3-da918e325bb0",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8446ef0-0010-4069-b2d6-6451a1548cf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "025b9824-db46-4697-801c-3f82156965b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d23cafd5-8329-4c73-8b99-4fcd1a6e3b3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d10ac2d6-a5d7-43bc-8a26-2bbc48ec47df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a87eaf70-9288-4b8d-b9fc-78489630d5cd",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfe89366-929d-4fde-9546-a27a2ce5ad52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a6a65c2-6970-4828-9b91-cfa8c07a02a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd3dc23-37aa-479c-9aee-73f1c484cd8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eebc4ece-f7c6-45dc-abd7-7ebab0667ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a9045b3-6538-4f51-a1c4-cc3fa7f6d581",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c3bcc2b-89c8-4f71-bad4-f1340b109c51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afa54da6-450c-44e0-be5b-5e65a8bf1336"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b3d1c3-3478-4dfa-b5e2-01e2f1a70349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1fdb67e-e05e-4605-a857-f58374dd412b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd26b97b-3063-42e7-a10a-b15058822986",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfaecf8e-a57b-4067-8336-4c1204e6650d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86fe2f2c-c3e9-480c-aa27-d859ed131c73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b07b7db-b161-499e-979d-b66c206b55ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc41cfe2-c2ed-4865-8903-fb4d03fa8ebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c04a576-b8b4-46af-a45c-469547078371",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e867c84a-a6c1-4011-bdfb-8ea2fa4fb38a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2de0285-b2b9-49c6-85dc-6ad3947a334d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f00faf-58a1-46fa-921d-7fa22614583a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75a3b831-14a6-46f1-adbc-bf1c7ffed5a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5760e95e-52ce-4c8b-84d4-f2fc0c74fa33",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b413079-27d0-4232-9178-869c0af6df30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b08466b5-9133-463e-a99f-13de689bcae2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a38661b8-54b8-4c1c-8599-1284ba7deabb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac7438ef-40a6-435e-bc0f-6a7309139ed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb4aced6-f3f7-49c1-9146-9d5218b7b726",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01fcbb8a-bf7a-49c8-a437-33acf73c4886",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8292f98-c164-43bb-bfb2-5b0d112fe071"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "337b2afc-aaa8-460d-8f97-3e7d8fdeb254",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1959d14e-d98b-43fd-a028-5efe5b3fe0eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd5158fd-2e93-426f-9db2-78d6bb823c7e",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d2fab0-4424-48f0-ab2a-0f2382a77db2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7ee135e-bca9-4bbc-bba0-1cd2e6de541d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c096ae7-9067-4665-9e61-d4c5785c9ded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "159568ca-ba87-4194-a252-d74d4f828850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b64777be-4231-446f-98f3-d7d5bc02aea3",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e25608-386c-461a-be85-240f42284923",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae0d351d-47aa-4d63-ac9c-c17b03584619"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "775943a5-ce9d-420c-a3ba-974607f82bd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c884dbb1-6e7f-40bd-bc0e-e4b90dd38f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f3c8a4d-cdf8-4720-8ebd-7999a4a127b3",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2851d1dc-dc6d-46df-9f79-c31b78f62ccf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "770c4b5c-03ec-496f-9144-461f0d5b25f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "173717b4-8f8b-41a5-af08-da1764ce2771",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c9b259e-476c-4302-af0d-4202672e37f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b0abbe9-7e3c-480d-a0fe-af3c88e689ab",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb1418d-1954-46e5-bbb4-fdf926cbb4a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb3ec064-bced-474b-a5f9-86ea5952a26b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a4e449b-db15-4259-9c8c-ce69b8c6503d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "887dbddf-3cd4-4a30-a31c-2212ebaffe49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcde3bec-438e-40ce-9fe7-3e2395ab493b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43797105-cb2a-477d-8edb-52e3a0423963",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d1d3fba-54ca-44f5-af52-c3b8c8f177bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c0d922f-3f28-4eca-9d12-c39ef7b41fe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbaf374b-8272-48ea-b5d4-10d3e82e270c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7d4d43e-2d44-491c-b66c-0929a9e12d9f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96602aed-6b79-46ec-bd41-0caba4eb9c2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1ecba3a-da3b-493d-ad73-fedb2c5d58ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8420ea7-322d-4e53-a953-04cdb75c7ac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24885d77-401e-4bd5-8623-d62284a5cb35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "835a4401-61e1-481d-8a27-5671af5aa7b2",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b10343-453b-40c8-97a6-52e421dab750",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a665ce9-c181-48c4-8f65-b8f534833ba9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b05e5cc8-130d-42a8-b61c-c3b5b7cae7d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f6fb88a-164b-4653-a6b3-8b815bea34dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c700155e-093a-4ebb-bba9-a707e5080061",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7674d0b8-daa6-47ad-8f17-1fee261d9561",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91b21d6c-ade9-4966-a67f-9e0742e8386e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dccca43-9d03-4bd6-ad95-92aef4cb724e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e98e2622-7f84-41e3-a210-197edc9d10bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c481413-8309-410f-b600-b4c85c1300cb",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "234b9c33-3278-4c56-ad8e-1b9e91460af8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "def3f915-2875-47a6-a6e7-677b2428f9aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a758245-1f1f-45a9-a79b-67ae7a777152",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0dc85ce-a465-40f5-a528-9cece2f38508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d86603df-4268-485f-a27d-f9a60ca1fe80",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fb83164-a11c-42f2-8296-0f7857add61a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dc23471-76f0-42ce-ae68-08257c2aa61b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3030624-f98b-4878-bbde-0695f2ad4daa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4cfd9d7-66ca-4e72-b373-2d4bc317547b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d20b8d86-88d5-4737-91a6-9540780871cb",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0523dded-2e29-41fa-b5ce-40af6fee9eb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0212168f-dff4-4404-adb6-332edc5acf22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87759bf9-7c04-4edb-b46b-ec0569379cb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c038c519-c8f4-489f-ad71-1f1b2d1c4781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "933cd396-f613-4eb4-9fd2-806c41da6705",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46487b32-ea1b-46d1-95e4-ba65613ca4fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c7b0a91-6159-4165-955e-fb58b572bf29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c678d760-edbd-4f7a-9ec3-c3118fc7a00c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b9c4969-be67-4e45-9b29-f93743c0ebc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4942f24f-af3c-4842-b233-22155e569460",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be038a1c-7ad3-464c-920a-bf09235d2b12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "974879a8-d342-4e7b-849a-e75c8fc6ea95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5257dafb-b79e-4780-9122-09e02748677f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8de26b5d-d6b9-489c-bcda-78ab60401f37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e384356b-4497-41c1-ac02-d0dcc6aa1c98",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d85ff715-d807-4cd2-acad-4de8c5ad6530",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ab23b5b-c3bf-4fc8-87c1-a904ad116af3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0166df1a-ee47-40ef-b7e9-6d38fd1e77ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c6fa630-0c95-43bd-9fc7-ff68b9c94909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd7d7b94-7db3-4a5d-8a29-b0c0985091cc",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b9c289-555f-462f-82f2-2303586e85b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5cd3dce-c805-491b-b3b8-8c73a4979817"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b72d00-94cf-47b8-a2ea-3dc7a86ad2a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b878d712-d62b-4eaf-ad6a-8a923e3cae0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33dc0fb6-5322-4f41-9c60-bddc10f47e0b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3efefcc3-e73a-45de-9025-f6a039249c57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20bcdf52-c49b-4edd-8d30-2bc8d66cfac6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ddc427-dc9d-4e81-95bb-96a63c65c002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd99deb5-ebaf-43bf-97aa-75a0da0862b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0785bc2-c6ca-4410-b1bb-5350a8cd94fe",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4735c338-5d46-4aa9-a2b5-92dd20b6c30b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07057f6c-a14f-48b2-95a5-c88d7c9b3bf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8f2720b-25d2-4bb3-b026-b82dc1e9b24b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea14dccd-10ea-41bb-8b10-8393e5db82bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a98bf3f3-9b6f-4819-87ae-8358d3804f42",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f462213-a5ff-42a2-a931-04a2e3154a14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af68d48b-8654-4f42-9382-9f0d14a1c8db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09b8c298-a701-435d-8265-b10498a8b9e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c09ffb63-e82d-457a-933e-32307cac7a14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf08827f-99f4-44bf-8ab3-327a1575ba8b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c896f6f1-74b7-4905-97e8-be42b6a555c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88003a2e-6ff6-4a8c-86a6-beffd61a9115"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ba2958-02ff-4e3f-a2fd-5a9f5a8ab4bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a769259-8506-425a-ac8d-e155afede958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f444d6-8443-4c4c-8a46-29537d11f75c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c07e62-2a8c-4895-ba38-9577be634f4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae825669-3967-465d-b729-13ee97f77282"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af884df5-46b2-495e-b4cd-b8abeb0ddf10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a87a3304-77a7-42e3-a0d3-af913d9a9b8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d63722-f77e-4f48-a808-0c272b358027",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cbe55c6-2459-4c9d-880d-d4984f38840e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "048c93d7-be9e-4d7e-bb4e-919cb139734f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fcc0da6-c8c9-4635-b2ab-b147f4a7d59b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca65c2ef-4e10-4228-b90a-4de1a5efb425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80577f9f-9b1a-4f6a-a476-8dfa617140b6",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5258940-4ca5-4792-935a-191f1802aef2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc060b7c-5965-4973-87fa-6aad24fe06c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3c1ef06-eb49-4570-9600-4da9cd95faf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c536312-65ab-4793-9ce9-fcf771786fad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88e8a7da-5bb3-4bd1-9c92-b3a39195fc2c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c4f14ab-9155-43b5-b0f6-fd4b1a3559c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dafd3f94-3c9d-46d8-85c8-b889e85f66e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db089e5-1877-4a30-9b43-778783997314",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e57cecc-0249-45b1-b5e3-dceb1e6b7bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf2529eb-bae2-431f-8ca8-bc5eb7c34020",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cef75b0-17a1-4bf1-8ed7-a0daae8f8115",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2757ef5c-024d-42c7-aa37-da9bce5049c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3945740-71b7-42fe-9684-7cb8f657ced8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cbd7cc8-4523-4efc-8156-dbeaed5de604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2bb1c1b-ef3f-42d9-8fbc-f119fc4305e7",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c0fcb2f-e5ad-477b-b9f5-f54aa4a6a390",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67fa95c4-aad5-4e6b-b8b4-d852593914f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55889421-ac45-4ba4-8d33-f8726204abe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "172a838f-2d31-448d-a055-f15d130b71cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f53fd3-d93f-403d-a126-8ff3dedff508",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab08bdfb-a54f-48c0-88e7-c68168d59be2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09204afe-b054-4be3-8a6b-8acafcecb674"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78827c3f-a04a-49c1-9ebf-959ccdefbc04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "045bafed-fb59-4d03-929d-473a7f7ea3eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daeedb7b-7061-495a-ad5e-3bf5cb13dd3f",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a456d9ea-b31f-492c-b2ba-94ec853975b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "130d54c1-5bc3-42a9-9155-733573ef1272"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ed788f-4642-4c82-8e86-3eb33c7c8b3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7431013-106b-4960-a060-97cdb8c4785c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ec4edd-b849-4d63-b25f-01ddc6533879",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1538904-615c-4148-923a-e2d3c31e4934",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a3245f9-1c2e-42eb-91f4-6ca2d079b4bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a964b4d-d749-4b6d-ae3b-bf8a7b669901",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5202fd11-652a-46ba-a003-97a05f532739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57731535-4c19-4138-b886-6481c340d144",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d19879-87d3-48be-9ff7-18f01344485a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce61ecf0-15ee-482d-8472-fdb3b0d1690a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f8a74e-4906-496d-aebe-74465f9f4356",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "471685f3-25a8-42ba-9613-d3a25dc23bd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2854a816-21ad-48b7-9b58-7b9543eacf89",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e03d5730-9441-426a-b690-df01fd319b40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec10f258-52f7-42d4-9d1a-6dbb5cc1cdbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1991a4d1-5fe3-4d5a-bd19-2c5170cdbf60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b392113c-79d1-477f-8753-e1373cdf59ba"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a92d4c1-fc93-4c79-b255-293e21aa30c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b52144d9-a1ac-4dd8-98d1-07767d1461e1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b0d7662-db8e-4d30-8824-967f98b472e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fcbb5352-23da-43e4-8a11-4620782c7158"
                    }
                  }
                ]
              },
              {
                "id": "36444cee-208f-418b-adb4-647347efd5b5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c166e09e-80de-479e-b698-1bbe9ecfd4e6",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e56fde-ba38-4431-95e9-0d70bd60f091",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "679545d9-771e-4d35-b206-8fc39ca88360"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9520f3df-a63d-4c92-87d7-d396f2133b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "79cd6db6-ba1c-4cac-8a96-30455d4a91f9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "475a2509-54e5-4b88-82de-89602bde084b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0bf15c43-bf8f-4050-bdf4-8edd36fd2e20"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b4cb2c5-ac7f-48b3-9f4a-d1ded904d1d2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c9f527b-3fa2-4aeb-b209-2aa65a961599"
                    }
                  }
                ]
              },
              {
                "id": "46ccd506-3ff2-475e-98c1-3b3dc867ec71",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "237d971c-6e18-480f-8dba-316085cc2c01",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee0a1ec9-b286-460c-a23c-a976609ff6be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "589ce2a6-d9b1-44d8-91da-2b307fc8c9b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f605aa-12c0-4592-b802-dcae98723a53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49ea8a0f-d01e-4048-862b-af73f9adc2a6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "91d062eb-22d5-45cd-9603-3a735c144a76",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d3a22108-2eb0-43c6-9af2-89c7855f4f15",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b473f72-052c-4ff3-9131-dc67ac683403",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ef16c4d3-d6c0-4705-8ba5-825b3eb956cd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5687508a-ad52-4e02-acb0-b99a4517c638",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3fb9f484-5754-498c-93fb-ddfaf2f126a9"
                    }
                  }
                ]
              },
              {
                "id": "ced71c10-a202-4062-804a-8119d3705c06",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "28794db9-5ab6-4871-b3f7-ce7386dcb45e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "14a4d614-e184-4e97-bbea-d7718ac6faea"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "085f22f2-0281-4b33-8d10-78e421472e34",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eff19a9d-ccc1-4712-a6b0-ce3455362924"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f41621b5-f575-4840-9e3b-9018983a18aa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "db5c93c5-9fb1-4215-9c90-a32f10136b22"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "80fa15e1-583d-4bf7-8561-e3065b10b853",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4ce6824c-35b1-4f23-bb9c-1028dd03a621"
            }
          }
        ]
      },
      {
        "id": "16542fb2-88c9-4749-8c45-50bf02a1b6e4",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e9c8b952-9c0f-4819-93dd-760da0cfe0f2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "90e3d759-367b-4651-8fa3-f2297e3c1ad3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0a4b0eba-23f6-4354-bd81-b8918265298e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae01a6ad-406c-466e-8919-3a37525a6f4f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7be4d388-8523-487f-961b-cdb6584f4d86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b22d30-665d-44b9-ac3e-d4a87e4da9ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f87a9df2-6350-442e-8316-a722fb8bab0d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e720e54-7159-4d5c-a841-03d72cc529d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d7c2362-c1d9-4483-90ee-1244137b3a3c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "76311850-0c80-48f9-979e-cf0d08100f6e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff2d06b5-0b82-466a-b378-8a733bfc5b80"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5f153831-ec29-4dda-9b22-ae81429a2487",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7628543b-59ce-4d65-a030-421fe0cb6e1a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7087d323-96e8-44dd-ba91-c61e5a7b5567",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "40817be7-51dd-47ad-8b8f-d7df60981a98"
            }
          }
        ]
      },
      {
        "id": "fe86999b-3b57-463e-933f-987a1f6a9787",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "13b89fcd-d18e-4e13-8da9-59e8fce1b31d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1c87ac30-9546-4d73-b686-097518ff0bd8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9ac581e3-1241-4cb8-b572-dd94ec299cb4",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ff2baf9-0884-4999-abea-1e19d74d7a13",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "540e3cdf-5a6a-4bed-b302-2cd481895eb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43d7f27b-0057-4503-a01e-b53381a77f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "305df8fe-0ab8-4c3b-a157-8c3fd31354f9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd419381-6ebb-4eee-8bb3-05c6afd6bb41",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "087cc714-6eba-43bd-9cb0-e5ef20a9b17e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a809dd5c-483e-4378-b9d3-3f6689a5e461",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3121aea7-d0c7-494b-a6e9-4a6c3955256d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "23bbb027-cb63-43a0-b682-e0c3797174ec",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "60c5824b-9991-4a7e-a5c6-15ea49bad521"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5e71bc29-88fa-4cc5-b038-03f22861385d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "36290bd4-b64e-4b45-8a64-2ce4c0c3e79f"
            }
          }
        ]
      },
      {
        "id": "aaf83b3c-d519-4d2c-822c-dc9ba43ad8b5",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "77b42b3c-8da5-44c6-81ce-203b27b24aca",
            "name": "Negative Testing",
            "item": [
              {
                "id": "51288f96-13ae-49c4-b90a-5fb7a48c9868",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ce26a031-946b-4ef2-94eb-b3d161deefbf",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08c34dc-8ccd-4b5e-b4f8-730add9588a5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61621a17-12af-4f1c-b6d1-e25646959efb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b46eb19c-0dab-4f0d-acdd-603263de258f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a77b7b35-6aef-4576-a912-29b5228d906d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a126d4e-89de-4fa6-a53a-7af5d3a3a3ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c7b92479-451c-433c-9860-f19448c9646d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4dd8cae3-d498-484c-9e95-8cff3ce26c7b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "72340dd7-ca68-4132-946d-737b2cf03be7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "95ad856a-bdc8-4db0-a1e6-4dadb9fec1a6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "71096542-df34-446c-9ad9-3c07f7a9a5cf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "85b2e084-121b-4f02-9ec3-9d62dabdd721",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "afe6a8cc-35b1-40d5-a299-73d4e4822751"
            }
          }
        ]
      },
      {
        "id": "cde8fe9d-930e-4069-a308-f19d54c08a06",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aa714f7a-3654-4eed-ab42-288222bbd7c7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cb95d1d7-6457-43bc-a6ec-1415a39dbb2f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "559c4cde-7d73-45f6-87f5-5ed3b4816e49",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "832d586e-bf49-404e-a4a9-c9f3826e817c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "80e006fa-64d3-4105-9e67-012c43bd6cd7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 95.69824561403509,
      "responseMin": 6,
      "responseMax": 9789,
      "responseSd": 614.0418125346043,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1701909339430,
      "completed": 1701909376265
    },
    "executions": [
      {
        "id": "b5340b96-1a29-4f76-9041-5a4a46653bbe",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "b5f17c32-1fb0-4f3d-91df-45a79d6b87a8",
          "httpRequestId": "6526c310-7e7f-4ced-90d5-956768709748"
        },
        "item": {
          "id": "b5340b96-1a29-4f76-9041-5a4a46653bbe",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "c58e4248-a7f7-4be7-81fa-f3a0e883c1df",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 0
        }
      },
      {
        "id": "e841a694-fa48-4c43-a873-ca9b5ff6c132",
        "cursor": {
          "ref": "c562e384-cd84-4077-93b4-c7a5633027cd",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "dc23e701-c091-4f83-b01b-d696d7b2ad68"
        },
        "item": {
          "id": "e841a694-fa48-4c43-a873-ca9b5ff6c132",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "4e12970d-7604-451b-8e72-f3c17e07e4b9",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "2e87f362-beb8-400f-8302-9c02fdec8087",
        "cursor": {
          "ref": "feac50d1-737d-42e1-b2b0-86209e8b0e26",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "429b579d-53de-49e0-ab9c-7530676c6eda"
        },
        "item": {
          "id": "2e87f362-beb8-400f-8302-9c02fdec8087",
          "name": "did_json"
        },
        "response": {
          "id": "cfc2588d-4001-41d6-8e54-5ddead6fbba4",
          "status": "OK",
          "code": 200,
          "responseTime": 278,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74699ed8-6824-4f50-9002-d825a0966fc2",
        "cursor": {
          "ref": "87c9596e-f1e7-43c7-abd4-3a5079e52862",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3971112c-ceb6-4f73-8978-1f4c94be1f70"
        },
        "item": {
          "id": "74699ed8-6824-4f50-9002-d825a0966fc2",
          "name": "did:invalid"
        },
        "response": {
          "id": "4dd8118e-14a6-46b9-a4cf-77682865b315",
          "status": "Not Found",
          "code": 404,
          "responseTime": 506,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74699ed8-6824-4f50-9002-d825a0966fc2",
        "cursor": {
          "ref": "87c9596e-f1e7-43c7-abd4-3a5079e52862",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3971112c-ceb6-4f73-8978-1f4c94be1f70"
        },
        "item": {
          "id": "74699ed8-6824-4f50-9002-d825a0966fc2",
          "name": "did:invalid"
        },
        "response": {
          "id": "4dd8118e-14a6-46b9-a4cf-77682865b315",
          "status": "Not Found",
          "code": 404,
          "responseTime": 506,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443a627c-69fe-4c78-a6e5-0f98bf840adc",
        "cursor": {
          "ref": "50c8b841-4d04-462e-98fa-44acdc61b8ad",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "39a9b389-a2f8-472b-999b-9d4d0333fa4f"
        },
        "item": {
          "id": "443a627c-69fe-4c78-a6e5-0f98bf840adc",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "195d0430-ec0b-4b82-8233-98c2747b6d8f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 56,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c2158c-92c8-4ef0-af94-ab80820b3d0e",
        "cursor": {
          "ref": "4af566ef-a7dd-42bb-8980-fef5fa7830da",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "5f1d3a3e-f528-4377-abfa-84f69da88767"
        },
        "item": {
          "id": "22c2158c-92c8-4ef0-af94-ab80820b3d0e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "7a8685b4-6748-4625-9901-06bac3a19847",
          "status": "Not Found",
          "code": 404,
          "responseTime": 39,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e840499-6010-45e8-bb4d-65a81d91d0eb",
        "cursor": {
          "ref": "cbd291c5-7c32-4345-928c-d714dc75b0aa",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "993728b8-eaf0-4b56-9b97-780ce77994d7"
        },
        "item": {
          "id": "7e840499-6010-45e8-bb4d-65a81d91d0eb",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ff7d39f2-673e-40a2-a194-b01af90de18d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec1e5bed-6235-47ca-a91b-3279450b6d32",
        "cursor": {
          "ref": "74d1f679-b6b8-4158-b8da-232e010febb7",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2c718d48-7615-4b64-8648-9b474799f9dc"
        },
        "item": {
          "id": "ec1e5bed-6235-47ca-a91b-3279450b6d32",
          "name": "identifiers"
        },
        "response": {
          "id": "69b596ae-4b44-4eb1-a8e7-e3a06b6303b3",
          "status": "OK",
          "code": 200,
          "responseTime": 40,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67537d41-cfe8-4325-ab2a-a23909e05659",
        "cursor": {
          "ref": "86ad9ebd-4662-4628-a7be-059cad5d224d",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7187e5d1-704f-47eb-9401-1597939cc36c"
        },
        "item": {
          "id": "67537d41-cfe8-4325-ab2a-a23909e05659",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "60ded5e6-b15f-438b-a6b3-132c6d64d698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa7fbe6-b1cc-4bc2-815b-5aaf96dcc24d",
        "cursor": {
          "ref": "a7f23176-948d-4c79-9f52-298d1645d67b",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b03b21ec-ba23-4658-b398-00c4f4ed33ea"
        },
        "item": {
          "id": "7fa7fbe6-b1cc-4bc2-815b-5aaf96dcc24d",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "48a15e77-29f5-4b2a-b9fe-04176d226753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e41b3a3-3e7c-4ee0-a970-cc8b6828cecc",
        "cursor": {
          "ref": "4b6ece7a-1387-4ce5-8af8-0880bfc3e0a7",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "23907ee0-79d3-4116-be41-a9910401c56b"
        },
        "item": {
          "id": "2e41b3a3-3e7c-4ee0-a970-cc8b6828cecc",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "49d23159-bf67-4e10-80a0-ba7d0e7aeced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "664d86b8-1d85-4020-a230-ed5c9e34502d",
        "cursor": {
          "ref": "76f63186-5d72-4171-9225-074bf80e8334",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5c603b37-ca98-4b6f-83d7-f3b27f8f8a4a"
        },
        "item": {
          "id": "664d86b8-1d85-4020-a230-ed5c9e34502d",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "fd2eba04-0461-4488-b00c-680a7974fbc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c918d92-4dac-4dff-a253-08954325dc65",
        "cursor": {
          "ref": "018050bb-965a-497e-bf82-0b0f2f3c8863",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2b7b5487-8e73-4841-8bc6-9611c2751165"
        },
        "item": {
          "id": "5c918d92-4dac-4dff-a253-08954325dc65",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b51f1688-027a-4d19-b021-f5b362ff526b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53399dcc-3280-4733-bb26-aa1792e0a211",
        "cursor": {
          "ref": "1efaeab4-17be-4592-a120-09972f744904",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "863bb3d1-3d74-45bb-b090-4b9042d6e128"
        },
        "item": {
          "id": "53399dcc-3280-4733-bb26-aa1792e0a211",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "29bbeddf-ccf7-4cee-9b50-bc55a1ec4a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "547fc612-a7b9-4d12-a223-4339a9ba3c63",
        "cursor": {
          "ref": "de619dc4-01b3-4ced-9abd-34b1f2190791",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "cbd58deb-9f51-4e58-9f35-ef01de27631e"
        },
        "item": {
          "id": "547fc612-a7b9-4d12-a223-4339a9ba3c63",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "06fd9a3e-d66f-4e09-a705-6123ae555e4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d56b6b-eca8-4ceb-86ac-a5c1c528ecfb",
        "cursor": {
          "ref": "356bc91a-71f0-434e-a78b-71c58373f8cd",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d7bc0d02-49cb-4d6d-ab39-0ed68fda52d5"
        },
        "item": {
          "id": "f3d56b6b-eca8-4ceb-86ac-a5c1c528ecfb",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f0a2a46b-b36d-44b1-8ac2-aba90ed6f723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c429bfa8-dc05-430b-8199-1194554fc863",
        "cursor": {
          "ref": "fe681d53-7f3a-4498-a736-b48bbfede593",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d10bd460-5b67-43eb-a138-e658271ab4a5"
        },
        "item": {
          "id": "c429bfa8-dc05-430b-8199-1194554fc863",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "119c69d2-597f-4767-98f6-e1d83d47d323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f82af7-6fab-4487-94af-9706aa7f6773",
        "cursor": {
          "ref": "a0f777ee-4f99-45a3-9dd4-409b28886ca1",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "6780f144-2d1f-498b-a66c-2fa532fb83c5"
        },
        "item": {
          "id": "f3f82af7-6fab-4487-94af-9706aa7f6773",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "80e39faa-29d0-4491-b3ef-9294297d727a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e117c555-b159-4204-988b-24725d6ff6d8",
        "cursor": {
          "ref": "49dc26c7-72a4-482f-9cf7-30e63dc8eab6",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ba69c4c8-17c9-4a6a-9bf3-2e018cbc9435"
        },
        "item": {
          "id": "e117c555-b159-4204-988b-24725d6ff6d8",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "376ce766-248b-4de7-aa80-2ea235f0a15b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc74041-0275-405f-8042-886ba813b221",
        "cursor": {
          "ref": "750da58a-7d67-4c95-ba29-b313da0aaa31",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "85128928-7e3f-484e-a17d-e5f874301eeb"
        },
        "item": {
          "id": "6bc74041-0275-405f-8042-886ba813b221",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "50340056-0aca-471b-80a7-b8a5a8048254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66cc036-7af7-467a-84f3-e260bfe4a402",
        "cursor": {
          "ref": "1c6475f0-6044-4dc8-929b-bf05c7b3ef9d",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9d71518d-081e-4230-97c3-13d2685bcc1a"
        },
        "item": {
          "id": "a66cc036-7af7-467a-84f3-e260bfe4a402",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "64c7c200-7ae1-480c-b610-b363749a1c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "402a6f29-c346-444f-ae0b-22e80580ee66",
        "cursor": {
          "ref": "35e00b9e-4ffc-47c0-8dd8-719c7ac56545",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "15f0c5fa-4e4a-40f9-99f6-45cd3fb732a9"
        },
        "item": {
          "id": "402a6f29-c346-444f-ae0b-22e80580ee66",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "361372d5-4e88-422f-99f3-44efb006c6ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5257a39b-c33f-46c0-b48f-0904caf17c42",
        "cursor": {
          "ref": "952269dc-06eb-49d9-9f3d-63d930ee278f",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "0bc2e4fe-243f-4d63-a23f-63948485207c"
        },
        "item": {
          "id": "5257a39b-c33f-46c0-b48f-0904caf17c42",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "90e094a8-f3c2-45d1-92b9-178798169b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dc753ae-8c69-40db-962d-8dc8f96340b3",
        "cursor": {
          "ref": "64f39195-5282-414a-a283-0427acb632b8",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "5013b412-4c75-4ceb-9db5-bfa03185b9e8"
        },
        "item": {
          "id": "5dc753ae-8c69-40db-962d-8dc8f96340b3",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "3e3ff8ce-960e-4c26-9238-69d75a8f771c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc6a1ff1-738d-41e7-b4e9-0ddff33790a0",
        "cursor": {
          "ref": "ecd1f00e-c2d6-4fa6-8158-af4fea7a571c",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "fdd1e70a-671d-46f7-9c5e-8c37b6f9e1c5"
        },
        "item": {
          "id": "fc6a1ff1-738d-41e7-b4e9-0ddff33790a0",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "48569927-be9a-4871-a1f9-adf1c1fb20c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4162658a-83b3-4cd0-8716-0f0aeb453355",
        "cursor": {
          "ref": "3f931be4-1416-4493-9d74-5b216c8098cb",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b07ca87c-7bc0-4b53-8361-8d1c96c9e04e"
        },
        "item": {
          "id": "4162658a-83b3-4cd0-8716-0f0aeb453355",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ff40e8e8-ef8e-4e48-bc37-3288a8739c3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98702d67-beb8-4264-91bd-1ef8d1e4f38f",
        "cursor": {
          "ref": "bcdca290-cab6-45bf-a433-75582a24f253",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "5682421c-e921-4779-b68a-ac6510cc1c01"
        },
        "item": {
          "id": "98702d67-beb8-4264-91bd-1ef8d1e4f38f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "273fbf92-de87-47a9-8e3f-d189e194ef21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d43d66a-9010-4924-b895-0d7142f9a719",
        "cursor": {
          "ref": "2331406f-0eb4-4215-820f-56dbd88f5590",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "3df1e11b-1ff8-452e-8d5d-cb6f24ab6e47"
        },
        "item": {
          "id": "4d43d66a-9010-4924-b895-0d7142f9a719",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "26559169-bfa5-42e3-b539-b8f88533ff7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac4b297f-c2f3-4b2e-9de1-d753637f1839",
        "cursor": {
          "ref": "a51148fe-973a-4a56-94ce-518291658693",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ed41c513-c8ce-482d-9eb0-5a593d2e928b"
        },
        "item": {
          "id": "ac4b297f-c2f3-4b2e-9de1-d753637f1839",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "faea12e2-f2d0-4c7e-a6ac-b46ca632aa32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab3f191-8a44-4fcb-a6e6-871352067a51",
        "cursor": {
          "ref": "abaf50b5-9fea-408d-842c-553efa704a04",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "6819efa8-6c3e-4999-a435-8153a14439ac"
        },
        "item": {
          "id": "5ab3f191-8a44-4fcb-a6e6-871352067a51",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "878b10c8-9d8a-44ed-b04c-0d06b4719ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b75869b-8ec5-47c3-a188-cb5fc139baef",
        "cursor": {
          "ref": "cf98ce13-9fee-49cd-ad5f-fb731fb27ab7",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "8730774d-802f-4f0e-a0e8-09f58519cdee"
        },
        "item": {
          "id": "1b75869b-8ec5-47c3-a188-cb5fc139baef",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "cf3b87da-f493-4b13-bf90-7ac0e3add773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b578eacb-ff06-4510-ba02-8d78bcf39a97",
        "cursor": {
          "ref": "2f26d75f-d800-492c-ac46-f3191ef74523",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "55b32b9e-4974-4afe-baec-3057297166c0"
        },
        "item": {
          "id": "b578eacb-ff06-4510-ba02-8d78bcf39a97",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d5cb9320-d6c7-46f7-832a-3111c58b51a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d5c073-c871-41a5-986f-eb276fa13ef7",
        "cursor": {
          "ref": "46a69a7d-9dcc-44df-ba89-ab2950d9de16",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "6fd172e7-6eb4-4ece-b979-5c4f58b9e70f"
        },
        "item": {
          "id": "95d5c073-c871-41a5-986f-eb276fa13ef7",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "6579f33d-f3e3-409d-a17c-4d7c0758c3ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b1bc988-8130-48eb-b308-9615faaccdab",
        "cursor": {
          "ref": "40f3c2d8-c0a6-4db7-85a2-4562cd2ae792",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "76befd29-06dc-474c-93b3-767792d1c3d7"
        },
        "item": {
          "id": "9b1bc988-8130-48eb-b308-9615faaccdab",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "39d529be-1d6d-4498-aa2c-a4ddb2bf7a84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a206c42b-6987-40ed-9e7e-70088ae032ad",
        "cursor": {
          "ref": "1426096b-9189-4cb2-b257-2a1eecee01d7",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "215731bb-6efd-454d-ad23-a49959c5eef8"
        },
        "item": {
          "id": "a206c42b-6987-40ed-9e7e-70088ae032ad",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "42b3cd58-6069-46c9-8ff3-65880d970b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "750e19b1-6365-4dd8-95de-8f116f986593",
        "cursor": {
          "ref": "fc932af8-a745-42c2-a043-041f4179229a",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "31cefc48-6c6c-46cc-913e-4b5593a50324"
        },
        "item": {
          "id": "750e19b1-6365-4dd8-95de-8f116f986593",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "3a1c9f56-d4ca-486e-8af3-48633c230c9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8048d8b6-7cb1-4af5-9cbe-17d074439410",
        "cursor": {
          "ref": "2f29ab86-b232-4330-8f97-a31bb8f432c3",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "12a92ef2-b203-4986-8b85-9f057e5a161a"
        },
        "item": {
          "id": "8048d8b6-7cb1-4af5-9cbe-17d074439410",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "2edfc18f-7387-496c-bfaf-f61864cfa547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "614d6ac5-9500-4614-8657-fa4cd0bda128",
        "cursor": {
          "ref": "e7edbd85-6cf4-49ca-bd7f-c4ff476f7faf",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b9db7bf5-e998-4ecc-b999-77a934b046d2"
        },
        "item": {
          "id": "614d6ac5-9500-4614-8657-fa4cd0bda128",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "94b14b4e-028f-443f-a259-aa2d2445a336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "267cca2a-6e4a-475e-965e-5f3caaddc82a",
        "cursor": {
          "ref": "c8d4b567-0b4a-40f2-add0-0937dfb0877d",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "2aa64796-ae0f-4d29-abc3-0e73b5c4de53"
        },
        "item": {
          "id": "267cca2a-6e4a-475e-965e-5f3caaddc82a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "7328f104-5490-4f07-8881-beca0a3289b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb30e17c-a487-497b-89a3-d300e88a62c6",
        "cursor": {
          "ref": "b2be7235-4276-4416-9523-333af61fcc28",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d52184cc-7742-4fee-b82e-d0158e334afa"
        },
        "item": {
          "id": "fb30e17c-a487-497b-89a3-d300e88a62c6",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ede3824e-2fac-441b-b312-6d5392f6614b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c0c038f-3db9-4940-b2e2-3af5685974bd",
        "cursor": {
          "ref": "4e721ec2-d095-4a75-8024-8036e3d8a065",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "92f807b2-69ef-41a1-b7a0-d4b0b2f41f18"
        },
        "item": {
          "id": "0c0c038f-3db9-4940-b2e2-3af5685974bd",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "51adab97-08bb-4a13-941c-d43402aa9986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8311596a-42d4-472b-8f2f-4bcfed0dedb8",
        "cursor": {
          "ref": "36c3dcb8-3b1c-479f-9a77-2e5338154769",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "5961cb48-4596-433e-94f2-25bcd258230f"
        },
        "item": {
          "id": "8311596a-42d4-472b-8f2f-4bcfed0dedb8",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "0f9aa6fb-8f58-43fe-a723-03436e35554c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be3384c4-7b84-41cc-8395-d59d3ba9122b",
        "cursor": {
          "ref": "69c3e081-836c-4fc8-90e7-34d90574f5d5",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "24329a62-a262-4876-8bd2-d17ca9fe7ed7"
        },
        "item": {
          "id": "be3384c4-7b84-41cc-8395-d59d3ba9122b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "2b854d5f-6d20-43e3-a950-5e4fb8a5d88b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "534e108a-e7f6-44d2-9ac1-2af2cb1b3bb1",
        "cursor": {
          "ref": "0fd62d05-5bdb-4abd-a7eb-6bfe6531885e",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "794760c6-a1eb-4611-8c87-cf81bcbdcdc9"
        },
        "item": {
          "id": "534e108a-e7f6-44d2-9ac1-2af2cb1b3bb1",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "af738085-44bd-40c3-8283-a5439079b851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f24144bd-f50e-4e9d-8d2e-17c83fbddb50",
        "cursor": {
          "ref": "dd711afe-3e78-49ff-a47e-dc0237b30d4b",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "783953db-964e-47d2-aa9c-1679656fd875"
        },
        "item": {
          "id": "f24144bd-f50e-4e9d-8d2e-17c83fbddb50",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "5c49bac7-8dfb-457f-bbe3-865ab2c6f9fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f840e19a-e7d8-47f5-81b0-074e3c9556d4",
        "cursor": {
          "ref": "07c7b41e-5ac3-41aa-825c-12c886be8d50",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "65d59095-d0c5-426a-b884-6b931daadd62"
        },
        "item": {
          "id": "f840e19a-e7d8-47f5-81b0-074e3c9556d4",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "4d753e9c-4c57-4338-897a-74d962fca739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bede86b6-7962-45c4-a5ba-9588ec1d0224",
        "cursor": {
          "ref": "0d85bdec-1800-46c9-a097-f3077671d306",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "282781f0-25c4-46d2-96bf-e105ad228101"
        },
        "item": {
          "id": "bede86b6-7962-45c4-a5ba-9588ec1d0224",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "63b3fa24-9083-41d5-864c-380af8846f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e9e3ad6-ed6a-4e21-a3b1-9ba5eb50cc5a",
        "cursor": {
          "ref": "0c8d2ea9-944d-4d9f-bab9-98a207fd5fb8",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "577cad53-a275-4795-9acb-0a3025b9521c"
        },
        "item": {
          "id": "0e9e3ad6-ed6a-4e21-a3b1-9ba5eb50cc5a",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a8a33521-84e8-41a2-ae5d-69fe1cb24ffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd60dcd6-dc41-4537-9ac2-002e23599bae",
        "cursor": {
          "ref": "e1d7b138-fb38-423e-91da-8766a10139e3",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "16b38872-cded-4c08-8b49-af2ccf12b2fc"
        },
        "item": {
          "id": "cd60dcd6-dc41-4537-9ac2-002e23599bae",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "6bb056a9-fe69-4179-84e9-c2c6787108e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f34ff974-5b75-4f6a-a980-4c0da1e86de8",
        "cursor": {
          "ref": "71eea6af-865e-42ae-b480-9c27239b2db6",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "bf370ca4-07cd-4a7a-95ae-d8f485e6aab2"
        },
        "item": {
          "id": "f34ff974-5b75-4f6a-a980-4c0da1e86de8",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "868223c0-d010-4984-b377-740b5baf451b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4632bcf5-1676-42f3-90c8-4719b8d9976f",
        "cursor": {
          "ref": "b6363e54-98b1-4bfe-9a97-0404e5797947",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d40f077e-acff-4a80-bc72-351c02887b6b"
        },
        "item": {
          "id": "4632bcf5-1676-42f3-90c8-4719b8d9976f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ed0c05b6-82ec-4c1f-b86b-9771bec47307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ad04f84-849c-4da5-a9a7-af509331bf51",
        "cursor": {
          "ref": "bb8cc593-f127-4b7b-900c-c41912b5ff62",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "b83846ea-e6f0-407a-a3e2-4c4e538a5e58"
        },
        "item": {
          "id": "2ad04f84-849c-4da5-a9a7-af509331bf51",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e8c8b9b7-c9a8-4c3f-b7ac-234263f34e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c985539a-0ddd-4cf7-a50a-9b4a72b7b72c",
        "cursor": {
          "ref": "408c2323-fda7-4c89-9e16-748b3f4d62e5",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e6f5a065-260b-4832-afbc-00b02bbefad5"
        },
        "item": {
          "id": "c985539a-0ddd-4cf7-a50a-9b4a72b7b72c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c0afc560-365b-4ca4-9c9c-438bf061b8b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a83353fd-e38b-463b-ad59-331b314f2060",
        "cursor": {
          "ref": "0a8c4aed-bb11-48f5-871d-ac9874ed327a",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "7e52dc88-3296-4110-9adc-e0b0f3769c6d"
        },
        "item": {
          "id": "a83353fd-e38b-463b-ad59-331b314f2060",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "1f5a2c3f-365b-4128-a91c-4d7374b6bd3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1576afe-8081-4875-bae4-2320d0c29212",
        "cursor": {
          "ref": "3d3678e5-e19c-444d-a54c-9ac2d8d954bd",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "11661bbc-a27e-4ccd-ad43-7ecb98c04be8"
        },
        "item": {
          "id": "c1576afe-8081-4875-bae4-2320d0c29212",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "0cbbe0f6-71a3-4ea5-a473-17742d18e1ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b3148a-046d-4b71-8ed4-d161cf255677",
        "cursor": {
          "ref": "1bc8d357-d26a-4fa3-acb6-01021c69080e",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ef2be708-ea1c-49d2-9411-9065202e2d63"
        },
        "item": {
          "id": "21b3148a-046d-4b71-8ed4-d161cf255677",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "9f38d617-b9d9-464e-a8e3-7a6f96913744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1be25ed6-c5e9-4ff9-89d0-fed69a86e181",
        "cursor": {
          "ref": "05546c78-8cf8-42bc-9072-8242071ba2c8",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "f922c9da-6651-4556-8a7c-930dfffd1b39"
        },
        "item": {
          "id": "1be25ed6-c5e9-4ff9-89d0-fed69a86e181",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "77b09cbf-a549-4d51-9b29-9575ba55f5b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6707fe63-25b9-4cbe-8b89-df1e19c66918",
        "cursor": {
          "ref": "7b63f4e8-7b55-4770-9f9f-8fa12f1015c0",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "0ecc6653-98c7-445f-992d-656f1ecc4041"
        },
        "item": {
          "id": "6707fe63-25b9-4cbe-8b89-df1e19c66918",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "5e413641-9a36-4d2e-b6b5-717bcdeda143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66771b92-35fa-4cda-8fcd-65cd87030aaa",
        "cursor": {
          "ref": "9874743c-aee5-424a-8cc9-6e38107560c8",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "df8d2d26-6049-4031-a810-b29cab29ae21"
        },
        "item": {
          "id": "66771b92-35fa-4cda-8fcd-65cd87030aaa",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c3323cdd-da78-4100-8d67-7858a70223ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "540ceb2e-a15e-4c7d-8ec2-7f3461e0a6af",
        "cursor": {
          "ref": "0914bcad-9f12-49a2-bc2a-bb5de4346e07",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "0ae2a02e-4437-42a6-b4e1-f27b1c77c617"
        },
        "item": {
          "id": "540ceb2e-a15e-4c7d-8ec2-7f3461e0a6af",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9ab233ea-963f-46e6-944d-d3e3eb049946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e35c3f4e-fda9-458f-871e-73b0e19b1cce",
        "cursor": {
          "ref": "b15b322f-7c41-4434-8c4c-342757be7ead",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "16a232b9-969b-4104-8305-a8671357bead"
        },
        "item": {
          "id": "e35c3f4e-fda9-458f-871e-73b0e19b1cce",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "18cc9187-e223-42b2-94bf-85d6f7f9ff5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd2f174-7a0c-41f5-b323-545e0504a8f1",
        "cursor": {
          "ref": "784da596-1fc4-444d-baa6-792f553a551b",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5882e31c-e66a-44c0-b4a0-29f0e1b04289"
        },
        "item": {
          "id": "2fd2f174-7a0c-41f5-b323-545e0504a8f1",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "03b0062a-10b9-404c-9322-ecf6e57c7c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd32ca2-72b9-4a41-b042-27511b1c0887",
        "cursor": {
          "ref": "5fb2b028-b976-4e63-b08c-9823356ab2a8",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a75af9c1-9879-4290-a1d6-852080178641"
        },
        "item": {
          "id": "5cd32ca2-72b9-4a41-b042-27511b1c0887",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "87e5c2e4-cb5a-40f3-918f-22f84411eae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a8e18b-6103-4262-9cc8-f1ab16e18955",
        "cursor": {
          "ref": "724339cc-c26f-4c6d-acc8-f2e7f3b66862",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "22eb368e-a623-4477-a4b2-3fd32984709a"
        },
        "item": {
          "id": "09a8e18b-6103-4262-9cc8-f1ab16e18955",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "5edbce00-5c84-4519-ad9b-d91053237b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "273b1ba0-3957-4aad-8f3f-7ebf8bb63dc8",
        "cursor": {
          "ref": "7b27d065-e86d-4151-9d26-7dbb8804f46c",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "74f1b43d-656f-46e0-a8ed-aec60b780f6d"
        },
        "item": {
          "id": "273b1ba0-3957-4aad-8f3f-7ebf8bb63dc8",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c7f774a6-84cf-4ae6-a0ec-b9221155a46f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b0f760-e2cc-4719-9a9b-7b1ebbed7015",
        "cursor": {
          "ref": "0d8f34e5-01e6-42e3-9a3d-4c53578a7c66",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "6fd836c5-ea80-4277-83ea-58ab1c57331e"
        },
        "item": {
          "id": "f3b0f760-e2cc-4719-9a9b-7b1ebbed7015",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "48f84496-1bed-45f0-9b30-b2130acb43a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda85bc2-1199-436e-83ad-9981b0a5142d",
        "cursor": {
          "ref": "d20a88ae-e78c-4d1a-aec4-6dab296d7af3",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "552a9e64-87ce-4146-8ef4-b23e22df2572"
        },
        "item": {
          "id": "bda85bc2-1199-436e-83ad-9981b0a5142d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f2635c6e-2a32-4714-ae14-8ef7d99d3f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85da506d-0e63-4895-a058-7ecaaf00eda5",
        "cursor": {
          "ref": "6b78fcbf-f4b1-4992-8934-184d71024820",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "6027f52d-bc93-4138-b797-11c7ad17a743"
        },
        "item": {
          "id": "85da506d-0e63-4895-a058-7ecaaf00eda5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "9acd0512-7e6b-4f72-a116-3f0f782fbf58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a271c28-7c1a-4f1b-bf83-2daa91fa8e77",
        "cursor": {
          "ref": "d0009338-3234-4696-917d-e78f23bc9e22",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "1f8f0f42-badc-4a0f-b733-3abe00ad2f98"
        },
        "item": {
          "id": "5a271c28-7c1a-4f1b-bf83-2daa91fa8e77",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "3f74bd88-9d8d-43cf-af7d-149c4b2a1a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f50373-73f8-4f30-bced-d8240dc30191",
        "cursor": {
          "ref": "12dffce9-f77e-475a-8258-e42847a6ce0d",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "fca1fbcb-481a-4def-bcd5-7f9bd4a3e400"
        },
        "item": {
          "id": "69f50373-73f8-4f30-bced-d8240dc30191",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ba54447b-dde6-4a11-b25c-ecbb5d80ce06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecaca1a4-10aa-4858-be6e-91c17c16e9e5",
        "cursor": {
          "ref": "a199860e-8023-49ce-b63b-343417098600",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "18851fce-9294-4b15-9405-32e974fbe7e6"
        },
        "item": {
          "id": "ecaca1a4-10aa-4858-be6e-91c17c16e9e5",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e435ebf5-7a10-4a6b-ae49-bbb3fa11b867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "975691f2-037e-437d-b4bf-537c008ac5aa",
        "cursor": {
          "ref": "1cdf6fa3-3e0f-4dff-86f1-bf3ac8112fd5",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "2d96f6ad-ddd8-4751-a4b8-55f309fdbecd"
        },
        "item": {
          "id": "975691f2-037e-437d-b4bf-537c008ac5aa",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a3a2cc16-6196-422b-b91d-842bd57c7ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e58337f9-c438-4adf-a286-3a61dc533d10",
        "cursor": {
          "ref": "0cdfe645-a4fc-4047-8699-40778d7fdada",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d3c9c090-5fba-4c3d-8977-d7ec905d7574"
        },
        "item": {
          "id": "e58337f9-c438-4adf-a286-3a61dc533d10",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "4c2178af-1e5f-450e-abb6-d78d777aae27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fbb4926-5493-40cf-8148-9be1205da8eb",
        "cursor": {
          "ref": "e8614be3-aea5-41a5-a2f6-2015d73bf9f4",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "2c7ce559-9593-4292-a31c-b24cad6b7801"
        },
        "item": {
          "id": "2fbb4926-5493-40cf-8148-9be1205da8eb",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "882706cf-a401-4efd-98e4-a6ed22b7f216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54fdb123-4ab9-4552-91ed-e25d8581569a",
        "cursor": {
          "ref": "4ddca693-53cb-432d-9ee9-cc4e34e1bd67",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f0fa87b4-82ce-41b1-8c44-c21e9db9b3f3"
        },
        "item": {
          "id": "54fdb123-4ab9-4552-91ed-e25d8581569a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "6ed4302e-f030-4d13-9e04-6d04f19f17f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c6a5c05-a141-4e9f-b288-a607ae9451f5",
        "cursor": {
          "ref": "de148de4-7bbe-427f-84e4-268c5ac9268c",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "34888d4d-5bbb-4f2d-9533-d461216a9fdc"
        },
        "item": {
          "id": "0c6a5c05-a141-4e9f-b288-a607ae9451f5",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a2f6b9f3-e29e-479d-9a6a-4b246ddd18b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ccd298-85af-4ef9-affd-b1ba8ecde543",
        "cursor": {
          "ref": "53d90ee3-7a1d-4060-941e-a7ab1674569c",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "7690c0c3-0221-4a77-9018-d576f9354a25"
        },
        "item": {
          "id": "84ccd298-85af-4ef9-affd-b1ba8ecde543",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "3da56241-6bdf-46fa-85e2-ce87e1f6c29b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5064886-4603-4394-8b1f-af39db47c5ec",
        "cursor": {
          "ref": "00cb3696-c67e-406a-9099-c5a6b0729e32",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "0d3362c4-14b8-4745-8e01-520837263fa4"
        },
        "item": {
          "id": "f5064886-4603-4394-8b1f-af39db47c5ec",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ef182893-ba97-40c3-b005-4662210283e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3a10f26-9d6f-431a-991f-468c10e11c0a",
        "cursor": {
          "ref": "05a70c16-c5d6-40d9-8c1f-34d514fc8a43",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4873a71f-48c0-4024-9716-231502f23d3b"
        },
        "item": {
          "id": "e3a10f26-9d6f-431a-991f-468c10e11c0a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "31bd60e3-d7ef-485d-9dd1-4b01ae310aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ecaca1-00b8-4b9c-938c-471729f27529",
        "cursor": {
          "ref": "3606bdec-83fc-4023-9cc0-24ba936cc98e",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b4742bbf-1610-47d6-80b3-86003a649b8f"
        },
        "item": {
          "id": "94ecaca1-00b8-4b9c-938c-471729f27529",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "1179f8f5-8225-4136-a83f-0cc181bd3b21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c81f9e-dbb6-4887-8e8a-904bd0364949",
        "cursor": {
          "ref": "521edca4-83ce-4eb6-9535-dc666d004bd6",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "2db3ccc4-7112-48e5-b9b6-0c97e7853bb9"
        },
        "item": {
          "id": "a4c81f9e-dbb6-4887-8e8a-904bd0364949",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "16dccd3e-3805-4ed6-97c2-cf482f82418a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa838d0-1134-4be6-9fe0-de041b49ccf1",
        "cursor": {
          "ref": "bc1b728e-92e7-4e64-b82b-0c8b11c0d065",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "56e5b24d-8cf5-4a10-a741-f2de49023abf"
        },
        "item": {
          "id": "ffa838d0-1134-4be6-9fe0-de041b49ccf1",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "f6d211b1-6193-4c59-8451-d2678cfd0cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c694a8d3-c0d1-477b-8b3f-c3c7e7f3cf22",
        "cursor": {
          "ref": "83b4c394-8518-4c34-beed-bb4f4e531644",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d6180079-fe3f-4a2c-9dc8-72f3d74e9c41"
        },
        "item": {
          "id": "c694a8d3-c0d1-477b-8b3f-c3c7e7f3cf22",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3e85662e-c84c-4849-a47b-c681b5f1eae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e001b6f8-97a2-499f-8f46-8cd054095bc7",
        "cursor": {
          "ref": "0a664714-f043-4202-b473-67fb80ff76dd",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "33c74ee6-93cb-4767-b423-a9b5a15200da"
        },
        "item": {
          "id": "e001b6f8-97a2-499f-8f46-8cd054095bc7",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e6f7e44e-5d54-4805-9d40-fa4919fd695f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b6277a-2028-4976-b58b-7c643b309799",
        "cursor": {
          "ref": "ab649b79-f8d8-4a5b-afaa-e655583c42b2",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "8255c504-84cd-4d12-a4b6-226a28a2dbfa"
        },
        "item": {
          "id": "32b6277a-2028-4976-b58b-7c643b309799",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a610ecf9-4121-4356-af9e-df4f3eb9deb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2fcbec1-bcfd-41f2-874a-3e900fa3fedd",
        "cursor": {
          "ref": "3b75781d-861b-45a0-abd9-c4b9f538bb73",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "190ab60e-9b12-46d2-b645-81e0474716d0"
        },
        "item": {
          "id": "d2fcbec1-bcfd-41f2-874a-3e900fa3fedd",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "19b28889-bdbc-481b-9b35-4260d5b12b54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b7080f-a76e-4f55-8803-a3ecd4b8ebce",
        "cursor": {
          "ref": "e41dca71-1d0b-48a9-90e5-5b154832a40c",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "b75e2067-c196-4cc8-bbd2-3fb551654817"
        },
        "item": {
          "id": "11b7080f-a76e-4f55-8803-a3ecd4b8ebce",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "bc60cff1-da53-4d34-86b2-01b358fb36f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a130dfe7-fc76-4bcd-9ba2-7b1688b5dd3d",
        "cursor": {
          "ref": "cb4d1310-d666-4d32-958c-e006345edec4",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "fb937337-a14e-4634-b066-d99be90f560f"
        },
        "item": {
          "id": "a130dfe7-fc76-4bcd-9ba2-7b1688b5dd3d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e0d6ec07-56f7-4a72-acfb-03931b13a013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1155fa0e-a28f-450e-ab8a-df896d43336e",
        "cursor": {
          "ref": "af521a7c-a7b6-4db9-b047-96112996d622",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "923ef7cd-c009-4918-a399-43cf07b60191"
        },
        "item": {
          "id": "1155fa0e-a28f-450e-ab8a-df896d43336e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "9a4dd2cb-8b48-4b97-8775-c4a608d4b80d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d92eab4-08fd-4e61-8390-edf2c9d57fb4",
        "cursor": {
          "ref": "634ed37b-1ca5-4f70-9b6c-4348913b58a6",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "83a08e08-3d48-447e-90b9-0d813c480ea5"
        },
        "item": {
          "id": "3d92eab4-08fd-4e61-8390-edf2c9d57fb4",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "59a0c3f2-4666-4cc4-885f-16d78c853c53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f05019f-ff29-422e-87ea-f9c382e6a9fe",
        "cursor": {
          "ref": "2b9f1ea5-06a5-427a-9aea-7572471bd03c",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a79d9c3a-cb07-4801-8333-ab5cbf4bbd6b"
        },
        "item": {
          "id": "4f05019f-ff29-422e-87ea-f9c382e6a9fe",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "6726071c-52b8-42c1-a7a8-911fc86b7ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "974ec031-d095-480e-bfa5-13f32be795d0",
        "cursor": {
          "ref": "ca3983f1-ff43-412b-83dc-82843d75b7bb",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "69ddfdd0-6b35-4ee8-b49a-9d351208f784"
        },
        "item": {
          "id": "974ec031-d095-480e-bfa5-13f32be795d0",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "dca22c29-3973-416e-a831-fcbf25773da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df0d684f-d827-4c79-92dc-a67dc970d3ba",
        "cursor": {
          "ref": "86797fdd-0b31-4ee3-8fa3-34e224d0837d",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "4beb99ad-0dac-4a0b-bca7-c52fb8ce1235"
        },
        "item": {
          "id": "df0d684f-d827-4c79-92dc-a67dc970d3ba",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "21f95573-5c43-437c-ab8d-948083fda7e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "318a482f-229f-4e26-a4a5-d9eea73d2d54",
        "cursor": {
          "ref": "98349300-665d-4555-9eeb-bfc55b67b2b7",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "c5bf63d8-6ee4-4e74-87e2-5152ad009ac1"
        },
        "item": {
          "id": "318a482f-229f-4e26-a4a5-d9eea73d2d54",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "26c735f4-13f9-4242-8a99-3aa7a143bd6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27413e5a-5a0c-42e6-aa93-d6385a36e7ce",
        "cursor": {
          "ref": "a340d5ed-1938-44b4-a8bf-a1a80066d911",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "22a6fedf-980e-46d9-bac5-77e97ac3ae2e"
        },
        "item": {
          "id": "27413e5a-5a0c-42e6-aa93-d6385a36e7ce",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c617efa0-d09e-429a-a927-2e9dd582bfa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12217dd2-0899-4583-a97d-0168458274d2",
        "cursor": {
          "ref": "9402324d-5ff6-44a9-8b9d-88cd8bae8938",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "b8699e09-8b36-4dae-8e47-3fc14bc01cb8"
        },
        "item": {
          "id": "12217dd2-0899-4583-a97d-0168458274d2",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "b59a8ef3-d6b5-4f13-b57b-061144e78406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c92a63-eaa1-4342-a172-9df439e8c7b9",
        "cursor": {
          "ref": "7ecb4edc-8532-4e0f-9842-a8ec11ca9ed3",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e25c1eb3-2221-416f-84d3-056e0671f624"
        },
        "item": {
          "id": "91c92a63-eaa1-4342-a172-9df439e8c7b9",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "62d9cba7-d944-4f68-ab4f-c599ed99e496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e676e79-a567-4136-a606-dab8cc7e779f",
        "cursor": {
          "ref": "cffc9231-2889-4c52-a6de-9c30321ac075",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "2f42d092-2b5f-4e6d-a1de-b8efb19fa02e"
        },
        "item": {
          "id": "3e676e79-a567-4136-a606-dab8cc7e779f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d08edbb1-acaf-4981-bff4-a01f803b5e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c883fd-0627-4563-865c-5339ad9fefce",
        "cursor": {
          "ref": "86460952-7abf-45c5-a9a6-3d6811356982",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "241398ca-9764-48f5-a8aa-b32e5591ff53"
        },
        "item": {
          "id": "91c883fd-0627-4563-865c-5339ad9fefce",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "cd944a59-3778-435a-9351-23fd1a9f86c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f154f6-4deb-4f57-a83b-135d3bd2d883",
        "cursor": {
          "ref": "e2cb2d16-c87a-41c3-b52b-26bc555b7b18",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e0ef653d-26a5-4a6b-9ebc-29860beddb2f"
        },
        "item": {
          "id": "95f154f6-4deb-4f57-a83b-135d3bd2d883",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "5f8f2b16-6cbc-4342-9c9b-1f0b8c2f2f61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d946b994-a95d-449c-9c1d-d22788d436d7",
        "cursor": {
          "ref": "0ff87efc-a638-4e08-94bc-9222f8d11891",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "63c64df0-28ea-4489-a62a-23d5fbd0c2fe"
        },
        "item": {
          "id": "d946b994-a95d-449c-9c1d-d22788d436d7",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6847f28d-e00e-4ada-88ff-7559f864196d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a587696-20c6-44d5-92f0-6ccd2505f3be",
        "cursor": {
          "ref": "aeef1685-bae2-4fca-a2f3-b102357e6460",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a87ebad1-c442-4536-9365-ab13ff48dbe4"
        },
        "item": {
          "id": "9a587696-20c6-44d5-92f0-6ccd2505f3be",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "e992206e-fe1a-47b6-894b-487a045874ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "9a993d80-6583-4be1-ab3b-b58a30060176",
        "cursor": {
          "ref": "03d1df45-849d-41c2-8457-b47e12defad9",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "60cc9bf0-9444-468c-bb57-d8bc8407836d"
        },
        "item": {
          "id": "9a993d80-6583-4be1-ab3b-b58a30060176",
          "name": "credentials_issue"
        },
        "response": {
          "id": "0e9661f1-d8f5-477a-90eb-dc861c089280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "5f01d46d-1a9e-4711-9f8b-2d0c228a520b",
        "cursor": {
          "ref": "1531bbed-9ddb-4a73-adbb-05167a28e33b",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "23d85495-cce5-4112-b3da-57c99decb609"
        },
        "item": {
          "id": "5f01d46d-1a9e-4711-9f8b-2d0c228a520b",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "bdb22e58-e3bf-4715-b23e-7c210ed2e9f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "b058ccb1-9f2f-467d-8b65-ce5b0633200e",
        "cursor": {
          "ref": "9ed4d056-368b-4f5e-9b29-8cc1e8b2d368",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "08a31b1d-12cb-4403-b849-4e7d66009276"
        },
        "item": {
          "id": "b058ccb1-9f2f-467d-8b65-ce5b0633200e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d52b6b97-297f-4a2f-b01d-8261e81e0453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "73328386-1199-45ea-95dd-83b549ef702f",
        "cursor": {
          "ref": "6df33e57-f536-4b10-b0f0-8a727c7fad11",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "69680c3f-34f7-4708-bd16-7c8d0eff7583"
        },
        "item": {
          "id": "73328386-1199-45ea-95dd-83b549ef702f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "92ed51d9-5086-42e8-97b0-d9712c1f5cb3",
          "status": "Created",
          "code": 201,
          "responseTime": 9789,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6882c8ee-2b41-486e-8a7d-e47fa354bf82",
        "cursor": {
          "ref": "6c73ef96-6749-499e-983a-645401b42e51",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "cf51205f-836c-43ea-a277-9f7adc197084"
        },
        "item": {
          "id": "6882c8ee-2b41-486e-8a7d-e47fa354bf82",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "da86738f-56f1-4938-b236-4a0b9f54ad46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "84b709db-6000-4dc0-bc8a-aacfccbf8004",
        "cursor": {
          "ref": "0a8519a2-21c3-4e1e-ac35-a36ab1ae7b1c",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "345e0d4f-641e-4ce8-9b63-b86dc1f3d8c5"
        },
        "item": {
          "id": "84b709db-6000-4dc0-bc8a-aacfccbf8004",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "1607c2aa-175d-4177-83d1-50361956f399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "91545844-70fe-4f97-b941-59bf58ecddd3",
        "cursor": {
          "ref": "579dc77c-7603-4607-87b8-9e0030b3f33c",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "05b6ec87-f42d-48a2-8ae0-7990c9920fa5"
        },
        "item": {
          "id": "91545844-70fe-4f97-b941-59bf58ecddd3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3e243886-113c-414b-9b87-93e149cf1bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e558e188-2821-49aa-9380-e881d1995c38",
        "cursor": {
          "ref": "77189863-506e-428f-adcf-c04c33350049",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "10a8fd3d-5e94-4628-b0a5-385c3dd3856a"
        },
        "item": {
          "id": "e558e188-2821-49aa-9380-e881d1995c38",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2a9ae2af-53b3-421c-90fb-ab1325e472e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58075302-4fad-48b5-bd43-9f3822aaf117",
        "cursor": {
          "ref": "a4ff5219-aa57-4eb3-ad99-3b223080338e",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "8c59af7c-6cbe-45c7-ac94-615e32e31447"
        },
        "item": {
          "id": "58075302-4fad-48b5-bd43-9f3822aaf117",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "95f3f8b9-ac21-4c69-b126-54c76f6e7925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ffa5944-4f47-44cd-9c27-83828226ad4c",
        "cursor": {
          "ref": "f2ad7f68-57c3-4367-bf1e-d8018cab620f",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "224b8833-4950-4db2-bfe1-7d07068438f2"
        },
        "item": {
          "id": "4ffa5944-4f47-44cd-9c27-83828226ad4c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a5a58128-da6b-4b36-8a93-9b4b5ff97e9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f0694e2-7303-4def-9cdb-71162cbee0b4",
        "cursor": {
          "ref": "1244718c-1363-4ba1-abfb-1aac8313eef0",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "19aa701f-8d27-4e12-acb8-b868faf7381f"
        },
        "item": {
          "id": "9f0694e2-7303-4def-9cdb-71162cbee0b4",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e558af63-6245-43d7-9b15-3e8db0640035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e69f9b65-92d0-4cf4-81af-4e591095bad5",
        "cursor": {
          "ref": "15608f16-d1f7-4fe1-9cda-f3dd54c438b9",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5e565d96-15fd-4228-9e9a-4be24ac9a96b"
        },
        "item": {
          "id": "e69f9b65-92d0-4cf4-81af-4e591095bad5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1090fa62-8813-4fd4-be43-6332449de510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a6f8c0-4a8f-458e-a3ac-1d0716632de3",
        "cursor": {
          "ref": "f4dae1c1-9151-4cac-bbcd-dd5797fd8c61",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ad5bff9d-666f-42a5-af42-0e1fb94add04"
        },
        "item": {
          "id": "06a6f8c0-4a8f-458e-a3ac-1d0716632de3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c35ea4a3-5e96-479d-976a-ab1af9d7bd3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fdd452d-a0c9-4d39-b2e5-0ff00bec7791",
        "cursor": {
          "ref": "fdacb177-85ec-4375-8fb7-5a0a3b3066d9",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "edf1cf54-8c68-4e11-96d1-fb749d2d68f3"
        },
        "item": {
          "id": "3fdd452d-a0c9-4d39-b2e5-0ff00bec7791",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "17ac630d-d7e7-461f-a664-73b54e201b15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413219f6-4177-439e-a23d-02e39b669e18",
        "cursor": {
          "ref": "67816340-5436-49c6-a2b3-a6c415c14aef",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "827fa00a-cd8a-43a3-9214-86e145ece5af"
        },
        "item": {
          "id": "413219f6-4177-439e-a23d-02e39b669e18",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f52eed56-8df4-460f-b16e-a641e8356975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1985007b-2d16-4d0a-a00f-fae4299d237d",
        "cursor": {
          "ref": "24ac73af-6654-4c51-ada4-df12c9f03089",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e3383d30-3376-41e2-9277-6b76b16390e7"
        },
        "item": {
          "id": "1985007b-2d16-4d0a-a00f-fae4299d237d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "79707771-b875-48d2-892d-f0a717ddf325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "226ca2c7-78ba-4bb4-a635-0223ee8ec065",
        "cursor": {
          "ref": "99710472-3145-434a-9253-2ddbbdc6af42",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "89995370-6fe7-4a50-ab71-b50940f29d1d"
        },
        "item": {
          "id": "226ca2c7-78ba-4bb4-a635-0223ee8ec065",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e7e451af-0e44-4ef2-97b7-d0ef6aada47e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb49caef-3da5-4eba-b424-6f6f8fa0c2e4",
        "cursor": {
          "ref": "b92bfd9a-41cd-4a81-8b12-dfe6ccda0dcb",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d059d0ec-4b1f-4a0d-916d-51b59d8d9628"
        },
        "item": {
          "id": "bb49caef-3da5-4eba-b424-6f6f8fa0c2e4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "55b4a7d8-061d-40a0-8396-d96e62e7299f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc185a8-275c-4154-85cf-84998bc10a24",
        "cursor": {
          "ref": "0de53691-be4b-4f54-8d53-74c7066fe917",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b6d14d3f-aaa5-482b-a910-1176745588e9"
        },
        "item": {
          "id": "2cc185a8-275c-4154-85cf-84998bc10a24",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d137c5e3-3bfb-41bc-b417-69cf09de1f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c01d01-36ef-4310-b426-50d1d2e50997",
        "cursor": {
          "ref": "40201f80-f7d2-490c-826f-b3a9f1980896",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "15bda6b9-5c04-4073-934a-4eb203f8d336"
        },
        "item": {
          "id": "f0c01d01-36ef-4310-b426-50d1d2e50997",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ac46abb7-6480-4c4b-9b10-66038e9604e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4dc03ca-575d-4acc-998d-3021b93bdd25",
        "cursor": {
          "ref": "d1bef8be-3eda-4367-b0c6-a560aa32f512",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "565883e6-6d42-4eea-bcb1-97fe5f8658b8"
        },
        "item": {
          "id": "a4dc03ca-575d-4acc-998d-3021b93bdd25",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0a74d9d3-7dc0-4410-8803-5a03dfab2b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f0e7afc-b81b-4580-beb2-1039e72c64ec",
        "cursor": {
          "ref": "16105256-a37b-4e36-9f55-355abf37441b",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "80f4dd99-0de0-4a28-80af-07cc6e0a950e"
        },
        "item": {
          "id": "6f0e7afc-b81b-4580-beb2-1039e72c64ec",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a444727d-bc48-4a46-96e4-48f1c96a87b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7193aac2-e72a-4cab-b32a-72c7df46f27c",
        "cursor": {
          "ref": "aa602a82-e748-44e5-a5aa-749464baec61",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "f3d623b9-991e-4557-bbf2-f3ee3dbb95cc"
        },
        "item": {
          "id": "7193aac2-e72a-4cab-b32a-72c7df46f27c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d8074048-f705-48b0-b9c3-378e415f7a54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da9779c-ff5d-452c-a89a-590d826ab5a0",
        "cursor": {
          "ref": "59b8a890-bff7-4cc1-89df-7946904e4620",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e5c125f0-e22e-477a-858d-50bd8da51ece"
        },
        "item": {
          "id": "3da9779c-ff5d-452c-a89a-590d826ab5a0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "cb1f0747-6c2d-4976-a245-74408fc10948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda9ed5b-aa91-4ba0-aa56-e920a91ed25d",
        "cursor": {
          "ref": "c3ecd80e-e9ee-419d-a30f-5a5f2d8f523a",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "90848e85-66e2-4a2a-92fc-e0e9fe7f3b89"
        },
        "item": {
          "id": "fda9ed5b-aa91-4ba0-aa56-e920a91ed25d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3738bb03-f21b-4c0c-a6fc-48843263c8b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a053da-e8e5-40ae-a1ce-3e03944a9e59",
        "cursor": {
          "ref": "353aac2c-65f3-42fc-b2fb-11e5687085f8",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "7a607e98-c8f2-437b-8f48-434e81e96850"
        },
        "item": {
          "id": "36a053da-e8e5-40ae-a1ce-3e03944a9e59",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "aa64a882-5ba4-4bd6-8cc5-3ba72f1da3f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "352e3310-0d70-41db-b5ea-08415b0237b2",
        "cursor": {
          "ref": "a712f9ac-bf87-4a85-91d6-0cf714762983",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "93009cf2-c070-48d8-9054-43a586054a01"
        },
        "item": {
          "id": "352e3310-0d70-41db-b5ea-08415b0237b2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d6dde630-03a1-4771-96d2-762560eb4535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eab9024d-4136-4974-b71c-abce661052a8",
        "cursor": {
          "ref": "62274f6c-5680-409c-8e9b-a78ac0a012f2",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7bdf10e8-a28e-4428-a21d-41c107e9cc80"
        },
        "item": {
          "id": "eab9024d-4136-4974-b71c-abce661052a8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c3c4642d-ed7d-4ade-b26c-7b2386c3cf83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00392545-b750-4d20-b4dc-1191ea97bc6e",
        "cursor": {
          "ref": "145402ad-f86a-46a7-9962-7363e47f44f1",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "119e03d6-8154-4967-8173-498ef11b9d9b"
        },
        "item": {
          "id": "00392545-b750-4d20-b4dc-1191ea97bc6e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "41804176-64bf-42ad-b64e-fdd68c994c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21cbafba-64a5-42f0-91d2-c72f5cbe6f75",
        "cursor": {
          "ref": "cc1d3e30-f72e-48e2-a46f-286d899274c6",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "45bd5559-0699-4628-8016-821e76e7e4ec"
        },
        "item": {
          "id": "21cbafba-64a5-42f0-91d2-c72f5cbe6f75",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b91f2600-a419-49db-8015-670bb5091b9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbad2502-5fbf-40d7-b854-8e7b522d8999",
        "cursor": {
          "ref": "1a4e40e7-d165-4443-836d-6675f32ee4c5",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "07f547b3-8641-418d-89f8-4e97b033200e"
        },
        "item": {
          "id": "bbad2502-5fbf-40d7-b854-8e7b522d8999",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "19159753-9b84-4bef-bc18-c4d1c538ba35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef72bd1-03ab-48e6-8917-2939eeb50d52",
        "cursor": {
          "ref": "f5ac219d-7c93-4f0b-a06e-4efcfe4c5185",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "6407968b-78e0-49f4-83e4-e235b03c929b"
        },
        "item": {
          "id": "aef72bd1-03ab-48e6-8917-2939eeb50d52",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "530bb424-bda4-4228-b182-adcf7befec31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e752e387-fcec-4d2d-9422-6b9ecf481825",
        "cursor": {
          "ref": "c132cc84-4db7-416e-a9de-365e65fae693",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "8c8a1fd0-3791-46fb-8aee-8ef58a49774f"
        },
        "item": {
          "id": "e752e387-fcec-4d2d-9422-6b9ecf481825",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "fd994e02-1ce2-41bc-82d4-a780df1afdef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a9e6455-95e7-45c3-b364-9dbad49a05c5",
        "cursor": {
          "ref": "0c2d5686-e6ca-4ffd-a5e5-0546b6b264e4",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a6c1e84d-e1ac-45c9-a010-1ec19c01d1f3"
        },
        "item": {
          "id": "2a9e6455-95e7-45c3-b364-9dbad49a05c5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e86abd6a-1cbb-400d-b2f2-3b86b397b46e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f0340e-0dae-4dff-9e1e-66c3d12ef8f6",
        "cursor": {
          "ref": "174a6303-3bbb-482c-8ff6-ea718dd7bd3b",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "404df0bc-826a-41b3-bbea-92b9c3f131a5"
        },
        "item": {
          "id": "f9f0340e-0dae-4dff-9e1e-66c3d12ef8f6",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0606ca26-8cc4-4c53-808a-2b418a6d0408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "184eb0e4-4c45-4093-835f-76eb3d82a674",
        "cursor": {
          "ref": "f394e11b-4565-4531-ac7d-f534a9425f8c",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b0ebed20-219f-4154-a3bb-86ace058f86a"
        },
        "item": {
          "id": "184eb0e4-4c45-4093-835f-76eb3d82a674",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "418f68e0-2c75-4a65-8c7e-eb2dabcfed31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa9b475-f389-4edc-9e2f-01564da1b093",
        "cursor": {
          "ref": "35dfe8b6-9d4e-490c-a4f7-aa9d1878f5a2",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "bb220a77-6daf-433a-82bf-ebe56d598f90"
        },
        "item": {
          "id": "8fa9b475-f389-4edc-9e2f-01564da1b093",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e37cdb58-b9d0-4d74-a322-6ec9277c3524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a3165a3-f5af-4122-8140-1c7f8e7065ec",
        "cursor": {
          "ref": "b4f02ed5-f0f5-423e-b6c7-ce55841b9782",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1185bb73-cce6-4765-bdcb-a3db9d6f3a0f"
        },
        "item": {
          "id": "2a3165a3-f5af-4122-8140-1c7f8e7065ec",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "2ff74068-9b18-4776-b073-a072f058657e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0448a374-975b-4b60-8a81-1e026bc6dd0f",
        "cursor": {
          "ref": "0e9e8031-1c26-4275-be79-35abe148e11b",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ae996535-66ee-427d-8138-e979f0c5755c"
        },
        "item": {
          "id": "0448a374-975b-4b60-8a81-1e026bc6dd0f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "dc3b62a2-5b3f-4614-8683-e43e86e2a86c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf5f2d3-aec2-4545-82cf-ecc610b7f17b",
        "cursor": {
          "ref": "d8ad4b1d-6946-4278-aafc-7a55e805d985",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "7f94239b-38fd-4876-a7da-c47f5cd091f4"
        },
        "item": {
          "id": "9bf5f2d3-aec2-4545-82cf-ecc610b7f17b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "93e05359-4fa6-4462-98f9-103b75ed1b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c030ea-0374-45e5-bb50-c0d1a9f37672",
        "cursor": {
          "ref": "c5f388ae-4e52-4a4c-a36f-a3d0f3a11dd7",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b2e5e5ee-c916-4de7-bd5a-3d11a2448c79"
        },
        "item": {
          "id": "e0c030ea-0374-45e5-bb50-c0d1a9f37672",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "32da7ac1-6be2-4826-aff2-5c3e90916318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e25a939-be5a-4bd1-95c9-27ff611da78f",
        "cursor": {
          "ref": "4856dfbb-b1f2-44f9-ae16-e1fbe0ee8a0e",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "caecd811-c069-4764-b397-2c3959364270"
        },
        "item": {
          "id": "4e25a939-be5a-4bd1-95c9-27ff611da78f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "004f4409-e398-49bd-a2a4-b25feb9a7859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d4e4ee5-c65e-406f-84b8-fe1e3b37f318",
        "cursor": {
          "ref": "424c337b-a9dc-4af0-ba7f-4c4426539ed2",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "46b04554-5c98-43c3-8a2a-c851f3c710e6"
        },
        "item": {
          "id": "1d4e4ee5-c65e-406f-84b8-fe1e3b37f318",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1242aa76-bf8d-40fe-8655-185fb52f13ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcd32c5a-7442-4c3a-8976-5af2344e387f",
        "cursor": {
          "ref": "c1be8c8e-4bd6-44b2-add3-902c514e1a16",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "406a5a0d-1529-452b-9cac-94b857bbbba4"
        },
        "item": {
          "id": "bcd32c5a-7442-4c3a-8976-5af2344e387f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "87e9f9ab-dad5-4229-8352-07b01aff76b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c2cf014-fe9f-4596-8835-2664cc820fa1",
        "cursor": {
          "ref": "96e5d524-aece-4d75-96e4-de265d64ca94",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "edf90c68-646e-4504-abfa-47482c7f600d"
        },
        "item": {
          "id": "5c2cf014-fe9f-4596-8835-2664cc820fa1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4632db4b-3d5a-48f1-8c17-e1adc16843a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27598a5-be6a-4c72-a5c3-5fb7d18847e4",
        "cursor": {
          "ref": "3ab1ca5f-1047-4a96-86b4-859057b21bde",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "825cf9f9-ceec-4bef-8b49-3ea13f5149fb"
        },
        "item": {
          "id": "b27598a5-be6a-4c72-a5c3-5fb7d18847e4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "47efbae9-5fba-4e76-8ef5-2cdb3eda90fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e2b2da-d6b0-4e29-a568-3885913fd65a",
        "cursor": {
          "ref": "9eb5bfe0-024f-4123-89ac-f93602c462e2",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "850c414d-a0ae-45cf-bef3-05a2aad67c46"
        },
        "item": {
          "id": "a6e2b2da-d6b0-4e29-a568-3885913fd65a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "fa309b75-e64d-4eb6-890e-eb466c9a8819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd309d2-86d8-40a5-8be3-1a9d5e684fb0",
        "cursor": {
          "ref": "a8ef266e-dae0-420d-84d3-22d751358eca",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "7931ebfd-7b6a-4a8b-bc78-ded48276fd6b"
        },
        "item": {
          "id": "2bd309d2-86d8-40a5-8be3-1a9d5e684fb0",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d3a3a16a-03b9-46f4-8272-94be431c6229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fe98d7f-a92e-42d2-a17f-e250e07dfbf0",
        "cursor": {
          "ref": "12fe0de7-bfb0-4ddb-9c49-0ed5d79137b6",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "213ac50f-a7dd-4ca2-8e23-2cefa10801f2"
        },
        "item": {
          "id": "8fe98d7f-a92e-42d2-a17f-e250e07dfbf0",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ba89b41e-ef3f-428d-b3e9-f8eb2e6d799d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cfba339-6754-48e4-aabd-aaf4482d3cf2",
        "cursor": {
          "ref": "d6faa8aa-6bef-4e63-ae96-0a7a85784b04",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f392f565-4101-442a-82d4-655bf6d5398c"
        },
        "item": {
          "id": "5cfba339-6754-48e4-aabd-aaf4482d3cf2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "02d0d443-e933-45ff-9cef-85ff58bd4a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "200b9a3d-4e6b-40b6-a5d8-96f8dec6ecd2",
        "cursor": {
          "ref": "940bc63f-7929-49d7-bb50-8445272bb481",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "78a9c1fa-0226-48b0-8c24-768fb50296b8"
        },
        "item": {
          "id": "200b9a3d-4e6b-40b6-a5d8-96f8dec6ecd2",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "60e414bd-e625-45ad-be3f-299d00b82ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ed35ef-bdfd-4cf9-9ab2-b99c43aa9ea5",
        "cursor": {
          "ref": "6b340175-0c3c-4ac0-8a40-716b957e9630",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "29f52f7d-1668-4d76-ae1c-6af2675084b2"
        },
        "item": {
          "id": "c6ed35ef-bdfd-4cf9-9ab2-b99c43aa9ea5",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a7f91841-49f2-459b-a7ef-741e9a428753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b06d59de-ea72-4b08-a0b0-b38cf3867609",
        "cursor": {
          "ref": "c472027e-fae5-41c0-9fd4-c4aec143fa7e",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "8ae7ebe7-8669-4a51-99dc-653ed5408b1c"
        },
        "item": {
          "id": "b06d59de-ea72-4b08-a0b0-b38cf3867609",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4b8c0b95-10f1-4ec5-b9f4-95ef6f0166e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58338ffc-98d1-4785-aa08-64c97ea1196f",
        "cursor": {
          "ref": "2841b5b6-de57-40d7-baea-07e64837b499",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "374ab6ad-e79a-45da-9e5f-e5c176ae5866"
        },
        "item": {
          "id": "58338ffc-98d1-4785-aa08-64c97ea1196f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e85c1cac-e1d7-4667-9974-2c881d7e227e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac0f71f1-0e17-47dd-a12f-091b5c03e1d3",
        "cursor": {
          "ref": "6c7adbb6-f1b8-416e-a647-ef6db4b3336f",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "5bc83214-079d-41a1-a53e-f0ac3f716533"
        },
        "item": {
          "id": "ac0f71f1-0e17-47dd-a12f-091b5c03e1d3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "fbba1eb5-22fd-4bda-b68a-c0d9045904f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49544f4-8533-4536-a83c-3212bcb31806",
        "cursor": {
          "ref": "96c84501-8c24-4216-a140-f2c8f459df16",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "135fc3c1-bc69-4fcf-8030-48e136a40528"
        },
        "item": {
          "id": "c49544f4-8533-4536-a83c-3212bcb31806",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "18c449a9-5e91-479f-89ba-5972d270707c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47cfd486-6bab-4479-9a83-18c513844bb1",
        "cursor": {
          "ref": "a35e943b-0c8f-4b52-9c7b-5d9d2b5a9eb1",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "124c2610-068a-40fa-8cfb-ef6dd3a8d238"
        },
        "item": {
          "id": "47cfd486-6bab-4479-9a83-18c513844bb1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3673766c-4938-441e-aa17-98b0bbefebd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f94dffe7-3989-495c-9ec2-c708f98b9a67",
        "cursor": {
          "ref": "35e47011-d591-40bc-b1bf-55028b0a2081",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d1b9335f-1bc5-44cf-b30f-0b140e491160"
        },
        "item": {
          "id": "f94dffe7-3989-495c-9ec2-c708f98b9a67",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "95016070-fb6f-44fc-a109-f20dc3138398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c42c5c0-1d03-490f-b9b7-874367e996c4",
        "cursor": {
          "ref": "7b7fdc86-0aff-4a9b-86e6-da0d6c59b24c",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e4060633-75a1-4345-9825-f14e9fbca9cd"
        },
        "item": {
          "id": "7c42c5c0-1d03-490f-b9b7-874367e996c4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3a87bc84-ae3a-4880-95a1-e1213308b6f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6b3a583-34d6-42ca-ab48-59157155faed",
        "cursor": {
          "ref": "2e78801d-f590-49de-a586-d0ed377ec7f1",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8fdc7b2f-e411-4352-bdf7-4a653f5f1b47"
        },
        "item": {
          "id": "e6b3a583-34d6-42ca-ab48-59157155faed",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5007dd85-4c9b-4240-8b39-b1232561c072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ecefb32-fc73-48c6-94b0-9bd6d0bbe592",
        "cursor": {
          "ref": "be0bf7db-0d17-43bf-8c3b-ac6e73b8656c",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "27276281-2a71-4465-8c0b-f81891cf1e08"
        },
        "item": {
          "id": "5ecefb32-fc73-48c6-94b0-9bd6d0bbe592",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c6604218-27e7-4330-b427-4c826a9cdcf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9911da9-8354-477b-9d6e-54c269622de1",
        "cursor": {
          "ref": "38973522-2d07-4e9c-be07-00ed4dbc4ac4",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "2deb5a32-2c35-4702-b8f3-e4a672fca298"
        },
        "item": {
          "id": "d9911da9-8354-477b-9d6e-54c269622de1",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "268f649a-b4a5-4a87-93ff-43b77260734f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f42446ce-668c-41dd-a95d-980888d1e7ef",
        "cursor": {
          "ref": "637ab826-8242-40de-ab67-c25326efdf7b",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "398675c8-791d-4f3b-9427-7109c60a9e15"
        },
        "item": {
          "id": "f42446ce-668c-41dd-a95d-980888d1e7ef",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "14f1f016-3c20-41c6-b9dc-e78593edaa5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff94fbc9-369a-4cb9-9d6a-b8d8c0e5270e",
        "cursor": {
          "ref": "2dec253c-d2e8-4c6c-917a-33973721b7df",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9db984cd-07ab-4214-b7e3-c52065c77179"
        },
        "item": {
          "id": "ff94fbc9-369a-4cb9-9d6a-b8d8c0e5270e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f9798ed8-9800-49c6-a8ec-2cf21ea8ab31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fcdb171-9836-4b1a-b59a-d109648311b2",
        "cursor": {
          "ref": "5023a7aa-4ac1-4e15-988b-3cf9286c73d2",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "8439a0ff-be59-4033-a87f-1d6e37fedc1b"
        },
        "item": {
          "id": "0fcdb171-9836-4b1a-b59a-d109648311b2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ba0c41e3-47df-4af5-a843-98c36ef06b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc71c3bb-a69f-4f60-9f1e-f08affa20c21",
        "cursor": {
          "ref": "f6ed949d-7623-497b-9147-ca5f3395aed4",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "6564a64d-6c4f-4240-8240-50c74ecd3552"
        },
        "item": {
          "id": "fc71c3bb-a69f-4f60-9f1e-f08affa20c21",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3414716e-d7ca-4dd9-a9b1-8f6cb3b21e11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc424a18-11e0-42e0-9e0a-4a4ff65ebd72",
        "cursor": {
          "ref": "b5e9fab2-43f8-4795-aa2f-e7faaa17b6ff",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "58cc9952-e802-44f6-8f6c-c3f82dbb2f38"
        },
        "item": {
          "id": "cc424a18-11e0-42e0-9e0a-4a4ff65ebd72",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b67eb5f7-6371-4e37-928d-b8d6474e30b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a0b1029-37ba-4a72-96a3-9acc99fb7550",
        "cursor": {
          "ref": "ed12474a-f53c-4448-b8ca-92c7641c9c06",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "29aa2161-7405-4090-a0c4-4389e9ea5faf"
        },
        "item": {
          "id": "7a0b1029-37ba-4a72-96a3-9acc99fb7550",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "24fbbb2d-fbe6-41d7-96ef-34e16266f161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b8e813-f70f-404d-856f-09be9179e8de",
        "cursor": {
          "ref": "e0aa1b0b-0b4c-4205-b297-33443fe40b1c",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "32211016-ee51-4bf7-b292-76285c85d73a"
        },
        "item": {
          "id": "01b8e813-f70f-404d-856f-09be9179e8de",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8efd0324-0ccb-49f6-b096-bc22971b28db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "646258f2-8cb8-48c9-b9f3-efa5ddb5b7a0",
        "cursor": {
          "ref": "efad112c-24d3-4f36-947a-c045692a3a1c",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "1bdd1158-74db-4634-9595-e0899aafb947"
        },
        "item": {
          "id": "646258f2-8cb8-48c9-b9f3-efa5ddb5b7a0",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6a0ae0ed-f0de-4468-8bc7-0eef7b6b6129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d14811bc-8b5c-4429-87c3-76f66bf3ad8d",
        "cursor": {
          "ref": "52467243-f53c-4d87-a626-bfb760e9c9d6",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "5353be72-6d47-4a8d-867e-cf4a33a2d510"
        },
        "item": {
          "id": "d14811bc-8b5c-4429-87c3-76f66bf3ad8d",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "ce3caddf-43f2-4bb3-ac46-90f7cbe21599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba397d9c-8471-4eab-bed6-1683729c0ce2",
        "cursor": {
          "ref": "00e2482e-75d5-419d-bf6b-5ec444a03624",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "8a5d73ee-e03f-4873-87fd-23320a570ff9"
        },
        "item": {
          "id": "ba397d9c-8471-4eab-bed6-1683729c0ce2",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "5a37a0fa-6766-451e-b5f9-87e423673cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3467da9-9219-4138-9158-9bc8f75240af",
        "cursor": {
          "ref": "4cfb15fb-a9ec-4760-afff-e4217904858c",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "6f988edb-7f8f-4af3-9744-140c026a2324"
        },
        "item": {
          "id": "f3467da9-9219-4138-9158-9bc8f75240af",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "fb378a3c-276d-41e3-82d9-4c01b120f551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd5fb15f-b038-49bc-a86b-2ab4e15454d4",
        "cursor": {
          "ref": "3eb6a793-3119-4cf0-9352-e1ea4124d0d0",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "cb14cf41-2b74-4238-baa8-0cd91302c7bf"
        },
        "item": {
          "id": "bd5fb15f-b038-49bc-a86b-2ab4e15454d4",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "47ffff79-12d4-465f-8d1a-ce9b84b9e2b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57d5c74b-2ac5-491f-82e3-2e1fbd532971",
        "cursor": {
          "ref": "3425476c-710b-4599-8641-d83bd68ebd81",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "2cdbe6b0-04ee-4adf-a636-a9be7dac49f5"
        },
        "item": {
          "id": "57d5c74b-2ac5-491f-82e3-2e1fbd532971",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "2c1183c8-2c34-49eb-90f0-3ad35c32dcde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1657111e-d7f0-4d5d-aced-49e92c974b3c",
        "cursor": {
          "ref": "9e2448c6-8150-401b-bfc4-8cbfc9d62ec9",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f7eadb97-2682-4ae0-9527-8bf6b62cb88f"
        },
        "item": {
          "id": "1657111e-d7f0-4d5d-aced-49e92c974b3c",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "18fc0c12-9a24-4154-a1ef-ae76c10f4e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b15aea27-b721-41e5-b984-2615a3d1f629",
        "cursor": {
          "ref": "33a972a6-e69f-4e5f-a6b6-dcc866721443",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "6a458bd1-934a-4d39-9b3e-54c4f6b5ba36"
        },
        "item": {
          "id": "b15aea27-b721-41e5-b984-2615a3d1f629",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "23531814-d0f7-4921-89c1-66da8c8276d2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e6c03c-b4df-4e63-9919-4d7780bfd78d",
        "cursor": {
          "ref": "7605ae55-9943-4bce-9f6e-d083ff34be13",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "47b8bb3f-387d-46c7-9fca-93a3a22041d0"
        },
        "item": {
          "id": "13e6c03c-b4df-4e63-9919-4d7780bfd78d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f4308cc9-2ffc-4471-9c38-66b414db4901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f612bd-ea94-4aa4-8f82-d39abd576e68",
        "cursor": {
          "ref": "8f661f0a-256b-4234-b508-d3abd1e87193",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "580543b5-376e-4649-ab3b-d2eb6250fa32"
        },
        "item": {
          "id": "51f612bd-ea94-4aa4-8f82-d39abd576e68",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "3b60d9c4-b4a3-4143-ad49-a44b87b3938a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4555381f-a6e3-4a04-a0f9-7efb17d7775b",
        "cursor": {
          "ref": "d3e1a412-8154-47ef-8dfe-b22ce9dc816d",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e62f26ed-a2cc-4a8f-9195-40216b216d24"
        },
        "item": {
          "id": "4555381f-a6e3-4a04-a0f9-7efb17d7775b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "bbbeaf84-ea4d-436b-9c14-1efba5ef6d08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ebd328f-fcc0-4375-8071-caef467648ac",
        "cursor": {
          "ref": "efec9948-f168-4892-a490-99cf1c7a6151",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "da07d7b1-9367-4654-a496-ab2957237f7c"
        },
        "item": {
          "id": "4ebd328f-fcc0-4375-8071-caef467648ac",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "f0d367d6-2198-4ffa-b791-c8b3066bbf8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bae3007-f12a-40f7-beee-b9e26688796f",
        "cursor": {
          "ref": "7ecf867c-6e42-4934-8027-e11f7c93478f",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "cbef1db2-d4b3-43bb-99eb-60e5645ed879"
        },
        "item": {
          "id": "1bae3007-f12a-40f7-beee-b9e26688796f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "411590a2-ee0a-467e-b32a-18ca01541cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5588d0-01c6-4661-9013-c4938e77fa9f",
        "cursor": {
          "ref": "17990fe1-56db-40ac-b117-d43be18f8353",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "212e36c4-f578-4042-9f5e-856f34b31ea2"
        },
        "item": {
          "id": "fc5588d0-01c6-4661-9013-c4938e77fa9f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "5e1df5d6-40bf-4ddd-a852-36aa91d72f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5becce1-338e-4773-a0d2-88c82ebede09",
        "cursor": {
          "ref": "0e7f16dc-46a1-4f9a-8a4e-510e36ba6e61",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "48a73dc4-ad2b-4cd2-8dec-129a894ce1a6"
        },
        "item": {
          "id": "b5becce1-338e-4773-a0d2-88c82ebede09",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "3987187d-6850-49c1-8981-30cd96213452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab4b55d-f5ca-4ee3-bbac-97ca5a95e03f",
        "cursor": {
          "ref": "205432a0-d96e-45fe-87fb-8781cf7f6ac5",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "6a89dca4-a1fc-4cc9-ac73-be6a9c4b413a"
        },
        "item": {
          "id": "7ab4b55d-f5ca-4ee3-bbac-97ca5a95e03f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f15a6ab0-36e9-484c-ae4c-417317605261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03127db0-66d3-4215-b6c5-a4386880c67f",
        "cursor": {
          "ref": "d1c14d0a-e984-4d30-aaf1-d5712ea14b35",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e3c36a4e-66ea-4a9f-8eea-3d0025728f4f"
        },
        "item": {
          "id": "03127db0-66d3-4215-b6c5-a4386880c67f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9ecffe57-132a-4451-a958-9c1ec437fc46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "658ef9e5-cab3-4eeb-b015-983cb8b852ba",
        "cursor": {
          "ref": "26f52714-bbb3-426c-befa-8ee569b98105",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "2f647770-8411-43f5-8aac-97448b3bae47"
        },
        "item": {
          "id": "658ef9e5-cab3-4eeb-b015-983cb8b852ba",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "cf00be1f-f274-4def-a6df-8e8e8d335410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c346b8c8-edab-4af9-8c47-7f65c9762bca",
        "cursor": {
          "ref": "6bee34d6-ca8a-4ba2-aca3-6062f9c4c533",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "14030fac-33b9-404b-83c3-7a196f63a2eb"
        },
        "item": {
          "id": "c346b8c8-edab-4af9-8c47-7f65c9762bca",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e8a8877e-aa10-4f5f-a0bf-29e2e932babe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86041934-0c34-4974-9cdd-41c6ad11f1df",
        "cursor": {
          "ref": "d0030bf2-e333-4035-bd50-50849481aec0",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "1ded5c0a-1011-47b6-90fa-75524c19cb13"
        },
        "item": {
          "id": "86041934-0c34-4974-9cdd-41c6ad11f1df",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "f436e0fd-0191-43e9-b277-603860e3901f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "193e73ea-d7bb-4d97-b944-642f733bcb2f",
        "cursor": {
          "ref": "b14df5f9-01da-4da0-aa1b-1b293107bf16",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e91deedf-b0d6-41c7-94f4-7c049a0e70de"
        },
        "item": {
          "id": "193e73ea-d7bb-4d97-b944-642f733bcb2f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d445a467-5088-47b6-a4d7-a82651d7dbcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2006f745-1ca1-4ead-a9db-1b740428ef63",
        "cursor": {
          "ref": "cee656b7-a559-4494-b980-31e9aee9873a",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "1c475cc1-c1da-4ca6-8ca8-57582307aef0"
        },
        "item": {
          "id": "2006f745-1ca1-4ead-a9db-1b740428ef63",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "2bf34304-9219-4114-b49f-7aeb39bdb234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2fb1920-8bbe-4848-9c3a-ff359ad87288",
        "cursor": {
          "ref": "d6096a6e-be01-4cc9-85c0-545d4a9e00ce",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "434bd988-7cae-4e88-a530-5e28287aac39"
        },
        "item": {
          "id": "e2fb1920-8bbe-4848-9c3a-ff359ad87288",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "1f7ee8e5-e98b-466b-854a-884a5c4dd309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccfb8dd1-afbb-4371-8c1b-21b964a47353",
        "cursor": {
          "ref": "79bf9667-e6ff-4c0d-b20b-e75533df4b9a",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "3d1c25b9-fab9-4a60-aa20-59f8e569f778"
        },
        "item": {
          "id": "ccfb8dd1-afbb-4371-8c1b-21b964a47353",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5c18c276-a9b6-42f2-b01c-57409b1a0d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "769852a3-84db-42e1-9545-6b6139001760",
        "cursor": {
          "ref": "0baa5260-0034-47f5-ad3b-2858e1539dc3",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "47eb9c2a-5e11-4f59-9cf3-3b3f52350282"
        },
        "item": {
          "id": "769852a3-84db-42e1-9545-6b6139001760",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1d6a87ec-8753-4b93-baa5-cb022a057673",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "48d3bcc4-fed4-41cb-8601-84143cbe8cad",
        "cursor": {
          "ref": "bc85f5f1-edff-4db3-9269-4ec992eb778e",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c49c2ec7-9def-4105-9207-a377c9ddd9f7"
        },
        "item": {
          "id": "48d3bcc4-fed4-41cb-8601-84143cbe8cad",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a6457d31-d6b4-4922-8141-ddebd4458d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8baa99f6-bdd3-4840-abce-c1fc1c27fcec",
        "cursor": {
          "ref": "70a8f5d5-5d1b-4790-bf5d-8ea051e957a1",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "32164e4f-beec-4b1f-b6a4-0436f57ea06a"
        },
        "item": {
          "id": "8baa99f6-bdd3-4840-abce-c1fc1c27fcec",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "4035ef7d-04cc-471f-ad17-3bc8017f5c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e41c6b1-4627-41f0-a82d-78e0e8d7e656",
        "cursor": {
          "ref": "43efd0b5-cc38-440e-b9fe-07f360626f01",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "512d686e-d141-446d-b100-9362982db454"
        },
        "item": {
          "id": "0e41c6b1-4627-41f0-a82d-78e0e8d7e656",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "8d8e8304-bee0-46d4-a5d8-cbc2e89868c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70c27bc4-3a63-4d3d-973a-6077e2f01b85",
        "cursor": {
          "ref": "cd96789c-7868-42fa-b617-34daf897d5c9",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "53f43e30-5020-4392-94bd-fb48165f7583"
        },
        "item": {
          "id": "70c27bc4-3a63-4d3d-973a-6077e2f01b85",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b904332b-ea05-4290-9df9-ac8d3e9e9ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59a53fd1-93a5-42eb-9962-16a48bec090f",
        "cursor": {
          "ref": "3998f3ca-d135-44ea-9398-8200e4d9e88a",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "4b5a8777-6d80-4c31-8b74-c7b95bd0a445"
        },
        "item": {
          "id": "59a53fd1-93a5-42eb-9962-16a48bec090f",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "c65e093d-6e34-4870-b60f-70292d6d072e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d287cf-bdd8-4daa-bc01-f600623fc755",
        "cursor": {
          "ref": "188981dd-ca1c-46f6-9a69-af8dc8695166",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "fd4b3e04-8354-4038-83ef-4fc5b3429310"
        },
        "item": {
          "id": "44d287cf-bdd8-4daa-bc01-f600623fc755",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "5a52713e-ec01-47f5-ac86-ef2c0514d965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd83abf-b367-4793-931c-4f2a6fff89d6",
        "cursor": {
          "ref": "d1056a75-ab8a-4610-b41f-d9c89f068f71",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "2d447b0f-2656-43b6-b9be-7609952cfa55"
        },
        "item": {
          "id": "0cd83abf-b367-4793-931c-4f2a6fff89d6",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "8025dc04-ceb2-4213-b79c-152c4bd63a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "588da59c-1db0-4891-977a-e04f175fc5af",
        "cursor": {
          "ref": "fbf8fed9-196d-4de6-a40b-8a5e01147917",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "de278a62-95c3-42ef-918d-0136932652be"
        },
        "item": {
          "id": "588da59c-1db0-4891-977a-e04f175fc5af",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c76595c3-40c5-4fa1-9c3f-6751487f5a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d2fb59c-28b5-4ca7-b6f5-49c70d0f1cbf",
        "cursor": {
          "ref": "e6c2b28f-d21b-4bc0-8a6d-44d2b59fd2f5",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "237706e4-4bd8-49bc-a669-b92272eebf9e"
        },
        "item": {
          "id": "6d2fb59c-28b5-4ca7-b6f5-49c70d0f1cbf",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "0afd3978-1416-405e-bec8-f66072462485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c6e2103-6e27-4e7f-838e-4220955e32d8",
        "cursor": {
          "ref": "d07b8f96-21da-4de6-9360-b738c2d5481f",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7f40101a-7726-4d9b-b897-a89b5ebe0ba1"
        },
        "item": {
          "id": "0c6e2103-6e27-4e7f-838e-4220955e32d8",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ce4abd53-6361-43f5-bbf4-0c7afdd3f1f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6150dea-1d5f-496a-84a2-2f40b5de8169",
        "cursor": {
          "ref": "e4a75575-518e-4382-9be7-9db46f69c08d",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "83a7a826-f169-46d1-a082-b96dd1bb1cd6"
        },
        "item": {
          "id": "c6150dea-1d5f-496a-84a2-2f40b5de8169",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "096a0668-43b5-451e-be0e-1029253cf07c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6e085e-7431-4671-8192-402f42a3c152",
        "cursor": {
          "ref": "83b14ac8-6459-4d28-a8f9-0898672f1957",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2a826902-c74e-4b09-94ce-5546ba59d294"
        },
        "item": {
          "id": "ff6e085e-7431-4671-8192-402f42a3c152",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "4156dd08-f537-44c9-8cfd-dd0b8b2709d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb63b317-4376-4c2d-9600-b86bbafc4d4d",
        "cursor": {
          "ref": "abbcffd5-fd2d-4746-837f-2e465ebb1de3",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7746e19d-a121-46b6-b7b6-bc4081b4dfe8"
        },
        "item": {
          "id": "eb63b317-4376-4c2d-9600-b86bbafc4d4d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "2938cc07-46b2-4a66-af39-dd4a843faba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "284cc25c-d283-4bfd-a80b-c99bfa1adae0",
        "cursor": {
          "ref": "eeead44b-7da9-4914-902a-f846cc872287",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "de84fd82-01a5-4925-aa7c-9426f4a82fe1"
        },
        "item": {
          "id": "284cc25c-d283-4bfd-a80b-c99bfa1adae0",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "962b721c-ac60-4066-aa8b-4a253fad8d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3503e74-dbd6-4206-80df-8b2f262cd767",
        "cursor": {
          "ref": "e1fe378e-44ce-4188-aab2-a7ef72045974",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "5a546258-fe1c-49fb-8641-68a5e42e5c0a"
        },
        "item": {
          "id": "e3503e74-dbd6-4206-80df-8b2f262cd767",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "9c570b96-80ab-4930-9151-df70169cf625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbef0694-f7e3-4a47-b471-23a8d974a381",
        "cursor": {
          "ref": "504f55be-e86c-4a8e-bb04-3f6aa8ee1817",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d6e942aa-66a7-420e-850d-2318483e5d50"
        },
        "item": {
          "id": "bbef0694-f7e3-4a47-b471-23a8d974a381",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a0715e02-4ecd-4222-8481-1ff89697332a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc79567-8071-496d-87ec-f1a39cfcd240",
        "cursor": {
          "ref": "5199e77b-1295-4499-89c3-4d72b4d5aef5",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "41389168-a9e9-4ce2-b54b-bfe71250bcde"
        },
        "item": {
          "id": "0bc79567-8071-496d-87ec-f1a39cfcd240",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e814140e-246f-48f4-bf6b-cad6f3029117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca8a8402-5384-403f-bccf-22a05674a39f",
        "cursor": {
          "ref": "ffbb3dd7-4fbf-434b-9b44-a4cd8a9b456c",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "e103a432-82c1-44ba-9eb1-46f2c106f3d7"
        },
        "item": {
          "id": "ca8a8402-5384-403f-bccf-22a05674a39f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e9463158-9075-4bf4-911a-6bd4a887297a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "305f48be-13a0-47ec-9802-9d02019f1ed1",
        "cursor": {
          "ref": "3cf85c84-4a6d-4626-9056-251902c0579b",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f3f9e9e0-50dd-4067-a2a5-4bf2953c75c3"
        },
        "item": {
          "id": "305f48be-13a0-47ec-9802-9d02019f1ed1",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d687c669-1a74-4d8b-9423-94c4650c7cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce161b75-de50-4090-a612-7dbdbab16c18",
        "cursor": {
          "ref": "0606b759-acab-4122-9e71-d08ea2513ea3",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "7db2eeba-44f9-412b-b044-c1d594f85440"
        },
        "item": {
          "id": "ce161b75-de50-4090-a612-7dbdbab16c18",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "61882789-64ad-4650-a031-324655666131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d3deb7-4592-411f-897d-593b71b9fe92",
        "cursor": {
          "ref": "c640fa83-bfea-436f-847c-df6cc401056e",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "11de44c5-72e8-4db2-b829-85424e19425d"
        },
        "item": {
          "id": "d0d3deb7-4592-411f-897d-593b71b9fe92",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "fb90ccd5-f94f-48d2-95b0-898ed88869a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2477ccae-c4c8-4c2d-b8c3-62867bdfdbdf",
        "cursor": {
          "ref": "b59c60f2-0f16-4a8f-bdd3-58aaec86d8ad",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "31881736-ed0c-46a3-a5c6-3b4e0ed327c7"
        },
        "item": {
          "id": "2477ccae-c4c8-4c2d-b8c3-62867bdfdbdf",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ba2ddb8d-c5c5-4e33-a9a5-5e70b322a833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf46460-e538-44aa-9e34-bf1e381cc277",
        "cursor": {
          "ref": "43ec6a77-4a02-41b7-8922-6e146b227b81",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "998416de-8295-41a4-a007-0f443e83bd8e"
        },
        "item": {
          "id": "7bf46460-e538-44aa-9e34-bf1e381cc277",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "57f518ee-0ff5-4bce-b3c6-81d123259fb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fc2fa72-ad90-4d2c-80c7-341de435ee8a",
        "cursor": {
          "ref": "d3f747a3-8d0d-4abf-a9aa-37c17ec0760d",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "9a239e7c-f029-420e-8317-7fdf648119eb"
        },
        "item": {
          "id": "4fc2fa72-ad90-4d2c-80c7-341de435ee8a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b34e6cb7-d283-4ca8-b287-aef7efe5ab3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c21419f5-1ff7-4a56-9d1b-1326ec62042f",
        "cursor": {
          "ref": "90f16ebd-ac13-4b3a-b671-e2dbfb13d56b",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c0d9b5d5-2539-4851-81f8-e424f53e4877"
        },
        "item": {
          "id": "c21419f5-1ff7-4a56-9d1b-1326ec62042f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "28d98b0f-0bd3-4bcf-bb82-62bd555fe824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9119d5b-a62a-4099-b4e3-442c401f0774",
        "cursor": {
          "ref": "c23032a7-677d-4df3-9603-6070770db924",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d691cd5d-ab8f-43d3-85ac-165f72a2a7be"
        },
        "item": {
          "id": "f9119d5b-a62a-4099-b4e3-442c401f0774",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "f529f00c-f421-4d6b-acfb-fa1915802219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d90726-4b6d-45ec-9fac-44d3f0121fd8",
        "cursor": {
          "ref": "8317d5e6-a95a-4ecc-9a0d-cc09006e8490",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "1360f85a-0a68-46ba-900f-438dc4c898b7"
        },
        "item": {
          "id": "63d90726-4b6d-45ec-9fac-44d3f0121fd8",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b218d1d0-a51f-41f9-a2a7-860594919eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dde03a1-35e1-4b58-bedd-b158298e453d",
        "cursor": {
          "ref": "5d922214-ea53-4ad6-8390-86dea8d094ae",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "bfd54615-180a-4ba4-b294-6729f710e546"
        },
        "item": {
          "id": "4dde03a1-35e1-4b58-bedd-b158298e453d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "1d571801-01fc-4e4a-a1d7-d1020d0805dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd0b6b5d-1384-4999-b61f-725144c3d7ba",
        "cursor": {
          "ref": "0caabc85-2626-42f6-b3be-ac014d693dc7",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "6817c69a-186e-4397-8e5f-b2c15c0ab908"
        },
        "item": {
          "id": "dd0b6b5d-1384-4999-b61f-725144c3d7ba",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a754ee7e-e9dc-4992-90a4-bbd51b86bc9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "858f8607-7500-44a4-96e7-a8533b8d9c60",
        "cursor": {
          "ref": "6ba39dc7-7424-4beb-a845-19c1f1eec9bd",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "7ac0c74c-7f17-4832-9728-d139156d6977"
        },
        "item": {
          "id": "858f8607-7500-44a4-96e7-a8533b8d9c60",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "bb9ef4ea-1a6c-49c4-99ea-f398e547f1f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab60d61f-b3df-4053-b0cb-1c5851f6d595",
        "cursor": {
          "ref": "7f7d802e-fcec-46d3-9cc5-d372f84d267d",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e467cd27-34e4-4913-ad75-b87468b4d4c0"
        },
        "item": {
          "id": "ab60d61f-b3df-4053-b0cb-1c5851f6d595",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d2c51972-0eab-4593-a90e-6871ee4ced7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd0d00f4-d9d9-4ca4-9a53-b655d11631e6",
        "cursor": {
          "ref": "7a3b179a-652d-4847-9c77-fe01d3f11d75",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "de2ba198-92e3-4d66-8872-7909d907c601"
        },
        "item": {
          "id": "fd0d00f4-d9d9-4ca4-9a53-b655d11631e6",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a1a96a16-a514-4090-8ff4-959626314b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3326b5b-d898-4fcb-97b4-7e1a628236c0",
        "cursor": {
          "ref": "2648a9a3-5616-4a7d-aacd-7eb7ab09ed04",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "dd525391-b7c4-4d5d-a62a-df46802057df"
        },
        "item": {
          "id": "d3326b5b-d898-4fcb-97b4-7e1a628236c0",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "26b071a5-a9ee-43d2-bb29-4bbaf0425c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf4c215-c463-41f2-924a-f7a7af9650e1",
        "cursor": {
          "ref": "700d32f3-b452-4f5a-9618-1965bab28ccc",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "390b0bec-3b36-475e-b9e1-1aa08c8431f3"
        },
        "item": {
          "id": "edf4c215-c463-41f2-924a-f7a7af9650e1",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "53e98ae4-4df9-48b8-b876-fb80f8075bb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e642e1f-779a-4cf0-a115-02c30b1600cc",
        "cursor": {
          "ref": "17460cab-cd50-4ca0-821a-1538500b8070",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "66a89c93-6497-4a1d-aedd-2350ab233c3e"
        },
        "item": {
          "id": "4e642e1f-779a-4cf0-a115-02c30b1600cc",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "40c74932-bd9f-47fe-ae0b-347a4e2b32e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f28649c-21ff-4e68-b789-10b0623180f8",
        "cursor": {
          "ref": "b951e445-cd6b-4170-9b28-e6ae3e985ff4",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "5acabbac-8341-4b84-8dd5-157bdb0775f6"
        },
        "item": {
          "id": "9f28649c-21ff-4e68-b789-10b0623180f8",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "de2e27cd-3089-430a-8a30-cb4b617aa0aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add23674-b5c2-45c4-9d72-1a74d0e1bb92",
        "cursor": {
          "ref": "16f1cd6e-c836-45c9-aeb5-f55aa333ec1d",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "cb3431ad-e426-4276-a2f5-ac0555021f2d"
        },
        "item": {
          "id": "add23674-b5c2-45c4-9d72-1a74d0e1bb92",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "790b5518-b38c-4efa-9830-0caa4584ece0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "454bb413-faf3-4a50-b985-100c0072fdd7",
        "cursor": {
          "ref": "9560b938-204d-468c-84a5-e569295992b0",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "cd26f96c-1949-493b-ab7f-d00e7ccce0ee"
        },
        "item": {
          "id": "454bb413-faf3-4a50-b985-100c0072fdd7",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "76d9e2de-dc0d-454d-bdd5-7760b075f5c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d5a45b-60d5-4604-8a6a-e9917b6914b7",
        "cursor": {
          "ref": "59d95a52-87e6-4d2b-bef3-ef05d4ae13de",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "34444cc0-e3ed-4891-bf4e-9934cc877563"
        },
        "item": {
          "id": "b0d5a45b-60d5-4604-8a6a-e9917b6914b7",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7a66833f-1943-4c8a-811b-56f49822d68b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78764021-5c44-4bbd-b930-e997b4dc5e00",
        "cursor": {
          "ref": "bbef262f-2b8d-4e5d-811f-a4897d6e0f09",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "927ddb54-d203-436e-94d1-d971a9801eb4"
        },
        "item": {
          "id": "78764021-5c44-4bbd-b930-e997b4dc5e00",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "2197b2e6-bc96-45f8-90d8-26df267807c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5fee3f6-0e8d-46d5-832b-8940e1e7ed22",
        "cursor": {
          "ref": "e08f62ab-7450-464e-a74a-669d16ea59e3",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "52c17d2e-24d5-429e-b0b7-0317a4746560"
        },
        "item": {
          "id": "e5fee3f6-0e8d-46d5-832b-8940e1e7ed22",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f494801d-83a5-400f-8905-f5453ec4f62e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4213c2a7-803d-407d-ad17-ff95aac37e3a",
        "cursor": {
          "ref": "7b4f4d70-4bc8-405a-bcb6-8010668c8d4e",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "29e397a6-46c6-4dba-bbee-4aeb499023a0"
        },
        "item": {
          "id": "4213c2a7-803d-407d-ad17-ff95aac37e3a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "56f0a4ab-4e57-4666-b117-8a71234cbc3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6089aed-8a94-4c70-8997-26a687f9d5d8",
        "cursor": {
          "ref": "78e0cbd4-5374-458b-a259-c21e16d51923",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a9fc033f-171c-4b07-991b-17e6b10b0ebe"
        },
        "item": {
          "id": "a6089aed-8a94-4c70-8997-26a687f9d5d8",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "79fb5e1f-376c-4019-9832-3c4e420ea94c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb40ca69-6be7-466f-b1e3-da918e325bb0",
        "cursor": {
          "ref": "1a08d97d-0e45-4196-963c-20a2ab778568",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "52e04e4a-62d7-4fea-bc09-4882f2868bd5"
        },
        "item": {
          "id": "fb40ca69-6be7-466f-b1e3-da918e325bb0",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "fd18770c-9a59-44f3-9c72-f78608add35b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a87eaf70-9288-4b8d-b9fc-78489630d5cd",
        "cursor": {
          "ref": "52c92d2c-deed-44e4-bac5-d5bf32199d68",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "97390805-df95-419a-8366-e6d922cb8e53"
        },
        "item": {
          "id": "a87eaf70-9288-4b8d-b9fc-78489630d5cd",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "0b3fff5a-dc53-45b1-9850-07ecfe535927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a9045b3-6538-4f51-a1c4-cc3fa7f6d581",
        "cursor": {
          "ref": "1770b62e-941b-4690-9f89-99faacedcc3e",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "a260c5f5-e7c5-4e65-8680-f402607c7b62"
        },
        "item": {
          "id": "0a9045b3-6538-4f51-a1c4-cc3fa7f6d581",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "1af3d007-a6f0-4c08-b1b5-93cd2fef3286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd26b97b-3063-42e7-a10a-b15058822986",
        "cursor": {
          "ref": "e3aca6be-d135-42c1-9dd8-994218eb31a4",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "cb85cf8d-82cb-47bf-9a77-396a64d80014"
        },
        "item": {
          "id": "cd26b97b-3063-42e7-a10a-b15058822986",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "f10503a4-75c7-44be-8e84-86f33d0ff9ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c04a576-b8b4-46af-a45c-469547078371",
        "cursor": {
          "ref": "3797cf6a-260a-4d50-8679-af81b44f285b",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b4d1e7fb-fa97-4ee8-add2-9d4c7370ad2d"
        },
        "item": {
          "id": "4c04a576-b8b4-46af-a45c-469547078371",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "0e2de26e-396d-4a9f-b9a0-5451432b3193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5760e95e-52ce-4c8b-84d4-f2fc0c74fa33",
        "cursor": {
          "ref": "65d4bb83-9c92-4610-99bb-7d8c54ffbbc1",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "8646cd60-9690-428d-819c-1354963c672f"
        },
        "item": {
          "id": "5760e95e-52ce-4c8b-84d4-f2fc0c74fa33",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "12fa83af-6e2a-4033-b8d2-bb448c2050c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb4aced6-f3f7-49c1-9146-9d5218b7b726",
        "cursor": {
          "ref": "4920c2c7-c10c-4a7b-93fe-cdb86427a38d",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8d769e2d-4781-477c-a5a6-13681e1031e8"
        },
        "item": {
          "id": "fb4aced6-f3f7-49c1-9146-9d5218b7b726",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "841c905a-67b7-4a91-943b-acb55826785f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd5158fd-2e93-426f-9db2-78d6bb823c7e",
        "cursor": {
          "ref": "76c0790c-b3a8-4577-914e-7f2ec64270f9",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "9fd4c73f-6509-4444-9230-f08ac921b7cc"
        },
        "item": {
          "id": "dd5158fd-2e93-426f-9db2-78d6bb823c7e",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8c25d36d-3908-4745-aed1-960a773abfe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b64777be-4231-446f-98f3-d7d5bc02aea3",
        "cursor": {
          "ref": "c0dfb4dd-6a83-4bba-9741-f50b0670a887",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "44832467-b9d1-4409-96f5-766ac72c52fa"
        },
        "item": {
          "id": "b64777be-4231-446f-98f3-d7d5bc02aea3",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "18e75c0f-7bab-44e5-a496-d292e112c088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f3c8a4d-cdf8-4720-8ebd-7999a4a127b3",
        "cursor": {
          "ref": "dd8b5c7a-0866-4ca0-ad19-bec77d17ba7f",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f4ffcd8a-97a1-4328-a520-9029441de3e9"
        },
        "item": {
          "id": "6f3c8a4d-cdf8-4720-8ebd-7999a4a127b3",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "7cfa539d-20ba-4af2-8c01-6cc9a93ecb56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b0abbe9-7e3c-480d-a0fe-af3c88e689ab",
        "cursor": {
          "ref": "c2966ceb-6a5c-4393-9eeb-766fbe2cf93e",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f8471def-b5f7-40b9-8426-84a831436d1a"
        },
        "item": {
          "id": "9b0abbe9-7e3c-480d-a0fe-af3c88e689ab",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "ac68be92-e6b2-4d58-9307-1172eece966b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcde3bec-438e-40ce-9fe7-3e2395ab493b",
        "cursor": {
          "ref": "08d0c607-73c7-469b-9195-2f89feb44f83",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "02514607-3e51-4df2-a1b9-7e03bcaf716f"
        },
        "item": {
          "id": "bcde3bec-438e-40ce-9fe7-3e2395ab493b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "34ae9636-c9ce-49a2-b7a3-acce13fb4f28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7d4d43e-2d44-491c-b66c-0929a9e12d9f",
        "cursor": {
          "ref": "a2eff064-7750-4abc-bf4c-2815f46eebc4",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "c1c1d3d0-5e2b-4528-99bb-f4745b2abfc7"
        },
        "item": {
          "id": "c7d4d43e-2d44-491c-b66c-0929a9e12d9f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d1bc3394-6a49-411e-84bb-1f3831f35ed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "835a4401-61e1-481d-8a27-5671af5aa7b2",
        "cursor": {
          "ref": "754d0627-0e0f-4405-b75b-d62e2383291b",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "8624e9e1-8d27-434b-9bc6-1d6ec8392c10"
        },
        "item": {
          "id": "835a4401-61e1-481d-8a27-5671af5aa7b2",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "69181278-2082-4346-b0f3-adcb85bc2777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c700155e-093a-4ebb-bba9-a707e5080061",
        "cursor": {
          "ref": "b73b6052-962e-483e-acec-3744b9588861",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "676be0ff-c64a-4b4d-82cb-546a2274eaa0"
        },
        "item": {
          "id": "c700155e-093a-4ebb-bba9-a707e5080061",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "bccc25ae-2d1a-4422-8f35-6cea14997df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c481413-8309-410f-b600-b4c85c1300cb",
        "cursor": {
          "ref": "c72cfee9-07fa-46fb-9c15-fc5b81dc28f3",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "8b0034e8-d06c-418b-9a60-56ac5f428bf8"
        },
        "item": {
          "id": "3c481413-8309-410f-b600-b4c85c1300cb",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e50594eb-86e2-49a5-8452-56318d128b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d86603df-4268-485f-a27d-f9a60ca1fe80",
        "cursor": {
          "ref": "45f5363f-8b04-40cf-9006-6c3ed18dc5df",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "8f98126b-07f3-4680-a7e0-04fc826a9eb6"
        },
        "item": {
          "id": "d86603df-4268-485f-a27d-f9a60ca1fe80",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e0a16543-a2df-468f-8b7d-e0856dfa767e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d20b8d86-88d5-4737-91a6-9540780871cb",
        "cursor": {
          "ref": "273bb181-3bdd-4dd8-8140-3ddab4093da3",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "2fe8e167-6e30-4490-af82-82e1ca0543c4"
        },
        "item": {
          "id": "d20b8d86-88d5-4737-91a6-9540780871cb",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "9a7d4cdf-065d-49ba-92e9-cdf9c11cab6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "933cd396-f613-4eb4-9fd2-806c41da6705",
        "cursor": {
          "ref": "746ae5f9-5c2c-4525-918e-036136515ecc",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "5cbc5853-f9df-474a-9897-44d57cb87c7e"
        },
        "item": {
          "id": "933cd396-f613-4eb4-9fd2-806c41da6705",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "95e84dbd-a12b-4433-9762-5c1f201a4afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4942f24f-af3c-4842-b233-22155e569460",
        "cursor": {
          "ref": "83ae88b9-26ea-4ba1-b2a1-b227e2d1aae1",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "272aef2f-0707-4c0b-977f-15d2aef2af32"
        },
        "item": {
          "id": "4942f24f-af3c-4842-b233-22155e569460",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "6754af7a-2ada-4b83-bcc7-fca59a4d5a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e384356b-4497-41c1-ac02-d0dcc6aa1c98",
        "cursor": {
          "ref": "d78d723c-1088-4f00-a712-92235c1d1cdf",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "467c9c80-c1e3-4781-abc5-fc445cf598b9"
        },
        "item": {
          "id": "e384356b-4497-41c1-ac02-d0dcc6aa1c98",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "565025e3-e518-4edc-9c87-86949263df91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd7d7b94-7db3-4a5d-8a29-b0c0985091cc",
        "cursor": {
          "ref": "b4014034-68cf-439c-8793-c51475a437e6",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "4882e84b-4093-48e0-af32-8d07f966bfab"
        },
        "item": {
          "id": "fd7d7b94-7db3-4a5d-8a29-b0c0985091cc",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "9445853f-0ae9-47bd-9149-e9b36bbfbe9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33dc0fb6-5322-4f41-9c60-bddc10f47e0b",
        "cursor": {
          "ref": "d71687ab-8bba-42f3-84fc-31055a9f1563",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "7963f306-d298-4c1b-9e91-86f6e4055f57"
        },
        "item": {
          "id": "33dc0fb6-5322-4f41-9c60-bddc10f47e0b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e6245299-0d05-4d96-9e86-0cea0d5e3706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0785bc2-c6ca-4410-b1bb-5350a8cd94fe",
        "cursor": {
          "ref": "22eb683e-9366-4507-8cde-69d38e98ab53",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "972e31a6-85f5-4408-bc06-d6d443d1c42d"
        },
        "item": {
          "id": "c0785bc2-c6ca-4410-b1bb-5350a8cd94fe",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "71f924f9-1e83-45fd-bc0f-bd4b5bd4084e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a98bf3f3-9b6f-4819-87ae-8358d3804f42",
        "cursor": {
          "ref": "07024df4-922a-4bcd-9531-da48fdfa25f6",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "f2689604-1888-4640-995d-69631ddec09b"
        },
        "item": {
          "id": "a98bf3f3-9b6f-4819-87ae-8358d3804f42",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c5ccd10b-1169-4d8f-b066-ee6184e8027b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf08827f-99f4-44bf-8ab3-327a1575ba8b",
        "cursor": {
          "ref": "89b36039-6221-4f5f-a72e-d6c766cb84bb",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "17c3b477-0668-4927-bb34-f3b174aa7baf"
        },
        "item": {
          "id": "bf08827f-99f4-44bf-8ab3-327a1575ba8b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "76f1de9f-c89d-4620-a64d-28113afc4834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f444d6-8443-4c4c-8a46-29537d11f75c",
        "cursor": {
          "ref": "4296f810-4f03-462a-b657-a31991521a30",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "ec9dd74b-883c-42c6-ad4f-4b104a7da6bb"
        },
        "item": {
          "id": "83f444d6-8443-4c4c-8a46-29537d11f75c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7fabc0df-564d-4532-9ad5-4b4508fecd3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d63722-f77e-4f48-a808-0c272b358027",
        "cursor": {
          "ref": "69579052-8752-432a-ad35-22bee739cb29",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "de7a85b0-32d1-4d72-ad89-9207ea9ec8c6"
        },
        "item": {
          "id": "37d63722-f77e-4f48-a808-0c272b358027",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "45d30aa0-19bc-4a6f-ae6a-26d675165d2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80577f9f-9b1a-4f6a-a476-8dfa617140b6",
        "cursor": {
          "ref": "51ed090f-d943-4e37-99ef-e96f1433b6c6",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "57690dc5-ae09-499f-9c96-af7d1f1427ea"
        },
        "item": {
          "id": "80577f9f-9b1a-4f6a-a476-8dfa617140b6",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2b8a7234-0024-4adf-8197-de8262903720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88e8a7da-5bb3-4bd1-9c92-b3a39195fc2c",
        "cursor": {
          "ref": "187fca9d-e328-42db-a72c-0511c430760c",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "d8e8e983-34bd-4eab-97c8-3460f43be90f"
        },
        "item": {
          "id": "88e8a7da-5bb3-4bd1-9c92-b3a39195fc2c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a49335bf-a28f-4bc3-8c30-15f8d9ae8f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf2529eb-bae2-431f-8ca8-bc5eb7c34020",
        "cursor": {
          "ref": "e254befa-e9b7-46ce-91cb-0209af659c0b",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "de992352-a20c-4594-b560-205421480cbd"
        },
        "item": {
          "id": "bf2529eb-bae2-431f-8ca8-bc5eb7c34020",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "4f70e10c-0ccd-4fe5-8119-ba143b93b3bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2bb1c1b-ef3f-42d9-8fbc-f119fc4305e7",
        "cursor": {
          "ref": "1d339048-6bbb-487c-a500-ce80a9053bd0",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "c08a06da-9bfb-4e12-a0d2-723d1aa0424b"
        },
        "item": {
          "id": "a2bb1c1b-ef3f-42d9-8fbc-f119fc4305e7",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "edf37f19-0931-4be7-b7bd-ebe034aa86c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f53fd3-d93f-403d-a126-8ff3dedff508",
        "cursor": {
          "ref": "9a591054-bac6-4a54-abc5-c65f83c6406b",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "c64bdf92-9589-4ca6-b6eb-56cc16e1cf06"
        },
        "item": {
          "id": "50f53fd3-d93f-403d-a126-8ff3dedff508",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "7d78ceb2-7b19-49f5-9d15-f4057f166f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daeedb7b-7061-495a-ad5e-3bf5cb13dd3f",
        "cursor": {
          "ref": "2e8de393-8f01-45b2-a623-64fa3cb08af5",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "72d9cc3c-4305-4c85-99fd-3163e67fd711"
        },
        "item": {
          "id": "daeedb7b-7061-495a-ad5e-3bf5cb13dd3f",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1c09f7f3-6eec-42ae-94b6-38fd42fa8056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ec4edd-b849-4d63-b25f-01ddc6533879",
        "cursor": {
          "ref": "4c2b6009-9333-4c15-b2b0-79296dbddc96",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "dcbacb0b-ebe8-4e5f-8328-ba37da60439b"
        },
        "item": {
          "id": "99ec4edd-b849-4d63-b25f-01ddc6533879",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "1cd90b48-6b9b-4c64-9617-56c2b1d14a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57731535-4c19-4138-b886-6481c340d144",
        "cursor": {
          "ref": "da71b699-99e7-4b91-907b-b74d644887a0",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "b22bd880-84a8-4100-aafa-6dcb77e061bb"
        },
        "item": {
          "id": "57731535-4c19-4138-b886-6481c340d144",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "80d38e38-7a00-4dcd-907f-90c2f26bdb70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2854a816-21ad-48b7-9b58-7b9543eacf89",
        "cursor": {
          "ref": "42a9a3b0-1999-4e20-bd31-fd6f9051c5c3",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "4a5ef765-f427-46b5-b9aa-1740cade9284"
        },
        "item": {
          "id": "2854a816-21ad-48b7-9b58-7b9543eacf89",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ea263688-ca27-4f6e-905a-0b219e115637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c166e09e-80de-479e-b698-1bbe9ecfd4e6",
        "cursor": {
          "ref": "5de6dd16-1340-4a8c-961b-1e74566e9d67",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "e32d84b9-825e-4d95-bef1-63907edb96cf"
        },
        "item": {
          "id": "c166e09e-80de-479e-b698-1bbe9ecfd4e6",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c083282a-a6ca-442b-9d80-7f46bb91b653",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "237d971c-6e18-480f-8dba-316085cc2c01",
        "cursor": {
          "ref": "b5cd4dc2-2f25-49aa-825b-32871a4abe30",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "49e06ba3-4651-4efe-9883-dc6e283bda1f"
        },
        "item": {
          "id": "237d971c-6e18-480f-8dba-316085cc2c01",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "2fea63f9-eeda-4b46-924c-8c61497ceb46",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a22108-2eb0-43c6-9af2-89c7855f4f15",
        "cursor": {
          "ref": "af9cb307-73ae-436e-9131-9d88f984f9bb",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "bbd0c869-de23-49a3-b4e0-e2eb65ad74db"
        },
        "item": {
          "id": "d3a22108-2eb0-43c6-9af2-89c7855f4f15",
          "name": "credentials_verify"
        },
        "response": {
          "id": "780f33b7-9487-4015-8b63-6053af9e9b74",
          "status": "OK",
          "code": 200,
          "responseTime": 2633,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced71c10-a202-4062-804a-8119d3705c06",
        "cursor": {
          "ref": "887a8700-0639-4eab-a154-5987c9ffb422",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "be57f93c-5915-4d8f-8c7b-9b1b10a6e5b3"
        },
        "item": {
          "id": "ced71c10-a202-4062-804a-8119d3705c06",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "42059ec4-56b5-4d79-87de-969138781a46",
          "status": "OK",
          "code": 200,
          "responseTime": 2454,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a4b0eba-23f6-4354-bd81-b8918265298e",
        "cursor": {
          "ref": "6ae8e20e-ac8f-46a2-a619-4b0f421d2dfe",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "93cc9168-5a66-412c-a18d-6b13b32cd4ca"
        },
        "item": {
          "id": "0a4b0eba-23f6-4354-bd81-b8918265298e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "baee0c05-f8b6-4166-83f1-a52f488aa0bc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a4b0eba-23f6-4354-bd81-b8918265298e",
        "cursor": {
          "ref": "6ae8e20e-ac8f-46a2-a619-4b0f421d2dfe",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "93cc9168-5a66-412c-a18d-6b13b32cd4ca"
        },
        "item": {
          "id": "0a4b0eba-23f6-4354-bd81-b8918265298e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "baee0c05-f8b6-4166-83f1-a52f488aa0bc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac581e3-1241-4cb8-b572-dd94ec299cb4",
        "cursor": {
          "ref": "050ba807-5fa9-4d9e-96cc-5cedd2b1fe9d",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "85291e13-abfc-4ac9-a490-f4c939d7e63b"
        },
        "item": {
          "id": "9ac581e3-1241-4cb8-b572-dd94ec299cb4",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "de006de9-ecb5-4930-b63c-92bb8f69d98b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce26a031-946b-4ef2-94eb-b3d161deefbf",
        "cursor": {
          "ref": "a8f9436a-20da-4540-9a0f-8a691bbd32ab",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "40d2db56-48e6-4e9f-b583-014eba521a5a"
        },
        "item": {
          "id": "ce26a031-946b-4ef2-94eb-b3d161deefbf",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3787bf2a-1dd1-404b-917e-fcba20a00026",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}