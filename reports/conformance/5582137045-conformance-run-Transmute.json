{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f446646a-78b8-40c5-9f56-036c9d88caf1",
        "name": "Clear Cache",
        "item": [
          {
            "id": "295c4876-9fa9-4f23-b8a2-e9ced12014fc",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b0052ab2-2d82-4785-8dd0-0854494f5171",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f59499f5-6706-4d9d-a40c-59ac926d9bdf"
                }
              }
            ]
          },
          {
            "id": "447f56fe-15c6-46de-b597-287947214ca7",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "948244a8-9032-49ff-aca4-33b5d6111ab6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7ddf5341-f654-49bb-94d7-60443f24d095"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "cd609925-40ad-47f8-b25a-fc03f82348ef",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "968f1566-9353-4326-9104-7b37cee6be70",
            "name": "Positive Testing",
            "item": [
              {
                "id": "91145d00-401e-4191-82dc-001e57d9c622",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "21dc0569-0b54-4b26-8997-7e851b4e3460",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e949fa3d-19d7-4e00-afc4-bcd640f8b468"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9472ed98-06ee-42dd-b3f1-9305d5f25f0b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "89301eab-2171-43c4-add1-e67a7d81ebe7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c0837dc6-0b70-447c-957f-62f750f480ba",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9c415769-940d-4cd1-a08d-3d968ec93061"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "78f26134-2609-4967-b8a9-14a707a6cdbf",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "95d6c37a-5087-434b-b7f1-059175f27133"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c07a244a-e80d-4b94-a43b-d0ebce5963a5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0afa775b-5413-4fad-ba80-ed2c1f84761c"
            }
          }
        ]
      },
      {
        "id": "6a9c2046-5579-420f-83a3-a3f6c5e0662b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "88c440e2-990a-413e-a217-9ab817ccac7c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0459f02e-e212-434f-ba7c-9373302ba836",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ca4bbf66-ed4d-4486-86d0-a7976a0f8ad2",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7002a106-3335-4590-a074-e9124b91eef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33e4f322-62a5-4a65-9660-6efbd89f57ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba419e80-c8a0-4dab-ba15-3acb654ce5c1",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33de5ac8-1c09-4ef1-a467-c67224fbbd6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fdc821db-71ab-4036-85df-2171ebd2f0c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c397b5dd-8516-4103-b06f-e5b4cbae21c4",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "675af059-fe94-43aa-b655-3de2f314412c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "61eaf792-1a18-4c1c-9aa0-39c3d97e1146"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "08b9dfe0-82db-40b6-aff4-362c7da82e22",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "18083d8b-3747-46f5-b9b0-e823b39c580d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aeeb4cf-e443-4b8b-a3b8-b7fb05ac9c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cf5aaf5c-a221-4514-b032-a2180b738524"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb74c5f2-d33b-4083-8aa9-126b3332e6a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "649044fd-533c-4644-aabe-09248b40e29e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d4340894-5fc8-4cbc-8efd-dfa25a0b76ce",
            "name": "Positive Testing",
            "item": [
              {
                "id": "548ddc16-b689-49a8-ada8-79aa669dd0eb",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb10d747-76c8-4d5f-aa68-8f658016642b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "bdcd081d-d4d1-4afb-8c45-b168576ddc80"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "71e1af77-0647-4a6b-a439-d56d330d13d6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "66139fd6-47b2-498f-836a-08081025a616"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f2cc4684-2fd2-4067-be42-f143534499a0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "487dfa30-6ea9-4242-af14-bd14b65a0967"
            }
          }
        ]
      },
      {
        "id": "b7e92190-59f4-4a50-9887-12cbab3431cf",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "cd501929-6763-4ea0-b866-f571b7ba6ef8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a82cd4f0-92ee-40c3-b1d5-3b0775e9e66f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "70f9276c-d209-4b58-8b0a-5e1c99c73b9c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "137aa84c-b69e-490e-87ad-b8799b782127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1953b321-a939-462a-a927-0bf009578b13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ccd472-ea92-40eb-ad1f-87bb81f502b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1148878f-d0de-4803-ab16-358f2b2de55b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6760f7-4143-443f-9aea-304b01fa5307",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2715b343-88fe-4e15-b499-d1f50136f2d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e5cb4aa-d078-4ab7-b616-bf6b9e1b7d8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b964dd10-ce75-4358-a67a-bacb84521bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63f26de7-06aa-4ce6-b406-a6a54de5af64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c4034f8-b0d0-446f-991d-c5f571804fc9",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0445972f-6272-45b0-b473-6ac0d0eef8f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9f0a5b2-df45-4a23-959f-49d23e2b130f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef876ce6-c8b7-4367-9e74-129c59dadb26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41b22e8b-0779-41f5-b39b-3a3b9839b338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd598e8b-c0be-4884-bf46-94d6764fe72f",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a96e386f-8e14-4fba-ba9d-b86fc5867cc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "740eb12c-f0be-4033-a3e6-24c5a3a4bac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f43460f-c59d-4218-8a64-2c9a16b8ffbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eeb29005-a367-447f-ae81-a42c7325470f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd68ac6-3f24-41e4-8a79-332f5d67e08c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4efd441f-6237-4fe5-8f44-eeeb49da7b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99d111fe-4ad7-420a-9120-05a80463b40e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "605f144a-4fd6-4192-908b-cd775da3d2cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a80cf97f-4f26-4d3e-817e-adbeaf8c3232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1db74516-e482-4873-ae3d-3dce7cec76cd",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b98ad96e-a4f4-4935-b7c5-19972b079e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5bc4e72-7947-4f68-9be3-ca9cd47eb1b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1205df48-8ff6-4b55-a21e-e1c113ff829e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61289fbf-980d-4641-bc20-3173f1deba25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be07e5ec-ea7b-46e0-86ed-2118fd6db47b",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56808b74-96d9-48ec-ae77-b11b6ec046f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8b25ac3-5393-4ae3-8f60-180d05a45d49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c88b0a-e22e-4e9c-a20f-5474f279516b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d59c7148-1b50-4233-b0c9-54c4ed723045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7472a6c-b804-4432-99b6-704f346009e8",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b20f41e-7c23-4bc4-b242-d2e7df25d07f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "283bf79f-52c6-449b-9c98-7065fe074d78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c44d08a5-6756-4a23-b105-1467d9e0c03a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2f2c835-4e21-449b-9e7f-5dd065da4322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad7213d4-a970-48e9-b2b9-861ccdf029cf",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a5a836b-a7c7-4776-b109-4acd0c7b62aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcfbe2ca-c05a-4868-95d1-ad847fd8867f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf75825-a122-4cd5-aafa-45f1539ce093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00814c3b-a1b3-4d60-bbf1-861d8cf13119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ab1c2a-efa8-40a5-ae7d-a710a30124e7",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb19985-e6ad-4754-9910-af03e174bbb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0c8244a-db30-4c81-9e72-a5a144a152a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "251cbca7-d675-4303-9394-55c818d74721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17090138-4053-47c5-b557-400ef81ee0a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a14314d3-11e2-460b-b5b9-cb72bc6397e9",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70eee112-d3bd-44c4-983b-0a478c8f3a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30f64529-56d0-4f97-83aa-c44815e489a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c811cad8-af2a-4377-9a6c-2d43d8b9d61e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bbad50ca-9818-46af-9156-696ccb2d8bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "847fba1f-a83b-42d9-8d19-aa395e8a3130",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d60ef43b-3a6e-443b-958d-b96e66f2262e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03f0669e-ba4e-4b30-9721-4cb8c2358df0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62334cf0-b583-4d5b-bc9e-ff117a976843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47f02b59-05b6-460f-9852-96bcc78a0e2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ae7c5a-8f84-4579-b63e-97af695d8dc9",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed9e77a-cdb8-48b4-a75b-f4ef94690123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "827e47fb-587d-40f2-9113-14df0a047c30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8fcc17c-a29f-490f-adc4-a94f9e9afb80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "955f5a83-f493-42dc-b7ba-4fa2a04ee4f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a2751a5-e83d-4770-86d0-c47d379162c5",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0aea71-00bc-4fa5-82ba-98ddb1dff277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64b2d295-c628-41d0-a02a-31a1a0f62b54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418750ae-0214-4160-a9c6-2f020c441e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f88788f4-6ff9-42a0-895c-85a81ea9089e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48d066d4-cfea-47cd-ac83-1a736ac43394",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f2270e-c1de-4e70-8767-e7c501adce0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "461b6364-74c5-4c51-89cc-c56534c00408"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa07de6f-bf5a-4ee3-93e1-311e60587569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3656f67d-a620-4321-a44b-72d8737487b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5410aa3f-8f8b-44cc-b7fe-d9b8ab249cfd",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d09f599-06c3-481e-a266-128be88a6230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7530dd96-6613-4e3d-b6fc-ef1695509c15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2872a96c-6a5f-4c23-bdef-ca22091e33dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50c78557-5c64-40c1-875b-0db48d6af269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9104c7f0-1965-446c-86da-0923ba570c12",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af20bad-3795-4ad0-b22b-c8944584dc47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbface53-e0b2-4e1b-8138-013b4b69ccbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4b51d44-e800-448c-b5c8-2007f4ab4a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d5a9662-b6ba-41ef-8033-c30229a3f3e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deae3289-cc09-4228-969e-fe7107b9b498",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4f33c5-d8a9-4fd2-8be3-18e12df06215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "602a104b-0b77-4ee4-8fa6-aad2f313beae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3d063fd-6d50-4420-87ab-ee0441375d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "90b10c01-5bc5-41a5-8429-f0cd5b08386f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4871625-37b8-4397-a44d-c13c23876962",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a3d4b4e-a6ab-4256-9a71-cba0da23e350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26946828-fbb0-4c00-a854-bd933bd3138e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f461ae85-bbe9-4fa9-b528-e1c238989a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1dc2ae1-2a9b-4f04-8072-77681696494b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7f6c66c-0637-4727-92c6-0577d3560f86",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d783b95-5a46-4441-9b15-8d593dffce7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09300d58-6007-48c7-8d07-046c9ec23038"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65196640-6314-4bce-b4e7-fb6705cf5876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b331a1b4-dd6d-45ca-b130-1e1b3c5943e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0fc0f3f-0631-4b20-895e-192f63e3b21a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b86263f-8bc5-48cd-81aa-eabe305a59e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e86084f-d626-4713-8268-42df559e9899"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20c91c45-16ce-48f6-a368-11a44d2e62d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "10842b82-0648-4a37-a1ca-188d4b86ecc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e0676af-08bd-4a56-a0ac-c8bcf5ec2c82",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7ac85b-59b0-4148-a909-22db3caae435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74b301e2-4ec8-464d-8c37-fe7ce0c5636f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c6432b6-c9d4-4b83-b938-9c61184a1300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b168866-3b49-4f49-bb46-77f540e68b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "024dc6a3-67dd-4507-bafa-c5862a9f3005",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b84c116a-9bbb-431b-97f3-572e7a8267c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5688a67-0e76-48f8-b365-ce64f744b414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc425368-8b2f-49b7-be35-616dae841d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "30a95a8c-0caf-4f05-a95b-17469e90931a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ecb57d5-778e-4329-a17b-0fccc9e0bddd",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e153ac-4fe3-4713-a2ac-01e8c49f8351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b384e2ba-e40a-4648-acce-3e83046d97b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a1a0ed-6662-4fd3-bba2-6e653c8698d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "50b32c22-412b-43d4-9d39-048776d323c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c3344cb-cd45-460d-8dec-1fe6c5269d61",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c4739a2-c331-4eca-89a1-e8ff51ffda49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5accd9c6-0600-4e12-adb2-cbb3888ebcc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db2f5f3-640c-4785-9a94-360c34b95720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2394bb2a-6ea4-404b-a297-404218d7e6ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b13a6c2-727f-461a-bf60-12c315c1ae31",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c1e236-cb8d-4e78-8cdb-cd5f9bbc7e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5357ca4a-c012-4552-af9e-8ad4ef2f9c17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b126996a-f5d1-4d32-b411-ed96b5e0fb09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "60bb2bcd-b274-40de-af0c-fe244398256f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "714ef678-6535-4dee-9f59-703c1f40af51",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e5cb940-314b-4ccd-8f74-feca19bc4cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cee2363-fb4d-4990-9269-842dc9262c5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "226c6a37-367c-4bb7-88c2-7d34d621dbd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0610a5f4-1df8-446e-8b20-32487f9e1759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61aebf67-d15c-4b45-a335-fbb19b4fb05b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0888e840-4211-4e95-9877-3aaee9fe212e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22fe9a8f-b4b2-4743-8506-1ccec8ecb7f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee83a1f-7f39-44b5-83f7-acec75d21c86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe299d10-7810-4e3c-b33b-3a539f93b904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54cfef28-b74b-4285-8c64-e8c8443eafe8",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06573c8-ce6c-4408-ac8d-0715a38d9600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b4c37fa-37b6-42b6-9ad0-fbcf798892f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bab0e68-6414-452f-a907-1123ab64f991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d0ef7bb-76c3-4251-a64e-94b31f216395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16590676-2289-4d1a-8101-534548b16c4d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21047a57-fefa-43c3-a82d-dbc9de4a1fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac6d4435-74b0-4dce-9a17-6f3d79a90643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff15d680-5c5b-4dbd-8f39-9f04343b05c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d9108b5-8880-4368-9c61-1b1f4e6ed11f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f637a91-55e1-4983-9026-7745fd7ecd19",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b630eb4-9699-48cb-8211-0b7bd4e150a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3749e98-fdae-4f6b-ba0f-34621a7a7c47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49af8ba9-af7a-432e-a384-62794316530f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "34f2ac52-e35d-4232-9368-65cfccecd0b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98136d9b-a7a3-4918-99cd-6fac62106556",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d0e81e-16aa-4310-b8c6-066d89a96b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04f7c724-e5d9-4870-8b46-b29aea737012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ad5234-0d4f-4318-80be-334408be2b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "279e5aa5-55a3-437d-9c2b-4b2e2fbc7c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ff8004-78d5-40c2-bd6e-f6e91cfc0694",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2afeabbb-e8fe-49a4-ba03-27a5914796b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ef703ca-1446-4aa0-90d7-426d929df24a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed811ffa-0ba6-40ed-9813-0a5e1fc08040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "91e1b6d3-393f-4553-b32c-1cdc04ab397c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e90a7a8-e8a3-4e5d-ab45-2076d545c103",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d7dfe91-9a04-480e-af5b-85ce8af71dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70c0a81e-800e-494f-a3c2-5c6c1ad5f6e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6eee7b9-abe8-49eb-a5de-81157a947f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d3e53f7-0cfc-41f5-bc6d-a6547c04f05e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb1c0bc5-90bc-4316-b4c4-2ef827ba3d48",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e4877e2-8693-46a8-8fb9-54993979fd37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "287cd9df-6c2a-4823-8555-2bfd4da8b051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca9ba3c-f986-4d09-b95d-216752f0dd1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "42c19f0f-a4e3-47ad-93bf-2dbba89b8d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2390f0c1-89bf-4473-84d5-0c8bdebeea7e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de84b60-e857-4995-9144-23a0081a65ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "24619733-51c3-495b-a0f3-cb1addfe813c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6913fbf4-7c18-43ed-9bfb-5edae871aabb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2c11e0ae-1979-4cc4-9342-384b12e49bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "483037e1-1021-41a3-a33e-741c0826e764",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b9ff408-623f-4da6-8ba1-7be58c241f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7c6b25a-953a-43bc-99f3-f4af2df20547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43c58655-ecef-4e78-8a19-469e3b35023b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d1f2862-2314-417c-abbe-3f7b47482e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eeb3814-cdef-42e8-8483-c82a580cd716",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3020cc1-c7e7-4c52-bbed-a2adb5484ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6b7583a-7999-4d39-8524-ded0f4c85f80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a536a188-5b28-4323-8209-35221877eb26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7a4cb6d-902b-4839-8e78-eb2ef3db2e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56bd060f-6059-4316-80de-e4d80c8b4bcc",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f49677-de0d-4c88-b846-f3bbcaca6776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b213a032-55bb-4a3a-91e4-584eec39562c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6348cc5-8d53-47aa-b920-0dd2a6eb68ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "aaf2ff19-fe9f-4021-b2dd-9ebb1f41af0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b27d6c56-816f-45a7-b541-d8130b96d11c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89f340eb-675b-46fa-975e-351f49b08f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8177bb22-574f-4a18-9249-536d9cb86b66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52a0a344-613b-43a6-b3cc-74e08373fc79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "473a72de-96bc-4fa0-b6e4-eea93119d41a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62aebb9f-344b-4aa5-8521-94a1c55c68d8",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc2180df-67b6-49c6-9722-27843c36e29b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e4f9161-47e2-4ba3-9561-59bbee81758a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e641ff16-5940-44e4-82b4-0fd3d6f7761a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cbae5482-966f-4213-8932-60d99f952d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41aa9b44-ab6b-4706-b7d5-50fce59f7481",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba943b01-2c9a-4730-add6-d59742eebbb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7eea402-d1e1-4cb7-a984-e8e5d171516d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dca2e10-d885-4c23-91bf-a80bd23da16f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "698aa91a-2bd0-4c05-9e1d-e238f2db1401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e12a18ef-e8b4-4b6f-9989-773f7142e0cd",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab330c1-85c1-475d-a776-8eb09b92339c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59848d9a-7794-4f8a-b6cc-10b295608682"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "736054c6-148c-4b93-864c-02d6384ee390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6f6370c-b511-4ab8-b736-8c688838cea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc924aea-c90d-4539-8867-18262ad3c383",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "381b878d-e4da-4300-bf61-c2e57ccc0ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d20efdc3-d9ee-4f34-8c89-686954a30382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f11e7135-b83e-470f-8145-4f9902bde728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7da4c29-0a25-43a6-b154-b12ac3d401c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ec784c-4695-4fd9-bf77-21687429fd74",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f28eae-9a41-44a5-ad61-9f4a41baa3a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88c293a4-4611-4e03-ad4a-6ed34a7ad603"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ee33a1-553b-44c8-9e07-5ac9b00884be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c681a2c3-1360-49d1-9b2f-80ea13adcede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf54e2b6-0044-48e0-860e-4b8b10bb509e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a80155-71b6-4a96-869a-de37ed13088f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "326a75d2-8517-45f8-a7bc-94b84404a9ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ac71975-bb83-4c8f-9a8d-bbe1cd212434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7230fd72-f382-4e35-ba41-49a2961c4e8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "282288ae-4f20-4d5d-bef3-44994a1844d3",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c24052ae-95e4-4609-9ad4-7e6ae835face",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8bc2986-b8c8-4c46-b387-9326b65fc419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59a1009e-5103-4131-8176-acb887d5d742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b56ba889-3412-4ef8-9537-44189b6da22d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a76dc37-195e-4f43-a0f2-7bb485fa82b1",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51490869-f486-4f4b-bdb4-14e897dcfd93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b5ebef4-6d6b-4312-91f9-1b88a282b3ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f7e94a-209c-40f5-a0be-7e3b92a72e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "31dab07e-120d-4236-806d-466e65e580da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38071e6b-bb0e-474e-9ea5-d875345e298c",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be8ae09-7c80-4716-a8c2-0ae5c41f8df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b74f214-e366-4905-bb43-c55bd47fd8ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b18fe84f-e5ab-4127-b7f1-31ef6bc98cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c58125c4-b196-4f82-877a-183bfb91c4c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf26f7a-57cf-4bfc-9ac7-ea37789df01a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb71aa82-4c2f-4a9f-88ac-7b46fcc43cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f813bc9f-5a69-4064-b01f-3309ce5361b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be84ef95-2776-4d3a-882f-c4b0f105ac7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cdf6b7e8-27f2-4c1c-8b5a-0e1e34ea2a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "384cb608-62f8-45a5-863d-55c6fd9b2c17",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fb37bd6-573f-4f5c-bbf1-a9662b509d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbd7c514-400d-4841-9511-582c9f35a089"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea670e73-b6ca-4b4c-92bd-c3e51a7bf85f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "35d9bc12-443a-4fda-b02f-bf61612f016f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c06b233f-b68b-4bc8-944f-25bebd3adb96",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bdd799a-2961-448f-b52a-ab2030af6608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdce8158-e069-4d26-a770-bd98c006a602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96388da7-6dfd-4ec3-857a-44a58991a54e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c47be90e-7fe2-4926-aa84-8fccc580569f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a5a7528-90a1-4d60-834f-83fb908d4a67",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a275c23-963d-41d4-ade8-cf7682ad1591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d93fee4-4618-45b5-bb6d-3dfae6db6748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70cc62ab-f594-4d4d-900c-b80bf73016b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "77270f30-b903-4a33-9126-2e6fc94ade75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd2b4602-1e3a-4436-a2f7-4f0b0b81a571",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2158e997-aeb0-4f67-974c-ba88ab83274f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc60c729-eccf-4637-8ac0-7a1db0acfc61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a766fc-7da2-49e7-87e8-93b9f5e93716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "45842601-0910-4250-a574-0ae12f06d270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e9a51d-8b1a-4177-94dd-895110ee713a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "286216e0-cc46-4ea4-86fc-7d298f47f799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b13095b-003e-4585-a1f5-d348081285bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb3a35e4-4764-41e3-a212-acb9fcd53eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "67caed90-3113-4216-a3dc-141f05dd5e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5923dbfe-1b3b-4915-a9a4-e7373a993001",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f710f8ae-2605-42db-97b3-8390c298941b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "431a7ba9-0890-436d-a8e8-97d628264472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15f2852d-e02f-450c-ae55-58d1d1e191df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "66f4fa2c-a676-42a1-8f9a-1565f7c2f23c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8798eaae-ef20-4a74-9a22-b8e6ad9ad5c1",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "497b7ecc-aa75-4a6b-9f0b-9789d57ca98a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41f1480f-5303-4776-a83f-04df5519687d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e2b422e-4a3a-4f2c-896c-c874aacbbad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "477151b0-9e44-4a87-bb61-55cb84130f7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98308115-e3df-4b29-921a-43ac92a4fe6b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2467a7f-47bc-4645-9074-b149984c126f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc759a90-9684-4802-8205-875e7368d419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd94d985-3940-42ad-a9b0-00838649af44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "39713d94-b2d8-4dce-ac3a-18a2d2aee91c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50fac5fd-f254-4a7b-b52b-c2909d3cf4c7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b752a60-9aaa-434a-bafc-ebca5d4d7273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "221b9a5a-88d7-40d0-b1b4-a2ae6f073daa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27d224b9-9b8b-415f-8774-41a0da73d140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "270e083a-fcdd-4b7e-8998-39fde111ef32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89f2943d-93c7-468f-83f7-6b3d3022b093",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "641e45ea-b664-4ae9-8cb8-4bb7dbe1f4fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "883b6752-a8b1-4de2-9995-5e1a8fe67615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5413b0e6-aff9-4352-91a6-851b5ac341c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3cc2148d-678c-4eb0-9ba9-44c16978e86a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce9f482-2106-4907-b192-008b998f50fb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21955229-5471-4371-b0ca-935504064ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73465063-9666-4c7f-b308-807763a6cd67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c51792-f1cf-4f41-99df-bd49ea0cd870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b6c8f2f-4e0b-4610-807c-e326c593d59b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da9678dc-0a23-4317-ba9b-a69d91a3c9e6",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7452c31-46af-4c73-81cd-72e105179bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19ccc09c-b3af-459b-b1cb-2f33a0029e59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d61fff-c2b9-43f6-a3cf-b2ac1ee3d644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a74751da-95a8-434f-8c10-bd1168ea1608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c11ba3-3b96-4a70-803f-ec728c2334e3",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe63adeb-835d-4917-ac9e-3797097654b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f5e19b4-a66b-42c6-9c95-20613638dc63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22de808e-5a6a-4efc-9bd3-e05fb0474662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "aea6ee31-b4db-4562-b4f2-d273d85d1ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba0c8c7e-71fd-4cd9-8531-a2e28f0bae48",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba85c75c-baee-4098-adca-f9c107b9dd88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55aee59b-90a0-4954-a5fe-efe9e806fb96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc756cb-810a-4496-8c72-52470704ef85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a69b15f1-9634-496e-b119-a132c812a099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e7214f-9cde-4f30-b11a-c0119d8903b7",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5635d98f-b29d-4ba5-9841-6155fcbfd25f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9377e1f-8781-4f53-a6a0-adb3a4498df8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3595338f-6f58-4f26-ba42-0f3079479abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca0500b4-72de-4794-81f4-515c33352ee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0f32a8e-df80-4490-be00-b22b2522fcfe",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1634e1d6-690e-4ade-89fe-358db117be26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f76bcf61-042a-4e14-938b-75d4f7f6189b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42cadab1-b82c-42ed-a68b-fd414ac96250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "16fe06b8-e6b9-45fb-884e-148f60e898bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ddc8cf-311a-4e70-9647-b3251dacc6ea",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a0f83c0-54f8-4e01-a08b-d0efcf652309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1196c902-bc53-4acd-aefc-b075f1d50bbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb73a63-909f-4d9f-b5f0-8123d6b0e58d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "19f87177-14e6-4cdd-94c1-ce970d17c2b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9508a977-dbff-4c26-ad07-d9ed769576fa",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "186074c7-1169-401d-b78e-65c77fdbb0ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b4b095e-e9e4-4f83-b08b-3ce51508180a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d5fefec-0249-4b66-b84e-1239211d3c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c7eff4b-1382-4a08-b678-5fcb7d522137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3463499d-2772-4dc4-87c8-9318f88eba24",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac17a2a4-214c-4c3e-96e6-78bffc02f001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1e9f41d-429d-4646-8236-3b5ef13ff04a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb5e7b7-d1dd-4b5c-80ba-b1ece55fc241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2eaff471-c12e-48a7-8215-1a116107e3eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b728b0d6-fe46-4781-ad90-5a5d6116c3d9",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b0d457b-1867-470e-a5b8-9c6aee245666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dcea6ca-5ad7-4037-bdde-a1ca3dacf1ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8efb170-1cd9-4d05-89b5-c26580d77f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6740350c-b8e5-4e26-b6aa-2435b887e944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae449d1-ee86-452d-a944-2c428bcb5749",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b63330-70c7-4b17-bfe5-331f89d42c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7c43c24-673b-4ed4-a6a4-f1aa3fd20359"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5da2906b-fef9-4213-a7e6-273f904bfe1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f82494f-a540-4c11-a231-2afc2123a1b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a43b3b0-546c-4bf3-8c4a-8c7f7b36a43e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "588b371c-2261-487f-99c4-35fd2d5ae9e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "459c616f-ed84-441d-aca1-3e90c09b97da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91855c02-36c0-4ca0-9c0a-88662da5b838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "74343f83-e0e1-4326-ba21-bb18b52bad4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aad12a7-5bda-4d50-b57e-d05ee2a204a0",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f57bfe-e4e9-4443-86bd-5c70070b4637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6ea4bf6-f03f-4bf7-9015-00268c785b9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd3c60b8-a201-4e8e-b5d0-5709c818dddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a02567b6-c3b1-47df-a51b-376c91814299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c11da997-4213-4197-9890-43456ab54691",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48636cc0-4a22-4546-8f9d-e568ba77841e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f7cd5f1-88ec-4031-8796-f4f41049fa41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5f0293e-e63f-46bb-8860-fa02658db5a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "96ec65f9-83de-4ec2-81b3-71fd21799471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4459e8ee-7eb9-40f4-8f83-48cd4f509f5e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f30260a-d811-48af-b3cb-46d2779c8c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72eb2d4f-f3c0-4e0f-9205-23b000be77e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dedec69f-e60d-4ecf-8948-a4c55179b45d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "eea8404f-0492-4dee-bcf9-c4614d946a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9da52e6-f62d-48a8-87cd-2ca1d69caa03",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e9e2a6d-f55d-455a-8a44-edc6ac15c415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53f82e08-1731-4193-9f9a-f2b8aa913816"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37af8147-57a8-4799-9036-479e633d8a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bddeb9e9-3f0f-406d-baf0-96cd1841ecb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d190943c-04be-4101-9958-b4cd44b71506",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35343ccf-2fbc-41cc-b017-5a3a95fab38d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5d879e3-4750-4d52-b88a-87af3141b5c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b252e36-78b6-40d2-bb18-e0cdd55d61a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e87b1eb6-936e-4ef9-9b37-1b81bf184883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c43834-5795-4a80-9b01-da88bf88270d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac29da4c-8d61-4626-b760-580fac921d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b78f031-bfaf-4ed2-9bb6-3389a5838c52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e06c7c9c-9eb8-460b-8eb0-b65054e4f21b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ac2d19c-01f2-442d-a7dd-fe0dd7d8788e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e158c115-89b8-44bd-9a9d-c60c40b532bf",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f392f0b-421b-4b0c-923c-34ea47586011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c5705bc-19b0-4175-9374-2de7d6cf3e83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "008ff554-6a70-47e4-9a5b-ee257e3cdb91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "42fdf468-17a9-4884-8624-ab6d075ac901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4112576d-ac4d-4a01-a26c-25fc12fa08f7",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3811d8e5-1adf-420d-b443-d318767d2d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdd911d4-f16c-414f-93d6-1649f726323a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b54cc67-fdbe-4a41-a152-d1cd68061ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a8719a5c-9763-49c0-8ad4-39ec7ebea821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b5a7ee6-b47b-4526-ba9c-5c94e9113e5e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e74c209-9045-4dd7-bb36-ba2cf9fd8130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85b2ea80-a5c6-4670-a344-a4b55ac16ea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be41abfc-e6f2-4229-a5ae-304adcfb88f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "90efedea-4554-4819-93c4-d609bed28710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c28e894b-cd49-4141-8d00-3329ce86bece",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b3dba7-fbe9-4abc-b381-1f7be50abc1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a5e7d76-90b8-421c-8d08-e152c9a4047b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e53b773-eae0-47db-b7b6-fb1a29405290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d27c8942-66bc-414d-a575-995794d0220f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e9891ce-c681-479b-ac5d-27a21a4efa1b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9001be96-acd6-449f-89f3-53450dd71cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73666587-f25d-40f5-bf80-9902ace3e2e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dbe53f6-fe7e-437a-8c29-c4a9a6e62a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e811a63-c202-4498-92bd-acd55bbb96be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d61286c0-e161-41d0-8f50-b6176212b55f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c509182-7191-499d-8dc0-4440a7f21e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73c9b31c-d6db-4e10-bdd5-4c647fef39a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a90df8c-ca68-4e5b-bd66-6e0b26f3da6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1207a774-c637-469c-b379-d580f30c3d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04b7e80-7b52-4422-a6cb-d7d6a9a451af",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "509ce8b7-1df5-4c83-80f7-7a8a4bb5df0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32bbc1df-06e3-4c89-b983-692471365a56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04f35f4b-da98-4ff2-8d5a-7dfd34b8f770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dc170e9c-2702-4e3d-af1e-a2948a89db8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9556473b-4c4d-422c-921a-40cfe9a501c9",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e6ec113-3c14-47cf-8aba-21f3eead75d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "177f7756-c1fc-4333-bc7f-c4f40f9d5c42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c3c7433-58e0-4666-902b-38762ad5bb9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c3b3a84-ba86-4b11-9c50-c39b4a0d3f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3733eaf5-953a-4a3e-b648-9de0b0617f35",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae3d17d9-fc1e-40ab-8390-c692ab4e835e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acbc02ca-62a9-495d-a08f-499bd425fdb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2016426b-a319-4555-bb58-88d23826e7fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1423a7c0-e562-4929-886f-36b2d9e09016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aeda729-c675-42c7-9b45-e2c4c8c6ab81",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a7258c4-c23d-44cf-97e6-f653ad179b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea5c99bf-df71-421e-b374-c3d3e84c5d6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3de7ec6e-7aff-4639-9ea6-0d83118f3965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c44524a7-6b91-42b3-ae53-e48475dc8ed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5583fde-1f36-4a8a-b1d3-9b4a338748a1",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "639afdb3-7abd-48fa-85ff-230630bc82a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebcb6abd-5898-48d8-96e4-06292f221183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "136f9f7d-a777-4468-8c17-2bf4fadd2c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f70ae47-cc1c-47ae-9f8e-930f46313584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dfa7569-0b68-4ee6-b85a-4c2a6e91df0b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fb26f72-610d-45b8-aa05-2bfa18151d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c2241a6-5902-49fc-84cd-dbc0c5269a65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf6fe81f-6b6f-49ad-a296-eaf81cab15c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c1bcdb4-0290-474e-a0f1-7e6e18f7a607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccabb146-cd59-4c96-a276-a7d6eab0fb21",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d43a18-2cd1-4d6d-8a31-115baf03157b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fbfeee8-808a-408b-90d2-2817056eda22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cf08415-f810-49a3-8b9f-2ade28318d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0537748-1e0c-4671-adf2-ed5d21cbbd8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe673030-7954-4904-a83e-ba6255cf42dd",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f52b105-c044-498a-9063-2061292ba12e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3c20694b-de35-4372-9fb5-e6399b10b332"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e95d82e-746a-4a76-9297-bc519ead0b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "252cee12-19b0-4314-95e6-eab8e9de5ba5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c175c99e-09dd-4895-892f-18e3bfdb4c69",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9fd6d50f-6a00-4640-91e8-9115114c7e3d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6dd6c25-1ec3-4b11-8ad8-34fee8ad5f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c6f342a-d3c1-47e3-9388-7bb1c7206289"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063bd8cc-dadd-47d8-a140-e53514cc4d8a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dfa6bcd3-5fc4-4596-8af7-4681ae1ba4aa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b2a5dde-69b4-4305-ac2f-2ff6c36ed6a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c7ea3a94-d8a8-4ccb-be40-f094bdbd42bb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2d4311f5-db81-4527-9619-5fe86aff69c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "69edc4c4-2dc7-4c7d-86bf-7512a5ac5817"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2c8081c1-a76e-443e-973d-cedd05c26743",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b464d933-b117-4d82-8f7a-19fb34f09859"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "dfe9ff2c-0793-42f4-acdd-c943ec025186",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cbb385c3-a311-4820-a551-f0d63433c5a7"
                }
              }
            ]
          },
          {
            "id": "460157b8-a409-4537-a424-513e20fac62b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "37cad593-d12c-48b0-9e21-5031665afcf5",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe1ca9ed-15d0-421a-8e8b-c0944152d7bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0f354ac2-4344-4e2b-a0cd-62801d772b32"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92635a6e-085c-4bfa-a451-baa69df9e9e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b0305f3d-e2f6-4f42-b3e9-8fffef607d52"
                    }
                  }
                ]
              },
              {
                "id": "783302eb-bdd8-4f52-9016-8a203fed3d29",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "11e8bec7-d97d-4d86-b0bd-46c636aada9c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4f5cb6ba-d9c3-46da-bfbd-79ed500ca6ee"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c37a0238-b7f8-4fcb-8faf-d1e67a4f383c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1fb48a0f-e11b-491c-8a5f-aa1fca63a461"
                    }
                  }
                ]
              },
              {
                "id": "cb03cc0b-3ace-493d-ac52-5f42a0aba31d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f3595d56-d1fc-4c63-b529-a5063c4c4970",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c6e51527-ab34-4a39-8231-87d3de195b65"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2133c5d0-bbb9-43a8-a65c-3b786e981866",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "202bc4a9-8757-405a-8392-ce211f04eb56"
                    }
                  }
                ]
              },
              {
                "id": "9ee9cc89-3f14-4d60-8149-dacb2feb20b6",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "62d0bbdd-d67d-4923-9f1e-c970f785218d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1fe2f1c4-f511-4d7a-933e-c99344c9a107"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fd8c9dc2-0044-4fb4-8956-849504e48044",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "31c30f80-c149-4a7b-ba53-8edeb68fa646"
                    }
                  }
                ]
              },
              {
                "id": "979a95f1-b0f9-4d57-a2e3-58f339b14180",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0aaec9e-926b-4758-b522-ec0de808f63a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5d922ea6-0167-4ed0-9173-f2ba98a333b5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d37619f8-b9b7-4d8d-9dd6-7ee83b153493",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "29880868-f62a-442a-b1d3-e82fac3fae03"
                    }
                  }
                ]
              },
              {
                "id": "126f8f93-4c6d-4815-85e8-ea6fdc4bbe44",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a72b2556-4aa4-4a27-ad68-4317f5a06a3b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "919dae84-ed60-4f3c-9102-a8f5e35921e7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed4216e8-864d-4c1a-8421-8066d4ed7e4d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "511bb4fa-2f05-4654-a7c6-69a252efcc7f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2ebf2aff-f803-411c-9374-ea0a061bd675",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ac13968e-3be1-4834-bf88-15f5171380e4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "623da417-50a4-47bd-9183-4188c625bdd1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "52250d3a-8258-4070-bb4f-24087e31240e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c71e47a8-13f6-4670-8774-92a09e515f02",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "6c54f0d2-9cb3-4d49-a86a-9b0501171ba9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f5453bee-026a-47d0-9464-6defea34de40",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "07e76575-aa91-495e-ba51-6e72882be76e"
            }
          }
        ]
      },
      {
        "id": "2f1c969f-f9b7-48a9-84d4-8df52d969cfe",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "b58c5b16-a36c-4896-9e44-9396b2c6e4c3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5f2b5fbb-424a-44b1-ac7e-53517d64f357",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "46715a0c-f47d-4fda-8ab7-4fbf357cef5e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e9d0c3-0387-46b0-bcac-1cb32b814f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93119e6e-1458-4392-b3f3-ad3ef8ef80b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c639e15b-62f1-4248-9493-fac5f52ed9fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "cadccf53-8aa6-46f7-a78b-d8e87621d340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc30a9f1-1432-44b6-9676-92b3acdb4983",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6fea4fe-043b-4f37-8c4f-98c227398062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29afd023-6f8d-4f1c-9f70-3291443c927d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d824ba4b-35d6-4b9a-b47f-c8b5004edf5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "90158279-5437-411f-aa86-6f71ccca7603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a89e0cf8-7cbe-4bf3-b9a1-aea3da5d6366",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1434c4cc-c92f-4dba-bc5a-afe15e488049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3348cea0-218c-4a7f-8943-98a10374b1ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07abf6be-3d3e-444c-8066-6439c9ac72c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec5c30d3-d3e8-4507-964b-dc5bfa946f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0391763-975e-445f-a5bd-d1cd621358c3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ea63a1-18c5-4202-9f1f-7c0c3564632a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "432d7dce-4cd2-42c4-a5f0-a71156a49beb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca305f4d-36fb-421a-9a77-47195e63349b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "83f974af-c43a-457c-a3ee-9aea17e23787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e64db3b0-1bb6-4af2-b707-4fc205124322",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34205e87-8d60-4f7e-9c96-f05e68ecdc6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c74126f7-82d1-409e-aa36-b3cb18fca192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "915af72e-3ec2-4652-91dd-e03a6d1a06bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cfbabde-ef6c-4e21-af9d-d8e406833a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53dfb3c3-6301-4bac-87d2-cbb895764065",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "877ce44d-2a3a-4e2a-a823-9ed10cb36a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5591dbac-c98d-4cb2-a62c-63153a34b80c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "731b5862-8f4f-4595-9394-ba003b4b977f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "17f21d61-cf22-4cc5-9a51-3d5757a8f051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06aceb14-ae1c-42ce-a8d0-78631ed05522",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0fabf59-f857-45fb-8007-5895c90d8844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa28fe0c-d040-4de3-a22e-3f7826cb37bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d924e9-09b3-4c4a-8d7f-b2c977422a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a78c23d-f2b9-4190-9858-9a6eb5ae5edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da7012ca-92ba-4590-ab69-7c7d9552390e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "504bb0bb-cef9-473a-8e14-0865b05434a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9967130a-7540-4760-8ee1-da76f9a51888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c86b476-a186-4681-969f-3ac46125748e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cabaffd7-23ec-4688-b260-5e781f20929c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecc2c4eb-1c27-470f-8d5e-e53dd902724b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d668704-ca34-48f2-944b-5fb1320f0a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6609696a-35fe-49ad-9059-ff3dc023aac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e25d53-dba1-4b99-ba35-c5ac9c3f722a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a49aec90-1940-46e6-ac46-1185327999db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94bc7704-1495-439f-8d8e-21bcf3bd1e7c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c8ecb7-94fd-4d38-942b-1f781df241a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79c5e7e8-d37c-4d3f-8229-636de2580588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9eb11ad-9a6d-42ea-aefb-412c5bf0ca19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cb983d0-e615-4efe-9a7c-55d2c4a62c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18cccbf7-7337-4df1-a3fe-e3fe1e4b90db",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d102712-f418-4be8-a6b0-e8a9a1b92325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "079cf70d-80c6-4ade-868d-c110c5ea5d7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b21060-7df0-481a-b457-209b745261fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "aaba0dd0-f791-4cd0-9531-fc80b35ed85f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf558ea-b2c9-4dbc-a156-b8b167f13263",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5674db4f-5f55-4cc1-8b4a-cebdaf2f2b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eaefac8-d3fd-462f-8a34-870d724435c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "909ad4f1-bef4-44b6-969c-bba73e05b6f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "16a35eab-42c4-4a39-90ec-3eb1ded6666d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34e04e7e-f9cb-4f33-9caf-ebd7f97d910b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc5c9666-1799-438d-8f3b-fb5e99933661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6397f0ae-6734-481a-97d5-d8eb622b2309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f67bda5-6349-42e6-8973-ae90c086df08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ef2b8e0-53c4-4d8a-9323-ed42a181ee5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1999221-92d3-46bd-b669-56db6ccb0ab9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a9e4eaa-fa72-48b5-8192-332f0c296efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5893d61f-92ec-4ef9-bc13-96e19717190d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "534db7d5-5422-4125-8fff-8fdbe77a3e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6a4cf89-5865-4127-b6c0-6e39d60c474a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a20d22d5-ba6b-412a-9781-7ccf2adb0318",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47b9d775-0be8-4027-872a-9e8ec5cedbe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21c2be49-8331-469b-a045-33f6de7f61a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eeb2513-7837-4fc4-bf63-a918abb8878b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "be1df8f0-e0e8-4a0d-a9ef-2e81c80c1ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61cf3290-3f78-4fea-a0cf-58867343bada",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb2d684-7170-425f-b88b-3f89b1fa7b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de50bb28-6492-4888-be26-c5d5fe7f847c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5560425b-abd9-4f4b-9a54-6409216cbeaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f515bdbb-5dfe-411d-88a9-41cd3b707883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a9217d-15b1-4065-943f-0b46388d422e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbd50713-bdba-4f22-9d5d-ce4fadb8649c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed4e3984-8cf9-4e18-a50e-674fe0beb8fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0539df1e-bd14-40fb-a2cf-ff0c30b7b2bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7797c33c-e785-484d-8eea-4a59bf2a1ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5a782e2-ceb6-4d52-89ac-571154736ca3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0af12f8b-f628-4ef7-ae29-7e22c57341f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5daa69b9-3433-4187-802b-2419a8bff544"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "435492cd-86f7-4898-ae78-f23c47f03eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e68db8ee-fb9d-4255-9fae-944009cce43a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a3fa01c-4afe-49a4-acb2-d40b8f70b18d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ba8509-d25a-4321-a9a1-5defca3b236c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4371238-add2-4df0-a79f-218ae8a22d28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed01e48-c4fc-45c0-a61e-24c2cc070799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3132597f-f246-4d23-8d1b-0c671de598e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "860ec611-6335-406b-88d4-8ad02bde6813",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43071f23-ba82-412f-a707-12209297679e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fed7ae7c-d903-4f3c-9acc-3c9ea013ee64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f315629-4e9c-48b5-bd97-eaed5f365587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "815f83dc-0027-430f-8349-5b9a4ae6dcfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "837a933b-1ed7-47c8-9bea-990faaeb3cfb",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4619dc9c-a360-4fd1-8dc9-633ffa57f19b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "defe3879-d06c-4ee2-af0e-505bf35fd1b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f042ca5d-b211-4435-8ef9-76c9098c711c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2531a2ec-f08d-4ef5-9409-6afe32719973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e3cd675-3480-4df0-a080-9e5efaa79620",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec14b150-dff3-4174-8ae7-5ff86d1648d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f968ca1-5f65-4505-881c-492e5bbcdbc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99236674-1fe1-4a7a-b742-d4c4a5d8a5b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10b2ffe7-1bbd-4686-a80c-a7c7a5210c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9bf8b1c-a9ca-42e3-97f5-70024dd2638a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb6c7c1-bba4-46c5-abfb-daf7d60c8150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13af73aa-14dc-4a62-b556-ee2128357987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f532b179-7acf-4360-b5e5-c8e4814e92f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de18e88f-8d75-4dbc-bd56-d06edb415475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "054cead9-559b-4d50-bfcd-a0e3125cec0c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "490502e8-0091-49da-8b7c-bdf09f49b344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1c7c83e-a07d-4b98-8fa6-6a6cfec68e70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbc52297-55e5-4b42-a7e8-49534c937f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bf11423-b0bf-4f60-be2c-88af41304692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78399fe9-c72f-400a-ba9e-90119cd514e6",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fdc4fc2-7deb-4bbf-88cc-03ed4fe12c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52b177ff-768d-4aaa-ad5e-1e620b7a946e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4404b06c-433a-4139-8950-083a3fae5bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "990ecf28-482a-4717-b9d5-bb6dd4694fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb550b6f-1b28-4258-83ad-1043db003868",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64651163-29c7-4cb6-bae3-1af96e73547e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb4ab079-bd0f-4b04-b500-156f2b6c003a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b3dbd71-64e3-412a-9cfb-0506a3cb103c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d407c7b4-4004-4ebf-a392-e382a57088ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f7ebe9-13f9-4f56-9bc1-012b759868b1",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd66d825-5bd5-4d0d-a121-96aa9b5b7e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "058904fd-8caf-4131-b5ce-706e4cad1077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc08012-cf0b-4a93-8dae-840166138959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea994163-9338-42b3-85ac-c967aeb6df35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8381d251-fbd9-4857-9424-cc6e96183bfd",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "703f07cc-5f0c-47ba-a802-2af9d83a9b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3384465e-883a-459e-91a0-f238ae4675cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ef0466-6daf-47b1-81be-8d3117f194a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16f64fc8-3412-42db-a830-381121d0cc09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c21528a-7565-4adc-8eab-fd54f04cf067",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b717e06-38eb-422a-8f54-9510bb9de72f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "360d5d30-edda-4236-9c36-95e97746cb9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c30748-57d4-4bc3-be22-60c47e622d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0ffb2c9-4557-4fd4-b47c-ae3b6107936e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e63dff4-c05e-48ff-b33e-1ac2d4aabef5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa6d52e-56f3-42e7-9147-7d37a759f34f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e437abd5-c958-408b-9f14-55cd4d9d9d35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f04befdb-ec73-4173-b000-e9ecce508906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb6c3bf1-6f57-4c65-8fa4-99cfc76b916d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22bc24cd-e7c6-4c58-bd50-2541bfa2e699",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "880152e9-1d5f-4480-9afd-09c25591dd40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0345d45e-424e-430d-8f7b-de9313735279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "350d3e1d-157a-4ba2-9ec3-3ed98dc296d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd7823e0-975f-405e-be61-27a7dcda8325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cb429d8-5bbc-4cb1-911a-6f18972f7f8e",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7e8b48-436a-45f9-b98a-536612c28041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d04d2e0-7646-4c19-8fdb-a623e91f1eb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65eb7ccd-a6c6-40ea-8c54-42c616af0543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3439ebf-fbb5-4169-9928-14e0df932289"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dc79fdc2-3d60-41a3-89be-9aa95d3fddc2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bc848f7f-ca9f-486d-a31d-17573fb67c0c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f947768-cdc1-4851-be44-c7932677ad8c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3375a89d-0a8d-4013-86dd-6a5b3081cc62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b547428-f38e-40c2-8c6a-202e3c56a5b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "030586bd-e54a-4745-98af-c86d8cfa5e1e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b4d9f7fc-504a-4e67-aefa-1b1be871255e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dec768e7-eb17-40cc-bc63-671870813be4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "46ec22ce-19d2-45d9-825a-38c3086d10c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ea077b1-f543-4081-9923-dbc398d79d75"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "58e4d9c7-ab07-4e1f-b5a1-06dfd919b294",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e75eb4a1-5a63-4126-a571-8df58e20a13f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "51a019b4-c99f-4f5e-9440-33c72d4b8ded",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ba191c57-7fa5-4726-bf8c-0b6c02fc2b19"
            }
          }
        ]
      },
      {
        "id": "7238a38f-fe06-4ae4-83b2-ab0ea14a6575",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "8d300e6f-5b2a-463b-b816-4b4d10297fe0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "39925762-97f7-49c4-8f20-d0a7b64ecfa1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "df773600-d85d-4a35-8dd4-379ebf993c89",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61156b7f-f52b-4dcd-aeaa-9a52c83d65ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cae0d9a-b4d6-4b4f-a2bf-425fd1088c14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4124066d-b529-4961-a877-c70eb9af0c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e67e2c04-bf8a-4d5a-92ff-40b94b9f72c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "293d2350-eaa6-4e58-a30d-324f35562f4c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "446579f1-49a3-4dae-922c-7ed8dc549ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "265c7017-d5ba-4cf3-911d-7c0ac02d78a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "987124db-f8e7-436f-a61e-5b4a3b51a38a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "559f5302-bef0-4227-88a5-1330ac5f7d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e16f90-99d7-4127-ac16-87b630f46b69",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a7b200-bd85-4ea9-8cbc-e514a26b32ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0812a06f-c3dc-4d9e-a4a3-2598dd8c19d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93c7ad1b-d699-4708-9a4a-e6eaadd0c4d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdf872d4-2d92-42b7-be6e-6bc96c881ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0510055-fe10-46f8-9142-29ed91880438",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbcbc4ce-672a-4b4a-8669-55ba2c235f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f985548-02ee-4d62-99c7-1e68542a50b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c5da10a-e0a9-4bb7-befb-48770b29ac51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "560c1454-f63a-49b8-9f10-dc5a33dd21f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c7a8641-4c9b-451f-8ab8-ec0b0a8b2423",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc1ffbc3-9f31-4ee9-a55f-4436512cc188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "838fd113-2686-4e43-8c90-5e7810728494"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80f5b887-c539-48a2-ba5b-47ed620b40c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc460834-9b65-4d1a-8729-083d0c505da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b85dc662-5c30-4663-bfb8-7cd81e184d38",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ac925d3-cc9e-4f68-b09b-21cf61efe240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c903e3d8-f9d6-4ef5-8af2-ace47a0af90e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9252109-b7ad-4de1-aaac-ba8bc5d852f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bab512ce-cc79-49cb-b6a6-7f204e07a95a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf9a5e9d-7a41-4d3b-b570-dea5dd5741a4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80162eed-3da8-499a-851f-8834656b7f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ecdc1f9-c6f9-423e-a899-ebb72fd2b108"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "133abdd0-001b-4eb6-91cc-ece40847a418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "40ea5b60-fd5c-4294-8b8b-e96a257c7403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af75074-2545-447c-9341-8bccef1eef5e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f302284-fa79-4a9c-9f79-9f886a1a9649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0754b07a-749c-406e-aef1-3105b63ffc69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f6c6fc-cf42-44fa-94d9-6e8a052faed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1724bb27-4807-4aa0-a49f-0f3b14b8e4ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd4887f-854d-4d80-b458-e413b906e169",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda26c08-68b0-488d-b462-fadbbfbca43d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1628c08d-a079-468d-82c6-3915acd0932b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d20f9422-0908-404d-83e2-7af056e8bc6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "663b429f-38e8-4000-9a09-136741ea3ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ead8ae-d919-4f68-8e6e-eebdb99ad333",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ceb0e8-daa2-4b5f-b9a0-f72a5d5d0e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18422e0b-e612-4ff8-a925-34bfc5b30cf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e62695c-83c3-4e39-a404-eb20481e8705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "97f3a3d2-d20e-4a59-b1d2-f231a38c03b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c9a086-d9c9-4c41-80fa-b352efe75377",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "581f1a84-abb2-42b6-9fc2-339115ed06cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb0c09c1-7b14-45dc-a143-443ea7074c9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5677023c-f4a2-4ca1-bdf8-3864c0fccb5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "665fa85e-c5a6-4fe3-9f7a-30049824426c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38f2c8c1-6d1e-453f-9829-7e7d8cabe18a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "809b4058-ad0b-4240-a4cb-5ebc105ed4ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89dfedc8-6d58-40d6-83ea-897195c0d097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8207715d-9317-4ca7-b750-aaf9cf0525c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ee2cf49a-3e60-4830-8d3c-3a40ad3b1058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80c18ad7-0149-48c9-84d6-ad18bbb6ce51",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b3cc36-ef1e-455f-8179-42cb6c937128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f9fa7f9-60c2-45ca-a356-2cd97b4a5237"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7897cb32-4670-414a-bb55-393afa641181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "53c33099-4d7c-486c-8198-5a3e53f0d6d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43566e92-a216-492f-afa1-743ed6b4b533",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "456b19d1-7352-4a28-a075-8257a42990bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfb7deb0-4113-4ad5-8b0d-298688d0015d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97cfabc2-b3a3-424b-84d1-4e987f9f5d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "766a1cba-41c5-4f71-a258-babd78895b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b00c435d-3cf2-4d97-8600-b23cc5fd060e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3dbe23e-ca85-4710-b7f0-c5abce6f67e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a3393bb-f9f8-4e34-af88-adc9e0a9bc64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01801531-ea43-4128-a930-3fb31c7983c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9f3070c-a598-45c0-8ccc-01d5087dd5d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb4d6292-331f-416e-85ca-56010e3c69c8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9781c76a-e022-4ee4-ac0f-45d0fe1d6e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62beaf0c-d53c-4c79-9974-41059fe4cf0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e8f28d5-a0c2-45c7-9d38-1f3ea3cb7f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d764c892-0b7c-486f-b3e3-a39c8cd5a899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca36e46-08fb-4b37-aa7a-2d9913b58757",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f0170f-445b-4052-9903-1cde2216ce35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15c7237c-7feb-481d-b7b1-8caff728839c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f773059-9ae0-4847-ad4f-3b96beac8211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f5e18b2-6a82-4e66-8fad-59839324633f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94950111-6457-4c6f-b5b7-3b1c500442f2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf0637dd-e0fb-4639-bdca-c3a93e8645fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0400a4f6-8556-417b-80c5-29e25966be15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "993b9ef4-b0f9-4725-b9fe-0b47fa216566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa14f6fb-06a8-4ad5-8788-2b23a5960fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58dfd647-e54e-45ba-97f9-e0d2af6a1af6",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2438f63-2bed-4b16-9bbb-c89d196b5499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bab4f32-8f00-4582-b705-8d17470fd539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ce9fd2b-16b5-4da0-b9d0-d5ec592a92a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cac2d164-89c1-4f49-a613-58f3fa76bc98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4ad0303-ca33-43da-afbb-a839fbee0408",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6361bf1d-7674-4287-82ba-7cdce250d8f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "458ef466-e449-4769-ba2d-024fa24c4a88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d1726c-4056-4bfb-a1a5-0c13b2b49b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2b69119-2781-4ca6-959b-b6c6a26f0337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ec1b5e-e681-4f80-a9ab-3efd7d1d56b2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a0bc43-4a58-4330-a718-6034f9ec8973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d49acc29-9a3a-4774-abba-481ce1fe7c50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be54eb1d-c7e2-4cf3-9c20-970815b6ce79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2461a83-400b-4d8e-a480-8e6fe174b129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "695cf885-1259-4fd6-a665-ebf2aa25cd80",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c012fb9a-f126-4f89-9e9a-65b8b34309fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d02a588-b09e-4200-bd53-084297519ded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6ccc904-b59f-4ec8-877b-557cb2e5e784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7559c2f-d7ea-440c-983a-36a6ce134e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "044e55b9-bb94-4f51-9a29-891d15ba6f51",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d090f2-8526-40dc-a669-511b51727c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b513ad81-0616-419d-9e10-f2d3ac96b2b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d7cd0f9-981c-4a93-bde6-7a476d16e98e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84c646dd-3e63-4ab3-9090-73f314430496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e3c98a7-3b62-4964-8330-ce6e98fd6a6f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf06538f-0ea2-4005-bbd1-b1cdc29fd2c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4675fadf-457b-4a30-84b5-851a974590d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5788047-8f60-49bb-a272-1170f3f67a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2140c2ea-1f9f-4cbf-99b6-7fe2fd74a5ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae38a1f-1b4e-4dcf-93f2-ed54fcd7290e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c3ec97d-9d3f-480f-a541-f993aa7ff585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f38da60a-2844-4945-986a-b4edf8d98b47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b184a71b-0529-43ad-803f-f94dd0ac8dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c41dc51-0867-4bcf-8c6e-06bb306bb4bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a95b61-320d-44f9-9d00-2245b8d95a4a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dcdd4a2-30d7-4c45-8f10-5d0173bca78f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d739cb04-51f1-48f9-a8a5-8c0b2091fb2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e4ddeeb-5b11-41a7-a4e3-0ff8c2cd6aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cdd28a4-cc5c-4a95-a355-b0352b26a350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d62e5dc0-c833-455c-ac35-e24b16c54f7c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9024c27-ea8a-45cc-bee8-f314a6f28409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a1d5329-c523-4c31-b2a3-3a205e3e1c4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b1a617-eb53-4acd-bca9-e3a9f23e24f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7129197-1664-410f-b235-98de90c37443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9650c960-8a24-4f73-a5de-e65f49126bca",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff95c5a7-361f-4283-9bd1-e86b86f6a2a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2132c66b-cd36-4bdd-8fc0-2babca51ff39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e55c2a29-e387-4b26-b496-1d6ed2bfaa54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a892571-f6a9-4bd0-8cae-4f4c5fd40484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "231efda1-863f-4c19-be63-f51240339ad2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea29d36-bbd7-46d0-b2c2-3e65dbe3dc3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15a99718-802f-418b-b839-6680dff829b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce7d37b-695a-4a66-bbdf-25ec8045fdbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d948c431-31e6-4043-a21f-1360a4d00673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad7563af-674e-4cff-8a62-a472a9bc734f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "886fc783-a20d-456a-b570-ecd089faea91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06114b48-8510-49d9-8305-b42d87032946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "436316fa-fff7-47ca-88d3-635c02dac650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22525878-7db5-40ad-ba62-567e0fdab899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de8ff329-a6b4-4c05-99a5-7ff2e9a45152",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f98d7e-d055-4038-9030-28686c178a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36ad48be-2fb8-4c59-96af-2bd6586874ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21959a4b-28ae-4ffa-a559-96bd1747d633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c34e11cf-3fdf-4ca3-a8eb-8ef5ec5ba55c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25aced74-cfc8-413d-8b31-820951677012",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f3f40c5-182f-463f-9a8f-e778fabe99b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa14d4f4-4a43-4522-9fd3-b3a45542102c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d295d32-aa44-42d8-8bf1-59fa1ae1abce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc86321f-ef1c-4091-bf7d-4553a1634a1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d72b8383-125e-4964-96a7-54c0b6974b2d",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2429f6a9-84c1-45b6-9dd1-c51043687bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ecbf4ab-beea-47b1-aa49-4d73b2bffd6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "249be68b-362f-4832-a395-eb09f1faff65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea57fbba-b2fc-464a-b68d-79f5bbf80e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5edd5ea6-ce78-452e-95b6-c4ffa185f4c5",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcfc6f98-8e21-4202-8473-559c824e12f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3e8d3e9-5a28-4b2e-b2bf-70f30f3eaaf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5640d27-438b-4c1e-a242-fb3fe989d52c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34d0c3bb-4588-4aef-90be-19d0b88214f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414d997b-a7cd-4930-9771-39963e7d590c",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "620eecab-9b5b-4d3d-a6f6-471e7a8d436a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79faca77-831d-45f9-a96b-1236f3f0b187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "470cfbf3-6850-465c-8b69-405dd7772310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "768da89d-1e5c-4ff7-9062-3bda72c5215f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef7818b3-f974-49c6-bfe8-3bcdc616d484",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b925c7-ca76-4dcb-8dab-e403539daa2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1e1e78b-2da5-4e3a-b5f6-67b5653acc6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c58ce5-e517-4945-b107-05f9b4628b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cba4bd3-5330-4074-a92a-befa9bb4c10e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "982a3475-d5ef-4a52-a79c-ff664f6ef7a8",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6926c088-6d1a-4029-80c4-4e338eed4f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fed0b14a-114b-4441-8a8a-eb336a50412a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef9f598-d72a-4127-934c-6b488635f837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4f40263-2a35-40b9-ac1e-5c48992c1cce"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d1b39e19-899e-4324-bd11-53429b1695a0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b7dc8b7d-d7db-4681-9648-3e6ddab44347",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f8c07f-2ee5-494e-881f-d922b13766fb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fe283975-0671-42b3-bb9f-cc1c14cb1036"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "842dba83-31ef-43a2-bf35-fcb0135e9e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9fe8d5fc-cf51-4e56-bc06-16464397d06e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1e0d3b3e-6b74-4da3-9ece-f60198a5567a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c081f778-d3f5-42bb-9b99-77d59321ab75"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "50d79676-0b63-4f1d-add1-db6a3830a0c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c7a087d8-40ea-42e1-b15b-291a0faa5a20"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "402397d5-1f84-472a-ab16-48ea686d0d83",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b0e3720c-f595-46bc-9b19-163e9e746b9c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "08c0ac10-7934-40d1-9b12-69632bc49ee0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "865a1352-969e-40b7-b027-3a418cbe784c"
            }
          }
        ]
      },
      {
        "id": "0c54c4e0-814f-4f76-83de-d0dca24117f6",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f7f53011-12ad-4108-814f-bba55f9f0d99",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d8055c8f-1b2b-47c1-ad36-34f76950c044",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c9474ef5-2cbe-47f9-8d4d-92e8c8f492fa",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9fadd0d-d3a3-4316-b157-0be40af5e45c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37bb33e4-693c-4c1d-8985-310483179ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b43678af-4bd3-4280-85cc-74a7ce734a34",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b1d555c-de9e-4462-a1be-d8281e1c78eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b0fba8f-cc9a-4da8-a105-8a35b39b24ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac574735-af55-4ead-820b-de82fd31878a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d182ee2-87d6-457c-bf8c-6df5b5c18b12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc18f6bb-0189-4179-8b0b-d7694e984382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18876f10-7146-40a1-9f59-5f28797b1f1b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdde5335-a2ae-4a52-827c-baa071beddf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5992a98b-6b52-4a27-98ff-ebf81837f45d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5342c6-e464-4904-adbb-8ec08058b613",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe44b93-72aa-4764-8c64-2702d18b7bb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4e160a8-6a82-42a9-a2da-cc939c7e3ce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf0fe05-c51d-4102-aa11-f496f6456ca9",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73315662-5546-404a-903a-8c6afd5cb5bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5622b59-7a78-401f-97ee-c99f4eb9623a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d10a75-b57e-4625-ab52-8873b0abfea6",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4dc97a7-9e70-4e97-896b-4f108f93374c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d03a4da4-5dd9-44c4-8012-0bedccccab75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8713f917-9d28-496f-81f5-721d3b055788",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2798027f-ddf5-414c-9f3a-cb1a77d72dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5be891f1-6f5b-4896-bb1e-25b112c97af4",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4472b75-9a12-448b-8168-7250f4f8d736",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8381d986-53c0-4317-b47b-15a41bd9c1b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb3d154-8e30-461a-9de3-ec13810ffb1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4600dae-61f8-4f60-8cb3-5dbb66af98fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f05e18d-e77c-427f-a9d8-5e6818b4c2ef",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43889680-675c-477e-8d5f-2d953e01aaea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c51428b0-9d78-4d9e-a0a5-586b0b507a6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee59bcc-65f7-4dc0-85fb-d9ace41fe3f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "332057bf-ad3b-400a-8086-9d3edcc71262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d8e0f1-815e-41e8-b071-5c4cb36e8911",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecf5fb59-a0f5-47cd-84c6-b41c8e2618e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54c2bfec-b634-458b-bda4-ccec11fa7e74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd9c1a4-435b-420a-a1fe-ee912895a046",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f6b83fc-9100-4205-9385-f65b83fec4e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81eb3da0-bc6e-4938-a84c-a39c4f7c938f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bccf8f46-2e7d-49cd-a6e4-f16809e33383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "574ff761-e585-4256-b8f7-c26402dfc36e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91743601-3154-4841-baef-8331e19b3f89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e781170b-98f7-44e1-a876-18fb7ec8eec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd8f3e8-85b9-4227-8d10-926fa4a8c6d7",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40bffadf-d0b8-4c33-8272-c0b2f5e1c7a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf4709cb-b8c8-45fe-a3e2-872b26936167"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d531321-661a-43f5-a13f-4b50f082a3dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "048f6de0-cc9e-4d71-bcb2-baeba3bcf061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "257fd626-013f-4d22-bda8-3d3b5055cce8",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e747df-d95f-432e-959c-2fd8193b33eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbf6797b-e24a-4c45-bd20-2e65e5c5a3b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cefbec30-aa35-4adc-8eb0-64dc6950cbdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b8ca73c-7773-4aa9-a6ab-2362b3dcdf9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f111a72a-f28b-4a90-bac4-30038094e525",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "444d1bd3-ee9b-4508-9e5a-0171112c3946",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8bedcca-17c7-44cb-a3b0-8533c64cbbbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4024a86b-4e17-4800-9621-26fb09c3a7a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2529a8d-5bfc-42f6-baf9-e818de48fd60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69198797-d95f-4fc2-b995-a29658c3983b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52fbceca-1c7d-4376-9c02-8262fe9b182f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "deb7f3dd-517c-484b-b41d-8a264e24121a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fcbbb31-090a-427c-a7ed-cbfe90d6ea20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17bc4073-1088-4958-8f99-a96a0bbee6d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7191d3e5-7685-41b3-a81a-5f872b405a7d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c842ca9-75a8-4556-9433-14c3111d7eec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb2a998c-78c9-40c3-9b4e-961e8c1eb136"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e188b988-1453-4ed5-b84f-a956db9702a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ef3b425-a7d1-402b-b10e-0701a6dceec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c101981-4a25-41b5-9064-b721977dadba",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd4711b-1dce-4462-8018-2db53d95cdc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4ef08b7-61d3-49db-8b6e-ef92769603d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "118dd473-f0a8-4a9b-9c5c-04e873aeb493",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0efd123-ad95-48e1-94ed-2efd375044c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c70eb3a1-5c0c-40f1-adfa-f651320ba060",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a12f4b0-c7ba-42ff-8c25-9d7f4190b967",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95a2d067-2008-4882-b811-894393dbfa35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc9e44f-ad1a-485f-95d8-19a38637f730",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d3fb60d-1466-4edf-a332-bf82c85a6197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "536875c9-375d-4b6e-8159-249084132dda",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8384a4b-aeaf-43cb-af53-f059e04d4b59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f21b54ce-10fe-4341-9932-91fc5b2c6bcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7567a379-0110-4d4c-85bd-95d9c797d0ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c59595a9-3613-481c-a99c-e85f344d5342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c0d82a-4ab9-4509-a9c1-5958daff3007",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f1fcf1b-02e9-486a-b47a-c820e756a1fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8a88b2e-7b96-4519-9472-34d1d3295051"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5fb736f-d59a-4843-8a3f-b62a5e286aa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b88316e9-1fb5-4002-b35f-ba5ea01c9839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf42b42-876f-4e34-aa59-7cb1096fba82",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5641740-9cd1-498a-883b-8c23c80f9402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb01821b-0bca-493f-9912-935934df05f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a75331-a82f-4735-aa76-a657254d09dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b41fac6-89f9-4dd9-bc0b-3043fd62ad02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac7e511c-d738-4841-9278-be4e45938320",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a74b91ac-332e-4afb-9dac-0d3412c2246f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3df66438-5692-4a17-8914-beef70a7ad7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa70f508-3cc0-4113-a544-af78a9978a0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bd277d0-8a47-4894-a5b9-7433d22dc361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14708b4b-f4e7-4a98-933b-590c2c50e780",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e85541-fc8e-4c28-bb92-f8060d705f32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e830498-989e-47a7-8a3a-b89bd11975ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ed9f69-e270-4bc7-bec1-ee7efdc13f2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b03255e-9cd2-402a-83f8-cb1430478e91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c833a81d-aaac-4d2e-887f-db7ec73ae2fa",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ef5f67-dedf-40f0-a88d-34cce0341208",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c55afc7f-82dc-4bda-85bb-e4ab7f4c2aa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df53e8f-9590-4a70-917e-d1147a750dab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10fe2e51-eccf-45ce-8394-0c7654ad8d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd105f8-daed-45d4-823e-63011dd69200",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e2a061f-16b9-4741-a069-5a19e1197480",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eef00acd-95a3-440e-887d-d988b042b0f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5041c96-1eb3-406d-b9ce-223f1003ec09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33aeebe6-8445-45ff-a141-ffcfe267ea45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abddf84d-498b-4f27-adf6-720b45988aa8",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "039ea8b0-7621-4d8c-9666-adbd69586a62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78742ef8-d442-4ac4-ac07-f79586ecfdb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c18a874-4bad-44db-aa69-8f47f3cd5943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "818684ab-0fb4-4687-ab89-2e1e369ccfb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1682747-bff4-4c82-8c25-68ae5e5d44b9",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6a02d0d-9e8f-4b43-a420-8679a230507d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "590a6a4f-35d2-49ce-8bc7-9b6a69e92063"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df1433d7-0c2d-4f16-8ddb-114613e9fcf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40a557df-8b18-4241-8ee1-7f2b0f0986bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13936948-efc3-4f4b-9726-15046a00a5ab",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66bc0975-9ea1-4319-a0d7-2673b1c2ecd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "581be750-f28b-4d81-baa1-ebbeea710781"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cbef5c1-c4af-4083-9992-19a857797853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58abc866-491e-4a9c-8e3a-bb6771c88a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ade9939-d52f-42ce-8d4b-c4d841ffe603",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32d2727c-538d-4aca-bc2b-1d19727889d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a468b50-d396-4c5a-83e1-3559ed79a663"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc0d20d-5bf6-415b-a2e3-9611561ec380",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d61b8e3-f70f-471b-a68e-dbd5734f1229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26776706-0533-4d27-b34a-02241362132e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8da357fe-a9af-47f8-89d9-e52d8259658d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd337b60-883e-4345-b82f-8adc36a2671c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "477dcdf0-bcb1-4020-be7e-fa56182fbeda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f540c9da-3dcd-45ad-a263-d93e39819a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c49cc84b-4745-4572-856f-263266cbd74d",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33a18f53-c57a-4b18-a44f-93a7d5e4fc88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5eb1c33-ac5c-46c0-ac71-7c374ffbea18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9243b82-04e1-453a-84ff-19a6eea5c10a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c061d18-0ef7-404d-89b1-bf35db394133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e26cf0c-5715-4a5f-9f2e-a12f959f0d8b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b703b2-867e-466c-98bb-c939384d74c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e6a09e5-27fa-4c72-a96f-972048ac5ca6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d6ff3d4-0f77-40e0-823f-9fbd84a6c90f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "482561f3-3ad8-477d-9ca3-0f9a2d3d8b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb45f39d-0ab7-4e53-80dc-462280b1dd0c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60fe158f-01fb-4230-b63f-2d24d0e8ba8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0564873c-8ff3-43ac-80b3-d7dfe5d1dc4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ea917b-5555-4af0-9d2b-a0051d7968f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54cf6e46-e337-4f4c-bf55-81741cb281d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c80631a-eddb-493e-aee8-9ec56950141d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c73661-35f6-4976-a80e-02e535d6c374",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4cfccb8-9474-4724-b680-de79c253a225"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f96b1b-0144-44ba-a14c-86f358b55ffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66278341-3c25-44af-a987-30b8b037efe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bebe015-2fce-41c2-a8de-c1d94bcace07",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf3a071-8e42-4671-bb35-605bc2245905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1af97484-b008-4d62-804a-615e18320a26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0117f9bc-d7a6-4cc2-b029-547a4e8b61f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8b19b8b-27c9-4caf-8f4c-a59b8f454a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b15d7c-7aa7-4607-9914-5ebe3ad2fc84",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36356e98-d60d-42e1-8ea6-cdd8cd837cda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bd9a5f8-17d7-474f-a3f2-8df283083667"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05707ee2-2e5c-4236-8175-7538462f554e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7b56412-d000-4533-9f87-2025e5218c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6358d354-bbed-4249-be13-b90498ae464f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e1ea44-bf4a-4dac-91f8-db6546b103a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ed5b69e-f048-4427-b3f6-634349df6753"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f56b15b-3c34-4a36-bcde-1f9d0fb0046c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bee64133-f65d-477c-9e2c-a3bb5d30af4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d96a9b4d-df61-4084-b8d4-62d74fdac1e5",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33db3a65-8bce-42dd-b64c-ffc5b70b0321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fb2f6b9-a21a-4d96-844a-b82de5db7aa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ea62a86-0a85-4e8d-bb75-57cc2b6a3d6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d21906de-dbea-4e4e-81e8-217f349ee1ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b75a225-641e-4311-a382-51900d9cee07",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c7f3bb-9ee0-4a55-8202-d170b312f7af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fec7e77a-a4b9-4a09-a0a9-56df7f3c5e33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf771f5-0307-454a-b9f7-560db22711b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67db0c94-9297-4a74-81a7-a921306976f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43472769-7709-409a-a237-c089bfd464da",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9560045c-c885-4b5d-87d2-3915b39f33b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "444d08ff-fc1f-4495-b42b-fad6ffe64867"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "007f7e73-7186-42bf-86d4-87feb3a67579",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "165de24e-2d5d-40f6-910a-14854b05e524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de12d507-6f69-4474-ba51-5b99021a153f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de1f87a8-a1c6-43f7-a0b0-b0b88afa92d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f543a3f-e095-4af5-b842-7551f5321501"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efb9986a-11de-4ef4-97fa-9a19e893af6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d912f757-635f-404a-8116-bb5c7b7e964d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b771d694-dd86-4681-bb5a-951c512dd7f0",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d08e8dc-2a4b-40b9-b451-57a0fceacbeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45e5a18c-a9db-4542-9959-9ac47b93a9f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf0f6671-dbcd-402d-9e2e-a408abe780c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a340ecce-e3eb-49f2-a86b-27655c16b800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e067bef-67e2-4509-ac94-b5063218ed2c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "233767b4-4541-461f-b4bb-af12714962ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b6afad1-6e0d-481e-b287-e676c960d341"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ffce5d-f63c-4daf-97b0-6ecea9995bd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72caee51-38a8-4dec-9603-b0c44f0e9e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db5e935-318b-421e-8788-867f0b144745",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03db6443-6c81-4847-ab6f-d142af571249",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba46176e-10ac-4129-87ff-47fd0687102e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0d29b6-cf94-40fe-b7af-f296faf0d8a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc2e158a-07d2-4e5a-b6db-afb366ab1cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27ebdcfe-04c4-4be6-92ef-d5ec571989d4",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4495dd52-bb00-4373-98d0-7e409d5db892",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94b09ef8-dbb4-4e51-9b55-e579689dafd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "016f130d-647c-473e-ba96-0a7aa15392cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91103fba-fd85-4c2b-a0b1-545617779deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "859d5af8-1a54-4306-8f34-1477b07f659c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a62bc9b-3578-4744-b822-5cfc3abd060c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eda4396-e8b2-4b39-867d-dd06e0355e38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a6bbc02-871d-41f9-a456-1f32ce484d0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c10d1975-5a21-4204-88bc-1268b522b6b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1248209-0396-4873-be89-cb67fa6adf8a",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de5a980-4c37-4227-9477-3dd0b5f5cb84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d86821e2-058b-4a9e-aa99-99ece42d32de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f40234-3f2f-469f-bb47-d0aca7606559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4c1cb00-dc39-48c3-9489-acf6ac255df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a335548-5b6c-4928-93ab-b706faae8bbe",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "141f74a1-a92c-46f1-8d2d-00dea94dc911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a698fffd-c86a-4c83-992f-cbb4a3f48494"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a05e1331-e716-4306-9959-16e5809474be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f958785-5e1f-4228-8f00-7f73d6ee4c0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab85913d-7d46-4a81-965b-b149119cdc3b",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88957f3d-68d2-4d41-8368-8631fa938e7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "469c8b38-1f96-4c18-8d40-7dc2d3daa7a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8183091-59a1-48e5-b641-d7e92b76d571",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d01bb1e-cb07-4215-89ab-00eb5dda0d7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "904ce2a0-58b6-4826-a287-5e67e3a20dcc",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c03083-80ab-4bd1-836e-a5d3a4d006b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f83c81e-1502-4957-8c6c-8c079781893e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "844ec853-b195-497c-aa43-4b4e69842cb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1baf04f-afe7-425b-a5c3-85c08c19a197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "565aa6ce-fe29-49c5-b7d5-4c10c20cdfe0",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe4d1ef-8dca-45aa-a5a8-860079c3098d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7676597-19f6-4bef-a3f6-bb81c8cdd963"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f62b3556-27f9-4c52-af4e-53b5862a4afb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a727407b-73da-48da-a364-1b24a0e78dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1cfb93d-d88f-454d-ba77-72b52e1411c7",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dfcbd2b-f2cc-4ffd-aef5-ff382450c89d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9d98dc8-4a32-4a7f-bd38-610902e39288"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa13452-dfdf-4313-8af3-33dcaa9ffecb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f284f9be-8aba-47f2-8a35-f65ef1785114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d08e2812-5d0a-4915-9020-0e46829660ef",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df57bb39-51b9-4171-9dcf-773c641de549",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5321f183-dc50-4d50-9621-afc89ae015c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d021c7c-39a2-4a38-a842-82b87b01cb03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eb7b9cd-8bf2-4035-bcc3-be3ea4c19f5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "becad1d8-82c0-4e37-bfd6-3fc082674a6e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf6e2d9-174c-4a52-9e4c-705f74abfa4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc1ec443-659d-45eb-9db7-144d08466f74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8853cb4e-a112-40fb-a189-c94ddd9f2694",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73f3ac4e-39cb-4293-a292-5797a73460b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c50442ef-01a9-4287-8340-655325402ddc",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4f1fb1a-05de-4e52-8ef3-8a44b6db58a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "370d63e1-eed7-4c4e-890e-9c46f12cfafc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f104d03-3bc8-4355-b729-6c219cc45f58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c60eee3d-664f-4278-b04d-b929c9a540f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c8a3f8d-7ee3-446c-bf00-36084333a398",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21682343-035f-4622-8e0c-6711eddff4c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0da3336f-48cb-4158-aaa4-509af6349e4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da864e0-631b-41c0-82ad-be26d7aafab5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa0972a4-d058-4a39-9dcc-0c9161f97c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68719273-28db-4620-bd64-7c1e037e254e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f3ddfe-1fed-441f-9de4-d0bf1b7d878d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b789e0a1-3d78-40b4-b022-66f38a39a1af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3fed2e0-9171-44c5-83c0-f012ab8d98de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75290797-f954-4425-adb9-8a699059c789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0096133-e7d1-47d4-ae0e-734f8d9731ec",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f443914-7a39-41b5-8f56-2ba9f60f5c17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7c40dd0-fc31-4855-b358-7d45cec1e250"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e1fde35-b726-43f2-9d3c-80954492c92c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f745bdf-187a-49db-8553-9b53955594fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c3e3e79-2cc8-4fe7-9062-8649d2910533",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55edfe01-f1ce-40c9-82dc-986e563b2805",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a094ef2-8e51-440e-ab7d-b9078e363cc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "416618c4-6260-451b-a18e-14999063ff9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7244a397-2433-43e7-b3c3-b46ee9215f7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd2a798-fab1-481a-9400-208737f30b9e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c0af03-188f-4e9b-80f9-d0f027cfd10c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05803276-f16a-4ac2-b27e-801921056f1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a04e4f6-175d-4fbf-96f7-723b99ff21ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea5f43bb-dbf3-49d4-ac0e-a0bf3bc6dc5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f58c534-0e17-4eef-a6ad-0f5bb9f48a25",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdcd8cb4-3a0a-4e45-9912-ced7690f65ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "950a1733-5c7e-4121-b6eb-03866f9fa1b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5db1789-d4df-421d-ba3c-30427efccbc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6636cf32-5893-421c-bec2-d18f75074cc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bca14e3-b487-4389-af4f-c45a16e5554b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c969a8-930d-4f81-8761-34fb8a36a006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5236abc4-4e7f-43a6-8cb2-4ec51bab7319"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73d4f43-6bff-4f79-be50-c050d20a54b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16eff33d-d6ed-4eb6-9da6-c546196c4c01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30bd67d9-b088-497d-8ab3-f0d7677d73a0",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed8df12-486c-47aa-aa48-3b23bfa19889",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b59583e-0989-4192-9075-25c3456ec4fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed1c4733-9d96-419f-b914-6197b3e4f89d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c0a3bb1-83b2-4693-8869-f990e727989e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c66a14-8c8c-4298-a76d-d556903fd196",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "688ab630-dfdd-4e30-b1b4-43d346911f25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fe2ca2e-4f61-49bc-89bf-240baccf7155"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b537fd0-2ed0-440a-a54a-5d1fa7ab3b24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f54559e5-9d42-4bff-adc5-11c6169155cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4524738-7e54-4023-a8a9-ee5c44e87f26",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b99dc8-a9dc-41e9-afba-57f4737ab1f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d744e0e5-f718-48e0-85bd-f4b7d76a324e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df8d7da-5c19-4d6d-b426-2a72f00b4693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5c30c88-3d57-4276-85c0-2519316a1075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edc74bf6-b653-419d-96b8-22b936e379a2",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaf6eaae-68f8-4644-abdc-f4e120070125",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74860420-5f44-46c5-b9e1-7f1df51cf248"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8020452d-372f-4d5b-ba91-17831e3b6729",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2843f437-4329-4e02-901a-29da19c1bc4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32694dcb-026d-435d-a154-0a65fd8ae773",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2653adda-5a1d-4355-aa25-4d9a47090588",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0663bcdd-bc41-4c1b-830b-585e560c8a79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7339bfff-970d-44c3-b3db-385abef4471d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a8991bb-9a6c-425a-b2cc-8df8c90e4e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e774502-42d5-46f6-b348-1ee6a0eca86a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f5ea2a-f07d-44d6-9230-f928f7319283",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5de437a-4078-4c2a-9e45-294f3f9271e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e49e6695-5346-44e4-a223-cc87325b3d7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c57ea97d-f279-4bbb-b354-f93e2fbb4efb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "307936b5-02c6-4626-a2b1-af39fdbad646",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3724eba-68d3-4814-a1a9-954bb20c9341",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfdd5c8c-cf0e-4b3b-bb40-3b449a925b63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6c89b9b-9874-4ad0-98ce-7496a6c2df92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f7f2e18-dbc0-40ff-92cf-9df740954dce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e49db05-5abb-4590-8a15-3e7674a126c7",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82604775-f41e-4f56-b585-9d014b7bd29a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38557f52-ea2c-445a-88c9-a7a5d807f5ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b67565fd-4846-4c5f-ae7d-fe611eb2fd05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bf408cb-ff08-4d5c-856b-0847e0856874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f62a20c4-f6a9-4fb6-8fb1-d101167f424e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a5c69b-ae75-4aa6-bfe0-5248c983dab8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b1c2b15-bd6d-4f11-b8e6-93e85fdc821b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ed94b7-82df-4478-8d80-300b92e2e117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3ffd89f-ced7-4541-b0d5-3f83f4af44ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "371bf730-c5f6-4ac0-bf54-671fb3798565",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59bc2507-c83e-4570-817f-623a6263bf0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa358738-ba55-4159-ad98-682f8302a5db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dc443b0-1091-40d2-97db-2b39683b40d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a70bd796-950d-4c4b-9f62-00347da33697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff94246-4667-41f4-91be-2790d1af1145",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fe89ca3-56e9-4679-983f-2225a9eb2a6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d466d85-e1aa-49bc-8be7-3015d67e6aae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d60bded-1d2a-4be6-8b30-69a7a059f62e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44b5addc-ed46-47f0-8e63-8579e76c2d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc44286-8c1f-4b66-a70b-bb3f6b21f7e4",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a45f6fd-1249-416b-a063-6c61a2043dd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a59e598c-0a9b-4078-bd67-99644c2d12bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada3d7dd-3765-4b94-be3f-86e41774bbe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c1535c0-e05e-4d75-b265-49833f20a9b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53799c7a-e701-4ad4-8980-b1b3682d6936",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee8d200-bc7e-4c52-bcc9-6e226c957aa2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d715b81-0c0c-4b17-a682-0341c06fffa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c646fe58-60f6-4b1c-ac95-00a0774479c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5563b9a5-f442-472a-848c-8e056dba37ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c363578-a5bf-4e58-b3f7-003b203ce5af",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c16de68a-9c16-4821-805f-bca32c3e8d15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d54ffe0-e669-4596-8370-0c4da2d046ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "657d7c8a-ac15-42cd-879f-ef62d833db1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f62363f7-83c9-4049-bb25-7e5b9d93b04a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b00164ec-3590-4548-ace4-73dfab481e61",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b36dd5aa-b9e4-4668-bf56-605b33c1defd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fffe7a0-7147-4407-ac38-f667b8f97a73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8906f97-9569-4ab7-a278-36f32ab1045c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ab8b720-de02-4162-9a7e-4f3e1df205b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a56b089f-d34a-4a55-93f7-6ca62340d9e3",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c3fa65b-4051-4b4d-9b18-8faabe7a1fc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10a71e13-39de-4704-a33d-b66034440e2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb6f7688-6dc9-442b-adf4-b6067b880473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5814ac8c-b47b-46c9-94d0-09e111249ec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20412f3e-5c64-4410-acd3-68960df6209c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a30d0ec-6fcf-45c4-8b33-fdc139963cb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "066c2ae8-c8ea-4192-a570-6ed35ce4cd14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bd7b7ad-0827-4039-bd4e-24c770e3a265",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1ca8c9e-909a-4a53-921e-21027ccc5d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be4604ea-838d-4caa-83d6-40d82ae5ee1c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23d09c3e-0d96-45f9-9710-22dbc507c210",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33b3a04f-af2f-4570-8b50-9917ea066406"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "413996e9-729b-4763-bbb5-92247aa69f8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e52ee808-71f2-45e3-a9c0-a30921e73ec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1abae35-5f88-4624-8c9e-85a69b13796c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23372ab8-3d48-4b16-b793-09241850dcab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1b11136-5e3f-4b78-80e6-397d837db966"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b795a8-1b54-40fc-9c71-e5836a66c1f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38761e95-7026-4a70-ac13-6c6925ede38d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5c5cd08-a077-44a0-85b6-31fe877b865a",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb9a5fb-3dc1-42e3-ba60-acd23d1d08ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd606500-b53a-45a9-a24a-785eaeecb020"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92648139-0eb8-40af-bec0-945607e1e62d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2d3c9af-1f9d-40ae-8741-7b278937c8a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a17d16c5-016b-4f33-ba2d-cc994690ef54",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "805bf444-617b-4f56-b1c8-c38e9d11cf8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e8f3ea0-def5-474b-8e07-4adda4adb65e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b62e4d-a386-4dd0-ad26-f2c5475afb2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73e78f34-9b21-44fc-8ee9-d57d64b2004d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd1ad106-e289-4ff5-a45b-5dc203fd1048",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b65d6ee-32f6-4758-b5eb-29dc697c6510",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "847274ad-7c6c-45ed-becf-db0a928d151f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c9e3e4e-a8ac-4636-90fe-da6eb10fafc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af8f56b9-c736-428a-b70f-03b62fd9b114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5fc480a-9a14-46da-8b07-2ca621c898aa",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b71ec4e6-649c-4d6c-ba63-33c4d0ff9aba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "741ebc90-3a47-41fc-9689-eeedbdb28a0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d6958f5-f795-4811-bf74-399dfde7655f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09a8de5c-8f62-46dd-9e76-08f7777736fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a06683-f15a-4574-86b9-f572d7b1bf96",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a3fc707-8cfe-497c-8bfb-d3e8cc6bc8be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc945cb3-483b-4ab2-9c56-741ab1b65691"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b5bd84-2843-4cd8-8b6a-76085b8987e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5761235-521a-476a-9b8f-b20a841bf51b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e34504-11e2-4fa8-8d6b-b2b840e7bdc1",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "220a0eaa-c74f-47dc-80fc-fee9e31a046c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db7ab4f8-6a36-4076-abb4-c80bb91ae93e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8618ad5b-de53-44e1-bf79-052e5b12731b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36841155-ba60-449b-9e5a-8224ebe8359b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c9b365f-e5f7-4a57-8014-28d5d7b24ce0",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "791a4e1e-fa54-46de-bb99-14877a40ad81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56f8634c-bd29-4442-bbae-e29e9d200e1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ff9290-0fff-47cd-b313-9c6023a02289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91b429d0-6d1e-428a-bd59-c974c818ae7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf45e61-a360-486a-911e-56e2d1e80182",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c719871-2304-4a69-8cf5-a779921f9f09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fc390e2-96d1-478b-890d-ba1b61fc1cc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db071e34-1fd7-4887-9af9-ce271f292bac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3ea1584-8e8e-4024-9967-ee526c07693e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b97fba3-d14f-41ce-b9b3-f5e067f2eca5",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cf3db45-2f8e-4e4b-b950-93dfb466ca60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a5b3470-3814-4e00-8de8-287c7e5fc839"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8204065-bf60-4453-8192-3613e3084819",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f07e26b-134a-4eec-9a21-d5487772c4f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b640ee00-9e5d-4367-bdf8-ec7c90ce0a04",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9cea672-e677-4ca2-a284-cfa7cd6343da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bce19ea-b074-4d63-b9b6-e3f03f9ece09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc62d37-f2bf-4ff2-9c48-17a29cb1af93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9f45373-d842-467a-b0c3-66965eb1e713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f56906c3-0488-4e07-872c-061eb3339aea",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d366250-37c4-4b6f-8f4e-390187cc5064",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a248955d-1cff-4f7e-a923-f4ffca57d00c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f8776d4-e7e0-4df6-8a8d-57d6417839c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dc2aa85-cdfc-477c-8282-0a1e74681155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad3d008c-e9ef-4c85-bc85-32abf1e81cca",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d3457cf-c708-46f7-8b5c-64d8c78b0510",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dd09333-a8ce-42c4-80e2-60fe348fbedb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa8de676-e2df-43b5-8898-0804356b08e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "890c4009-5dd0-4c89-bdc0-e6325e8f4699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5222d801-cf4a-4cc5-bd56-063d1c4b7e10",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f7c7d97-744b-4837-a9bf-7b6fe7a1b9f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d054417d-e06a-4236-a975-d79fce875cf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b380f791-f77a-4831-bcf5-02c0161ab3b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e608da8-0ba0-4afa-951a-e3e5f0e5a48a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc3264e-070c-49da-af13-2ef4691a5208",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f798e5-ebe9-4607-88e8-6de938a2f822",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6d70d70-c49d-4db4-a2f6-3d9801f52d8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e555b856-9478-4a19-892b-27754249584b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50ea9bf0-7180-48f9-895c-e493434282dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "591d29e0-2b76-477f-9299-46273c9854ab",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "780ed179-cab5-4602-9078-2ac9c9323c21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e800ce58-7bb0-4668-b1c1-f0adcf12297e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c09a8d66-b622-4f6e-a871-605515851e72",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5237802-361d-4e5a-a86c-3d42614e7180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f7201c-3a6a-491b-85fb-7ad2606e33d6",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5c9b2f0-c347-4d15-8a1f-e1337263d542",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03220040-c5a6-469b-9a65-9a176912fa17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71af620d-9845-4551-b3b8-567252708581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c3177d6-e0b3-46dd-8ddc-28d6a13f8ce5"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "39c11da2-845d-48f7-8e1a-1a7639ac5c34",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f224082-b4dc-47cb-931b-9c6774627f2f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e4ca3798-6ccb-4b02-bd34-59b9951bc5fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7062c282-fca2-4886-9388-739334838323"
                    }
                  }
                ]
              },
              {
                "id": "8eadae7e-39c1-4684-ad58-d4c7fe976412",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c33e56f3-2be1-4af6-aeab-80f683172d0b",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f4a521-3ad0-4434-a983-862e54f507f3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ad0e1f45-ef0c-4929-9eb5-a3bc281ef94f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca1c57d6-657b-47f1-bd05-c09e6655337e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f1d679e7-16c7-47e4-8e8b-260b2a7f5c88"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "088d8600-33c8-4be9-b805-8f0b5f462e78",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9fa8331a-27d3-4d69-841d-f67c4c3fffa1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a911efd1-81b6-4bb6-a84e-c04da5825cce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8ec9dfe2-64c5-47f9-8652-2b62b8ac8541"
                    }
                  }
                ]
              },
              {
                "id": "0b6ff148-49ce-4955-8479-049810e559b8",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "68d5332e-98f4-4f2a-8545-4765c4cac42b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08079348-389d-40ae-9dec-6162f8e18aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "8df709e3-a1a5-494f-b91e-5f68d482aea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e31aad-a574-431a-afe8-6c8d716ecf3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6d5f8df-7997-4491-9a0c-dc9fc67087f2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "017fc91c-f04a-421b-831f-25623790a58f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ea4d22e3-4c6f-41ea-8836-d01e084db3ce",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d77d86bc-946a-4181-87e1-76b6d3509334",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fa0e25af-ffd3-4446-b9c8-5674b82a6370"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c53d0a0-348f-424c-ad46-3183bc787c4c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e499978c-25e4-474b-a7c5-18a7398c8a49"
                    }
                  }
                ]
              },
              {
                "id": "e2138d82-a584-4939-8038-99c8ad469bde",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e2b2baf-6e60-4b8f-bb4c-d951ff534b53",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7f1e65c6-b6b8-4ea2-baa4-6f6a27d8b9c3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3fdf3b1-57e6-4a9d-801d-b24c5aebd6b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "46341ef2-743e-4a30-9fcc-ca38264a9bc4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3e725661-76d6-4c60-8da0-ce81716ebb12",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b2e5fadd-ee03-45ec-9069-2960f17d5db9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ad5300c3-b309-4dc4-97d3-bf1a8df2e2e7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9354f138-d5ce-401b-a7aa-f0074b569878"
            }
          }
        ]
      },
      {
        "id": "140b19e0-d6af-4cfd-8f89-8981174d72ca",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a66e5afb-c770-414b-967c-bbc4c2df3f06",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a1902122-e0e2-42d8-9252-4ee3f6cbd18b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "17990aab-12db-421f-910c-c6ff6ad8f1ba",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5717f2ad-2810-4a67-af40-4771aae632a3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "69134426-260a-421c-8285-7eb7477ad0b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "338b65b6-cd95-4527-b2ba-133852973038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a5e4a77c-7b3d-4f42-aee3-cc54eaf64e4b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8bfa878d-49e5-4d10-bffd-83eb3d442325",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea39d538-5b40-4a05-af71-6bf6ada73a71"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "180fb5ed-d9b6-470d-9987-e63cf7b54100",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fc0c805c-937f-4bfc-9ca9-798082ff193f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c3c877d0-441d-4c60-b069-86cb0de2274a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e57df12e-88ed-49bb-a20d-82758f967f86"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7c91ef4e-4337-4d86-bdd9-ff3e4fa57678",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7fb4fe76-b0ec-442b-9d37-734895efd8e5"
            }
          }
        ]
      },
      {
        "id": "d0f87f82-051c-4823-8b2e-6477c2765610",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "20b6a256-9eee-46d0-ad76-b0ac463b046d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aaafaf69-eff6-45ac-a62f-32d8bb79fb89",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3b148751-5b3b-4c28-aba5-0d462d3575de",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da2a5ee-1b4e-45ec-99b8-7ffdabd70975",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee44955b-4bb3-47df-aefc-2b4962360b16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c195248-7dab-4006-b1a3-d5f0c3b62fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2c4ce469-472d-422b-9715-981ae25eab6f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1cc4f8af-f03c-4bce-a884-5c2020529a1c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63165224-dd22-4942-b666-1ee03199de03"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "460ccf54-0c31-4f63-8282-4c04d49b96a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7f1db279-c31e-40cb-b3b0-b0d580b52caf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "31bdd64b-3cb4-4a9e-8cce-cedd85dd0dce",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f91d7036-dbbe-4459-8bd0-a746a7fe005f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0b04aaca-a818-46c0-a25c-91a22035d1b8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4f0979b7-bb66-4948-a085-43c3eb54a426"
            }
          }
        ]
      },
      {
        "id": "ceb19f62-9cff-4fcc-9201-31a8b655636b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0ebb8575-8e61-4d4c-a68f-76d9f83c74d2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6e04d961-86cc-4cc0-a85f-459025ccf164",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e04afc05-cb26-4ee8-87af-281f2250d54e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76757fa5-7b27-4e08-9ba1-4175035694c3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "261a842e-fd3b-4eab-9833-533b8d24a2ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2207639-96df-437c-b3c7-c48f655805ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "05e5e5ff-20c9-438e-a7f4-ab15ff025490"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "195caeed-a094-4f10-bb0e-8a1d83c11d46",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a4339ec-29cd-43c2-93ed-cf61518ef00a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ca47266-a2f8-4f66-92d1-9b0f9c074681",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3eb34058-ec9f-4679-9633-485626880381"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f8e0ad85-e2d6-4dbf-8861-da376e9c8e22",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2b3c0c7b-f80b-4a80-a332-1f46a7f11b0b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "70eae740-8b4e-466b-a368-acd95d08e211",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9d14cc66-f53d-406a-b827-c5a91ac6f40c"
            }
          }
        ]
      },
      {
        "id": "eb254725-e143-493d-8b4c-f5670c5916db",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "02b33c59-a313-486b-a239-3f32997c79b8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3e0630ac-867c-4a8b-8d93-673e7584cbf7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "7c40f934-897a-4874-ba59-5ec1208270e7",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2a6d2e3d-889f-4115-bf15-c7f3f2bfaca0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3fe04ad8-ad4f-4489-81f6-228ec57cbfad",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 19
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 216.54929577464796,
      "responseMin": 15,
      "responseMax": 5944,
      "responseSd": 378.98202375639124,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1689642356699,
      "completed": 1689642430256
    },
    "executions": [
      {
        "id": "295c4876-9fa9-4f23-b8a2-e9ced12014fc",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "44f56365-09be-49ca-9920-7a8d7911b54d",
          "httpRequestId": "44c762e0-36f5-4bcf-80bb-bc0ef60840c9"
        },
        "item": {
          "id": "295c4876-9fa9-4f23-b8a2-e9ced12014fc",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "da1a6e5f-0f03-450c-ba4d-653a8c947702",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 0
        }
      },
      {
        "id": "447f56fe-15c6-46de-b597-287947214ca7",
        "cursor": {
          "ref": "57120729-e0e4-4aa9-931a-327abdee8f38",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c898ec65-3586-4f44-9a5c-304be022cd1e"
        },
        "item": {
          "id": "447f56fe-15c6-46de-b597-287947214ca7",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "bc4069a8-e925-4222-9d61-d7a64d18871c",
          "status": "OK",
          "code": 200,
          "responseTime": 15,
          "responseSize": 0
        }
      },
      {
        "id": "91145d00-401e-4191-82dc-001e57d9c622",
        "cursor": {
          "ref": "087cfe59-edf4-4cf0-9ed6-4d217b8a8509",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "5b32454a-c0fc-4bb6-a6db-bccfcdd7f331"
        },
        "item": {
          "id": "91145d00-401e-4191-82dc-001e57d9c622",
          "name": "did_json"
        },
        "response": {
          "id": "32a12b96-3d76-4b21-b743-c793bf4b8726",
          "status": "OK",
          "code": 200,
          "responseTime": 1246,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca4bbf66-ed4d-4486-86d0-a7976a0f8ad2",
        "cursor": {
          "ref": "bce60d3a-6b0c-446d-9303-7f6c1e32506d",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fa7240af-493a-4d12-aee4-39678f1be9fb"
        },
        "item": {
          "id": "ca4bbf66-ed4d-4486-86d0-a7976a0f8ad2",
          "name": "did:invalid"
        },
        "response": {
          "id": "0b76fc67-6945-4625-b478-02bbe8186cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca4bbf66-ed4d-4486-86d0-a7976a0f8ad2",
        "cursor": {
          "ref": "bce60d3a-6b0c-446d-9303-7f6c1e32506d",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fa7240af-493a-4d12-aee4-39678f1be9fb"
        },
        "item": {
          "id": "ca4bbf66-ed4d-4486-86d0-a7976a0f8ad2",
          "name": "did:invalid"
        },
        "response": {
          "id": "0b76fc67-6945-4625-b478-02bbe8186cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba419e80-c8a0-4dab-ba15-3acb654ce5c1",
        "cursor": {
          "ref": "065c3d92-3ab9-4041-a744-f9522131f38e",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "fa0f9b82-5774-4475-aaae-41f286a8a6bc"
        },
        "item": {
          "id": "ba419e80-c8a0-4dab-ba15-3acb654ce5c1",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "2dd23d84-2712-480a-8b12-ef8d94960e8e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 459,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c397b5dd-8516-4103-b06f-e5b4cbae21c4",
        "cursor": {
          "ref": "1927b32a-b02d-4231-ab63-24a55b5927f9",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "52f846d2-ca3c-4f5f-b6fb-b6f5217b846b"
        },
        "item": {
          "id": "c397b5dd-8516-4103-b06f-e5b4cbae21c4",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "0b464da0-fffb-4c41-a605-85146460a39c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 257,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18083d8b-3747-46f5-b9b0-e823b39c580d",
        "cursor": {
          "ref": "76190b8e-fbb5-4adf-a5ff-328f83f69d14",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "1a349b6d-c456-40c3-8406-ae487929f6a2"
        },
        "item": {
          "id": "18083d8b-3747-46f5-b9b0-e823b39c580d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "f219c57e-2543-4701-b7b8-aa7be94d538f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "548ddc16-b689-49a8-ada8-79aa669dd0eb",
        "cursor": {
          "ref": "b3ab5e3e-3491-400f-a58b-1894eca20600",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2e9395fc-ec81-4e32-afb9-e79927153690"
        },
        "item": {
          "id": "548ddc16-b689-49a8-ada8-79aa669dd0eb",
          "name": "identifiers"
        },
        "response": {
          "id": "dc7a550a-910b-4f57-acd8-a963b4ba1b82",
          "status": "OK",
          "code": 200,
          "responseTime": 1003,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f9276c-d209-4b58-8b0a-5e1c99c73b9c",
        "cursor": {
          "ref": "21b7e902-79b3-4256-aebb-11c2d76006cb",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "36fb0480-68a0-417f-ade1-8ab2b879e835"
        },
        "item": {
          "id": "70f9276c-d209-4b58-8b0a-5e1c99c73b9c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a09ef292-c761-4644-819c-6f632ac1e2a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6760f7-4143-443f-9aea-304b01fa5307",
        "cursor": {
          "ref": "60ff7b52-4a47-4e06-9371-57df637ad11d",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e4d9c703-0296-4331-8e68-fb918cccb7e8"
        },
        "item": {
          "id": "6a6760f7-4143-443f-9aea-304b01fa5307",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "2af463c6-8e6b-4280-ab02-058fedf205a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 976
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c4034f8-b0d0-446f-991d-c5f571804fc9",
        "cursor": {
          "ref": "9eca8832-3b7b-4092-99a5-c178486e95cf",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ff981d11-d234-4d17-985a-20da11e87293"
        },
        "item": {
          "id": "9c4034f8-b0d0-446f-991d-c5f571804fc9",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d8eb7dd5-d637-41b9-973f-ecf73f212a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 984
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd598e8b-c0be-4884-bf46-94d6764fe72f",
        "cursor": {
          "ref": "5793cde7-9f17-4151-a3b9-7a60855ade8b",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4f28ab85-4d3b-4fa4-a118-3cb2767d6894"
        },
        "item": {
          "id": "dd598e8b-c0be-4884-bf46-94d6764fe72f",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c3dcdbf1-74d1-4042-aba6-87bd0feeb683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd68ac6-3f24-41e4-8a79-332f5d67e08c",
        "cursor": {
          "ref": "0ef57fa3-e08a-4ac9-b0c1-fe35041e43db",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "8c733237-6967-4c8c-9bfc-f6da48d81404"
        },
        "item": {
          "id": "1fd68ac6-3f24-41e4-8a79-332f5d67e08c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "791f12ca-50d1-4423-be77-1d5e4371ab2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1db74516-e482-4873-ae3d-3dce7cec76cd",
        "cursor": {
          "ref": "b989e3cc-8f29-40ce-84be-8434bdc8a94b",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5acd219e-4e95-4374-97ba-6f6f363bd972"
        },
        "item": {
          "id": "1db74516-e482-4873-ae3d-3dce7cec76cd",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "4a658e3b-ddd7-4d77-9f5a-5d2df5213187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1030
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be07e5ec-ea7b-46e0-86ed-2118fd6db47b",
        "cursor": {
          "ref": "ed658058-73d5-4f03-a8f6-d70b5cab650e",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "23653b30-875f-40dd-bc8b-8875fc858eab"
        },
        "item": {
          "id": "be07e5ec-ea7b-46e0-86ed-2118fd6db47b",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "8166bafe-e659-4c3b-b4ae-11882a9c77d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7472a6c-b804-4432-99b6-704f346009e8",
        "cursor": {
          "ref": "f2af7e79-6980-4efd-94a9-5dc6a01eaa83",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "6a32b342-7cad-4955-b6a2-f239e094aba1"
        },
        "item": {
          "id": "b7472a6c-b804-4432-99b6-704f346009e8",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8972bde5-6bfc-47d8-9574-b4843def30f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1068
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad7213d4-a970-48e9-b2b9-861ccdf029cf",
        "cursor": {
          "ref": "9896b6c9-9752-44bf-ba0d-d634e14959f5",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "443ff06b-a1f1-424c-a2df-6ec918c3588d"
        },
        "item": {
          "id": "ad7213d4-a970-48e9-b2b9-861ccdf029cf",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "25fcc254-69dd-4610-96e6-57f33685613f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ab1c2a-efa8-40a5-ae7d-a710a30124e7",
        "cursor": {
          "ref": "35dfaac1-1a0a-449e-a437-96681e063487",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b3dc17d6-b863-4f61-ab58-cb55ed3e4882"
        },
        "item": {
          "id": "39ab1c2a-efa8-40a5-ae7d-a710a30124e7",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "36691251-7e20-439f-9785-45a028d0775f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a14314d3-11e2-460b-b5b9-cb72bc6397e9",
        "cursor": {
          "ref": "471c7b9c-a6eb-4434-92d1-5d8a861e75b1",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b613c796-ec2a-4795-8d7a-9b42261bb0dc"
        },
        "item": {
          "id": "a14314d3-11e2-460b-b5b9-cb72bc6397e9",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "173fd192-9a07-422a-bba6-0c1eb11a12dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1036
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "847fba1f-a83b-42d9-8d19-aa395e8a3130",
        "cursor": {
          "ref": "c985377c-f196-483d-abba-75b620c9c13b",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "bd2e82d9-c572-4383-9de2-0ca43b7d5e1a"
        },
        "item": {
          "id": "847fba1f-a83b-42d9-8d19-aa395e8a3130",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "7f13fe45-44a9-4da6-8cca-68afa1bde9f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1077
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ae7c5a-8f84-4579-b63e-97af695d8dc9",
        "cursor": {
          "ref": "9405a5a1-9a13-42ef-a033-ec616dec25a9",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "617a14e9-a542-48ef-ace1-42cb7d638f39"
        },
        "item": {
          "id": "f0ae7c5a-8f84-4579-b63e-97af695d8dc9",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "6fd58352-d378-4e56-9b14-013426c5e898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1092
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a2751a5-e83d-4770-86d0-c47d379162c5",
        "cursor": {
          "ref": "3dce60f8-789e-4a60-8020-405dbdda4ae0",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "84b809ca-4fb5-4479-bc46-bd54c05f71e0"
        },
        "item": {
          "id": "1a2751a5-e83d-4770-86d0-c47d379162c5",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e4cfdb3d-d6ec-48d7-9012-f14d74108a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1048
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d066d4-cfea-47cd-ac83-1a736ac43394",
        "cursor": {
          "ref": "a855d316-c09b-4fb1-a487-63c83de93cff",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "8b32b021-62d0-434e-9edc-4e394484c585"
        },
        "item": {
          "id": "48d066d4-cfea-47cd-ac83-1a736ac43394",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "269f5138-c6af-4213-b095-430f1b98e56d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1045
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5410aa3f-8f8b-44cc-b7fe-d9b8ab249cfd",
        "cursor": {
          "ref": "72082430-4bd2-4878-af00-442af67acd44",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e7500c54-0550-48b7-9bae-9620830daadc"
        },
        "item": {
          "id": "5410aa3f-8f8b-44cc-b7fe-d9b8ab249cfd",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "dc52ba91-77f7-4ba9-b33c-345b565485ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1047
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9104c7f0-1965-446c-86da-0923ba570c12",
        "cursor": {
          "ref": "69aa22a8-7386-43ee-86b9-3a5262a3cb8f",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "594a283e-5fd0-498b-9bb9-b3737e57a625"
        },
        "item": {
          "id": "9104c7f0-1965-446c-86da-0923ba570c12",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "032d2681-fefa-4e9f-8a63-c9983669f5b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deae3289-cc09-4228-969e-fe7107b9b498",
        "cursor": {
          "ref": "60efb40b-0e0a-4bb8-951d-2d97d035bedf",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "bbcda957-71d1-4125-9f71-06daddf602df"
        },
        "item": {
          "id": "deae3289-cc09-4228-969e-fe7107b9b498",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "c0991b63-cea5-4ba2-9562-2e01237a9cdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4871625-37b8-4397-a44d-c13c23876962",
        "cursor": {
          "ref": "79ec2cdc-271a-4411-96b9-a734950914d0",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "51955957-6b4d-4c7d-a5e4-ff45ded14143"
        },
        "item": {
          "id": "b4871625-37b8-4397-a44d-c13c23876962",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "3ea8ca45-b977-4fff-a81c-912c8e5b5bf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7f6c66c-0637-4727-92c6-0577d3560f86",
        "cursor": {
          "ref": "40a75727-8ad3-4fef-996d-782a575823ae",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "3f9ca94a-8b2d-41b8-bc37-d613701d51de"
        },
        "item": {
          "id": "e7f6c66c-0637-4727-92c6-0577d3560f86",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "5fab6d1c-3123-456c-aa2e-c20171b32961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0fc0f3f-0631-4b20-895e-192f63e3b21a",
        "cursor": {
          "ref": "7178c66e-60e0-42ef-8601-4c02608e19f5",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "6945a432-7dae-40d9-9fc0-7fb381e60ee0"
        },
        "item": {
          "id": "d0fc0f3f-0631-4b20-895e-192f63e3b21a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "cc86d4dc-f898-47ca-a096-bd9d752a8af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e0676af-08bd-4a56-a0ac-c8bcf5ec2c82",
        "cursor": {
          "ref": "003189eb-929f-499b-adee-0ef32574043d",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "81284e1c-7a61-490e-bdad-449467613acd"
        },
        "item": {
          "id": "5e0676af-08bd-4a56-a0ac-c8bcf5ec2c82",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "920d3f21-7c87-4a6f-97cf-61159c43d938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "024dc6a3-67dd-4507-bafa-c5862a9f3005",
        "cursor": {
          "ref": "0f045ab3-2570-480e-b241-03b9c2988bb7",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "8f17f86d-528e-4d08-a0ea-83ecb8ad030f"
        },
        "item": {
          "id": "024dc6a3-67dd-4507-bafa-c5862a9f3005",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "07712e44-01ea-4f22-b6c0-7edcdf859398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ecb57d5-778e-4329-a17b-0fccc9e0bddd",
        "cursor": {
          "ref": "d31cd5fb-608f-41b3-80a7-c8f2baef5a0d",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f5e63ac6-8190-4348-b4db-a8727b163dd9"
        },
        "item": {
          "id": "6ecb57d5-778e-4329-a17b-0fccc9e0bddd",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "75d4a5c9-deb7-4e44-aef8-b0d53b3ff2f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3344cb-cd45-460d-8dec-1fe6c5269d61",
        "cursor": {
          "ref": "74963053-a325-4cee-b825-3f5af07d327d",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a4d9d59d-d721-4b81-835d-df9e57f30c6e"
        },
        "item": {
          "id": "8c3344cb-cd45-460d-8dec-1fe6c5269d61",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d70e1658-ea7a-4f79-b66d-32b175b50be3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b13a6c2-727f-461a-bf60-12c315c1ae31",
        "cursor": {
          "ref": "5a417bd2-d7ce-47b7-91de-3523c9a79dd5",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "dc4fbeb1-e448-4712-b372-090b41607965"
        },
        "item": {
          "id": "9b13a6c2-727f-461a-bf60-12c315c1ae31",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5233101d-3c4a-45fd-82e8-75dcfd26c8e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "714ef678-6535-4dee-9f59-703c1f40af51",
        "cursor": {
          "ref": "19c14ac9-2294-4788-906b-8def06150b4c",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "41a09e6b-3bef-47ad-83af-a5b2ce87be16"
        },
        "item": {
          "id": "714ef678-6535-4dee-9f59-703c1f40af51",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a0a670b8-7931-4edf-bc1e-8036535ce008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61aebf67-d15c-4b45-a335-fbb19b4fb05b",
        "cursor": {
          "ref": "13216ef8-5a0a-4118-8d34-42abad84e5fb",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "021e0d62-f9f4-4567-a567-95aa2c0c6049"
        },
        "item": {
          "id": "61aebf67-d15c-4b45-a335-fbb19b4fb05b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "03e4edda-9024-4303-a53e-60e2b29e519d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54cfef28-b74b-4285-8c64-e8c8443eafe8",
        "cursor": {
          "ref": "fc2f731f-c11d-4d38-98ce-10b811b9fe15",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "3b182f4d-f84c-4d55-84f0-6fe0fc3fbae8"
        },
        "item": {
          "id": "54cfef28-b74b-4285-8c64-e8c8443eafe8",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "6c45179e-4432-4218-b3c1-4933335fb7ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16590676-2289-4d1a-8101-534548b16c4d",
        "cursor": {
          "ref": "97772612-9d93-40b6-8b5b-d86ac846b93b",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ca33c59d-bca4-4a26-9808-d7790ea32769"
        },
        "item": {
          "id": "16590676-2289-4d1a-8101-534548b16c4d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ec30587b-29f8-4dd3-b629-639c4f38a9f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f637a91-55e1-4983-9026-7745fd7ecd19",
        "cursor": {
          "ref": "618221c6-5893-4bee-9c66-e41587cd2745",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e54b9b2d-a110-41c9-bc42-f65e6073e7bd"
        },
        "item": {
          "id": "2f637a91-55e1-4983-9026-7745fd7ecd19",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d847d177-6dca-43df-be61-232f31fd4b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98136d9b-a7a3-4918-99cd-6fac62106556",
        "cursor": {
          "ref": "31b3437b-998a-4274-989a-f10f766c152c",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "9a5091eb-aec6-4798-bf4f-8d2f42835eb2"
        },
        "item": {
          "id": "98136d9b-a7a3-4918-99cd-6fac62106556",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "983b2179-ec88-4b35-bbc7-48a912948c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ff8004-78d5-40c2-bd6e-f6e91cfc0694",
        "cursor": {
          "ref": "5063d3cd-4e6b-46de-9cb5-212e618784b2",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "986dfd5d-ff85-4e38-ab1e-9aba53aa8193"
        },
        "item": {
          "id": "54ff8004-78d5-40c2-bd6e-f6e91cfc0694",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "421d856c-5040-460e-8d28-0f9de7265632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e90a7a8-e8a3-4e5d-ab45-2076d545c103",
        "cursor": {
          "ref": "f1459709-943b-4b80-8754-7bc994bbbf75",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "60a559ef-22da-4981-a3b2-d8d18c3c7506"
        },
        "item": {
          "id": "3e90a7a8-e8a3-4e5d-ab45-2076d545c103",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "35ca0065-8ee1-4bb0-acad-2585884ac234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb1c0bc5-90bc-4316-b4c4-2ef827ba3d48",
        "cursor": {
          "ref": "a00fa46a-787a-4e96-9268-579355cf59b4",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7fdd83e0-415e-40d4-a212-50dd7bc736a2"
        },
        "item": {
          "id": "fb1c0bc5-90bc-4316-b4c4-2ef827ba3d48",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "f7d1399d-02b1-45ec-8fb9-60339d917c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1808
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2390f0c1-89bf-4473-84d5-0c8bdebeea7e",
        "cursor": {
          "ref": "9c40ea5b-b68f-49eb-b6a1-abe7f885ec97",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f3ac29c6-9071-43ec-aebe-f1f6694c6877"
        },
        "item": {
          "id": "2390f0c1-89bf-4473-84d5-0c8bdebeea7e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "1e368292-1f69-45b5-ad0b-a98a1913ae1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "483037e1-1021-41a3-a33e-741c0826e764",
        "cursor": {
          "ref": "4503b541-0fb5-40aa-9775-69213fd20fab",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "fa6dac02-c7e6-41ce-9cf0-28c341bce533"
        },
        "item": {
          "id": "483037e1-1021-41a3-a33e-741c0826e764",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "aebbf2e6-c16e-472d-b4f2-4192fc62aa50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eeb3814-cdef-42e8-8483-c82a580cd716",
        "cursor": {
          "ref": "e387bc26-ab52-4c4b-b4ed-25baa2b9fd81",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "aff5bef2-59b6-4cf2-8abe-fad2ff90c7ac"
        },
        "item": {
          "id": "6eeb3814-cdef-42e8-8483-c82a580cd716",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b019c4d6-3136-48b1-b9ab-3cc3e0b07894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56bd060f-6059-4316-80de-e4d80c8b4bcc",
        "cursor": {
          "ref": "dbf31df2-df8e-4a4f-9b15-e7e7075d0597",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "f7d02a4e-25fe-4350-8d7c-5ed7c2237155"
        },
        "item": {
          "id": "56bd060f-6059-4316-80de-e4d80c8b4bcc",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "fa560396-e416-4bab-a060-de0c615e6d2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1745
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b27d6c56-816f-45a7-b541-d8130b96d11c",
        "cursor": {
          "ref": "94bd2f56-7aff-4cd8-b0fd-05c3f97f950e",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "324c0101-cba5-453e-9d87-5601149b16c4"
        },
        "item": {
          "id": "b27d6c56-816f-45a7-b541-d8130b96d11c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f4d3218c-2f61-4f6b-ac88-9912c82f5dc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62aebb9f-344b-4aa5-8521-94a1c55c68d8",
        "cursor": {
          "ref": "d35468c2-ba64-4fcc-bd6f-a8d923ec8cf6",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "bfa30ec3-0666-4b42-9309-43b2f22eafc2"
        },
        "item": {
          "id": "62aebb9f-344b-4aa5-8521-94a1c55c68d8",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "fc67db8c-94ae-44b1-ab0d-94bbfac1d177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41aa9b44-ab6b-4706-b7d5-50fce59f7481",
        "cursor": {
          "ref": "d30771fc-b2a7-40a7-bd51-80602f2c4015",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "88bc91ed-b2d8-410a-8248-ec763c015640"
        },
        "item": {
          "id": "41aa9b44-ab6b-4706-b7d5-50fce59f7481",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "8087e321-31a9-4a8b-9b1b-0ee8bd71d7f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 2147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e12a18ef-e8b4-4b6f-9989-773f7142e0cd",
        "cursor": {
          "ref": "a301ba4a-a852-458d-a47c-30976d46f758",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "d5fd61fd-57c9-4572-847a-198f14c1ed05"
        },
        "item": {
          "id": "e12a18ef-e8b4-4b6f-9989-773f7142e0cd",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "101e5c8a-30cb-4540-b4bd-5eb0df84a6c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc924aea-c90d-4539-8867-18262ad3c383",
        "cursor": {
          "ref": "175eed14-cd08-43a0-82f9-18dcbab8eaa7",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "cd71fb91-3fee-4bb7-ae8e-a1bf64663e6e"
        },
        "item": {
          "id": "cc924aea-c90d-4539-8867-18262ad3c383",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3caa758b-ad26-4bf4-b767-818de8d6076e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1035
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ec784c-4695-4fd9-bf77-21687429fd74",
        "cursor": {
          "ref": "940c1c15-cb51-48b5-b968-483eb261f9c3",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "5ee17b4d-7202-451c-b7eb-8e1943e3781a"
        },
        "item": {
          "id": "b8ec784c-4695-4fd9-bf77-21687429fd74",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "7b017427-566e-4e94-8645-b11ae5882812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1059
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf54e2b6-0044-48e0-860e-4b8b10bb509e",
        "cursor": {
          "ref": "7f9cbcef-ded9-49a7-a83a-892bbd67ad1f",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f4a06f33-9c16-41f7-b91e-0075e3295eae"
        },
        "item": {
          "id": "bf54e2b6-0044-48e0-860e-4b8b10bb509e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "422d5e0e-7bcd-4eba-917f-274771775de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "282288ae-4f20-4d5d-bef3-44994a1844d3",
        "cursor": {
          "ref": "dcb38d68-482d-40e7-bcdc-4dd597c29285",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e017d7dc-ccaa-4b7e-8144-7a3d41b7c4f2"
        },
        "item": {
          "id": "282288ae-4f20-4d5d-bef3-44994a1844d3",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d6fb04d2-287b-4cbe-be95-1bc3ee9e8560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a76dc37-195e-4f43-a0f2-7bb485fa82b1",
        "cursor": {
          "ref": "4ed67dc7-d6f1-4815-a508-4096f76c3054",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "9b077243-c00a-4f9d-87f0-181aa5899ef6"
        },
        "item": {
          "id": "6a76dc37-195e-4f43-a0f2-7bb485fa82b1",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c4d747d1-f460-408a-b509-444479dba387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38071e6b-bb0e-474e-9ea5-d875345e298c",
        "cursor": {
          "ref": "f3aa9406-7dea-42f4-89c5-e8ab20a36178",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "aef4d875-ade4-4a44-967c-4cb6440d12a2"
        },
        "item": {
          "id": "38071e6b-bb0e-474e-9ea5-d875345e298c",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "784eb12e-df9f-4780-8f3a-ba41afbe02c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf26f7a-57cf-4bfc-9ac7-ea37789df01a",
        "cursor": {
          "ref": "71e93f16-91a8-4d04-936d-f9185343497a",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "7dcf27bd-4b6d-42da-a564-97972290e709"
        },
        "item": {
          "id": "bbf26f7a-57cf-4bfc-9ac7-ea37789df01a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "3c6d9a46-bcca-4806-89b9-51c5ebd8570d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1090
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "384cb608-62f8-45a5-863d-55c6fd9b2c17",
        "cursor": {
          "ref": "e76e2e4b-2463-47a8-9ca5-5fc8b3ae67e8",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4c06787b-ad60-445e-a5a0-338b5452ccf8"
        },
        "item": {
          "id": "384cb608-62f8-45a5-863d-55c6fd9b2c17",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a2ebd39c-34fe-41ba-8af7-6affd398a2bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c06b233f-b68b-4bc8-944f-25bebd3adb96",
        "cursor": {
          "ref": "61215949-cff1-4a53-b8ca-a6268b4226a0",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "529bffb8-f08e-4bb0-b6c5-df30aad431af"
        },
        "item": {
          "id": "c06b233f-b68b-4bc8-944f-25bebd3adb96",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9bc08220-ddec-46bb-875b-2c3ceecca7fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a5a7528-90a1-4d60-834f-83fb908d4a67",
        "cursor": {
          "ref": "e93f9091-1328-40f0-bc44-f7a49faa1404",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "559f0b29-aae2-4740-956e-619fb6288424"
        },
        "item": {
          "id": "2a5a7528-90a1-4d60-834f-83fb908d4a67",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "caea6aa8-d7ac-4089-b4e7-af71306901cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd2b4602-1e3a-4436-a2f7-4f0b0b81a571",
        "cursor": {
          "ref": "2b06ad49-3212-487c-b05e-9cc046f9c57d",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6e180d88-bf38-4e3b-93fc-0a80eab11136"
        },
        "item": {
          "id": "cd2b4602-1e3a-4436-a2f7-4f0b0b81a571",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "f48e8776-c869-480c-9301-26fc963b323d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e9a51d-8b1a-4177-94dd-895110ee713a",
        "cursor": {
          "ref": "311030d4-57a7-42a1-9f95-bb5431260ff1",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "fc4a9de7-d61a-43d2-ac1f-6161e3799e0d"
        },
        "item": {
          "id": "40e9a51d-8b1a-4177-94dd-895110ee713a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d03ae858-573b-405b-b2bd-b4ab99411f79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5923dbfe-1b3b-4915-a9a4-e7373a993001",
        "cursor": {
          "ref": "67122117-41a4-4da0-947e-0b2801ccc5ff",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "807e9e41-1165-4471-a70e-642f95c477ff"
        },
        "item": {
          "id": "5923dbfe-1b3b-4915-a9a4-e7373a993001",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ae2cff0b-1ec7-4128-8899-d534442b035a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8798eaae-ef20-4a74-9a22-b8e6ad9ad5c1",
        "cursor": {
          "ref": "c437d048-6b68-465c-8801-4c1515550bc4",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "cd44d488-0b4a-43f7-9bf2-5c471167c1cf"
        },
        "item": {
          "id": "8798eaae-ef20-4a74-9a22-b8e6ad9ad5c1",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e0ddcee4-484e-4220-80a7-8c009cf7773b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98308115-e3df-4b29-921a-43ac92a4fe6b",
        "cursor": {
          "ref": "f3bfa91d-0a9a-4486-8159-85c22c27e01a",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "2359ba7d-4f79-43e6-9958-8b5380fc3504"
        },
        "item": {
          "id": "98308115-e3df-4b29-921a-43ac92a4fe6b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "9a0a8fa0-9577-4de7-a8eb-786b2d9a5c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50fac5fd-f254-4a7b-b52b-c2909d3cf4c7",
        "cursor": {
          "ref": "77e1cf12-e3cd-48d0-95a7-9dcf12401178",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "abf6f22d-71cb-4247-b831-8f2aa0cec49b"
        },
        "item": {
          "id": "50fac5fd-f254-4a7b-b52b-c2909d3cf4c7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "5180aba1-c1ed-4a7c-8477-8d942bd5560d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f2943d-93c7-468f-83f7-6b3d3022b093",
        "cursor": {
          "ref": "2aa61b07-a756-4e9e-aa7a-7ceb3c37d194",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ac86990a-d1e3-45c1-8ca7-7fecca79ff79"
        },
        "item": {
          "id": "89f2943d-93c7-468f-83f7-6b3d3022b093",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ff70b0cd-7187-495e-a2c2-c4a0cfe46c81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce9f482-2106-4907-b192-008b998f50fb",
        "cursor": {
          "ref": "6511e9f2-b14f-4db0-8a3c-9c488afcb110",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d98fc798-8987-4de6-9e21-ff12244735e2"
        },
        "item": {
          "id": "7ce9f482-2106-4907-b192-008b998f50fb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a92a5e7c-3c26-42a2-aaaa-64aecfa45526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da9678dc-0a23-4317-ba9b-a69d91a3c9e6",
        "cursor": {
          "ref": "a7bb7a74-e8d4-441e-bc36-147cfda1e261",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "36ee21d3-076e-454f-807a-1dda774f90a5"
        },
        "item": {
          "id": "da9678dc-0a23-4317-ba9b-a69d91a3c9e6",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7f167551-0438-4d61-93c8-06ecde468beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c11ba3-3b96-4a70-803f-ec728c2334e3",
        "cursor": {
          "ref": "9fd72ef1-b4aa-4fae-adf6-c7ef0b3d8bbd",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "242a4bdb-55cd-4b9b-9e4f-b97bd3cd9bfd"
        },
        "item": {
          "id": "06c11ba3-3b96-4a70-803f-ec728c2334e3",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c60ae848-12df-4e2d-bae5-4c6627e4fdac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba0c8c7e-71fd-4cd9-8531-a2e28f0bae48",
        "cursor": {
          "ref": "8706cbd1-f771-4ddf-8b58-ec439809881b",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ed91efde-16da-4a4b-a01f-f289c6d14df1"
        },
        "item": {
          "id": "ba0c8c7e-71fd-4cd9-8531-a2e28f0bae48",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "c7f4286f-e93e-4baf-a0c0-016c3b93e7d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e7214f-9cde-4f30-b11a-c0119d8903b7",
        "cursor": {
          "ref": "b48c9e9f-5143-408b-a369-a263c364f281",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a1322ea1-10ab-44b3-8cde-8c3ccb24a092"
        },
        "item": {
          "id": "57e7214f-9cde-4f30-b11a-c0119d8903b7",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "91f99028-900e-4f4c-855d-a119323fd781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0f32a8e-df80-4490-be00-b22b2522fcfe",
        "cursor": {
          "ref": "0a96dc13-9a04-42d3-aca2-684f69ea08d7",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6aad94d4-2403-4ce6-bb4d-77037a47d703"
        },
        "item": {
          "id": "a0f32a8e-df80-4490-be00-b22b2522fcfe",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "11d47fd0-e79b-47bc-9440-13bbebdd44e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ddc8cf-311a-4e70-9647-b3251dacc6ea",
        "cursor": {
          "ref": "bad30f11-dfb6-42c9-9f5e-76b9732a76ee",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "9b2f176e-01e6-43f2-a884-01fca56959ea"
        },
        "item": {
          "id": "77ddc8cf-311a-4e70-9647-b3251dacc6ea",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "87d4d5d1-c0ef-4041-94ef-6e56e4203c2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9508a977-dbff-4c26-ad07-d9ed769576fa",
        "cursor": {
          "ref": "a606d11d-03d4-4ae3-99f3-3976ba66725d",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7a60a77b-90a1-4c3e-ac95-d73ba6f5a24e"
        },
        "item": {
          "id": "9508a977-dbff-4c26-ad07-d9ed769576fa",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c664ffe4-286b-4e07-abb8-2764676a6dfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3463499d-2772-4dc4-87c8-9318f88eba24",
        "cursor": {
          "ref": "ff6354dc-3b0d-46d6-9304-ec8c9683c29a",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "366968b0-62cc-4abf-b84b-e7f078c361d9"
        },
        "item": {
          "id": "3463499d-2772-4dc4-87c8-9318f88eba24",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "fa1c308f-5d08-40db-b949-4603d26833aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b728b0d6-fe46-4781-ad90-5a5d6116c3d9",
        "cursor": {
          "ref": "ec76e37b-f218-483c-a89d-e20294d331de",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "1f35a77d-6903-4941-8774-37d44b7309e8"
        },
        "item": {
          "id": "b728b0d6-fe46-4781-ad90-5a5d6116c3d9",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "3dc3654b-dac4-4088-a601-fe294a2407d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae449d1-ee86-452d-a944-2c428bcb5749",
        "cursor": {
          "ref": "21cecd35-564c-4fc1-b76c-aa9b6aafddf4",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1a055e1d-a82f-462e-8bcf-c58273c2cb8d"
        },
        "item": {
          "id": "bae449d1-ee86-452d-a944-2c428bcb5749",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "bc81e8f1-6c78-41c2-88be-a47c39845ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a43b3b0-546c-4bf3-8c4a-8c7f7b36a43e",
        "cursor": {
          "ref": "6437d60d-35d1-486d-a4e3-bb95cad6776c",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "93cf8c9c-920f-42c7-bf83-12c9241bb0b8"
        },
        "item": {
          "id": "8a43b3b0-546c-4bf3-8c4a-8c7f7b36a43e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "05a93a53-72b0-49b4-bd6c-b432345a9a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aad12a7-5bda-4d50-b57e-d05ee2a204a0",
        "cursor": {
          "ref": "db7bf89c-00c9-48b2-971e-9a1e2e13d590",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a41f2101-a2eb-408f-be72-51926bf48ae1"
        },
        "item": {
          "id": "5aad12a7-5bda-4d50-b57e-d05ee2a204a0",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "aa33708a-dd70-4b06-a448-5b25fa034098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c11da997-4213-4197-9890-43456ab54691",
        "cursor": {
          "ref": "8d42a64a-c56b-42d5-b82c-18bddfaaa8d9",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b3b24f9e-cf93-4774-af88-06abb205650d"
        },
        "item": {
          "id": "c11da997-4213-4197-9890-43456ab54691",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "aa28b1a5-436c-4bde-b895-2174f047faf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4459e8ee-7eb9-40f4-8f83-48cd4f509f5e",
        "cursor": {
          "ref": "20966e70-b57e-411e-9552-a9fb483890d4",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "af4519f4-cf25-489c-8d63-b871c2071c55"
        },
        "item": {
          "id": "4459e8ee-7eb9-40f4-8f83-48cd4f509f5e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d1c98cca-8a1b-4425-9200-9a60cac91d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9da52e6-f62d-48a8-87cd-2ca1d69caa03",
        "cursor": {
          "ref": "d2bcc506-2157-4906-8f2a-422b67e1d90b",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6743a481-bafc-4823-ac08-50b88bdb4547"
        },
        "item": {
          "id": "c9da52e6-f62d-48a8-87cd-2ca1d69caa03",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "00c8d632-889e-4cb3-9d96-81702e599372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d190943c-04be-4101-9958-b4cd44b71506",
        "cursor": {
          "ref": "29b1c274-e80e-4ff5-9293-3f0fc0fa6503",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "17ba2416-c4b8-4874-92c1-3bb6de39af58"
        },
        "item": {
          "id": "d190943c-04be-4101-9958-b4cd44b71506",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "769baa13-03ed-4e7a-8ad5-0a71dccac7fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c43834-5795-4a80-9b01-da88bf88270d",
        "cursor": {
          "ref": "dcceb3b7-6bcf-4200-b4f1-39a46781d664",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f4ca447a-81a0-4609-bc11-6884e01afc75"
        },
        "item": {
          "id": "c6c43834-5795-4a80-9b01-da88bf88270d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "08def97d-52d8-4ba2-8f8b-7568da4858a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1064
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e158c115-89b8-44bd-9a9d-c60c40b532bf",
        "cursor": {
          "ref": "b00704bc-a0c6-41fc-a840-af35c912ac70",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "3173610d-246a-441d-8669-44d91e396019"
        },
        "item": {
          "id": "e158c115-89b8-44bd-9a9d-c60c40b532bf",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "41b505f4-9d43-4921-889e-9bfdb01e2af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4112576d-ac4d-4a01-a26c-25fc12fa08f7",
        "cursor": {
          "ref": "c357a70e-1e92-486d-9d26-26a4135b4420",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "608ea73e-6acd-4875-b448-bd4a86c45cc3"
        },
        "item": {
          "id": "4112576d-ac4d-4a01-a26c-25fc12fa08f7",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "04550937-0572-46b0-9506-30cd3e5bbf9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b5a7ee6-b47b-4526-ba9c-5c94e9113e5e",
        "cursor": {
          "ref": "b176e32d-c143-4f06-b2de-53bc1675ace4",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "facf1f4b-ce4e-44a0-8462-183edc3f9127"
        },
        "item": {
          "id": "2b5a7ee6-b47b-4526-ba9c-5c94e9113e5e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f0d9a4b2-dcc6-4c5c-b445-8fef31e57eb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c28e894b-cd49-4141-8d00-3329ce86bece",
        "cursor": {
          "ref": "5ad18160-da81-42e2-add2-f703bfec1e2b",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e9d08c96-114f-41e8-a3d9-093b50e4b474"
        },
        "item": {
          "id": "c28e894b-cd49-4141-8d00-3329ce86bece",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ffc57574-cf00-4638-aaa4-d5fdfc3818a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1087
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e9891ce-c681-479b-ac5d-27a21a4efa1b",
        "cursor": {
          "ref": "543e244b-ce7c-4b94-bdc1-9a0fc268e6b8",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "6d0dc4e6-bc94-497e-acc1-5a200d5f8823"
        },
        "item": {
          "id": "7e9891ce-c681-479b-ac5d-27a21a4efa1b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "75c6075c-0161-4971-813c-80130aaf67ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d61286c0-e161-41d0-8f50-b6176212b55f",
        "cursor": {
          "ref": "5133e53f-fd00-4e7e-ac40-7d903bb499ab",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "fda61e6b-e6c8-4a1f-9964-5037eefc4f2c"
        },
        "item": {
          "id": "d61286c0-e161-41d0-8f50-b6176212b55f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "886857cc-689a-40cb-971e-9075e5b6fd65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1086
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04b7e80-7b52-4422-a6cb-d7d6a9a451af",
        "cursor": {
          "ref": "7cd7b78d-c736-4eb0-9e33-fe939152ff0f",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "af8e3a88-fe87-4485-bfd1-2487ef81f9ea"
        },
        "item": {
          "id": "e04b7e80-7b52-4422-a6cb-d7d6a9a451af",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "16afc6d8-a746-45a0-884c-e068dbf397d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9556473b-4c4d-422c-921a-40cfe9a501c9",
        "cursor": {
          "ref": "ebbbbc48-1ffa-4906-9de8-22571682f305",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "156c5749-ed26-47f6-9c45-305e7ac3cd7d"
        },
        "item": {
          "id": "9556473b-4c4d-422c-921a-40cfe9a501c9",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "902f5f42-16a1-4f3f-b209-ef1b70ececce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3733eaf5-953a-4a3e-b648-9de0b0617f35",
        "cursor": {
          "ref": "dfca28c6-a736-4562-bb5e-7179b3107b3b",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "880f6296-2310-4cc0-8539-94ad75ba263f"
        },
        "item": {
          "id": "3733eaf5-953a-4a3e-b648-9de0b0617f35",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "ba1c6ca3-d5f5-426c-8a27-2511142c5e35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1379
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aeda729-c675-42c7-9b45-e2c4c8c6ab81",
        "cursor": {
          "ref": "02911569-3b8f-432f-8acd-2fb5b58c7c44",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "2ec70ce5-5738-4430-8317-07d00522b8a6"
        },
        "item": {
          "id": "4aeda729-c675-42c7-9b45-e2c4c8c6ab81",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "06c032d7-03c2-4142-b152-e67a508be8e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5583fde-1f36-4a8a-b1d3-9b4a338748a1",
        "cursor": {
          "ref": "8bd12c2a-875c-4a5b-b7e2-6c57495ef3a9",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "88bbfcb3-11ae-452c-bb82-5b1e4a6b224b"
        },
        "item": {
          "id": "a5583fde-1f36-4a8a-b1d3-9b4a338748a1",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "afb86d8c-8a47-41f4-acf5-576fc2fc83b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dfa7569-0b68-4ee6-b85a-4c2a6e91df0b",
        "cursor": {
          "ref": "ebd20a41-0cd0-4aaa-b320-2663e6308050",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1c28bf4d-3871-45f4-a01d-22972347c693"
        },
        "item": {
          "id": "3dfa7569-0b68-4ee6-b85a-4c2a6e91df0b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "db2af419-56c3-48a9-803a-e85e0f9193f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccabb146-cd59-4c96-a276-a7d6eab0fb21",
        "cursor": {
          "ref": "384a606b-7e81-47e5-b48f-c2c16d8faa78",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d6305fb3-e456-40dc-9daf-cc496851142c"
        },
        "item": {
          "id": "ccabb146-cd59-4c96-a276-a7d6eab0fb21",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "f19a9ece-8695-40b5-a80b-f85b1947423f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe673030-7954-4904-a83e-ba6255cf42dd",
        "cursor": {
          "ref": "fe57398f-80d0-43ee-8217-79fc61274f20",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e92f047c-7713-4281-8523-34dbb8afda38"
        },
        "item": {
          "id": "fe673030-7954-4904-a83e-ba6255cf42dd",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "56934503-3b7c-4dae-80cf-585a98a635ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd6d50f-6a00-4640-91e8-9115114c7e3d",
        "cursor": {
          "ref": "171b3b4c-9c71-4774-b2df-de14b4116113",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ae8dcff6-5b72-43b1-8603-d83c9a55f08e"
        },
        "item": {
          "id": "9fd6d50f-6a00-4640-91e8-9115114c7e3d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5386635c-d03e-4721-9d25-c247a3e3c6cf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37cad593-d12c-48b0-9e21-5031665afcf5",
        "cursor": {
          "ref": "866afe68-2393-4625-9ff7-e56b2327d448",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ecab9ab5-5ced-4131-962f-9ebf4a772064"
        },
        "item": {
          "id": "37cad593-d12c-48b0-9e21-5031665afcf5",
          "name": "credentials_issue"
        },
        "response": {
          "id": "efb7c276-89bb-4a15-b0e2-ddf2121c6380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:102)"
            }
          }
        ]
      },
      {
        "id": "783302eb-bdd8-4f52-9016-8a203fed3d29",
        "cursor": {
          "ref": "3ffa80e2-6b70-4509-b8b6-2da1012aa0d0",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "0b1a9586-7327-4e40-a4e0-61c7cd2beafb"
        },
        "item": {
          "id": "783302eb-bdd8-4f52-9016-8a203fed3d29",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "650a8415-6b94-4d58-8d95-b7622013e710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "cb03cc0b-3ace-493d-ac52-5f42a0aba31d",
        "cursor": {
          "ref": "02b5ca2b-8746-4e86-a9ef-685429ab5b70",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "97fe7bda-3ec9-4d4a-ab8d-8670baa59925"
        },
        "item": {
          "id": "cb03cc0b-3ace-493d-ac52-5f42a0aba31d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "439caaf9-0ff2-4e72-bac6-9bd152261b2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "9ee9cc89-3f14-4d60-8149-dacb2feb20b6",
        "cursor": {
          "ref": "00ec52bc-737b-41d3-8547-298290059537",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5b8ed152-6bca-4d76-8cd4-66d36825871d"
        },
        "item": {
          "id": "9ee9cc89-3f14-4d60-8149-dacb2feb20b6",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "88cdcf68-866e-4bce-835c-dc0d6efe97c7",
          "status": "Created",
          "code": 201,
          "responseTime": 5944,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "979a95f1-b0f9-4d57-a2e3-58f339b14180",
        "cursor": {
          "ref": "1be5f02e-1978-4ecc-be19-dc6344148f2c",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "623e55af-d369-41bf-8403-1e2753f10a78"
        },
        "item": {
          "id": "979a95f1-b0f9-4d57-a2e3-58f339b14180",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c7723ed2-ac66-4029-b66e-daa52696f8f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "126f8f93-4c6d-4815-85e8-ea6fdc4bbe44",
        "cursor": {
          "ref": "992a76c8-3bd8-4ec0-a26f-1f4844270f93",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f3b8d7b2-b28f-41f5-b6d6-c048273c5eed"
        },
        "item": {
          "id": "126f8f93-4c6d-4815-85e8-ea6fdc4bbe44",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "159e4ffa-4244-47ef-81c6-00f27293f1d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1190
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "46715a0c-f47d-4fda-8ab7-4fbf357cef5e",
        "cursor": {
          "ref": "2081675f-c6ed-4e5e-81be-25027948f80e",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "347f32a8-d33e-406a-9320-bd84eee89586"
        },
        "item": {
          "id": "46715a0c-f47d-4fda-8ab7-4fbf357cef5e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "304d0df5-b50f-4c06-9bb5-aa6da8707ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc30a9f1-1432-44b6-9676-92b3acdb4983",
        "cursor": {
          "ref": "16144d5c-0714-4bc1-9c08-002769f88087",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "6fb2769d-4ae8-4fbf-a62e-cd4bb10f1229"
        },
        "item": {
          "id": "dc30a9f1-1432-44b6-9676-92b3acdb4983",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "555fe685-1a0d-4565-99f8-65048542d1da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a89e0cf8-7cbe-4bf3-b9a1-aea3da5d6366",
        "cursor": {
          "ref": "99b180bf-4710-482c-877b-6a26d3f014dd",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c77893d1-32fb-40e4-8e73-c088e39ddace"
        },
        "item": {
          "id": "a89e0cf8-7cbe-4bf3-b9a1-aea3da5d6366",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "262b9ab1-56a4-42f2-b60a-1ceb698c28f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0391763-975e-445f-a5bd-d1cd621358c3",
        "cursor": {
          "ref": "ade846dc-8433-424f-be66-c844390703e0",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ee0def67-13bf-4f38-9728-eda3ef69def8"
        },
        "item": {
          "id": "c0391763-975e-445f-a5bd-d1cd621358c3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0fc92336-d5af-4eb4-bea4-52ed593bd50c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e64db3b0-1bb6-4af2-b707-4fc205124322",
        "cursor": {
          "ref": "ef87fe2d-7c60-4412-85ef-5ed3c51a31f8",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "28875687-93f6-443a-8b03-a591f67e148b"
        },
        "item": {
          "id": "e64db3b0-1bb6-4af2-b707-4fc205124322",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "69b12c45-c64e-4693-8642-ddcd158d1220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53dfb3c3-6301-4bac-87d2-cbb895764065",
        "cursor": {
          "ref": "c1e420f6-e82f-4ec6-b6d2-805215b44fdc",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f3ef3667-ef0b-45ca-8199-8ea6fbd2bced"
        },
        "item": {
          "id": "53dfb3c3-6301-4bac-87d2-cbb895764065",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "82d9c62b-2f50-43ee-ae85-8077a08a40db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06aceb14-ae1c-42ce-a8d0-78631ed05522",
        "cursor": {
          "ref": "85af50a6-566d-41d4-bca3-4a51cc529bc0",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "fcedd91d-a02c-4e9c-8fa2-8757d515dec9"
        },
        "item": {
          "id": "06aceb14-ae1c-42ce-a8d0-78631ed05522",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2a8a2677-3406-4753-be24-2cb713e3d30c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da7012ca-92ba-4590-ab69-7c7d9552390e",
        "cursor": {
          "ref": "74c0e8a5-a8c8-46c0-ae12-c355a484e9b8",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "66f548ee-250e-46ca-8772-5f47b9ae61a6"
        },
        "item": {
          "id": "da7012ca-92ba-4590-ab69-7c7d9552390e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "aa2f067b-aa15-4ef1-8974-4268ae52fd02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc2c4eb-1c27-470f-8d5e-e53dd902724b",
        "cursor": {
          "ref": "823dfdd9-e1f6-46c0-af42-9d73f219e4d0",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "de4e123b-f780-4ef6-86ad-72f9d21d96dc"
        },
        "item": {
          "id": "ecc2c4eb-1c27-470f-8d5e-e53dd902724b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3cc9f3e4-4887-4731-9a93-57a59354cf5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94bc7704-1495-439f-8d8e-21bcf3bd1e7c",
        "cursor": {
          "ref": "4f58c4aa-e7dd-4c5d-96a4-1142ee4896e5",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "f5c5f521-f59d-4793-ac47-0e5f68bc9b11"
        },
        "item": {
          "id": "94bc7704-1495-439f-8d8e-21bcf3bd1e7c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e2cf84d6-0910-4726-a2dc-ff6e893c1ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18cccbf7-7337-4df1-a3fe-e3fe1e4b90db",
        "cursor": {
          "ref": "11180c39-f12f-4935-bca5-3d60fd3774b2",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "49ce2dd5-a513-4269-bf9f-6160c60260ac"
        },
        "item": {
          "id": "18cccbf7-7337-4df1-a3fe-e3fe1e4b90db",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "47856916-ece7-4e66-9b00-bc5bc2c27a57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf558ea-b2c9-4dbc-a156-b8b167f13263",
        "cursor": {
          "ref": "eb2ef21b-98c4-445a-ad65-a7e98b934828",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "06cd8216-2ec1-4212-960c-2dd2869d06ba"
        },
        "item": {
          "id": "abf558ea-b2c9-4dbc-a156-b8b167f13263",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7da65484-9b9c-4ae3-978a-3ccb30b87579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34e04e7e-f9cb-4f33-9caf-ebd7f97d910b",
        "cursor": {
          "ref": "6e7fce96-f121-455a-80b9-0bdc8026d67a",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "48001aa8-85da-486c-90c0-4c59a6a87781"
        },
        "item": {
          "id": "34e04e7e-f9cb-4f33-9caf-ebd7f97d910b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "55141a9a-5797-445d-812a-23dad5a7a2c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1999221-92d3-46bd-b669-56db6ccb0ab9",
        "cursor": {
          "ref": "dad5b42e-6655-4ecf-a50a-6ad947dec444",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "4d3493d1-dcb0-44b2-a7c0-2ac6a16cc955"
        },
        "item": {
          "id": "e1999221-92d3-46bd-b669-56db6ccb0ab9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e502d376-d398-455c-b1dd-04c7419eccce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a20d22d5-ba6b-412a-9781-7ccf2adb0318",
        "cursor": {
          "ref": "675336b0-c776-495a-8082-1f04e505c369",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "33864f13-1b39-428e-b168-ecdc6eb9d868"
        },
        "item": {
          "id": "a20d22d5-ba6b-412a-9781-7ccf2adb0318",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e72700d3-7fb1-4250-8bbc-1bc683c6705d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61cf3290-3f78-4fea-a0cf-58867343bada",
        "cursor": {
          "ref": "9a8ac4e4-869a-4ffa-8452-10773da98ba8",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "8479b79d-99f3-4277-94b5-1bf2a489bde3"
        },
        "item": {
          "id": "61cf3290-3f78-4fea-a0cf-58867343bada",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9553de56-7faf-44db-809d-886e1372ebaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a9217d-15b1-4065-943f-0b46388d422e",
        "cursor": {
          "ref": "be42ef39-a202-416f-bf97-90f3ac27290b",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2bc577d1-5a2e-4de8-b8f9-53e98705722c"
        },
        "item": {
          "id": "35a9217d-15b1-4065-943f-0b46388d422e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a8228685-a256-447a-94e8-7055bacc0ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5a782e2-ceb6-4d52-89ac-571154736ca3",
        "cursor": {
          "ref": "781ec9f7-f552-46d4-9add-4beca93b84a1",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "cccf03a3-1524-4d95-991c-d090dbb977cb"
        },
        "item": {
          "id": "d5a782e2-ceb6-4d52-89ac-571154736ca3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a38fb152-0267-4ca8-b470-8d028e14da35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a3fa01c-4afe-49a4-acb2-d40b8f70b18d",
        "cursor": {
          "ref": "bf42b0fc-0042-494a-9135-357f8841fb0f",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "99a0fb59-09b8-402f-9565-d11583b9929a"
        },
        "item": {
          "id": "4a3fa01c-4afe-49a4-acb2-d40b8f70b18d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3752fd97-6c48-462f-8c7c-c2296010f187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "860ec611-6335-406b-88d4-8ad02bde6813",
        "cursor": {
          "ref": "2e45f015-a63a-41fc-aefd-ddcbebf61dac",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "4c82393c-adee-4521-be1f-f1cc5607ab18"
        },
        "item": {
          "id": "860ec611-6335-406b-88d4-8ad02bde6813",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7972692d-9490-49dc-bd62-6369818da074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "837a933b-1ed7-47c8-9bea-990faaeb3cfb",
        "cursor": {
          "ref": "a470b7f0-7105-419c-a3c4-e98446f42b39",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "da0a976a-49db-4174-a3ff-0d38e18c57a4"
        },
        "item": {
          "id": "837a933b-1ed7-47c8-9bea-990faaeb3cfb",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4fe9db65-4eae-42c6-ac90-d9ac73e57ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e3cd675-3480-4df0-a080-9e5efaa79620",
        "cursor": {
          "ref": "c2effec3-bceb-424b-85a8-8884c976b061",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ed549093-f861-445a-ad12-ab7175b007ea"
        },
        "item": {
          "id": "5e3cd675-3480-4df0-a080-9e5efaa79620",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7185954e-d749-44bb-8e35-c92702d8d8ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9bf8b1c-a9ca-42e3-97f5-70024dd2638a",
        "cursor": {
          "ref": "be6d7e3f-0307-425d-a42a-8809759078e7",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "11860a9a-baea-47d2-9b7f-db9d8fddd6c5"
        },
        "item": {
          "id": "a9bf8b1c-a9ca-42e3-97f5-70024dd2638a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9695bc56-4366-45fa-9577-662b02c1f175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "054cead9-559b-4d50-bfcd-a0e3125cec0c",
        "cursor": {
          "ref": "5640125f-327a-4a20-ab99-298768b9ca44",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "31ee6d77-59b6-4ddb-822e-7626ff4d5a93"
        },
        "item": {
          "id": "054cead9-559b-4d50-bfcd-a0e3125cec0c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1bc0951f-abcb-4c1e-b2ff-9690b2644e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78399fe9-c72f-400a-ba9e-90119cd514e6",
        "cursor": {
          "ref": "caaead23-97bb-4148-9d96-dad5ac238c0d",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "cfb56fdc-685a-44f1-9bb2-b0c1dca99d94"
        },
        "item": {
          "id": "78399fe9-c72f-400a-ba9e-90119cd514e6",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1fda82d3-8cf7-4aeb-9d6c-03f263ff53ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb550b6f-1b28-4258-83ad-1043db003868",
        "cursor": {
          "ref": "3958e7d7-0f77-456d-bd58-7b1af93828dd",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "85eb0499-35ef-44ae-8c53-bc8e3fb04ea4"
        },
        "item": {
          "id": "eb550b6f-1b28-4258-83ad-1043db003868",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3c155ca6-2172-473d-9656-27058e57b843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f7ebe9-13f9-4f56-9bc1-012b759868b1",
        "cursor": {
          "ref": "05ff9fe0-8cfa-45d0-bc83-f9502ddc94ac",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "3e6e9950-2dd8-4084-8b52-9f96a53592d5"
        },
        "item": {
          "id": "08f7ebe9-13f9-4f56-9bc1-012b759868b1",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "db4b240c-b761-432b-b543-0a8732ace37c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8381d251-fbd9-4857-9424-cc6e96183bfd",
        "cursor": {
          "ref": "3ead7ac8-22c8-4185-bf1b-c9a8052209ae",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "4de73e33-4cc8-45ac-9e65-6d194ca5ede5"
        },
        "item": {
          "id": "8381d251-fbd9-4857-9424-cc6e96183bfd",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "eefd482e-f67c-43e6-a8f7-0bfaf303d7b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c21528a-7565-4adc-8eab-fd54f04cf067",
        "cursor": {
          "ref": "5266883c-8147-4c06-9b17-da98820e669e",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3f6addcd-0032-4e07-a103-6199963c874f"
        },
        "item": {
          "id": "8c21528a-7565-4adc-8eab-fd54f04cf067",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3098325c-d261-4dfc-9dba-c77d756b1a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e63dff4-c05e-48ff-b33e-1ac2d4aabef5",
        "cursor": {
          "ref": "1bd03321-a319-4d0d-8aa2-2736cefba4ec",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "ad469ce1-cc9e-4d24-8dbe-62c30600ee28"
        },
        "item": {
          "id": "1e63dff4-c05e-48ff-b33e-1ac2d4aabef5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "94967ad1-6e86-40aa-b686-423f39ad3af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22bc24cd-e7c6-4c58-bd50-2541bfa2e699",
        "cursor": {
          "ref": "55d7efa4-7b9f-4cf4-a1a7-d8cb9b375875",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "764d60eb-8fd2-4bf3-8f3b-ea7dc5d331fa"
        },
        "item": {
          "id": "22bc24cd-e7c6-4c58-bd50-2541bfa2e699",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "499ade06-91a3-4492-84c7-8182e6c9a1b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cb429d8-5bbc-4cb1-911a-6f18972f7f8e",
        "cursor": {
          "ref": "939cbb1a-0090-4102-9fee-a54ec8044f70",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f38a9e16-bb78-415e-8f50-0b9161de5a55"
        },
        "item": {
          "id": "5cb429d8-5bbc-4cb1-911a-6f18972f7f8e",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "99028702-e261-4162-a523-de6aad8dca60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc848f7f-ca9f-486d-a31d-17573fb67c0c",
        "cursor": {
          "ref": "efc32003-d20c-40c5-af4b-8c54d7ec36c3",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d6211000-b28f-4fb2-b496-ec74085b82d8"
        },
        "item": {
          "id": "bc848f7f-ca9f-486d-a31d-17573fb67c0c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b33eadbb-d1bf-4adf-8f9b-8557d01638a2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df773600-d85d-4a35-8dd4-379ebf993c89",
        "cursor": {
          "ref": "87f0672d-c600-4b59-b0d2-fe60626cfa79",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "24af4a9b-e18a-438e-b3a5-4bd375844853"
        },
        "item": {
          "id": "df773600-d85d-4a35-8dd4-379ebf993c89",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0163827f-a174-474a-8d57-b6e9251feae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "293d2350-eaa6-4e58-a30d-324f35562f4c",
        "cursor": {
          "ref": "df9dbe10-52fb-4dc6-94f3-8b327f1ec0d4",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "6ed29409-b407-4509-b29b-53d409d3c367"
        },
        "item": {
          "id": "293d2350-eaa6-4e58-a30d-324f35562f4c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "896434a2-35d2-4cbc-ae3f-567dcc668b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e16f90-99d7-4127-ac16-87b630f46b69",
        "cursor": {
          "ref": "689a2278-0e6b-40f2-ac9e-170c88615dbe",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "0392b340-64b9-4b26-948f-4e0c495d18d0"
        },
        "item": {
          "id": "78e16f90-99d7-4127-ac16-87b630f46b69",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a866db5a-8746-45b0-8335-34a28b68387e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0510055-fe10-46f8-9142-29ed91880438",
        "cursor": {
          "ref": "be7bbfb6-f9a9-452e-9173-50f45f745b62",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "48cffce3-bfaf-46e3-b20d-62162f04c280"
        },
        "item": {
          "id": "a0510055-fe10-46f8-9142-29ed91880438",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "077b235d-e9fe-4fcb-bb31-9e114e3fc1e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7a8641-4c9b-451f-8ab8-ec0b0a8b2423",
        "cursor": {
          "ref": "0a2494ac-d70c-4678-b3b3-8ffcdee82828",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "52d1a162-d2a2-4205-9bc7-3f22b2209980"
        },
        "item": {
          "id": "0c7a8641-4c9b-451f-8ab8-ec0b0a8b2423",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "00ff5ff0-0500-4d9d-91cd-de44644ed2ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b85dc662-5c30-4663-bfb8-7cd81e184d38",
        "cursor": {
          "ref": "3752a9d9-0cda-4cbb-a849-3e7b0a8bf203",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "abb0cdcc-85e5-4580-93a2-b839d63467e4"
        },
        "item": {
          "id": "b85dc662-5c30-4663-bfb8-7cd81e184d38",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d711424f-a13e-4d94-b296-5665756787dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf9a5e9d-7a41-4d3b-b570-dea5dd5741a4",
        "cursor": {
          "ref": "533723cb-004a-4701-b4f3-2fd6191b2491",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "22add284-2834-4e05-8d85-694ab2238f0d"
        },
        "item": {
          "id": "cf9a5e9d-7a41-4d3b-b570-dea5dd5741a4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "36d6855f-8712-4e87-9989-90ffc20e8642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af75074-2545-447c-9341-8bccef1eef5e",
        "cursor": {
          "ref": "875b938c-66c6-43f2-8641-a17f4bcb357a",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "18c3fb49-dffd-4ec8-bbb8-7a3fd11db6aa"
        },
        "item": {
          "id": "4af75074-2545-447c-9341-8bccef1eef5e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "249601f5-2e62-4a0c-8fb8-9704c84650ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd4887f-854d-4d80-b458-e413b906e169",
        "cursor": {
          "ref": "a41e8be3-19dd-405a-87c2-c34c56616137",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "3523185f-079b-472a-b1a8-5d7de9cc75dd"
        },
        "item": {
          "id": "6cd4887f-854d-4d80-b458-e413b906e169",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d5234954-ce02-4199-907f-4741278034f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ead8ae-d919-4f68-8e6e-eebdb99ad333",
        "cursor": {
          "ref": "10b23415-000e-4d5d-bdb8-cc80435ff53f",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "43ae30a2-a805-4bd9-a989-747c5d128889"
        },
        "item": {
          "id": "c6ead8ae-d919-4f68-8e6e-eebdb99ad333",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8a2fd663-dd4c-4727-a239-9dc1acac457e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8c9a086-d9c9-4c41-80fa-b352efe75377",
        "cursor": {
          "ref": "c4f51ee6-9327-42e6-8e3f-41a41bd4c7b7",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "117e175a-c16d-4fcf-b791-95a73f311a6d"
        },
        "item": {
          "id": "c8c9a086-d9c9-4c41-80fa-b352efe75377",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1adc29af-8359-41eb-9bee-8b2280b769f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f2c8c1-6d1e-453f-9829-7e7d8cabe18a",
        "cursor": {
          "ref": "9ca0e6d8-2825-4d4e-920d-0297334eb50f",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "478521c6-6c66-43da-a360-57c8e7e798b9"
        },
        "item": {
          "id": "38f2c8c1-6d1e-453f-9829-7e7d8cabe18a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8c3b4cca-d807-42a2-a260-24b60efb2cc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80c18ad7-0149-48c9-84d6-ad18bbb6ce51",
        "cursor": {
          "ref": "73a29c63-1530-4813-9676-ce75ffb33a01",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "38c5bbad-3b3c-4bf3-8b42-57b0f65be1ee"
        },
        "item": {
          "id": "80c18ad7-0149-48c9-84d6-ad18bbb6ce51",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "fc9a9edf-c150-497e-a782-71eaef416714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43566e92-a216-492f-afa1-743ed6b4b533",
        "cursor": {
          "ref": "9436f0eb-1657-42cc-91f9-680e43cba355",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "01d3fb0a-f34c-46f5-abb5-51ea581a2c9d"
        },
        "item": {
          "id": "43566e92-a216-492f-afa1-743ed6b4b533",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b895336c-a18b-4ba3-857c-7e5c49ffb17b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b00c435d-3cf2-4d97-8600-b23cc5fd060e",
        "cursor": {
          "ref": "85235857-4bc5-4e02-9eb0-9fac7c2aab8e",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "90b36abc-65f8-4322-b002-a646e134f78f"
        },
        "item": {
          "id": "b00c435d-3cf2-4d97-8600-b23cc5fd060e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4a4f304e-b260-4229-820e-096d54837503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb4d6292-331f-416e-85ca-56010e3c69c8",
        "cursor": {
          "ref": "c5639a8b-647a-402d-8496-6ed62b67a6c9",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b597c0e5-11d9-4742-b413-ebe05597793a"
        },
        "item": {
          "id": "cb4d6292-331f-416e-85ca-56010e3c69c8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "af95d721-f053-422d-9af9-bdd963bb7c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca36e46-08fb-4b37-aa7a-2d9913b58757",
        "cursor": {
          "ref": "ae37e33a-67e3-42fb-8ca0-5f6ff99eea30",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "10187405-431d-4fed-a30f-d25cc8aa5b7a"
        },
        "item": {
          "id": "cca36e46-08fb-4b37-aa7a-2d9913b58757",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a517622b-b6cf-4784-b2d8-c6060e03c543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94950111-6457-4c6f-b5b7-3b1c500442f2",
        "cursor": {
          "ref": "f6f2503f-7c02-461c-a296-b4bcf06e7993",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e2592309-f2c2-42e6-8cf6-e566e8987356"
        },
        "item": {
          "id": "94950111-6457-4c6f-b5b7-3b1c500442f2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "bd34e233-1c71-4a90-a94e-d04553520548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58dfd647-e54e-45ba-97f9-e0d2af6a1af6",
        "cursor": {
          "ref": "6c01a015-3139-4c67-badf-2ea96dc7fc37",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "fb3a9b66-44ec-4c50-b1cd-153c1808ce57"
        },
        "item": {
          "id": "58dfd647-e54e-45ba-97f9-e0d2af6a1af6",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "981c32ec-a8c2-4df6-b684-29c05aff094e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ad0303-ca33-43da-afbb-a839fbee0408",
        "cursor": {
          "ref": "287ef57b-dfac-486f-bbc1-e5cf39e15d01",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "0a9c9de5-139e-48bc-8d03-aa86821972ea"
        },
        "item": {
          "id": "c4ad0303-ca33-43da-afbb-a839fbee0408",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d30ab46e-0006-4545-9a60-f79864ed2a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ec1b5e-e681-4f80-a9ab-3efd7d1d56b2",
        "cursor": {
          "ref": "3351c559-694f-4250-8ba5-7577c3dfdf83",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "cf396583-5889-4a8e-a1f0-4d934df54f47"
        },
        "item": {
          "id": "a1ec1b5e-e681-4f80-a9ab-3efd7d1d56b2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8d313b2f-f242-4735-a7c4-d422fcd57297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "695cf885-1259-4fd6-a665-ebf2aa25cd80",
        "cursor": {
          "ref": "49a8e943-1600-40ef-af42-0ee8448369e5",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "c8a62bab-4362-4f09-84fa-8f4edc675c81"
        },
        "item": {
          "id": "695cf885-1259-4fd6-a665-ebf2aa25cd80",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "fdaf8375-18a5-45c1-831c-dc60c4445e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "044e55b9-bb94-4f51-9a29-891d15ba6f51",
        "cursor": {
          "ref": "4025f662-9bed-4760-a384-bb5674de0f6c",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "b1e34372-e6ba-4794-a85d-1bbbee2cf904"
        },
        "item": {
          "id": "044e55b9-bb94-4f51-9a29-891d15ba6f51",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "07d2d62f-ddbf-447b-a46d-e41e217e1a15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e3c98a7-3b62-4964-8330-ce6e98fd6a6f",
        "cursor": {
          "ref": "45d4e3e5-076f-4174-8760-e835297675c1",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "36937a29-a61f-4c3c-9fb8-d08b87f37302"
        },
        "item": {
          "id": "9e3c98a7-3b62-4964-8330-ce6e98fd6a6f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "07894e56-7ddf-463f-a828-95bf47977383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae38a1f-1b4e-4dcf-93f2-ed54fcd7290e",
        "cursor": {
          "ref": "ebfc9fc7-de75-4d95-81cd-b2250cae957a",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "07b2a6b4-f56d-43ad-882f-6872d101a218"
        },
        "item": {
          "id": "bae38a1f-1b4e-4dcf-93f2-ed54fcd7290e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9ce3bef5-73bc-40b6-913e-7aa8dae41992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a95b61-320d-44f9-9d00-2245b8d95a4a",
        "cursor": {
          "ref": "0f75a3bd-4f7e-438a-8b47-4347cf287027",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "599a9cc8-8130-4233-a9c6-c9e2cd1c203b"
        },
        "item": {
          "id": "b4a95b61-320d-44f9-9d00-2245b8d95a4a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "de6d9ea7-d0ac-4702-a704-a17bdbe51844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d62e5dc0-c833-455c-ac35-e24b16c54f7c",
        "cursor": {
          "ref": "1047f59b-bb91-4a14-9579-bfead61f01ed",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a235ddfc-a6cd-469f-88e2-190124933e51"
        },
        "item": {
          "id": "d62e5dc0-c833-455c-ac35-e24b16c54f7c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8b56d6c3-9f3d-4a78-bb91-f50dbde679b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9650c960-8a24-4f73-a5de-e65f49126bca",
        "cursor": {
          "ref": "8f68d739-72b2-4235-b2fa-a5c1cd19960c",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "1903e4f9-f259-4e7c-97f1-d2c0580592cb"
        },
        "item": {
          "id": "9650c960-8a24-4f73-a5de-e65f49126bca",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b92da429-a054-46dc-ad26-25581bf8366f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "231efda1-863f-4c19-be63-f51240339ad2",
        "cursor": {
          "ref": "21f90e49-5f31-49a9-b7c7-84cdc83655bb",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b7c7d7b7-acd4-450f-886a-30bfb28e5978"
        },
        "item": {
          "id": "231efda1-863f-4c19-be63-f51240339ad2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0dc0493a-0b29-4e6d-8cbb-1bd8b1036b5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad7563af-674e-4cff-8a62-a472a9bc734f",
        "cursor": {
          "ref": "b0627df6-1100-482a-b703-b412f9a7ebd7",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a080223b-49ea-4be7-a89c-b37fe25f188a"
        },
        "item": {
          "id": "ad7563af-674e-4cff-8a62-a472a9bc734f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9c80c2ac-910c-4f6a-854e-cdf6885689cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de8ff329-a6b4-4c05-99a5-7ff2e9a45152",
        "cursor": {
          "ref": "2c9e17ca-3a05-4c97-81d9-db047f2b6f69",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d72c0731-6c0f-49fd-8ebd-c34f4bc160e3"
        },
        "item": {
          "id": "de8ff329-a6b4-4c05-99a5-7ff2e9a45152",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3f4e51fb-d896-41ac-8e79-7e68e7a8968a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25aced74-cfc8-413d-8b31-820951677012",
        "cursor": {
          "ref": "11acec2b-76b2-46a1-bc11-d9beee3c840b",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "6202fb6a-7c7f-4729-96c2-387627df99ca"
        },
        "item": {
          "id": "25aced74-cfc8-413d-8b31-820951677012",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "66257cdd-c686-4d6d-9360-b31e816059ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72b8383-125e-4964-96a7-54c0b6974b2d",
        "cursor": {
          "ref": "3c5aa851-2f7b-45fd-a09c-a1f5c3d2e2ba",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "9a6cbaa9-c242-421d-a00c-1c8b39940b92"
        },
        "item": {
          "id": "d72b8383-125e-4964-96a7-54c0b6974b2d",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "c60c91e6-7fdc-45f2-bdab-2849cddbca92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5edd5ea6-ce78-452e-95b6-c4ffa185f4c5",
        "cursor": {
          "ref": "f5761885-b642-4bef-bcbb-4b1f5b455e17",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "8228f39b-0bac-46db-b6db-e77fa89d2e1f"
        },
        "item": {
          "id": "5edd5ea6-ce78-452e-95b6-c4ffa185f4c5",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "55cc0606-fe69-4995-9090-47d46a9525d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414d997b-a7cd-4930-9771-39963e7d590c",
        "cursor": {
          "ref": "bbb285d3-6a7c-4522-b888-368a7b912354",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "be64846f-2b20-4a21-a4a7-2c9419ac7c32"
        },
        "item": {
          "id": "414d997b-a7cd-4930-9771-39963e7d590c",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "0bb731f1-7fba-4c9e-9d34-3538fa6c489b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef7818b3-f974-49c6-bfe8-3bcdc616d484",
        "cursor": {
          "ref": "d43aace6-a1d7-456f-ac2b-18bb45695211",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "30b1d535-4c5c-411f-a373-8da8e82feeab"
        },
        "item": {
          "id": "ef7818b3-f974-49c6-bfe8-3bcdc616d484",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "8d353c76-bf71-42ca-b7cf-b96a829bcb65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "982a3475-d5ef-4a52-a79c-ff664f6ef7a8",
        "cursor": {
          "ref": "56e3f409-79d6-4df7-8ef2-baaf1ca37fa9",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "5559566c-31ec-4193-8257-2773658b483a"
        },
        "item": {
          "id": "982a3475-d5ef-4a52-a79c-ff664f6ef7a8",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "be32e8ab-8e03-432b-b188-0f668501486b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7dc8b7d-d7db-4681-9648-3e6ddab44347",
        "cursor": {
          "ref": "3048b8d2-ba0e-459d-8806-7e46777a23ec",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "1d815a0c-080b-4d30-8592-1639d4e122d5"
        },
        "item": {
          "id": "b7dc8b7d-d7db-4681-9648-3e6ddab44347",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c98a1fa0-d8a2-4f62-a2fb-6bd52d30eb75",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9474ef5-2cbe-47f9-8d4d-92e8c8f492fa",
        "cursor": {
          "ref": "5147d42d-a4b9-4927-85b0-2b3754c4fb2b",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "957f8ac4-701c-4d14-a983-c9d5199a5a96"
        },
        "item": {
          "id": "c9474ef5-2cbe-47f9-8d4d-92e8c8f492fa",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4dcfb234-e25d-4e34-aaac-f283f340b3c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43678af-4bd3-4280-85cc-74a7ce734a34",
        "cursor": {
          "ref": "b40eb810-de0c-457a-8c7e-2409f8834c90",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "9fb4db60-e726-4397-88d9-897d0eda443c"
        },
        "item": {
          "id": "b43678af-4bd3-4280-85cc-74a7ce734a34",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "3d9a2b19-757d-4d65-aa5f-8634d14c3094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac574735-af55-4ead-820b-de82fd31878a",
        "cursor": {
          "ref": "87cd3097-c4d5-4ded-90e9-58ebe21ad1b9",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "9e725780-df51-4ef8-8dae-b82ac4ff68c1"
        },
        "item": {
          "id": "ac574735-af55-4ead-820b-de82fd31878a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "99b41cc0-a404-438a-b40e-47fd3fb80de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18876f10-7146-40a1-9f59-5f28797b1f1b",
        "cursor": {
          "ref": "1a58129e-4039-4d08-bef6-c8bddc8f8c0d",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "8ebb2ced-7ff7-4afd-83ce-2ffc20ca7f58"
        },
        "item": {
          "id": "18876f10-7146-40a1-9f59-5f28797b1f1b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a64478e2-ae43-4b0d-a99a-9b0f26850b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5342c6-e464-4904-adbb-8ec08058b613",
        "cursor": {
          "ref": "35a1f6e3-c84c-4326-98e4-60ae9cdafe90",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "7b0f82ae-2372-47d8-be69-d8157d3a01a3"
        },
        "item": {
          "id": "9e5342c6-e464-4904-adbb-8ec08058b613",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "77aace37-1351-43c5-931f-2eeee689c2ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf0fe05-c51d-4102-aa11-f496f6456ca9",
        "cursor": {
          "ref": "5559cb0b-0c34-4648-8baa-2346bd5a2521",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2b1af5ce-fe06-4a6e-8001-54b23b74e8a0"
        },
        "item": {
          "id": "bbf0fe05-c51d-4102-aa11-f496f6456ca9",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ca7abf10-42eb-4cf5-912a-99fda55bab48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d10a75-b57e-4625-ab52-8873b0abfea6",
        "cursor": {
          "ref": "cfedbc70-0d02-4b50-9e68-1ff6072d9b4e",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "75c564f9-f89a-4357-b3f0-a1f1711310b7"
        },
        "item": {
          "id": "20d10a75-b57e-4625-ab52-8873b0abfea6",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "cd1888c9-f42c-48ba-a832-65ca266a4198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5be891f1-6f5b-4896-bb1e-25b112c97af4",
        "cursor": {
          "ref": "2c3b0bcb-2512-4bf0-aa43-057b30cca758",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "01ea3b0f-7e7e-4166-8e32-66587a05551e"
        },
        "item": {
          "id": "5be891f1-6f5b-4896-bb1e-25b112c97af4",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "cf30c188-835e-4bdc-a084-af87a977145e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f05e18d-e77c-427f-a9d8-5e6818b4c2ef",
        "cursor": {
          "ref": "b9e3cf68-162f-42db-94f5-fcb81a96afe1",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8d46a993-19f7-4d37-bbc9-a2337612d1d3"
        },
        "item": {
          "id": "4f05e18d-e77c-427f-a9d8-5e6818b4c2ef",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "752edecb-352b-4534-9aa9-676a240b9a4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d8e0f1-815e-41e8-b071-5c4cb36e8911",
        "cursor": {
          "ref": "4eede79d-0d24-46e7-8361-9ec0e9417e2a",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "0e0bd837-8483-4067-a6bb-593b426c316c"
        },
        "item": {
          "id": "e2d8e0f1-815e-41e8-b071-5c4cb36e8911",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "26f6287e-4054-48b3-a84e-ee423a60d655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81eb3da0-bc6e-4938-a84c-a39c4f7c938f",
        "cursor": {
          "ref": "a07323e3-49e1-45a5-ac9c-22aaaa3d87c1",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "31f31744-7b1f-4515-a6f2-4e469945fbdf"
        },
        "item": {
          "id": "81eb3da0-bc6e-4938-a84c-a39c4f7c938f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "55f96dbc-2d45-4f4f-949d-4c63af149374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd8f3e8-85b9-4227-8d10-926fa4a8c6d7",
        "cursor": {
          "ref": "71e1a2da-6de7-4dc4-b323-ff3d2c0b96fd",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "9479d446-74d7-4f53-b08e-4e674a6b18d1"
        },
        "item": {
          "id": "dcd8f3e8-85b9-4227-8d10-926fa4a8c6d7",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "89512e41-1b90-49e7-a24f-52eab2f30f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257fd626-013f-4d22-bda8-3d3b5055cce8",
        "cursor": {
          "ref": "c13d9f0d-f2aa-4ec5-895b-8b0906d8f8cd",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ad72b66c-e1a4-4134-9098-654c63f1bd91"
        },
        "item": {
          "id": "257fd626-013f-4d22-bda8-3d3b5055cce8",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "7f30b920-d091-47a6-95a5-dee5570264d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f111a72a-f28b-4a90-bac4-30038094e525",
        "cursor": {
          "ref": "4a97bc41-6bd4-4dcb-b2f9-c95709062413",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "23eb77d4-6146-48ca-bc01-996a3606f517"
        },
        "item": {
          "id": "f111a72a-f28b-4a90-bac4-30038094e525",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "baa4ee6c-9868-43a0-8630-04adbce70e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69198797-d95f-4fc2-b995-a29658c3983b",
        "cursor": {
          "ref": "44fe41cc-f93e-4e6b-84fb-6027126fe63b",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "434f1d2b-2472-4d18-b5e9-5a26b596029f"
        },
        "item": {
          "id": "69198797-d95f-4fc2-b995-a29658c3983b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d5a480a1-d75e-421a-9ab8-d2449d2a3e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7191d3e5-7685-41b3-a81a-5f872b405a7d",
        "cursor": {
          "ref": "404704dc-2494-4994-a30a-aa79e7398bcf",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "73cda8e1-d071-4ffd-b9c4-530afc47a2dd"
        },
        "item": {
          "id": "7191d3e5-7685-41b3-a81a-5f872b405a7d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "53391b5b-4635-4e91-8424-db375419624e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c101981-4a25-41b5-9064-b721977dadba",
        "cursor": {
          "ref": "43820efc-2f68-4b37-bdb5-27d8487fc57d",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "0de7077d-c815-4b89-8217-d60ec9611535"
        },
        "item": {
          "id": "3c101981-4a25-41b5-9064-b721977dadba",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "8219ca5f-d561-40ae-a201-986862550602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c70eb3a1-5c0c-40f1-adfa-f651320ba060",
        "cursor": {
          "ref": "0800878d-d43a-4ae4-a35a-893cc113253c",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e8961920-cfce-4f35-9aed-d59653500c18"
        },
        "item": {
          "id": "c70eb3a1-5c0c-40f1-adfa-f651320ba060",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "fe256bc2-fd1d-4691-9d76-63dba307f5e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "536875c9-375d-4b6e-8159-249084132dda",
        "cursor": {
          "ref": "80b15ef2-2199-4041-a58a-b5650da3dc44",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "2f90db8d-1b45-428f-afe9-2b2444084172"
        },
        "item": {
          "id": "536875c9-375d-4b6e-8159-249084132dda",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f2406862-e2c9-48fc-9cfa-f3cc4cf41f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c0d82a-4ab9-4509-a9c1-5958daff3007",
        "cursor": {
          "ref": "42668e36-5007-4058-83e4-6d84b5094662",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "86747bed-b508-43b5-ba64-02ca923b8191"
        },
        "item": {
          "id": "66c0d82a-4ab9-4509-a9c1-5958daff3007",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "6db7a200-a1b5-4363-885b-d877e484cd5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf42b42-876f-4e34-aa59-7cb1096fba82",
        "cursor": {
          "ref": "6a29daac-e5da-4dde-9588-7c3168cd6b8c",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "01e20bb0-fba2-4005-86ec-c9d9ee1a03d6"
        },
        "item": {
          "id": "8bf42b42-876f-4e34-aa59-7cb1096fba82",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a122bc42-d8e5-4dce-b235-4f683c77bc15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac7e511c-d738-4841-9278-be4e45938320",
        "cursor": {
          "ref": "9e5b0ddc-dea1-4334-9901-fbbc643c8325",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "7f47a154-3477-48ef-9add-c5bd3ed363ba"
        },
        "item": {
          "id": "ac7e511c-d738-4841-9278-be4e45938320",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "cbd22f94-1c67-4eb6-b0d0-9f87375f1134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14708b4b-f4e7-4a98-933b-590c2c50e780",
        "cursor": {
          "ref": "36d67852-1fd7-40d5-91db-d6366cb8bdb2",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "4796ede1-d9b0-48fb-b1f1-fa033ff06231"
        },
        "item": {
          "id": "14708b4b-f4e7-4a98-933b-590c2c50e780",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "70877377-ad17-4688-8abe-0c56f0ec8822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c833a81d-aaac-4d2e-887f-db7ec73ae2fa",
        "cursor": {
          "ref": "13da9173-1b24-46f7-9486-3ffbecc0655d",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "25f31754-c9da-45ba-a9fc-6c4c29b24002"
        },
        "item": {
          "id": "c833a81d-aaac-4d2e-887f-db7ec73ae2fa",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d1c4976c-41fa-49d7-b8b4-d5015366b603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd105f8-daed-45d4-823e-63011dd69200",
        "cursor": {
          "ref": "52db9689-f6d0-4c70-97eb-0e216274fee1",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "07742e0c-5429-4d66-a136-e7c9a391a908"
        },
        "item": {
          "id": "6cd105f8-daed-45d4-823e-63011dd69200",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8c1e22b4-2c23-4cf4-952e-b12a5904ccd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abddf84d-498b-4f27-adf6-720b45988aa8",
        "cursor": {
          "ref": "57c8a68f-3b3e-466a-b6dd-5d85364d0b82",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "85b9035a-4f28-44b1-bff4-9e4534e687bc"
        },
        "item": {
          "id": "abddf84d-498b-4f27-adf6-720b45988aa8",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4f644819-b632-4e13-878f-432dc9060098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1682747-bff4-4c82-8c25-68ae5e5d44b9",
        "cursor": {
          "ref": "0f005654-b81f-4416-99fd-bbae35dc0896",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d83504ec-cd61-481b-9b64-9f399567feb4"
        },
        "item": {
          "id": "d1682747-bff4-4c82-8c25-68ae5e5d44b9",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "92c3e8cc-8423-4957-b2bb-24025f50fe4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13936948-efc3-4f4b-9726-15046a00a5ab",
        "cursor": {
          "ref": "7c81578b-2ffa-4918-8bf5-208a1ec0e04f",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "8edc8881-3976-4f23-a7d1-5deae8ede8d8"
        },
        "item": {
          "id": "13936948-efc3-4f4b-9726-15046a00a5ab",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "dbd87b14-44fb-4eca-a68d-3d5b3fd93d93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ade9939-d52f-42ce-8d4b-c4d841ffe603",
        "cursor": {
          "ref": "757db5ae-4f17-4d1b-a63c-4b1e6e9e43ee",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "9b152bb7-66b7-4474-bd4b-c25ec485e3fe"
        },
        "item": {
          "id": "7ade9939-d52f-42ce-8d4b-c4d841ffe603",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "391f255e-4dd5-4969-a776-e17dfe150e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26776706-0533-4d27-b34a-02241362132e",
        "cursor": {
          "ref": "b0e1bb83-c2bc-47f0-a9e3-fe6d616630fb",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "e6524180-ba3b-460e-938c-402fccc66266"
        },
        "item": {
          "id": "26776706-0533-4d27-b34a-02241362132e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "0df04e2a-7fee-4058-8a3d-e1fa873abf25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49cc84b-4745-4572-856f-263266cbd74d",
        "cursor": {
          "ref": "e3aedc0d-7a36-4f09-8a82-0b0f4486fe55",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "65d4754d-e5cd-4d01-8999-0eeb655aa881"
        },
        "item": {
          "id": "c49cc84b-4745-4572-856f-263266cbd74d",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "7f23ca77-7444-43ec-b4b5-452b5e4192cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e26cf0c-5715-4a5f-9f2e-a12f959f0d8b",
        "cursor": {
          "ref": "79a7ca7e-79b7-45a7-b4d6-405a6f176f5c",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "76bde13d-8d6c-4cab-a324-67974290d5fe"
        },
        "item": {
          "id": "4e26cf0c-5715-4a5f-9f2e-a12f959f0d8b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a3966ad5-d495-4cb7-924b-e94192a3fd51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb45f39d-0ab7-4e53-80dc-462280b1dd0c",
        "cursor": {
          "ref": "58ef4d31-a2d8-474e-abb0-aac05a8f2779",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "39b782ae-3bc8-4c99-8d46-8ed417f10109"
        },
        "item": {
          "id": "cb45f39d-0ab7-4e53-80dc-462280b1dd0c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "3868d11f-79c1-4e4b-a999-6a3e1b733992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c80631a-eddb-493e-aee8-9ec56950141d",
        "cursor": {
          "ref": "bb1f6859-3393-4055-a07e-290ed8917772",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "2218f6de-fda5-4604-97b3-aa3d22738ee8"
        },
        "item": {
          "id": "6c80631a-eddb-493e-aee8-9ec56950141d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "d56f8f09-3a16-4a20-af11-821f07f358c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bebe015-2fce-41c2-a8de-c1d94bcace07",
        "cursor": {
          "ref": "7e91cc53-9ccb-45b7-a0be-07595ff82724",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "701bd70f-b515-4044-bca3-e505a384ab98"
        },
        "item": {
          "id": "4bebe015-2fce-41c2-a8de-c1d94bcace07",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "51339747-ccd6-42ab-9787-b7413686509f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b15d7c-7aa7-4607-9914-5ebe3ad2fc84",
        "cursor": {
          "ref": "8510e451-789c-4e84-bc6b-6b93a65ef729",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "7d9b2a2a-2314-4b27-8280-ea16a8b39422"
        },
        "item": {
          "id": "a2b15d7c-7aa7-4607-9914-5ebe3ad2fc84",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b20b4f56-d065-4eb3-84d2-78499abfee54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6358d354-bbed-4249-be13-b90498ae464f",
        "cursor": {
          "ref": "118765fe-a269-40ad-8853-cb11b37ee41d",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b9d17dec-ff30-4f07-b227-fa13d4faad80"
        },
        "item": {
          "id": "6358d354-bbed-4249-be13-b90498ae464f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "99d4d30d-2ac8-4cdf-9a75-b2bf18cdab55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d96a9b4d-df61-4084-b8d4-62d74fdac1e5",
        "cursor": {
          "ref": "99b50c0a-6a7c-49fe-bcbc-a0e4b9a3a1cd",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "3cbcc26a-b83a-4d86-9720-a707bf16784c"
        },
        "item": {
          "id": "d96a9b4d-df61-4084-b8d4-62d74fdac1e5",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "dd8bd15f-de89-4f45-a49a-35b5d0a1e272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b75a225-641e-4311-a382-51900d9cee07",
        "cursor": {
          "ref": "9848db87-be91-4c23-bc80-9301fda38c58",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "3fa93c0e-c9d5-4956-958c-c971ebf78077"
        },
        "item": {
          "id": "2b75a225-641e-4311-a382-51900d9cee07",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "789c12db-c6c8-4fe8-b2cb-a0f5b7296428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43472769-7709-409a-a237-c089bfd464da",
        "cursor": {
          "ref": "57ac4380-5475-4fce-968a-fa48a2aba48b",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "25c3c473-d5eb-4341-8981-2e47feb9d644"
        },
        "item": {
          "id": "43472769-7709-409a-a237-c089bfd464da",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a49f8310-5654-4d58-b302-8ce8011ea791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de12d507-6f69-4474-ba51-5b99021a153f",
        "cursor": {
          "ref": "b395fe06-0748-4789-9ba2-7c21d0a3a1ca",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "15b8c0ae-575b-4c17-a1ad-de99ce4ffc28"
        },
        "item": {
          "id": "de12d507-6f69-4474-ba51-5b99021a153f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d4aac446-1ab5-4cff-9814-b8ce63a76823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b771d694-dd86-4681-bb5a-951c512dd7f0",
        "cursor": {
          "ref": "a889cee5-74b9-42dc-a9dc-449132d58c7b",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "dc78d970-6c21-4e8e-a2e7-3326548140fb"
        },
        "item": {
          "id": "b771d694-dd86-4681-bb5a-951c512dd7f0",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "35096168-5e54-4dca-ab50-c86ac6ea2e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e067bef-67e2-4509-ac94-b5063218ed2c",
        "cursor": {
          "ref": "9cbbbfc5-4da2-4be5-a367-b9f72a6ba17f",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b1270059-0a4d-4809-91e9-bd606b6679e2"
        },
        "item": {
          "id": "8e067bef-67e2-4509-ac94-b5063218ed2c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "5a616f6a-4c1d-4fae-a04e-8d7fd8a1799d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db5e935-318b-421e-8788-867f0b144745",
        "cursor": {
          "ref": "8727f5d6-3e87-4d19-aaa6-bae2035803b1",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "73057dec-932c-4812-afc3-a975468bd4fc"
        },
        "item": {
          "id": "0db5e935-318b-421e-8788-867f0b144745",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "dc60c7f5-8e73-42f2-b593-9dfbf2e4b5d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ebdcfe-04c4-4be6-92ef-d5ec571989d4",
        "cursor": {
          "ref": "866d51d5-3f88-4cf3-8cb5-4d80f067026e",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a16347a9-91a9-4f97-b413-32c601eab8e0"
        },
        "item": {
          "id": "27ebdcfe-04c4-4be6-92ef-d5ec571989d4",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "2f6ac1eb-e362-4393-9746-a6cf66df26bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "859d5af8-1a54-4306-8f34-1477b07f659c",
        "cursor": {
          "ref": "c133ea94-8f2b-4cfe-b729-ee0b0a857a0a",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "46f46f16-e19c-4746-93a4-a54d2c18cfa0"
        },
        "item": {
          "id": "859d5af8-1a54-4306-8f34-1477b07f659c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "01086fc6-a5c7-4510-8f0e-3cb406cbb2f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1248209-0396-4873-be89-cb67fa6adf8a",
        "cursor": {
          "ref": "cf6e2be4-8cea-42f8-aeb5-cf3d80741596",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "af1379df-08b0-44cb-97f4-83f5289abcd7"
        },
        "item": {
          "id": "f1248209-0396-4873-be89-cb67fa6adf8a",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "bc417087-3439-4f8e-9425-d41014d25de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a335548-5b6c-4928-93ab-b706faae8bbe",
        "cursor": {
          "ref": "b0cc4626-b5ce-4081-8a5d-f3888323eb4f",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "ebdd4ab4-1f89-455f-9065-9427db42d783"
        },
        "item": {
          "id": "7a335548-5b6c-4928-93ab-b706faae8bbe",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "768d4bd8-c80a-4b38-adb4-30fd3c4b9c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab85913d-7d46-4a81-965b-b149119cdc3b",
        "cursor": {
          "ref": "1bd0ec1a-5960-4540-ba96-150b540d544f",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "28af4362-a213-4939-bdf7-da4f1e03e98a"
        },
        "item": {
          "id": "ab85913d-7d46-4a81-965b-b149119cdc3b",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "6587e4bf-4b13-4dfe-b609-0da43f869ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "904ce2a0-58b6-4826-a287-5e67e3a20dcc",
        "cursor": {
          "ref": "bdd9a987-9648-4257-a7f6-714ffca5cae1",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "6d6b361a-4c69-4706-95f1-7cc8192a4571"
        },
        "item": {
          "id": "904ce2a0-58b6-4826-a287-5e67e3a20dcc",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "1ffaaa05-b9f1-4add-ba81-487be6505921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "565aa6ce-fe29-49c5-b7d5-4c10c20cdfe0",
        "cursor": {
          "ref": "40f3e382-780e-46ad-b9e1-a76ec734f7e8",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "eadb3fbf-b4c7-46ae-9e2d-f0eb4140fac8"
        },
        "item": {
          "id": "565aa6ce-fe29-49c5-b7d5-4c10c20cdfe0",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "3ba5bea5-e07c-4d21-830a-0e0519286c50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1cfb93d-d88f-454d-ba77-72b52e1411c7",
        "cursor": {
          "ref": "e510f820-b545-4a86-aa69-0c13ec90cf64",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "759086e2-3916-4242-acb0-3a1fbebf05c8"
        },
        "item": {
          "id": "b1cfb93d-d88f-454d-ba77-72b52e1411c7",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ef1aee52-5349-4e16-be2a-7132e4cd1dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d08e2812-5d0a-4915-9020-0e46829660ef",
        "cursor": {
          "ref": "56f1eb25-7bc0-46cd-ba66-5fb267462ff0",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "2739ee16-f631-49e0-b80d-d26f4f461694"
        },
        "item": {
          "id": "d08e2812-5d0a-4915-9020-0e46829660ef",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0aa174ef-e09a-406b-9b49-81208f6ff9a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "becad1d8-82c0-4e37-bfd6-3fc082674a6e",
        "cursor": {
          "ref": "110bc485-0450-4b3c-b308-383ebb4d2a63",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "34bfd415-bc3a-48b3-80f5-a22b75049557"
        },
        "item": {
          "id": "becad1d8-82c0-4e37-bfd6-3fc082674a6e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f95e5a37-bd0d-4901-b71c-a87a1d6eddca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c50442ef-01a9-4287-8340-655325402ddc",
        "cursor": {
          "ref": "fe43ea63-1278-4e89-b79a-cafc9549bb12",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d999ad6c-73fa-4bbe-a594-84dd48ebc58c"
        },
        "item": {
          "id": "c50442ef-01a9-4287-8340-655325402ddc",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "745daada-b0e8-4008-815c-e33e9228bc12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c8a3f8d-7ee3-446c-bf00-36084333a398",
        "cursor": {
          "ref": "d78bc715-1f92-4e2f-ba30-88e2b5a5b3fd",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "780d9e0d-e6a8-4814-86f5-48a25021466a"
        },
        "item": {
          "id": "1c8a3f8d-7ee3-446c-bf00-36084333a398",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d68c0414-9a56-4b50-9559-961b36bc3298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68719273-28db-4620-bd64-7c1e037e254e",
        "cursor": {
          "ref": "2593be26-83c4-4796-8609-bc4f5435693f",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "b4c02680-5238-4fdd-8f02-8bebc40e281d"
        },
        "item": {
          "id": "68719273-28db-4620-bd64-7c1e037e254e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c432df99-8585-4c73-bfa7-e5a1ca056506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0096133-e7d1-47d4-ae0e-734f8d9731ec",
        "cursor": {
          "ref": "2dca47ca-8e78-4e27-b612-4af50ebeb56a",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "4383eee7-56d3-4ffa-8556-e7d7fbafdb70"
        },
        "item": {
          "id": "b0096133-e7d1-47d4-ae0e-734f8d9731ec",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "256ad397-1e79-4321-891a-5eaaf05ff119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c3e3e79-2cc8-4fe7-9062-8649d2910533",
        "cursor": {
          "ref": "839c2365-ff1d-4fa5-afec-53110661f685",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "8f448f6f-ad33-451e-94ff-8af24adb4f14"
        },
        "item": {
          "id": "4c3e3e79-2cc8-4fe7-9062-8649d2910533",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c58b3dd8-2df6-4590-a237-9c2bc2c0d2cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd2a798-fab1-481a-9400-208737f30b9e",
        "cursor": {
          "ref": "5a93dd6f-86a7-4138-b446-ee4bf93f60df",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "6f54a64d-749c-4d44-b800-33a3d80d7296"
        },
        "item": {
          "id": "6fd2a798-fab1-481a-9400-208737f30b9e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "cc3a26f5-4abb-415e-8191-5d874da06b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f58c534-0e17-4eef-a6ad-0f5bb9f48a25",
        "cursor": {
          "ref": "272f6dc5-b790-42d7-ba88-f6c2cd651e41",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d9a42023-e3d7-4413-8701-488c068ad879"
        },
        "item": {
          "id": "1f58c534-0e17-4eef-a6ad-0f5bb9f48a25",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "29d3288c-a376-43b9-afd1-0371eb5ed1d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bca14e3-b487-4389-af4f-c45a16e5554b",
        "cursor": {
          "ref": "145bf766-cad8-4e08-95b2-00f5fcdd3977",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "10423d08-3c78-4ed0-a123-be6b182ac38a"
        },
        "item": {
          "id": "4bca14e3-b487-4389-af4f-c45a16e5554b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "2b2d2d10-a02c-42f1-8c28-77b0695c01a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30bd67d9-b088-497d-8ab3-f0d7677d73a0",
        "cursor": {
          "ref": "40c68c5d-b78b-42b4-81da-32cb545e014c",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f8806bcc-0dfb-48c1-9a62-3e7a0fbb3afc"
        },
        "item": {
          "id": "30bd67d9-b088-497d-8ab3-f0d7677d73a0",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "04fc6db7-2f9f-4551-90c8-2f3545d100b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c66a14-8c8c-4298-a76d-d556903fd196",
        "cursor": {
          "ref": "4d94e9c1-5819-4581-abc8-b90781bf23c2",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "46da0ec8-58e1-4880-a5fe-48afd259985d"
        },
        "item": {
          "id": "01c66a14-8c8c-4298-a76d-d556903fd196",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e3ee9996-0c79-42c4-99fe-244d74bc5460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4524738-7e54-4023-a8a9-ee5c44e87f26",
        "cursor": {
          "ref": "5474e9d6-cbfd-4cb3-a4f7-3b7c0757fa19",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "2d535f50-eb63-4607-988f-33529ffd82fd"
        },
        "item": {
          "id": "d4524738-7e54-4023-a8a9-ee5c44e87f26",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "5be1f9c8-9ea7-43c1-bd95-4e86ba7cef4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc74bf6-b653-419d-96b8-22b936e379a2",
        "cursor": {
          "ref": "5208df5d-035b-4888-ba62-8380718a9517",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "eb6c7de5-7aa0-4913-8f2f-843050dbaf49"
        },
        "item": {
          "id": "edc74bf6-b653-419d-96b8-22b936e379a2",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "cce89dbe-8d2f-44e0-b6d3-ddd27603cdd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32694dcb-026d-435d-a154-0a65fd8ae773",
        "cursor": {
          "ref": "724ec7de-793d-4c15-8186-52bb41a1ff46",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a745739d-d4ad-4646-a6b6-f2e3e555c960"
        },
        "item": {
          "id": "32694dcb-026d-435d-a154-0a65fd8ae773",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "03b90e7a-508c-404c-98dd-8412688c056b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e774502-42d5-46f6-b348-1ee6a0eca86a",
        "cursor": {
          "ref": "e2ddd8a8-2ff9-4224-af1c-d6b0c2445ae1",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "85bd9307-18fe-45ee-b326-76b357be2224"
        },
        "item": {
          "id": "1e774502-42d5-46f6-b348-1ee6a0eca86a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "68d3afb0-b876-4654-856e-a475fa447c51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "307936b5-02c6-4626-a2b1-af39fdbad646",
        "cursor": {
          "ref": "cce856b6-de32-4ee0-aba8-bde9c936d908",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "cbb29335-cd95-41b0-8c36-419b2706ff98"
        },
        "item": {
          "id": "307936b5-02c6-4626-a2b1-af39fdbad646",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "75fd9202-3434-4828-9c02-6331b2e91e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e49db05-5abb-4590-8a15-3e7674a126c7",
        "cursor": {
          "ref": "aaf349d7-b132-44e5-bd43-9f667479ae10",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d5c72d59-714b-40fc-9194-76fd04debb37"
        },
        "item": {
          "id": "4e49db05-5abb-4590-8a15-3e7674a126c7",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "140782b2-31cc-4c78-b41a-31edc597e942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f62a20c4-f6a9-4fb6-8fb1-d101167f424e",
        "cursor": {
          "ref": "3c41cf79-2247-4322-90ca-adfa3906f2fd",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e635193f-8a0e-466e-bf71-9c3b77d73b2e"
        },
        "item": {
          "id": "f62a20c4-f6a9-4fb6-8fb1-d101167f424e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d2bb3f3a-af58-4212-8628-dbc88ea268b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "371bf730-c5f6-4ac0-bf54-671fb3798565",
        "cursor": {
          "ref": "f9004cd9-cec2-4e8e-a630-ba6120ea6ed0",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "72d8d17d-8b5e-404b-9e8e-38c79d7f82ef"
        },
        "item": {
          "id": "371bf730-c5f6-4ac0-bf54-671fb3798565",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "801b4088-72fa-4b9a-92c0-4b346dd279cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff94246-4667-41f4-91be-2790d1af1145",
        "cursor": {
          "ref": "fe07a139-710e-45fb-9ff1-590cc3dce677",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "e4d2d7b7-1fe5-4941-ae66-5c610be61f31"
        },
        "item": {
          "id": "dff94246-4667-41f4-91be-2790d1af1145",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "b3c977bd-8110-4790-a278-22a1ef4cd951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc44286-8c1f-4b66-a70b-bb3f6b21f7e4",
        "cursor": {
          "ref": "f96a38dd-312e-45a7-a8e4-0ff6f15d4b92",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "7d9ee3fc-e235-4677-b7d3-d02594c79385"
        },
        "item": {
          "id": "1bc44286-8c1f-4b66-a70b-bb3f6b21f7e4",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "106e6d1c-8965-4e9a-acba-cf92f4ba0a9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53799c7a-e701-4ad4-8980-b1b3682d6936",
        "cursor": {
          "ref": "b4f30248-035d-4680-aec0-0b554fffa804",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "8fcb5e90-41dc-402e-8a6d-1c8024971097"
        },
        "item": {
          "id": "53799c7a-e701-4ad4-8980-b1b3682d6936",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a1abbde7-f042-43b0-8d18-6501e9dfc35f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c363578-a5bf-4e58-b3f7-003b203ce5af",
        "cursor": {
          "ref": "a696ebfb-3f87-43a2-a3e0-9a68e5f6f5a4",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "0546a15d-1c4d-4db5-b44e-16814c0ba4e5"
        },
        "item": {
          "id": "3c363578-a5bf-4e58-b3f7-003b203ce5af",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d3a02687-4472-45da-97db-52d591132c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b00164ec-3590-4548-ace4-73dfab481e61",
        "cursor": {
          "ref": "34280603-7fd1-4edf-acae-6a963ea9b82c",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "74723699-4184-4282-a34d-86bc2aecb1fe"
        },
        "item": {
          "id": "b00164ec-3590-4548-ace4-73dfab481e61",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "0af24025-d6e7-4cee-9672-89f0b2009aa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a56b089f-d34a-4a55-93f7-6ca62340d9e3",
        "cursor": {
          "ref": "19610e59-c67b-4f67-92bb-fe4bfd75c2bb",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "be054bae-073a-4c73-88b0-3c505f29291b"
        },
        "item": {
          "id": "a56b089f-d34a-4a55-93f7-6ca62340d9e3",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "68e6091a-49fc-41c7-a23e-44603415d343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20412f3e-5c64-4410-acd3-68960df6209c",
        "cursor": {
          "ref": "55d45e75-5c7c-48c6-87ae-20a084973162",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "586c1600-994e-4b93-a16f-c72fa863bac5"
        },
        "item": {
          "id": "20412f3e-5c64-4410-acd3-68960df6209c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e70d1b5b-e1f1-4feb-b9a2-80e884313b07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be4604ea-838d-4caa-83d6-40d82ae5ee1c",
        "cursor": {
          "ref": "91019d57-e4d0-4003-a09b-cb69d4f32553",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "0fd28325-5874-4cab-8c66-8a46701c7c0d"
        },
        "item": {
          "id": "be4604ea-838d-4caa-83d6-40d82ae5ee1c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "bea9e73d-31a2-40ab-9aa9-1d28da049e5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1abae35-5f88-4624-8c9e-85a69b13796c",
        "cursor": {
          "ref": "4a5a3c13-3124-41e8-91b0-52d1dad42bdd",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "93249dde-d71e-4552-a504-bcbf6986945b"
        },
        "item": {
          "id": "b1abae35-5f88-4624-8c9e-85a69b13796c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "9c6ae7e9-3011-4592-b532-bd985d48d1d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c5cd08-a077-44a0-85b6-31fe877b865a",
        "cursor": {
          "ref": "48df3351-4147-497c-9a19-8223c1b2a8fd",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "27d5562a-9939-4000-affb-b27add429b8a"
        },
        "item": {
          "id": "b5c5cd08-a077-44a0-85b6-31fe877b865a",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "84211529-ed66-4a41-a5ed-c0a0836ff63d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a17d16c5-016b-4f33-ba2d-cc994690ef54",
        "cursor": {
          "ref": "762ffc69-f7e5-46b6-bb05-5c5832b68fa6",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "b713228b-90b3-4bf8-9265-712061e4da92"
        },
        "item": {
          "id": "a17d16c5-016b-4f33-ba2d-cc994690ef54",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "53ee7e54-bf57-43d6-9d31-dbcf2f50b7f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd1ad106-e289-4ff5-a45b-5dc203fd1048",
        "cursor": {
          "ref": "db61ed66-409e-4ce3-a191-77e26aa8791d",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "ab9a86d0-b948-4e25-9735-ee7ed59a7948"
        },
        "item": {
          "id": "bd1ad106-e289-4ff5-a45b-5dc203fd1048",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "cd220693-9adc-4e0a-8508-4adb4c5cfa9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5fc480a-9a14-46da-8b07-2ca621c898aa",
        "cursor": {
          "ref": "fc79e68b-5443-4291-a79d-63cb1374aab7",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "dad8c16b-5cf7-45ae-9e57-00fc92b8596a"
        },
        "item": {
          "id": "a5fc480a-9a14-46da-8b07-2ca621c898aa",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d91e2457-bcbc-415a-80fa-7c45f2e3a496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a06683-f15a-4574-86b9-f572d7b1bf96",
        "cursor": {
          "ref": "a4b380f8-8b90-4325-995a-2a972e28be70",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "e864ece9-3d90-4f66-8948-5880732b28be"
        },
        "item": {
          "id": "95a06683-f15a-4574-86b9-f572d7b1bf96",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "6a211556-4efe-4d33-ac43-6c2b4c02d4cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e34504-11e2-4fa8-8d6b-b2b840e7bdc1",
        "cursor": {
          "ref": "0cfa81dd-4d57-464f-a93b-99eed1f71ab7",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "d0c8d6e2-292d-4c37-bd70-c57e7dd479a8"
        },
        "item": {
          "id": "f3e34504-11e2-4fa8-8d6b-b2b840e7bdc1",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "94348752-9a23-446d-b540-e0499e951919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9b365f-e5f7-4a57-8014-28d5d7b24ce0",
        "cursor": {
          "ref": "4616a1b3-4443-46ed-8bcc-6bfb7f43690b",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "49c108b8-7069-4f9a-807e-c71e3d782340"
        },
        "item": {
          "id": "4c9b365f-e5f7-4a57-8014-28d5d7b24ce0",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "5514f96e-8087-4d57-8821-3936e303689f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf45e61-a360-486a-911e-56e2d1e80182",
        "cursor": {
          "ref": "f84b2b0e-2ba3-45d0-9e88-22fbf2108614",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "6f76fc66-9ac5-44ed-a685-b099ab731c10"
        },
        "item": {
          "id": "6cf45e61-a360-486a-911e-56e2d1e80182",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2c6c3fd8-e046-4510-9a1a-4a29c13ce7bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b97fba3-d14f-41ce-b9b3-f5e067f2eca5",
        "cursor": {
          "ref": "b163932b-dbb2-42f6-88f9-007ba053aca1",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "0766793c-f5c3-4807-89ad-e78fab0a04e5"
        },
        "item": {
          "id": "2b97fba3-d14f-41ce-b9b3-f5e067f2eca5",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "7ba0adc7-c204-456a-9844-895e31e373d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b640ee00-9e5d-4367-bdf8-ec7c90ce0a04",
        "cursor": {
          "ref": "a3b014f1-642b-45fd-87e1-8cb2d1ef3aa2",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "c63f3f5d-c086-4079-a084-16048bffa749"
        },
        "item": {
          "id": "b640ee00-9e5d-4367-bdf8-ec7c90ce0a04",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f5b93999-6aa4-49c0-830e-0bf39c200343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f56906c3-0488-4e07-872c-061eb3339aea",
        "cursor": {
          "ref": "af26cf37-4f5e-4d72-86c7-0ff16c91e5cd",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "8d410fb1-da90-447e-b8c2-ade626cafcd5"
        },
        "item": {
          "id": "f56906c3-0488-4e07-872c-061eb3339aea",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e6efc24e-bf63-4cd7-8a85-a3cd8efe7d0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad3d008c-e9ef-4c85-bc85-32abf1e81cca",
        "cursor": {
          "ref": "fe631a7a-30ce-407f-a19c-6788c5a0e99d",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "8c102a77-60d8-491d-a94d-0151137cbce3"
        },
        "item": {
          "id": "ad3d008c-e9ef-4c85-bc85-32abf1e81cca",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e891376c-30c4-4376-803c-786b3da4f6c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5222d801-cf4a-4cc5-bd56-063d1c4b7e10",
        "cursor": {
          "ref": "90a05942-3bd1-44b1-a355-6270d9c8bc79",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "f6c26669-47f6-4aef-bc62-700b574399ba"
        },
        "item": {
          "id": "5222d801-cf4a-4cc5-bd56-063d1c4b7e10",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "3351c5c3-6420-4fbb-91b8-45ec83d6bafc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc3264e-070c-49da-af13-2ef4691a5208",
        "cursor": {
          "ref": "f1a48aa7-bd85-40c2-a4c1-6cae79e444c6",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "434874ad-0ae8-4a10-b565-68bc05cc1603"
        },
        "item": {
          "id": "9dc3264e-070c-49da-af13-2ef4691a5208",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "9808db1a-d487-4f86-8c99-5d08860ca50c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "591d29e0-2b76-477f-9299-46273c9854ab",
        "cursor": {
          "ref": "52e90202-b24d-4c61-b23b-ee79f0c0317e",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "91493f51-7831-4c79-a53c-264e0a56a8a7"
        },
        "item": {
          "id": "591d29e0-2b76-477f-9299-46273c9854ab",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "68cf0ae5-6028-4b30-902f-edc60a0b07b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f7201c-3a6a-491b-85fb-7ad2606e33d6",
        "cursor": {
          "ref": "b3862acc-2716-45e7-abbb-385bb2d21d60",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "64ab76b1-08ec-434a-8506-ae4af061200f"
        },
        "item": {
          "id": "c7f7201c-3a6a-491b-85fb-7ad2606e33d6",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "140c6175-4330-45e3-97c4-720338359328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33e56f3-2be1-4af6-aeab-80f683172d0b",
        "cursor": {
          "ref": "334796bd-c4a1-441f-b190-774f97eef473",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "0907385c-f033-4900-82ae-7c57310e823e"
        },
        "item": {
          "id": "c33e56f3-2be1-4af6-aeab-80f683172d0b",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "9bd7f6e9-8ba5-4d6a-849a-f7efc27b7af5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d5332e-98f4-4f2a-8545-4765c4cac42b",
        "cursor": {
          "ref": "df0888d8-317f-4bd9-8211-34bc7de927f3",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "657bec69-c402-4b61-aad4-4459ced9d325"
        },
        "item": {
          "id": "68d5332e-98f4-4f2a-8545-4765c4cac42b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "8bbf7694-31cd-4d5c-8f95-f2d25ff212d0",
          "status": "OK",
          "code": 200,
          "responseTime": 120,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea4d22e3-4c6f-41ea-8836-d01e084db3ce",
        "cursor": {
          "ref": "47b28427-828f-4fde-bae8-1fec628bed76",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "32017481-2217-47a5-9e15-53087784508e"
        },
        "item": {
          "id": "ea4d22e3-4c6f-41ea-8836-d01e084db3ce",
          "name": "credentials_verify"
        },
        "response": {
          "id": "379d5a8c-a10b-4332-999f-261c8a527f39",
          "status": "OK",
          "code": 200,
          "responseTime": 1521,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2138d82-a584-4939-8038-99c8ad469bde",
        "cursor": {
          "ref": "8ed3b044-67a4-4a8e-a5c0-a85e6f6f82b7",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "374412b1-841c-47f1-b537-707baf3b2e29"
        },
        "item": {
          "id": "e2138d82-a584-4939-8038-99c8ad469bde",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "748c7ff2-d336-4cea-a84d-8cc81a6883b5",
          "status": "OK",
          "code": 200,
          "responseTime": 1282,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "17990aab-12db-421f-910c-c6ff6ad8f1ba",
        "cursor": {
          "ref": "5a61d735-2ad8-46ac-955b-cfa23b2d5317",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "397e9776-eaad-46fd-b305-ccb3915b7a0e"
        },
        "item": {
          "id": "17990aab-12db-421f-910c-c6ff6ad8f1ba",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1afdd7c6-fc46-402a-bb91-64a9ceef159e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17990aab-12db-421f-910c-c6ff6ad8f1ba",
        "cursor": {
          "ref": "5a61d735-2ad8-46ac-955b-cfa23b2d5317",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "397e9776-eaad-46fd-b305-ccb3915b7a0e"
        },
        "item": {
          "id": "17990aab-12db-421f-910c-c6ff6ad8f1ba",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1afdd7c6-fc46-402a-bb91-64a9ceef159e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b148751-5b3b-4c28-aba5-0d462d3575de",
        "cursor": {
          "ref": "d4538476-ee84-4c84-927b-8802e0d33121",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "f9973ae0-2a46-4722-83a5-9fcf71551491"
        },
        "item": {
          "id": "3b148751-5b3b-4c28-aba5-0d462d3575de",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2074c453-7c96-41e2-9134-64c8f277a669",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04afc05-cb26-4ee8-87af-281f2250d54e",
        "cursor": {
          "ref": "c0c5c66d-5c51-47b6-ba91-f2322059b7ea",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "b83441a6-34f7-4d4d-8960-8cc3066d524c"
        },
        "item": {
          "id": "e04afc05-cb26-4ee8-87af-281f2250d54e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d41fe62b-8c11-4cc1-8183-fc7af9757ffd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}