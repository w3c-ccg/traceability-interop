{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "cc954de1-7b3d-4e65-97c3-1bef082a52fa",
        "name": "Clear Cache",
        "item": [
          {
            "id": "68111e90-70de-4332-8df1-a7f1df5a5723",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "955f3a52-6404-4f4f-8d98-f392ee909310",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0c3cb5cd-d1f3-41dd-bc04-ae4bc3a0a68f"
                }
              }
            ]
          },
          {
            "id": "a7a0452b-798f-4dbc-83fe-80f36c14e6c1",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ece7dd20-333b-4bab-a417-c207d0e11ff4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "660cbfb5-1809-4b8d-a3d0-885be901d62f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9307f27c-4184-439f-b7e3-7d4276a08dae",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "89ddcaaf-8cbb-463b-9e09-307e6af5d846",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3b5c9c92-1848-4a6b-adc8-91b2e3bfd128",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fac85cd6-fe3c-45f8-87b0-71880a91493e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5ff8c85f-2ca1-40ee-8759-352654d3710d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a9d0d126-6d4f-4172-8f00-59cb7d125d3d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fe5a6be1-ec0c-4c7c-9a7c-f5dae16bd5d8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5e837dc1-2ce1-4f07-b92f-433911740879",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ff967b07-6cdf-4d9e-9e82-8cf8a492a99e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "64c158be-d9ca-4de3-9e6b-3273f286485c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "045fdd9d-81f5-4439-90f7-731d0ab29a4e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6e8b6af3-ba02-406d-b2b8-c97dc04ac522",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6af8e6dc-41f0-4457-8d1c-c1fa13ced6ef"
            }
          }
        ]
      },
      {
        "id": "cf435053-2c73-4c08-b242-9d0afd825812",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "5c72df3f-d76f-4977-8540-9f19c2ed4841",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e729e862-192e-46e3-8ec6-86517a5cd6a9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0148747d-b4f3-4fab-8243-c4397ac2fcee",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbdd4d7d-7a09-484d-a4cb-5b8cb4a67346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "70eeee29-dc57-41f0-b22e-91be4aa50199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62865e14-568f-4855-abfd-9496f72ed6bf",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c8cf13-52cf-46f7-bb60-c85c8465cd5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df943ac1-a270-40c7-8af1-4106a6a04aff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab8c6e03-60a9-4607-86a5-ee89da272cd7",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9502155-f701-47af-86eb-0a718c31f600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8ea2c819-3f01-48d2-8636-6fad21725c47"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a9028dd0-b1d7-40c3-a9b0-a4c576d5cce2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9867e9ad-91da-4306-827b-1f7d9cbf2d2b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "288add04-38db-48e9-b9ea-3a4b011b5bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "108b6965-e9c1-4a9b-ac47-c6ef2bc61771"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88027fe1-90d1-44de-81b4-4d1c60aef81f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faa08471-6d60-4cc6-8b9a-a78ec34e24c1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c3829875-a3c7-4bf3-870e-85962ed0ff20",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e9d04398-967a-40a4-9a4c-739c16850392",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd560f06-06a1-4f7d-a652-01623476e7f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "932a37f2-f254-45e6-85b5-d85bc9c16d42"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c343a83c-278f-480c-9dab-e893d9b9282d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "8a6201eb-e151-4fe5-aa03-100cfd09b42d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "25731b23-5e54-48be-8667-99d8065ecb14",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b58949f0-74e3-4fec-9533-b41e0812add2"
            }
          }
        ]
      },
      {
        "id": "8988d68d-5b99-4efc-a8e4-f0d2b59afa75",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "01c15359-b9a2-44a7-a4a3-41202b243788",
            "name": "Negative Testing",
            "item": [
              {
                "id": "728780dd-7947-4a03-bf2a-444ec32c44d9",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "de59754a-a914-4b5e-824a-b811352d0ede",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df2bba2b-45bf-419a-a04c-dc759495f9fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05b214ae-7617-47a0-8229-4f32dd74803e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b5b861-9a70-4059-806c-713571cc64be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a50e1ced-ad03-46ae-ad80-4de0fe5ee65c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea677ca-efc4-4789-b02a-e2d1d28ea15f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1378adee-4e50-4dfe-8126-3d2630243850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ffd9344-8cce-4f67-a012-c827b63b1888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e524e9f2-87bb-4ea6-b6e5-c565cd48a2e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07791196-54cc-4a52-b651-189b67aad8f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb9f2f31-e0c6-4ee5-bbb7-296be6d7867a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cfc8105-ecb9-4f43-85c1-1f2e98788be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ed9899d-2ef4-4825-866c-2da5fbb5c74f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "057dded1-75f5-40ae-b7c8-27d157c91344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c033d268-6117-42e4-9572-e5bbabb751c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a339ff-bbc1-4978-985e-4baff35f805d",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a60454-f7d0-4e77-9ffe-a3fd1db1c569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ee50798-79d6-43c0-aedd-6ea132da732a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a66de92a-516f-461b-a940-671c6ad5a293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "683cb5ff-6533-428a-9013-525e55c3fd1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b570b1-2c32-4b2b-a4cf-f78b120d8572",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3285019-fb5f-416c-8296-d1d71c87f9c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ddd8b72-5ced-4fa5-8be8-07663fd60f66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ae3522-3d81-41cc-85dd-9925eca300ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb5ce5a8-5c82-4dd2-9f05-10529810035d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fae135de-1dba-4e32-8a34-fd954fd311d1",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de26866-4ad6-4503-80ea-3112dccfe0a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e503a06b-74d2-4812-8f00-19b4b91fb593"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1967d94e-a2d7-4a40-b467-734eb7a6322a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae2f199c-952c-4c21-9daf-558e47e0893b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20771bd4-5831-4b63-b5f0-934adfa1e515",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4304214-1af5-406d-a125-5f1c36bc9e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaf2ab58-5ac0-4e19-8bf8-dce63ba7e72f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7e6a708-0c85-4255-8f87-f0589d350a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0a6d1a4-a318-4806-b363-f7332d084c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d945479-5d73-4df2-bbae-ac8c69c9a3a2",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e29a5201-1164-49a4-bc67-416e1823d732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "016ed929-982c-4ae0-8813-6f42ba52e4d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b081d421-515a-493c-b95d-4cd1135186f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "053ce5ea-b116-4df5-bcd0-e9d1c3536330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b32ec7e9-0410-410d-98dd-a14cb35710b8",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e743ca-2450-4dc3-a33f-1f19cebcc853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e470059e-63d9-4978-859d-c5d10c58ef6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3358c174-3b63-40cc-a67c-4862ce6b909e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c2c00e0b-59cb-4f1e-a296-f8c5ea7a2ff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a57d51c-d486-4b1e-93cb-90d0e1ae92e1",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df2a9e3-3594-4958-a6d6-cba979220a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78e14d67-4656-4d83-af1a-d29757ae7f6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3f76b3e-c8d8-4d10-966f-575c12699c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1fc84b71-b08a-4466-93c3-9e3b2fa314a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d10a67cd-b2ea-4b6f-8730-1fc79754bce5",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f1a710d-8455-40b7-8f74-66e5b410a65a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22160088-3ab8-4cfe-b18f-4f6c0b538085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc70876-6b87-40b1-a1de-724f41f30bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8ad6e5f-0e44-48cf-9fd6-f10937aa1384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf45a2ea-5c30-4103-9f98-67ea91c32cc6",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb4abe71-1eac-4b47-a56e-8e78d705373d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74f23685-72be-4d1a-9bd6-9cad7c528243"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f98308-9763-4446-a5f6-e64998f46e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ced3198-451d-4022-a70f-ac2457fb56e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fef34665-7732-4b6a-9dc0-f28d566d8a67",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4fb9ccd-1fd3-4842-a949-f49183ed4c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b7d7e2a-11d4-4130-b62e-8e5998c3e726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ff7328-93c4-4217-9224-31e07280e6ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "953231c0-5d78-44df-910b-fbbca6bf1e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff1c2fa-3810-4c5c-877c-8bb634daaee7",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad2a5b4e-c82b-4a1c-b12c-e6cfbf8eb6ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf20e9b2-1166-48c2-9f21-44d246027152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fadb6367-dbd8-4f99-9b3b-0ea7e0463c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e285a4cc-e08e-4a7f-8aa3-602fca2aba83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d64062bf-78bb-49dd-9a83-210e85e2ff14",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e9114ec-6b98-4990-aac2-ce45e61b842c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "900491ae-8aae-4e23-ac95-3e78a24cc127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f4e66a-b313-4e0f-9971-32bf9b632c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b092b4ea-c1f7-49f0-82b4-8d5abdf4089b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d5a343-610c-4512-83b4-ea24feda7716",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea64062-0b9c-459a-bff8-9176f6ab5df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "838a395a-9148-4b12-b3d0-9a8d3f9ea274"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "490f5cfc-d03b-4ed1-b652-254415fc93fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f5b1de8-919b-4d06-8959-98d83ff63f8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61e16bb3-e840-4e09-828e-14edec0a0cda",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53fae4f6-7303-4553-b09e-33b4240e6f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "967290cd-bd9f-4fbd-8391-0a8ce1af849a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af8e9563-892b-4aea-98ed-db12ea8e06f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a89c438-1773-4194-b52b-d2a37176e33e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5de5bb1-521d-43ce-98a7-4f7bd8a59be9",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78580e98-fe4c-4c96-a6e2-5865c151ed5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcf79b12-decc-42bc-b66a-96bdbedb5a30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d397cf-f4ac-463c-bad5-5f1ba1fbb63b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "724a88e7-ae40-492d-b7f1-44763a7ddac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afd17630-abdf-4f29-a522-160518496db9",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c6b0c75-2151-4986-92cb-f16dc6a1c7a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a9cac0e-8d3b-4d28-9023-73e8e39aace8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6275c548-be3a-4071-b46a-51857e936e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d73c2ae7-542b-4a4d-a4f3-54a0f84380bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1f27da5-699e-4714-94b3-d52bb4f5d39f",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d2859a-27c3-45b4-8903-7cb0f13727b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb0889a3-06c1-41ae-b159-9904e3a66ee3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fafc1773-bd50-4f70-bb26-fe5d4653354c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "98b52443-4d93-4c0f-b2b9-f9fe6a75e7ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da50b4a9-40ed-45aa-934e-4fea0c11bfeb",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe6805f-ef22-4b08-8ce5-4f9bcbb6dfc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "823d1978-3cb4-46be-8235-b9d14647d203"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "612549d0-5317-4bcd-8cea-f9ee25726853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a16acf1-9275-4224-8043-318bec554e99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d30df80-c06d-4687-8c19-deaa04e6a004",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d48bbe1-07d8-4f8b-983e-38a9214bde53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "618c9e58-9883-42be-9a9b-9d39d7cd66b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda79c2e-98fc-4e79-9132-09d283d66787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ed4002e-30a9-46c7-9a5d-c65465a002fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14fe70ad-f6f6-4629-a008-ae6104428a99",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab19eecb-e7c7-4c1b-90bb-e8fbb4d16e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41722c79-0e05-4a3b-b678-f0406ec100d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "107d13ce-3380-432e-bccb-10bf904a950e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "24df677c-069f-4781-99f6-d067b8df8b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b5e9299-7efc-4b3f-9430-856013c29d7a",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "846f730a-1bc4-4ef0-9c15-2f820fe711cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdb10193-f97a-4537-89c7-d9525d2d7b05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd9bec90-461b-4513-b377-9be3084a72b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b753dfe-d8ee-45bc-9bc5-0d090c7b251d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1ac0f95-3f77-45a0-a4ec-7f85ddf24915",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db185e56-3361-4c8b-8cf1-37e7d664fad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8733c63-2aff-48de-a9d3-388efb70e85b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8e06310-74d6-438f-b255-51257ad08f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "593d0ff1-a8ec-4fb7-b452-d0da1381a8e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bd924d5-03cf-4af2-8054-4fda20178d56",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0154e25e-ef46-411d-b660-505ac0b2db4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e55b07d4-ea01-4b2b-9b70-3c4243a6b67b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc7c76b7-2d5d-407c-beb4-2755e17e3b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f2b9fe9-62ae-4155-99dd-6afd4299bfff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd814b45-8cb5-4a85-b3cf-b265c89fe828",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28db68f1-534c-4233-97ed-01ec17d7693a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81d190aa-6f5b-4b5c-b4c2-19c0d17866bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c94543-b3d1-46bc-8a23-c329a907a8e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "956e4f08-32e6-4f36-8389-8fffc1270fa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc4b8224-1f8e-4d4b-89fa-567ce23991d5",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ff47aa-8194-4973-afbd-b503d40ebe26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "763701dc-61a1-4a24-9cad-022bf62b845e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f89833-d53b-4a04-8c48-b1df047225e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "90d6e9af-bbd7-496e-aae0-1756a0c349dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0c41b3a-6ad6-4520-ae42-cd1b72e332fb",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e004f969-7d43-4cb2-92fa-e694086fa542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93e6934e-2bb2-407c-844c-1d7a605be21c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "714ff21b-c12f-4991-b929-74190fd8e6f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7fb1bd9-2f9e-4326-a2f8-7d77b4fdcaa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc7f4f3-ce9c-4dc0-8d72-f83e4302595c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e41b3bf-d36d-4f74-8b47-2b65ef308d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be4b44f3-063e-48f5-a044-f1db328a2d39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47fa2d9e-dd67-48fd-b25a-b269183770fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "655f2d3c-6f22-4ebd-b861-5b48e49b00fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77273182-cba5-4c83-8a4e-f3958f3f460e",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b0d40d-3f41-4690-88ca-1bfdf8c084c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7880df0-8be5-4a77-babd-7e382e9d1c03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1b72cbe-6f90-4cca-8e1c-21fddb887e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "591f358c-bce8-4bc0-9cbd-1f667911ccd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "495780ef-d69b-467d-83dd-2400927161af",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e46308-bec8-42f0-8277-b7320c8c007f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "003647fc-4217-4c67-a302-3a5a07d9e665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc08d25-f8c2-4193-a6c2-900a98cee73f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "16f0e500-ca57-40c4-8e92-902c86a5c38b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b31c14e5-e158-4f93-9be5-abe01c7e0ed3",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d98d9536-2d8b-4fbc-afe1-49bbf8467cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ab1670e-a2dd-4834-bfb4-c09b17df56a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fab6b8b-89fb-43b8-b3c6-24ffd6e32a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2724342a-a095-4b59-af11-e999f90d9c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "369c318a-e461-4e81-a099-64c37ce4ff9d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b6f51e5-2ff3-40e0-9925-9c72e049511e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed3b24d4-300e-4524-b419-89cb32587bf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9425925-40f4-4b4c-9379-1f1ed1102b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "39b2518f-c8b2-4fa6-9b17-53ec464b80bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29878084-ebea-4358-a65e-1ba20f02c4bb",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15580cbc-59ff-4c64-b39f-8488590dfeea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c331625-d7e3-4725-baba-b60419ab9a93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf1ac4c-3bca-47a3-bec4-f15800509d08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "71173ddc-22cb-48d3-b109-2f58a3c286f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a3c01d2-727f-4bc7-9c3f-cf251a5555e4",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a597ec-1eff-45d9-a735-402692d7813c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "95ea9d93-dc81-477e-95a7-83ac916e66cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50bcb54d-795c-4fd9-93d7-a4ee3948e0b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7f3cf2a7-a9c5-4092-b4cc-11b40347751b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa1df38b-bfbc-4af1-95bd-f9959721fc27",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de5f442-228a-4c7e-8b57-cebf0aa3373f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c06ba541-7ec4-47fb-9611-e49e64f423c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc4a9ce8-eabd-4467-965b-9c3c374b9eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f395903-7028-49ed-adfa-8508e130200a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2708d8a-f49e-4707-9e0d-587c81a68fa3",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a7dae2-26bf-4d62-aa48-115def4db53d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d64a125-abb0-4a6e-aa0a-c5e72e677c4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84df7525-5edf-4cad-a61d-637b1e8674cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7f55ea9-07ea-4d84-b436-2bb302cebb38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a1158fb-3cb3-4766-b3e7-b7e7eb1a0b1b",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba6ee5d-1f2c-4aeb-a3d5-ffa550b0dc7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e25f514-2c63-4bcb-ad60-dd6ab203b720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c95015a-7419-4c1c-b547-e6bc01ed053c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fcf23ce2-baa0-4447-8873-a0f86b99d362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7622f12a-6b1b-494a-8709-8bafff49add9",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "023113cc-7ec0-483d-8284-76f99d097a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "771fa7e2-32eb-41da-aefb-b84ab1968577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea21d5b-386c-4d6e-954b-1343a05e2130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3713283d-58c8-4e91-8430-e8bc495a8372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5cfb835-097d-49c3-835b-98ca2741b7c4",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "795b82a3-c7b8-4d75-93cd-758b960b86ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c348785-4509-409e-b711-b18e650d1dc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3258890-f9ba-460d-ba1b-8c93862f9165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e54d864-540e-4797-a558-612f0995f2cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a981e30-caa8-4c39-8717-fc88dbcac46c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a762d0-2686-4fbd-b60e-fdd4a1973e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85ce2849-fa21-4e12-8fb6-c78d797cf122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9571dbd-6016-46ed-854e-1f87e7288cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "fe727af6-272e-499d-a77c-91de2fa2afa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a28130f9-0e94-4e2b-a132-cff716801168",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaa57bb8-de43-4ca8-b770-633a0056f6fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aec3836d-651a-4625-8de1-55d5f79273de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adddbd15-5107-4db6-87b8-bdeebe71cba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f9c79f0-19af-4389-b86e-40f8e9bcc55f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc495845-e207-44e0-beb2-ffe94b817f6b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a58d3070-ced1-41df-a2b0-b762fa0be661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e5e2e6e-3cb0-44f7-b450-d1d8bcb5696e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc1ad1d-a836-4659-af68-468d77c488e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "38065c82-93c3-42fe-b9f0-c0f60de8f0e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df57aa72-5ae9-4f07-9b51-946fba742973",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ede3ee-3349-4812-bd00-40482948b07c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36ae6cda-8e83-41e9-b546-d93ecd3abd82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e1076bd-0049-413a-bd58-991c755a9dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "564703d0-cc4a-45f1-8a2a-e0fe7dead5f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff50166-3330-4f03-8919-fc0c424eaaf9",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f98c6c-d782-40a4-b47a-9f2094edf963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df0d5456-883f-4484-b508-6354693cd8ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e69f88-dd8c-4175-b724-e0e29dd3a63a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aef3ef4f-f93a-4d3b-bde2-10513dfed1fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b940900-e5a2-49f8-a455-21389e7cb76b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca6defa2-aca6-4e8d-bde3-dd2ccb2af6db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e04aa08-e337-446d-945e-9c53445a4cab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c123f3-2dfb-4dcf-bb61-5b5b2cdd8f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a56eacd-0e0e-4be4-8d61-6e0c98183f3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d26f541-68fc-4021-bac0-880a61c8cfde",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c781ac6-ba12-4803-ac62-de24f85f6b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfef8c49-d0b9-4bdd-85af-aa0eb278a9b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aadfd4ce-27a6-469c-b68a-05fe670c8b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "849caf67-f19f-4f3f-a094-89ba003d42f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d1274cb-1aed-480a-bf32-4b0d70553f7b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b707226f-66dc-49e5-9197-fe531cf729ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20c44bb0-3919-4710-8393-35981ef9f221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e9ba11-922e-46d4-bd5c-499122d4ce5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7d339c1-c78b-4520-85c8-cbae21badb90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f50a75bb-bda9-442f-82e1-9e8d2e958d3a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be302d2c-cb85-492b-91af-dca927e8530d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e55fb915-96b8-4988-a153-f51763697cdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4605bd44-d907-4dce-8d50-cc505b213093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b2fef47d-6c5a-4c53-837e-de697e1dc01a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b081d11-f52d-4156-9176-092e87fdb764",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e60e8a-b798-4884-acfe-55a2c287af18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1acfb75-5bfd-4b30-9929-81cea1c0ac76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e50ddf-1ae7-4c9f-a19d-bda7e1c4fe33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "49e7eb9e-a9c1-41eb-b7ea-e4ddec4d6955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a0c65b5-6dfd-4432-b136-21c40b430109",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0665b19-a174-428a-bafa-d87301373678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4878c0f7-f258-4c20-a05d-1263cfb03854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa931633-3c77-4f80-9181-6c84eec0655d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "192a6256-aa20-47cf-ab01-654be4a7f996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a57cf20-db8e-4535-a4d8-adbf8a5bb690",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a15ba15-33e1-4622-aaf7-17f9a5b598d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e685a38d-0c47-422b-b7a6-d3a50637f6a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db8940bc-38ef-4578-ace6-bc59b14fba8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa2aefd8-3386-4eca-a564-bb93a6f900c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93922d74-28ba-404b-8e95-299a3925f7a5",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a52f58-3101-428a-bd54-339aaf8d8073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3685ce0-7776-42cc-a118-e8d88e1ecd91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eea88a9f-c2ea-42ae-9021-a5f566ecc9e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c725596f-eb63-4b31-8bf0-ba082d4154fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8211a002-65f7-47c7-b143-20d6f85ab209",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b884d716-f91b-40eb-8665-dae4d2792c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d10782a4-a875-421f-bd85-38f364c5a189"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "783c15a1-d41a-46d2-9303-53d52b21ffe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a45f43d8-d3c3-4864-932f-08f92c93f41c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a24d4cac-96ff-4469-8bbb-068f52a50487",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "205acce0-3558-47ee-8678-4dd8efd1565e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fe9927a-beea-42a1-b9bf-ee996d6e1c79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f96fc4-a85c-49d4-95fd-4cb9c9ff9bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "0930412e-3089-4901-bd3c-372d12fb5729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb768671-fd33-40c9-9861-c00e88e19977",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "133a0d51-6259-4dbb-9d1a-9f93f83a121c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acbc5759-3404-4404-b09b-4939ac56bd7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56e40db5-b220-4157-9260-77e473a44ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b396fd99-f6d9-4004-8b38-75dee5f8a07e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4259be0-6c33-4155-b88c-d65f6d7e2625",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64220106-be26-4204-af2f-7608297311dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69720e28-477c-4033-b4c9-7534908941dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f04bb87a-5630-473c-992d-55da1d75149f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e08760e-2f3c-4430-b76b-d3f7fd3439e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65dac079-f338-4453-8ee0-7ba1ab217c87",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb481988-8aac-4e5c-9a10-bc25f980bea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9781c7d7-2d98-4fcb-92bf-c5d9a08a4a38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d1648cb-4e88-4f36-ad98-11ea848c29ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9dcce50b-a753-4bfe-8318-645559a63868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51927d6c-c65d-432f-ae5e-d5ca7515bb2d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "075e6a91-602f-4104-989b-d08551e757f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f97d2cc-3475-41c5-aa88-79f33028e2b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c845a1c-bfdc-41d3-848a-e9d5909dc9c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "997d6e0f-9464-4ff8-a438-ce7dc0701964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ea9f8fc-13ec-4ec1-a57b-f8f41257834d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e133aafc-a6f3-422b-b54f-bae63c83d245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1b1e0a7-0e02-4985-bd14-577368e3f9b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "746f755c-cb60-4423-afc5-37f4f15f8db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ddbb3c53-b070-4228-96c5-9ab5fa6559f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd9c56bb-114f-4d67-acaf-074bdf286681",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e27491c1-3b6f-402c-9b05-2ea2d99295ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb01f0cc-288c-4183-b5d9-9c797d9e1927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d8653b-adff-4658-aa68-63964f9c6900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "2955069a-77c8-4e07-979c-5b15450c813c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c37ccd6-64d1-45b1-be23-17b4c07c28ce",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62cdeed6-d690-41c5-864c-e719aa896fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c6e7be5-6f94-4ddb-8f87-f85aa51389ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f087059a-ca8d-417c-9186-111b57ddb3ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1cf9d1b-4b80-4de9-ae3b-c5586b5e74f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c71dd83b-0bbc-42c2-a4a5-861d674b7896",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a117e883-1343-470f-a16d-81f0d1ef4f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8ab65f5-3591-45bf-8b5b-6758dd0cac02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e06f58d-1895-4f27-b3b5-063db48cb030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7a1cf69-88ff-44a7-8b6b-f3d141a0d752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e89fd2f2-fd60-47f1-b53c-a9a15e7e22ba",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb0dec4-a8b8-4ed6-a899-1c1e193b6220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10e174b3-a23c-40b2-9251-abcc6846c5e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b37a49a-ef1d-4865-a146-07e8e71954e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b393f08-ab57-436d-96a8-f3bd3a7a4ba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc32efa2-fa92-46c7-8e6a-d709740429b7",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b21f664-fbb6-41ab-ba57-1d7cecfb1c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88f69285-3e95-40d6-9954-599d9c727272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dffa2dce-ea3d-4204-af1a-99df3e442042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a08333c9-1388-44df-a83d-d23fda9cf742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a3c740-e7b4-4a34-876c-b88c94ed0ea7",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "082ebeac-e333-4de4-857a-6046115cbfcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30b58b46-07eb-474f-b7ea-d0ed7b23932f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "013b8cdd-fbd0-4ca7-987c-54f86d988a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "056a7f0a-1e52-476d-b733-153bc04b650e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "507a217b-39c2-4886-9f44-ed89b3e75c3e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb942135-7deb-48c5-af33-297ac8e52f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b72e8e3-9a46-4010-b5ac-27ed61231387"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06169363-22e8-4992-9f3d-d474399567e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bdd7f5d-86da-4ace-b0d9-8d7484789e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d90c9d75-7bee-4d2d-b761-62b77f360591",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc33d797-f843-414b-af64-2ee5f5a7adaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3661929a-2f0c-4731-bfad-834a55d2abf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f965eb-d33f-4345-8e5c-56e0144e2d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d5343cf-ae1b-4494-aa38-cb61bcc8bed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f8d6112-7ee5-4799-902b-067b54ad23a1",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56737b94-04af-4827-823e-b13efa581f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fd10e26-e6be-4898-921a-61b5971f6883"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d84f8a7e-11a0-4175-8a63-774ddd560cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "40330a71-4144-48bb-97e4-098ff148a23a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1ff2e6a-a875-486d-b127-168c3b7c2ac1",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "020fb424-06b4-48d2-9985-4babb7d9701a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a718212d-6f1b-401c-a5b6-b03eb6283823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a44d10-9080-45de-83c0-d29529c95b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b29ba94-f410-4875-9807-f2ef4159f1d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d88128-12a8-456e-8c3d-de6e213f3406",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bbeb7a0-a687-41e7-90f1-31b89cc3fe09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fa204ba-db86-437b-98b4-6fbfefc50410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4baa35d-be90-43a5-a7b0-9691bc112f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "438fa7c5-0d6f-456b-acff-c0cb260fa155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3a3ee24-fbc2-4304-8940-13ade5e24da5",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c66c2c-2a2c-4e05-92b9-47260de6b5d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a4434b3-3728-407f-ab22-5ebb8d7d42a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e710e90-4888-4e79-b459-0a31e34cdf30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "09b4d192-0ae5-4805-9de3-3ffc10121034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f23ba14-def6-46cd-a305-f1900f4d8739",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25f1b973-bb75-4512-983c-8073d6363113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3c19b2e-3c0a-4b0e-b348-9e3f72c66644"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad68eaa8-1e00-4a0d-a9d0-84559f390cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2499cbae-9766-4c2b-aaaf-32bc1c8d2b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dec71d5-7ed8-4e67-b8db-3b232f802673",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48cddf6f-cfe3-4dad-b9d8-e85d29f66fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c42af45-da91-4120-a3c0-6635599ea91d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2fc29a-7d81-4954-bd67-1a6ccdbf1faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c983638-28f8-4f40-8267-22dde8bef644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ccaf56-2aae-458b-a288-86d1903aca13",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "427a7fbb-5a6f-4642-ad2c-984fb28c62e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46a9b81f-6c87-4b6a-9be6-a06ed13f9db3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e69f76f8-7625-43ac-9856-5efea4442df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "23d3afb9-5385-4268-8ae4-5c970302a3de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "358de310-d3d7-4acc-a563-a27550622c56",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e2fecfd-1e73-4a1d-b2c9-f2e3d8e0693d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c56de357-a7b6-4d73-8391-32c38c47055d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319a0747-7a47-477e-9e2b-df393b761722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccdfda07-f6b1-4070-a364-efe74fd6292c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab8134fb-f512-4313-a37e-914d6e977a9a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cc572ca-d819-493c-8bda-aeef0599ade4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2dffe08-d842-4b55-b811-70aa46572294"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b0a639e-7a05-4f85-9fe0-ce6a24ffc7f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac0447ae-5a54-4945-97a8-7ba72802115e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d44e52-9750-4690-a415-bafde5825344",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c577559-666d-4ecc-b752-cc110aff7a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0173b612-411a-403b-aa33-348d5de6cf72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3834e8db-12a6-45c8-97a7-288702ed92b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "563239cb-6aee-4f2d-81e1-155b4721933c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "763353bf-7f93-4d6f-8d0e-5181a94145ba",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae52d5a1-eee0-4dbe-9ee9-8bafe7bdb578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93a7413b-57f6-46a6-85d4-cc306321e8ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1250d820-18e6-402a-8922-4509c84f87d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "19f260f1-387c-4037-8970-afa3c5a9df77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed5284b-0347-4109-a447-77c21fe05adc",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84398d1d-87b1-46a6-99b2-1a9707fc605e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb421643-a333-40e3-90ba-d2e6c6f56952"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48733bd9-0026-4b21-a1a2-ba07bf1bd1c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "18b5b207-123c-4826-b7f5-3162f44e2829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8deba70-2b3c-4c1f-90d8-8e3dbccff02d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "774e2ff2-4989-4149-bda1-411b637f309d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0b7b018-3216-4666-953b-56b2125b20f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a3036e-e724-49e1-b013-a2fea01f43b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "77096bc6-88b1-4f59-92c7-d3dd132711db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dafbe5a-a66e-4cb2-9896-41e93e7fa7e4",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd8d48db-6126-4afc-805d-9a8fc26d600c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b03d18bf-200f-47da-abeb-6d5681ad86a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69a14274-ca82-4f53-95dd-04878309e9ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b55e8bc-da9d-4952-b21f-975dab2254d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e06a3b-e2ca-4e91-983b-f26663d4b019",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2c12a9e-3f88-47d3-973c-ef37fcc8a372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76b60da2-7b5e-4604-8c86-4bf1ec378190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86600a80-79d4-4e9b-bb9b-11f06c459baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "69139e4e-57cc-4b0b-b60d-8cee0f70aa3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e9c06d9-4017-42dc-8ee6-d948b97eba25",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5a32f2a-6658-4b7a-a855-de161dfbf951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25866943-741a-4271-81b6-49e07348529d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fac1922-9038-4cef-a999-dddecc1a00f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9d7baf73-66e3-4167-9fa5-374dd4fe2069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee589fc-bce7-48ab-8d53-e0b587584bc4",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbe997cf-27fc-4364-82dc-28b8cfe1d1dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dee057a-53fa-4460-93c0-60efcafedb94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef6fcdb-1d59-4d0e-b3c5-8db67cbd8d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dece127e-828b-4f0f-aca3-f9cc969f169b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e267f048-16c1-4576-bc91-cb1a6737da45",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b34bcd-7fef-477d-91f4-3704546a1efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bbbe70e-3edd-418c-9ab9-cd2b6e4a0230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fb04634-3018-4e2b-a41e-5b3ac5626d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6590366-8943-414b-83d8-9694fb00d446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f7b7ecd-3169-4ade-851c-d8309d5df9e8",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc614495-6381-4a11-9735-94e6cda1ef6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32065c89-f96a-4cc2-a079-4d42cf2f2a5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee18c6c9-b1e8-45bb-85d6-37941ad872ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a63f0ce-944a-4505-9ce8-acdc54a0eeb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "830303df-a62c-4fb6-bcd1-8083c3e1e0b4",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8081c27-b4f8-41a5-89cc-3c1c481db46e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b52e698-e56d-4c79-b588-e6afe7b293ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c0d7ab-b4db-4932-869f-f894df026dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e58a978-d17c-48c7-8cbe-05c72ed4d3cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf5565e4-ab0f-444c-b586-9568299509ef",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "041e012a-8dd9-458d-956c-8ae296e1287d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ccdb9c5-f8cf-435f-826b-2b4dc1772bb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c8d272-cec1-4c5f-8506-ec2413549bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2439865e-c0f4-422d-8fa2-a3afdf16a4a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b90111-c6ad-493c-a35e-2dd1b17ccb08",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3af563b-298a-40d2-9cf4-b4a38a68b5b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a83d4664-0b4f-4ff9-b3ae-9616b09eba02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca4cf883-edb8-408c-9ff8-7dc515524b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc2c3b7b-1895-481c-b98d-674794eb7d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6842af36-370e-4dfa-8361-0a44b10edfc7",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e86702b-0d32-46f6-972d-93af6c792c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "63223a69-0d39-4436-835c-ceaea11a6e49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bfd6ffd-21fb-4e2e-955e-7e80bbe6e3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2bd6a1f6-1bb6-4e73-9d47-6cb63e461b88"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b58e0231-eef1-4006-98ce-f1f16e50478b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bdbd0ad7-c7a7-4cc4-ad5d-0b36c197b231",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c69bda52-4fdf-4468-a98c-6105598c8e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "04240391-596f-447f-81d1-cac510d41532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd52ae46-bdcf-42d4-bd61-a2135d3bd273",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "068e087f-b37f-4f1f-8fab-2ba0fa262c26"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "852c28e0-6bbb-4edb-a593-54525d05984b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b5d466c-6986-4271-85b8-c461a1e77738"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5cb5ee6-a1a5-4274-85ef-0a3ec81f2a67",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88036eb8-11d8-4e68-a092-f196992d2986"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "988982cc-b1a3-419c-9837-1f66c9dfb547",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a03b7cae-7211-4205-9da6-32bbe1c534b4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "80899700-342e-44dc-8c7d-d7017c0bfa05",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b2eda8ac-c45a-40a7-b82a-c8f8bd3ddbec"
                }
              }
            ]
          },
          {
            "id": "ca4d585a-afec-4811-9f35-14589e5a69af",
            "name": "Positive Testing",
            "item": [
              {
                "id": "888327ee-f56b-4666-bb3b-fccd6511ca6d",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "3734f86b-6223-41a2-97e3-132ce492aa88",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a17fe2a2-3eff-4e46-8e84-3b47445802e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7c10072d-29f6-47f3-aeb0-bc767fb9bd84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40da35c9-c143-4474-9a1d-e53e8f356870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b786b32-24aa-4aa7-97ef-72e619d49277"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "29a3c37c-12c5-4a94-b20f-6210b612ccb8",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b2393dc-51a1-4b58-9c37-4d8ccbca3dd8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1ed3cd2c-629d-41df-816c-7ca27dd4a403"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7f5d4252-adf4-4634-8f69-e5f2561cd172",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1021d383-8180-49a2-9ff0-8e000dd4842a"
                    }
                  }
                ]
              },
              {
                "id": "e53a5e14-4368-4c4e-9956-c9b0f7a426d9",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab3f1f0a-97c1-47dc-a9e7-0ad45d52950b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c87fa7f3-1065-4404-a545-2f0db3deec9c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eabb9941-d4c7-4eb4-a742-f13f43b6b7db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "344c6d84-65cd-49a2-9853-d7e525c15145"
                    }
                  }
                ]
              },
              {
                "id": "df408790-8a7c-46d8-be1b-e00b3d48be8b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "52015998-6be5-4b56-bae7-046856214cb6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b4a4974f-4e6d-427b-ac10-cc7df43c999d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b570549-86a1-498f-a702-31ec4ec0a493",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c696bf81-2df0-4aac-9135-9abe4393f68c"
                    }
                  }
                ]
              },
              {
                "id": "a7868987-55b9-4d63-abcb-4010ce4193c4",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8420632-00f8-4e9a-af49-f5ff0b2d970d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0ff1da57-a552-49d9-bf40-5341f5587a27"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c8e24df-885e-432e-a9cc-f35beb538340",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "1fb1947a-ec62-4eeb-8490-c92b77637b20"
                    }
                  }
                ]
              },
              {
                "id": "6a464d22-43d6-4c25-a609-f6a67f371baf",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f0f3c333-b563-41f2-93c1-aa64e3e0a4c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "97410c17-9bcd-4dc0-9b92-4ba869789e29"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d4a9d22-1c16-412d-9482-22be3924908b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "dd76e50e-5cf4-4d41-9bbe-ed3b803eb552"
                    }
                  }
                ]
              },
              {
                "id": "320505b9-52cf-48bf-a49a-4e4d7b0e2ac0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd32247c-a130-47d9-a53f-b5ac628424b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e64d4699-3f31-4248-bb8c-c5f0dd0b3742"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4bcde5b1-1d34-49e0-85c0-d233b3a28b80",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0b3d048e-e5c2-458a-acc0-1ed97896b412"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "50f20997-89a1-4856-8751-f1d3338e14fd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "63983d8f-c203-4542-a5e3-4f6c78e5e7bd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f2e82ecd-b065-46ed-94c8-9d86b9c33885",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "209db42b-fd8c-4787-81e0-29fe16102532"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ec692c7e-a46e-47bd-84da-4ab053c28578",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "bf1169f4-a2c4-4495-a14e-97694d514f6f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b036493b-e89c-477d-945a-ffac47df4dc9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "02bf94b2-79d3-4152-8045-8a8c3cfa5d6a"
            }
          }
        ]
      },
      {
        "id": "2dabac3a-208f-46ac-b91c-6b2302dc046b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "edae23e6-3688-493f-8fce-b41b6dee1eb6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7de4e423-2624-40f4-b333-8ba1a4fe9320",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "656093b4-81f7-469c-a24d-d907d28bce67",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "677147c8-073f-4f6d-9c39-a256ba665ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27c5c620-c512-4927-8a04-413379d9b053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9106d427-7697-434e-a058-55ff4cb21b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2dc2768-77aa-4a57-8407-afc65367a16b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c260ac-cef5-4950-a507-85457466b77c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e7de12-c821-4a10-863f-ca524026e0de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c1368bf-60d2-4b86-83a9-cc2ffea26870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a29cfa-330c-4ef7-a769-647287105a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb6f6438-84e7-4f8d-8a1c-8b67a3339520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccbf1890-c162-4b72-b1b0-f52fc82a4004",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca52158-c048-4fd9-adff-05504bb1831f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9d94636-b0d4-4ff2-935f-f269183011ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c8b7900-af49-49a6-a819-fa26ac4e6a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e5c2517-444b-45c8-b148-2e7bf0eac241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5284f8ef-59db-4b4c-b0d3-cc48923694b9",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4237e060-465e-4780-9c0b-ee65b71f8b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "397ce42b-aee5-4fbd-b0cb-603cd00be384"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9521d661-5efb-4817-ab80-28e0d434e23d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d5db9b2-59e3-442b-9c46-fe7ec50c3ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46fb5d4a-1336-4481-8130-3f1c53367c04",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d335b032-1006-4c96-a942-a428093fe37a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e511314-c21e-4bc1-ac6b-84c1587bc493"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d5b3614-c1a3-4768-a648-7be43609cefc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "13bdcabb-2158-4748-977f-aaccb7b3a3d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a6b079-3be6-4022-93f5-4148e85cd858",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01664d6f-b35b-4e68-b91a-cb3e8a97f4d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f16adde2-2c00-4644-8bc9-f773825a554b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c53f6531-2b8a-4867-af3b-e37e2c5c212a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb83f0f2-7f58-4d79-bee5-1d38f4514738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f004b5e-1007-489e-9ab9-9e2845113a03",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb09036-bdc4-4c40-b82c-778256b521eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2344ea67-4778-4ee1-9fc3-ad2cd3a62410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2701b679-211d-43be-935f-856ed027df7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "81a1b771-812a-4960-a4bd-a0ab28df2e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "083d8086-aee6-4d8f-a12b-3927469c4c56",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af5d99b-6be8-4ae6-982a-4cbedc5b9a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e50a95f0-7160-4f66-9394-3a2ede405b92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee3219a-a48f-4177-906f-efb5fe5bac65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b58a8c8-356c-4b6e-9641-0363aeb98eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d19ed84-9da2-466e-823d-05d1c716c291",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55027df2-191a-47e6-aad5-0bda56a7b3e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42a124b6-7af9-4fda-ae0a-1f6843c3204b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e5e510f-7115-4ec8-b221-a7b95c32a0be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0ac515c-8c56-462c-9402-a21fe5c7c667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc34138a-f323-4b3b-94a1-dff1a08c92d8",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b4567bb-901b-494b-bcc6-4b70753ddfb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb854602-d198-439a-8591-03ee60445e83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6865b98-9e10-4910-bc7c-a666282d56c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bd1beca-8d13-4822-bb64-6e4a88f1a1e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f34b0ff-7cd6-460c-9939-08a251e3c2b2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1cc5453-9603-454b-ac35-1ba66c6a8efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28cc231b-495c-4a34-8397-2a86fa5d8b07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d7e31b-ae27-40ce-bd93-b70da7f3ccd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "fcdbd203-c803-4ccd-86a7-dae143d00480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f6760f-a5f2-47d4-a0f6-2bf8bb069422",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecdd5f3a-c7b3-4b68-ae28-bce1a17c5498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a83caa9-7b48-431b-935d-28823f2fd5b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7fd962b-bf7b-48d4-a9bc-3cf137752508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "07fa6e20-2322-406b-8ea3-c950f931c3b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40332818-3330-41bd-89d6-5235b86d4f12",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "061b341e-1fce-4a97-9ebc-bce88a36be9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a0478e7-e000-4d2c-a735-cff3d59f0693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f6d9da-d7aa-4cad-bdcc-932bd14b7e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c3e58cc-f6cf-46d3-bced-f31b299b443c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf35ca2-2cef-4bb2-b6e0-7c80c4f72ee2",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c4af72-3431-46d7-9a2f-1d5d40413004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1635b72-c537-4b61-839e-9476690efce9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8b5ac9b-79bd-4c68-9384-e30eb4226931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecf74d14-f466-45f8-b74a-f8ffc9f320e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d409b02-9a30-4200-80af-a364515255ba",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca25d7d-b1ab-4777-b0c5-48a7ec5dc0d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "940b5d4b-5122-47c1-bd72-7508cf30c69a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f821236a-f84c-46c8-b9eb-dd05e5284e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "305e0201-8da0-4458-8d43-0119205cdab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59345b2e-d1b7-476b-8f8d-1a322ccf2eaf",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c7cf75-0f61-41f1-b938-e84ec8e342ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3b75437-80fb-40a1-a04c-1b18915414f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "791a54cb-133a-4852-be7f-6287e36fb28f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "190a6c88-76b0-4762-a81f-1f0e397b5c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34977039-72ea-4421-9f31-1b85e72cecdd",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5685cbf2-71c4-4fa1-a0d9-4ab2c95693f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f902d264-7cc4-4caf-83bf-12e6c4c0d77f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba2d9c4-b766-4635-9b27-e983111cc283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a60b46f-7d7f-43d2-ab02-4428501cbd16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "285f5e05-77d0-438a-bc50-30e0c853de9b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0606c156-fcd0-4caf-99fc-0da2e44c2959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95d45a9a-571e-4fd3-96f4-4efaa81070e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "556e4578-f84b-4f98-9b1b-82711d5e8dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f692f8a-5a52-485b-888d-65713fef90d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f635f6a1-7aa7-411b-91b0-ebafc03264dc",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cbb696f-d53f-47dd-82c0-b84a21234bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0168696-13d7-4a65-98eb-06ef4973897e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b779bca9-0fbb-443d-a9ab-20e30a725a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "671e20eb-99c2-4374-a8a6-8af5522c6831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec41b58-3e93-4010-86d7-76eb97c420e6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "531f94a7-921b-478d-9e2f-fc8d84651acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b3c2deb-ca0f-40a1-a7c5-755f6e0498a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76e4ff1b-3265-4f69-a378-4989754fbbca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ba66708-a740-4b81-9fea-6ba36c9d8052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ed5733-c3d2-4ca4-8866-638c07d6c67e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c71cb937-8e5f-4b2d-8ead-ceec2a2d9c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ce78a2e-6cf9-439a-a822-4a11461bf69d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3bb1ed6-d676-4be4-8e48-93ae4bf6815f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "466b825d-e7d2-4fbd-bfe7-057ef71c1b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425ffbab-cab1-481d-a795-bd67a8df47cc",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a547602c-a049-48e8-b1ac-e631785ccf8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dad8054e-c807-4885-b5e4-6cb1f298680f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d7eb6d-7e1d-485d-b522-c5ac56226688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddf80465-5a19-46f4-beb5-4dc35db5e1aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbcdb707-120e-45c5-a683-467ea648864c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a7c534-d6dc-43fa-aea0-7a3ddd50ed26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5faf1f9d-634b-405d-9c96-7b660f7c8582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06616928-7655-47a5-8bdb-31353355fe98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "efaffb0d-7749-4d05-bf5c-265e810ac2b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54adb232-a582-4656-9a24-ea188eed4673",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb8bce8b-9b39-4b29-a9f4-ab9ff8daec99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d06ec217-6908-4ba2-a58c-3a59035a16ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9813be3-a4d9-4350-a89c-de8ed5f25e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34739f69-02c6-4cee-9b84-0fc5e69f23f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74bfb66-9246-400b-aadd-8cb2f1fb3a1d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf4ac63e-802e-4205-a5fa-de1986e5b670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e2c7fb5-b137-42cd-a518-45f78a8303d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb14ff88-6761-4edf-90dd-87df587d8781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fac5a93e-490a-403d-81eb-d1d4ecb959e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c474b40f-b944-4dbd-923b-ff54b80656cc",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7954d100-d619-4579-afea-f605961b8f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7b5177d-60e7-4b5b-9e94-4ea08fc632e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46b2bff2-c29f-43e6-b7b6-9ede34e365fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe21ebb1-c43c-4438-b66d-c5b9dfd15899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a47fd85-8b38-4ddf-a02c-7e9cffe8fd80",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ed9071-e3e9-4ed2-9786-9d83ead32fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82549670-5cb3-4300-89f7-d8d52883a575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47eeec95-7887-4753-b563-2a487095df12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19306c26-8ca2-4017-a131-d83b33af7b30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab4348ee-e680-4038-aa62-ae6ebb4a97f2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24724648-9eb6-4bf5-9b99-f5ce0440203e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbb5e853-c9d2-4331-9dab-f03ed1ea4087"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e44cf1b-3fc8-41d5-8029-be30a0da02cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc89534e-9e0b-4ec4-bbf6-a4f799e38097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e1c983e-6313-4fb1-8a80-fcf84955613c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cdce7c5-2a5f-4122-92d3-9354c43bc143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e41c451-3507-4aca-a7e2-0cf99d9488ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "714d3100-d6a5-4f6b-b2a6-994dc451fc13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd2310d0-c393-4ea2-a6d9-a235b41dd331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "663f3fcd-6a4b-490c-96e7-6264e383e68e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c21e2a60-fb94-4236-bfb6-62e23955c4cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e7de144-ab76-499d-a6ae-34bfad409f59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2956ebd1-f65d-46e8-91c6-e9bc03d8f337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3dcc7644-942c-477a-9856-31de6a165803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5f6408d-7928-425f-a29a-c2d385bfeee6",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8879766-5633-41c4-b915-5b9cbe5681aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1a89b30-0122-4d59-a7c1-3838a335688b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a269b19d-d321-415f-a472-2bef072d57e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a761480b-e795-4b71-b779-b6c7c83fc16f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eaf8a6f-ea05-4263-aadd-a477ec5ee1cc",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8477f16-58b7-48dd-ba50-7864cff38899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f1c1ca3-5da8-4b41-87aa-87e2b20a78e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb0e892d-53bb-4fa8-80ff-04a65dc6164f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9092289-3e7b-4f97-8a22-0db7873ad1dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55d56dd-3892-4957-bbe2-275fe210b804",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c948932e-d418-4334-82f9-9c87ae37b1bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "884b5156-9446-4964-adfb-d911c5884d8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfec36e8-1d02-4623-9f00-994cad7e6c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ea95455-ab49-421e-90c1-19cc50a5eb8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca2d6f6-d332-4952-8ac0-32bcff9c2315",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9534c2f-8262-4b22-8310-fac5f15f2b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02da4826-1398-4635-b7f5-6100721255f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e709e80b-ff4e-4e65-b92c-2594a9f1f7b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f2fd3b4-3d73-41a8-9c9b-0452854578c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ba2d51e-f37a-4039-b8d5-0d155b91833c",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a3e234-3d7c-4338-a321-dbe963700dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d29ef7f0-defe-461e-9081-ef7dced22310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb2f9a1-79d9-4072-b874-8ace7ba388c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "082c66fb-f552-4db9-9c6c-97f39b289630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "012f6924-4db1-46e0-8b26-798760f38457",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3650d871-9e43-46cd-8df0-f7d7be3967e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28d90a75-4be9-4880-b59f-4a555e0c77de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff5db40d-1792-437f-adc0-07dd6efdc1c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28401161-b72d-43d7-b444-b5bd6fc780ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa9e9cbb-3ab3-41f6-9240-e7b2a74b5659",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "467ecea2-4bbb-4167-b6d9-e53d24d892af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e215b6f3-9f1a-43aa-8f4d-f48737e57e19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02feb1ba-f017-4792-9057-df0dc2342192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3a720bb-2c87-49c5-8d30-3a6ff51dedfe"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9e44b51d-03aa-4e46-909e-6ee7e9abbfac",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "53a32d65-c7d7-4887-9b94-d2edb50388ad",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7893e19-65e5-411a-aee0-7575faaa7898",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4f2c1b89-d93d-4696-bc25-9928e762b9e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5564d5bd-1b9e-49c0-8f55-7942f00b930b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "14e79b14-5319-406c-8db1-61ff905667da"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "890583c6-29c9-47aa-90c9-8330fdb98db9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5326b33b-fe61-49a2-acca-0af5a3ded879"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "946c903c-dcd8-4e7a-8978-32c7aac50055",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "118200fd-15a1-41b0-b370-441eb4ca11da"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0cbd4efc-2527-44bb-94e9-a48d9ea4f6f9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1ea297a0-1d00-4ab3-a658-84b7b38aa38e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2625940b-d8a1-4054-8c8b-afc24628d07a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5e2d576d-7e3c-420f-b531-a54b146ca469"
            }
          }
        ]
      },
      {
        "id": "c366445f-b32d-4e74-ba81-3900ecfe14cc",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "62ebd7a6-8155-4f5d-b01b-f11bd1d4ae6c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4df3436b-071b-4f46-b65f-1cf78e67e943",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "40a81482-3d31-4f3c-9596-57189d3e3cb5",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "726344a5-80c4-43c0-a76c-272776cb4383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "416f214e-6551-4442-a85d-a9a79179978a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bdffa2b-f1ea-4c55-af98-08bf446911e1",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0acf9fd8-d25c-474d-8a21-9301289fec29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffe578db-5980-42ff-bb58-f77ea212b0b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba40f51-370e-460e-a1fd-f7d6be09e356",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d66630e-2bb0-442e-afbc-8064687832e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a377531-2a65-4de7-a2ed-85defa41006d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e736035c-e87a-4c1a-928c-723c11ad349c",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c8a957-d63c-454c-88c6-ccde9d276c2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "089b64b1-dca9-4e6d-a4ac-fc143e098d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8aed92-b68b-4e20-bf28-d76ff1828275",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07aeceab-8c40-4f06-8611-23ade02c3683",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aec4e627-d25f-4252-98d9-20987d14a742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de0ad7a7-8583-4562-a1c0-c8a4ccfd6f4b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16aa3c7a-7646-4a4b-8c22-354229559faf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95392ffd-fab9-49be-ab89-024d73bac005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a82553-9202-4473-86be-b0ebb35a74c3",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a10cad28-cb29-4e5b-a0e1-f3ef19419028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfcf78d3-ab28-45e1-a8cb-3450f7b71974"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db625f32-edb6-4d10-9e46-0699d4defba8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "456928b6-4ad8-4fa4-8fd2-de09f6e72946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45629034-b02b-45a2-8d51-029d8d16eb5b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1b2ab19-27d4-4f5e-9369-46d4a39125cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff1d2e12-90b3-4e7b-b926-421e8990c190"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd58cad-cc62-44fa-b19c-5672117b0948",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56a65d8b-8adc-4410-bd57-c7de56d0370d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b6d5672-f3bd-4ae6-a704-3306a79ff054",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8722a7e9-81ad-4dd2-aef4-259214ecb3d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c514eb7-051d-42e2-8441-520ac81e6fe8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96bc7262-98b2-4dd2-ada3-984e44838759",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bbda030-09a8-481b-86be-ea9ffaf5d60f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67fd5c90-2303-472c-8069-518832e8b0e9",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec492a66-253c-44d8-b9e9-1284f127aba1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "351a466a-f1a7-4b0a-ac7b-5641eb83bcbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb3ef275-102e-4a72-9015-0f26725b6160",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c93e6e6-6e17-4c0b-80ee-e86ab1f9a29a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c3d30e-1647-46d3-8f0f-aad8ae9df5a5",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de0dde0-8a0d-465e-9deb-15708e8dacf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b7081ea-e269-4e81-8663-c1a0cb001bef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11395399-6b73-470b-8e5e-a98dc005ac33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1feb78fe-51ca-41b5-b671-cb54fbfdc177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de149e2a-7712-46b2-a12f-fecb3fd4cfca",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a28584f-23c5-495d-9883-c0e123a07807",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51661b29-2ae5-4425-87a1-39f099c1100f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d6d52b-7ac0-402f-af72-b2e3754aa7e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbd69988-e63e-48d2-97ca-57d8ef798571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cec435e5-ffc0-43a9-b753-15a3604d15d6",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "712bb8be-c1ee-46d0-9b41-ac2851e50eae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3f5dcc8-fc44-41b4-88db-24bc782326a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4c2d6bc-a563-4e6e-b926-b9ed7686ed46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a62b3eec-1e60-4692-b186-4e7ba70656bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdee15fc-3676-433c-b279-a3227cb22172",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d1911f2-0457-49d2-a1b9-502a44b6ed83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6000701b-acd0-4f39-ab3c-e4b75cda6b45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f5306be-8b4c-44b9-b1cb-582e25279617",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb1c4b17-9545-4d68-a927-cd8d2be5b372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9303927e-f0ed-457f-b54a-b3cb514122c6",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee7f8072-01c6-4953-b0d3-6d447dcc2295",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0129c1a4-815a-41d3-a522-404492d600cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef25734-d682-4208-bebb-53b2c6e4317e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da142968-45b0-479d-894f-d01dcca4c28f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7af0f5e1-da34-43df-aaba-3bc3266edde7",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763dd05f-63fa-4b02-9393-1ae8353d0b4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52131245-a406-45e2-960c-b6a2992d89fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7156b5c6-8556-4c90-900a-a491b8cb657c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33c48cfa-51b9-4ca6-89bb-9cdc454014ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7945edde-1dfb-411b-a4a8-b94998d6da15",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0883a16-a93c-40c5-9b39-a9eef8a26149",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81840122-c062-4a16-9b2a-42a3cf476450"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81dd18c3-5ce9-4003-8562-9eae96566a2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58a2f076-b9bd-4af9-856d-6afaf42ad655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec7c543f-375b-49c9-98c1-791a57230e88",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a81d8bf2-346b-4f42-8ad2-f6498a982c7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e8c5822-e13e-4f8a-9578-45e93d498e48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a24e738-43d5-4efd-9eb9-79f2707b3d8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dabfbcd-186c-4cb9-a6e8-d98a663a9df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d64df8ac-72f7-4c40-96bc-d3c64570149f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f92976a-925e-4c53-b31c-b9f214b37c24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adca0a21-9d27-4d56-8f46-71f791c23110"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1302a62-5a65-4cec-963c-a20ccfa45a21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c273958-138c-4fba-bb4c-4d38550c1ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75689278-a7e7-4582-9dc1-5f18f541f9fd",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5193534-00df-4e29-8f6b-c32bef358e4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "288b834d-8cf9-459e-a1ff-b0c6c7d2ed5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b18247-47cc-4aa1-8a9d-eb42bb3a7d44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c5539bf-19da-4f4f-9458-4894306d488c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "961b2f4b-2a02-47b5-863c-a7821592c11d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9247fab-5b00-4782-8d9b-b283185ec980",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81a0565f-c6c6-46a1-8cfe-c58039a46cfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4236a0c2-c21b-4c6d-a0f1-fbf21f46f328",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4113ab57-eb87-47bd-b390-638046867f78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdbe6f63-a2b7-4117-8878-0800687cd395",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d620e993-eb65-4a1a-adb5-522b52711479",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cad3ef7-6ad5-4605-8367-7484563b1ee1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a20028a-1443-455f-a209-bf5511e4cf0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceabd615-2abd-4b21-97d1-90690ba3ab8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97601c28-9cce-4577-ba8f-4d1b7592aba6",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52b8ae45-d405-4e73-a36b-6d41e3729bd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ec1a4e2-fc92-4f0d-8e3c-26eec94797ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4385ad3-2fcf-4869-b7a5-f09262f2362d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5637b2e-1f34-47b4-9780-ac9c808ca492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35295a82-b56b-4784-8b6a-0fc9d386b837",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b938a061-3db2-4803-9b62-6c8da9e1bf29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fbf0360-a38a-4457-84b3-2881c65d90a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8914c3ad-d490-4512-b9e2-0cffafdd830a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "663d45f1-ecd5-4d60-b4fa-46f43ec92a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f9d9b5c-4b2a-4cd9-9a9e-535d667ded84",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab23203-bb1d-479d-876d-ce995915d963",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d216bd1c-8960-4468-ac15-37adc6d2ad3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e3c07c6-f4bb-4cf7-a01f-3ca5b6c21f7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "116a5461-6715-47fd-8c04-255d29effc6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef45c41-0234-403b-993e-5000fcb35f46",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be7ac5d9-4542-463b-99c8-9aa116db083e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc49fcad-894e-4236-9e26-dcb73b233600"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7554d69a-ac51-4d61-a560-9505ff7a074f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ec14a0a-b145-486a-8a28-176127685591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0815fb99-2e1d-4de0-b710-27f4695e76c0",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d66739b-2064-4bda-977a-2758a4d1f779",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a6cd672-6308-4e4a-8589-f35667704c2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f5d8d0-b6e5-4357-9e50-d5f3b490d193",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfe3634a-e3fd-4fef-be64-e405d9c3da93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f49f15-223d-4818-8309-bad1c51069b4",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96eacbf8-9605-45de-a604-f815d127f4c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c16b11b-81f2-4041-9dba-ad7f82f3f663"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c991856-5caa-49dc-948c-5c441b6f9fed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0bdd9f9-9722-4a39-bd85-c5e6d8d2d97a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccdcf655-7d20-4105-a1f1-53a35f5fb433",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0745df30-b725-445e-9eba-a09ed21a842c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe81e1e7-ef80-458c-8148-baf492c9b07c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29727e06-4fad-49c0-ae70-580701c622f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bde1197b-e467-41e3-8402-c186d9704e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4227d0b9-2abb-4942-98b6-309884fcdc2e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad9974d-6210-4dd3-ae5e-c1b40a3df263",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c41c66c7-50be-4b6a-b706-183cc9bd2a4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb2c3be-80b0-44c3-9dfb-41487f04aaaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "176bfa17-56b4-431f-a000-14d94064446e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a96ad8cf-07ef-416b-84fb-d7ed869942d8",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e530ff66-7ca0-44d8-9a11-ce88dcbf1aa5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0f02b63-13e4-425e-9d0e-79948875c86d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db3685b-43d7-4736-9558-1ae350f65cf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4115d138-874f-401f-83ee-db8a9b14a6e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b46a5a6d-e142-4a09-a3a8-d2e569962102",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e24d07-f4b4-49ae-be52-4589f87733b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0bb1da1-9249-4cb1-97e2-627b5fdfeec3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e25db5-edae-4ef7-b1b3-98d075921368",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daf8db14-37ce-443f-9850-c3e394e122e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "991cf9c1-21b3-414b-9499-2d8d544f34c9",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc975ba-1818-4948-860f-838eda5b15c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "415e7522-becd-4943-afe0-6dd5af4dc20e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c4a5cf9-baed-4bdb-8653-27039e985881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "207be058-2a94-4274-8a08-66c4e5528fd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24b246fc-1665-4103-ac14-cb67b660b000",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1bde263-dbcc-4188-90ef-d4fec9e9ef0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b378074e-666b-4d3d-921f-73bf4910f52a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cce4ab4-8d93-404d-ba78-adf2a3af4cde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "308b18f0-4f53-4b00-91f4-05cd9262f5f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a1eb694-b07e-4de9-9aaf-3c0b09028f7d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b13e13-5c29-4fc1-8f71-b98c6e9c51ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9f42351-b0b6-436b-993e-5fed6ae9211f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b676a804-5615-472f-bf27-5a5ffb83d344",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4db586ce-a727-47e1-a178-9d500f81f3f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e47ca7-1c4a-49fc-8e0f-acc002191050",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d8bb69-f2c5-435f-8135-0355123b3c51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30607dff-f370-4151-aed6-673725ee2245"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "018b7292-48e7-4088-afe5-2469beb2ae98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfd60431-fa5f-43eb-a791-fe903bc5ca40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab8beed9-5cf9-4322-a184-5bcbf3a7ff16",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f818d94-3efb-4cf1-8fc0-c8069c566ed8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db862f32-e913-48d0-b38a-ecc43293e676"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "957977c9-b03d-4374-b1f0-df93aace07cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f058e554-da26-479e-8895-8f0bbfd7b9f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd70222-ab55-49ab-af6a-05d6c17bf156",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6891a38-1209-4842-a7fe-0355c3c3a63b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b6b53e7-f20a-423e-b1dd-5411cf290ca2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feefc77d-2e4f-45b0-a517-33e259c5eef4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fd57dac-509e-4c9a-817b-14d8707ea0c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "651a6bf7-986f-4464-ba5b-704d101a2673",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee0a2148-7cb7-431d-8727-c357e34d0b95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03e0686d-9620-45af-83e2-28d1708046ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf591e9-f1bd-418f-8635-384c2aa68cdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8dc843d-77e8-470e-aa92-fa29a85ee943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9190a3fb-994e-411d-8345-4048df957ba2",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bade1775-db02-4ecd-bd88-caa5cfc9a8fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcb1fa35-9f7e-4272-a2d2-3a3b07759989"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b7c763-e161-4126-939a-8b0c28fb27bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01bdaa8d-431f-4a41-86d3-5494dfa6865e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac4f61e-f859-4c1d-b814-d2727856f983",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f43d04c8-8f86-43a8-b7a1-45f39be8b885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42f2b8f2-7dd4-40ae-b57c-07f4d1315911"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c26f3e13-3a17-43d6-93ef-92e66581e624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ddd8d7b-7702-40fb-bcf6-f2174a2e73e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b6a9d71-fc81-455e-98ef-357f1982ac42",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ce3ee9-a732-4b1b-a921-474421baeb62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ba2f2b5-b408-4c8a-af71-69922476123d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a72d8ded-2145-4e0a-9718-f47f37e3d368",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c732aa9-f8f1-46de-a8f3-5450c7adb98c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "161c70eb-6fa3-4b4c-80f6-ef7170896f5d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a3bf399-1a07-4b3e-a82b-78c4b801214c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed45d9ec-a913-476a-a727-f6c200c865d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "088186ff-d0e5-475c-989b-617200d0d292",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56299efa-f47f-403a-9620-5221bf1fb4dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb0f899b-b42f-4d07-b766-066d6c8b1899",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a144d0-7830-4d92-8953-c5b428e0e5be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b02aebe-e534-471f-abbf-5dc702ef67d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60c2e5a6-00c3-4e8c-a5f2-2b254edda0fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0155f2a-1794-4f10-baf8-53cc0b33ef3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e38d578-20e4-497b-9d8d-fce72c06d5f7",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f71020be-75f3-42ce-8b91-10f821192a0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7f895ed-a696-4892-be70-efe382b155c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27cea084-73a9-4b67-a254-df0871cc477e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "777f344e-1da7-4482-b82f-0fc21f29fd80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc51d10b-9e49-4a73-9d13-a5504564f5ae",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "725ef535-49c8-4d1c-b762-d07eb939167a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae8211ca-e0e5-4c3f-a99a-2126e346c4e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c37554-8024-44d9-a834-7f408c7be5bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "664f7261-91c4-4c8f-ae70-893f2fb5b50d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48fc9a35-9cbd-4cb5-884c-542fe572a017",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffec81bc-0cc5-4709-a749-ebbbf5f8a085",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37860174-a96f-4895-8f7d-d8812a96d458"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e51c647-c928-4678-a995-f36fafc3cbb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46408fc4-b4e7-474e-87f1-5714afbe36ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfd1a564-5199-46d8-abec-0c31a3e3e5c5",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69852e4a-1feb-4804-92f1-a269568ef8e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7e03a5b-a4bf-458b-acc9-5f0067d35a41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef7dd432-203e-4919-a24e-2e3e2c276f70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9020d8b8-22de-4ae4-90f1-650b40e15215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e674953f-25e3-4cd5-84ec-1157f0d0c80d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f48d9976-d3da-42c7-9478-37e9b21acf64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0595d26c-7e89-47b6-bb82-63707f407548"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f8a46d-6447-4282-805a-44842a33ff50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12c7df7c-b4ca-4277-8ca5-e54fe75f3ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da59348-0cfb-42f6-bb2a-391dd67d15dd",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "688c6666-957c-492f-9f1d-cec613056a42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95e7a333-387e-4b12-834c-e8cb870fba8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63175c8c-1ef5-4050-aeb0-843487667433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63fc2526-cea7-47f9-baa2-a47341322f13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8dd6253-7dc2-4cf7-83db-3fad10c50a78",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1185aaa5-b740-49d7-956c-73c22dadf30e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "423daaef-69c0-48a4-8bea-028197682a6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a06c596-a946-4836-b984-12f262b9c7aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "242ed0b3-c590-4ca6-84a4-be9f7f900a76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b60422a-803c-4dc1-a3e4-7cbe41bd6e5c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb23930d-9d91-445b-9b74-7f597002907b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d853c1d9-e900-4606-b9ff-4da7c1815118"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac197c93-afe4-4060-b4e9-7560fb7ebf40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7be7e3f5-6fa4-4eda-ac1a-68b8688b1484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59341f38-c88d-41f5-b5f0-4ec14f3c7af7",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63aba2d1-3f76-4089-9ce3-f949b2557907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78127936-9299-43a3-8fb0-c4bc8cc97c10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d3315e-8187-4fc7-bb75-3aaa0a48e20c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f431ab23-2290-4178-ba18-aad87fbc46a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5de78bd-b967-43ea-8ea0-609021d379f9",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bcf6200-35c2-43ff-8384-2040c62c9bfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d404b56a-1cf5-4d8f-8b30-72bb9ee1e38d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c51056c2-b677-41ed-8135-79253fe58ba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c0f742a-4fbe-4449-a718-381101643fbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3002e021-2468-46be-979d-fdc77c9be368",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7497e06-76a5-41d9-9838-60ea7584a27a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aa85bea-f310-48bf-ac84-c407cd7847b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e5fed9-d4cc-4b4f-bf15-7ac0be236e55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1799a1b1-9a9a-43d9-8fbd-71f07c1135ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ca972e-8fd1-4fc4-916b-8b267da925d7",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "999fa2eb-89fb-4751-9f3f-462e30e3cfc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51effe60-93b4-4083-b277-73222998e1d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "504713c9-af38-4f95-af29-cd03607fe7e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b12be1f4-0ad4-446c-83b2-4c38a7a86b04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "891a5f91-4bc4-489d-b2fb-e76560e3a909",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a06a403-4303-4efc-a282-63f85d6fb1cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3a1924e-e53c-49aa-a629-db025da5d8e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ecbc2e3-d006-427b-9768-ca01f15b1721",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "764ba8ff-1134-4968-98eb-84197324cc7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab9b8135-5660-44a5-9fbf-e401b1ae40ca",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff822e4-3cce-4bfe-a3ae-f4a6ac38fdab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f12ca3a-de4d-48dd-a93b-1169f1fa48a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9ef1445-73c7-4815-8835-f2feb2ce4dc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e019a348-9aa3-43fa-b6ad-34bf0dc348b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea595ed9-ccc2-4978-8570-a1082f776d09",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b45e7d3e-3d00-48ec-8939-aa80d14867ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4591ae76-e066-4180-9251-6a749a406306"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd2b3625-7574-4572-ba2f-e417642bd026",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d7d2ced-af64-42b1-a7a8-67b707d1fef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f22bdf33-fd5b-4a3b-958d-ba49c5c1bfca",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feda66eb-06a4-4967-8439-9e0b8260e5ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6cd1ccf-d18d-42df-a78d-455d687231f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbe7d983-73fc-4c80-8e03-edf85e386d21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4694806-3cbf-463a-8d8a-25a5cb0ef0f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2786d43-e3b2-42e8-88da-a8522b9f0e70",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "014cb522-de4d-47bc-9502-1234f73ee015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f03c94f4-f247-4751-976e-ad6f868066a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f03aa0f4-fb95-490a-bd7d-e564f99a3029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca3ae959-8a1c-44c2-bd9c-6e0d7ffe7cde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "111cb788-158e-4cb6-875e-9f2a05864339",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c1a193-6bc8-4450-b4ef-9e2b2ae4451a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebdd6e52-d201-46a8-bb9d-d0f8b835d4e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaec26c7-5aa1-4f94-b6ab-9803d93eb2eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83330edd-21cd-46b8-9112-438572772bcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b787c71-5d35-462c-a8a8-6cfa36c50126",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0de2d99-863c-43a9-8360-5d8a76a4139a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15a5ca43-4f2b-45dc-8460-9af8128452d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad18d4e-1d0a-4fc1-880b-f12852af8c42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57728a93-80a6-4c99-8797-ebd628110fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb26a047-e035-484f-8618-04766338589a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c943b201-05db-45ed-b62a-8de5886e8711",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0df4c67b-0355-4420-ac95-df62a9fe6d8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e0cc7c0-31f4-4e03-b9f5-583df3f50df5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf8d52da-ed27-4fbb-a39f-4a9291986ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a897c0d-44ef-45aa-bbd6-d2842d0b31b6",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2d3c869-e2d7-4115-b93e-ccf8c5c4bdaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e2204a8-7324-424b-8ac9-e0ea64507d40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d62291-416a-4e42-b4c8-6ec49e8b859c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6353e4e-a972-4726-9725-8e39d9fb425f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2bf7442-f640-492d-9edb-750f82a82574",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c401c87b-13b3-48d7-ab28-f6f7da3e0ea1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f94c2538-b8e0-4fe8-b451-ffadbe2a6602"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87282de-6004-4d9c-b700-12888dcc57e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc67ec52-f82f-46c3-bea3-1c9b37cd1a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "693007ea-e53e-4f30-a80c-82c34677e24b",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3def5b6c-7d16-4b45-a26e-f9de446c53b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63ae98bc-a42f-493b-a8a1-06b9a889d373"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a1e7c0-e0b8-4662-98e7-bab3e5fbbb6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "587591c1-ec1e-4c67-b0dd-15d3f22e93ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f5de768-0fde-45dd-a233-45f63395e88a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53f05890-ca2c-4ff2-8484-6dd635dede24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be57441a-2b3a-428d-955e-99a3ed1ea745"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f022377-25e7-4799-8310-a8e9dc15d3ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1afbda65-8a28-4d16-baad-02884708c5c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f74bd20-971c-4011-86d4-82d72e600c27",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90db2a4e-1e78-4ace-9d2e-7c64a519d174",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41389cc9-09f6-4179-82d8-698b21143068"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2307b26d-c93e-4c7e-9d5d-b20af189657b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e60ad5ec-08a0-47d5-a96d-50054c4adb8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "086aae45-e101-4d3c-92e6-9209ca7e8274",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee4412a-171e-4226-abca-30c474e9ad1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0acae793-46ea-458f-821a-b783692d6985"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b35c4d67-4cdb-47b3-a5b4-6183c991b87d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "295c2b58-5e7c-48aa-b2f8-d5eeeb1f4d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3966b4c-3218-4f0d-9109-b4121cfcae23",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0315cb6d-15c2-4860-a93f-8e77ac6b2fcf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ec7056c-acf8-4e38-99fa-3d0df1fc491c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "390df54f-c492-4c79-8209-1f39940e4091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b88e1581-c335-412f-b3f8-8db807a6bcbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f3f5ec-cfb7-4a9f-87fa-e42c0023b488",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5abee78a-d5fc-4435-a7ba-49cd295af709",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d164e5b-dc2e-4f27-baff-9fa6eb79e3bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2cfe551-ef8f-4191-87fe-86bf499456af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7129660b-cf04-4cb7-9001-387f137541d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f404c68f-b993-437c-94dc-11950ed9b39b",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25bcd8ee-7007-4bda-a705-e6add65ab28a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be544189-e99b-4b19-b3af-5cbf70c4c1d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ffab335-4226-4234-bab3-4b8510b3dac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e253e67-731a-4d13-b7db-464243957a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ea843e-cbd4-42fa-b9b7-af774edb3957",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4d5f19-c9c2-4e08-b558-7e04dd17d8c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae1bdf79-46b4-4b02-8240-1af9bf51f6e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "530ce82d-928f-4ed8-af22-3ef276eef6a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a814650c-8fd7-407e-afc7-c996f51a4c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be7b9732-d3ba-4def-bb20-344d12c9c7b9",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "095d74f6-511f-4c3f-ba42-8a316f8b154b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e6670e4-2a2f-4919-b3bb-bb65eb66e86e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e4f041-74e9-41aa-a4dd-e510f1a30ade",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd839e15-b6ae-454e-93cf-a5dcf84d277f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03031e8d-d816-4b23-b682-6659339fdb6f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f431ef3f-8ab7-48c5-99ed-a26fbb615f6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc82799c-ae05-4372-916f-daba2edf3071"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcda856c-a40a-4c57-89ee-51adab48989f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1db9373-d3d2-4d65-9982-eb1bc80474bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a297e6a9-e4a5-472f-871f-c795c20316d3",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e4bc1d0-51a0-4b46-9e9a-f106648befd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a99f8625-be1b-42be-840e-3218cf8595d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e793efe-eb18-40a6-882a-5f24ebb240a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39fcf272-5bb5-4599-b47d-47a27c296a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa5146f6-ab8f-47b2-ae51-fbb532b4f6a1",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c179bab-5ff7-491a-b2b9-442c8f94511a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47c3ef7d-f520-4d03-904f-98664d53d5df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a5e3305-c4b8-4fcc-bea5-71b960a9f41f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "850b1133-a3e3-4969-9d46-98d2330bc1ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c4ae923-368a-4b3a-92ae-526ce9bc801b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93914ead-6277-4a43-8e62-84941096243e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac057767-04e8-4ed8-9e31-01869f274e15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a754cb-89ef-470e-aad9-c79d52555f27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c606ca8f-2d06-484c-b0e4-2a438f744a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08abe787-e8bd-4ae3-9e6d-05f16256c8c9",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8b4ecc5-4f36-4bba-9874-28eb58d93ef7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "834dba4f-6adc-4022-98c0-2e42e58e9fe0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97091ecf-e15b-4c6f-92c4-e4673aed8e39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16a92f80-d7db-45c7-a36e-0287cc7ffad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed8cc7b-b1ad-4118-8a2c-e4ed62e7eceb",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64924031-941e-4c9d-81cd-6f861e309bc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc83d598-3e3d-47e2-829b-b17f6d37f460"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7da7f29-dbf2-4dd6-b4a1-926adde0b020",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33fad016-0739-4fcd-b118-e1320e763ff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7900653e-a3a7-40e4-888a-95d8b289cec5",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bbda10f-ca77-45ae-8bb6-0bc710d24d89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4baa4151-03e1-4997-8bf9-47a38a56fb38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7a58b2b-6363-4c53-bc9d-49f8ae6e0e9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cffb238-d0aa-4e26-95a3-ef2efaf38daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f64367a0-2dcf-4770-9c29-cbbbcb57d536",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a67b6084-09a1-4266-a56f-7acb17c2ded6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23fe0c76-ca37-4484-bb81-f97c1446ac10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f7e9f0c-7e66-49ca-ba2c-bfb0c5517f03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce5731b6-a6ac-41e2-bb2e-377290422dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24b597ac-2405-4ec6-b69f-6d5d48b60271",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b7d1f9-9b40-4b07-a146-412a8183d83b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea5794bf-6ae8-4b6b-9e0d-abafccf49cc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82500c9a-384b-46a1-bb15-fe56d129bff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f15371f0-8ea1-4c30-bc42-7a53f70add6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19fa652f-81a8-4549-a3b6-b7e967b5d20a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7009dad-5ec0-4612-8608-13c662b7c0b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3ab1360-a67c-4f7f-9262-3ec09bc6be91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "845caf69-33e4-41f2-8826-2a534c911ced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "149dbab1-6acd-4ea5-ba6e-7e18c1257da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a412cfce-372b-4b22-8607-0658269fc3d5",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ebc4102-6123-4f88-9618-947f53ac73d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c63832f7-d059-44d1-a495-c42fba4d07fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f2f146c-b994-4669-8a0b-e6fe2dc691d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "329d30c4-c4a7-42e6-85ef-b420a719f006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27f55684-391e-4773-b48b-4b5e83ea7ee2",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "590f508e-b564-49d9-addf-b0367247e124",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da94e97d-def0-4b6f-9994-d056efb8868d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e8dd9d-f9b7-43c1-9598-ad4338b5c920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c60c1b6-7f82-4634-8f76-653e68f963c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd7520af-e8c9-4046-99bd-c1c6c781e8f0",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f65603f-06a0-437a-8e47-11b9a93e5ed9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "feba374e-1962-4f84-9f85-6c39f52a11c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "583975cd-a4da-4249-9cb6-2dc0e6dacf78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04df677d-bf95-4fdd-a3b2-d703bc56a1a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "648be9af-5fa4-4b72-b4d7-3cf1c74410d6",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f784d6e-01b5-492f-9b4f-8df09d47ec31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c1335f0-156c-44ce-a787-f148e917a7c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3edf6395-3a95-4343-9f6e-5c7b2c8c3963",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f26d0e7-0d17-4c65-8caf-7d5f89d07d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f31d90db-3f27-4cd8-a324-3f76c81abf57",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d99c5f6-bba7-4bed-b530-c91a584c560d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7013e64-55de-4a3c-a143-bff0435b2e30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d3ed73-bc44-43e3-9142-305b3f5aa887",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcd033ed-4622-4389-8931-46d3e436c05e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "970ac056-1425-467c-a39a-dd010f2191de",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "949a6fa2-72e4-47e2-b236-308b89358db3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8776e884-2903-42b4-a223-3a7f7f14ee69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7674f5-cf09-46aa-b0a4-45ae55959cdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "545695c1-5003-4625-ba2c-3d7a60b924df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "377061cc-a8dc-4e34-9f4d-913cbcfc8233",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfde9832-6a9a-4256-80e9-e0dccd640d55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb998a0d-177f-4e62-ba9e-22d2d653a2db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5605152-14f8-4427-80be-64754599a8f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d16b4110-0e08-4002-9ca4-5d2b21e5a575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7004824a-8655-4ccc-a395-f46cfae8c789",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afbf706b-7085-4b01-b475-b24cb108dbbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "287ce573-550a-460d-b6cd-ebb5b3f3c227"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f0c8a89-4f5b-4780-9553-bc46f8be0c5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c393e6a-d324-48ea-a49d-ef8742a53aff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32676f7b-996e-4361-8626-5961ee39ede3",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f3764a5-8969-4917-9434-3d3cc187be7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "527f81db-0176-4e84-94d0-10f7dfb3d2bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23711775-e278-411c-87b0-7c9a94213b14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b887284-b010-4b87-985a-40089996f1a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5cb5c17-b870-4c37-98f7-eff036269112",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea97acb5-39e1-4500-92d9-104bc30064ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a51a249-d9c7-43b1-a5d4-5098285e1b43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7024218c-fb26-432d-93e5-69550029fc3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f26bda00-a0d7-4b08-a368-b0fef7eb41aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce062bc-ef73-4a22-bc01-1c868b98c1e0",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1301f62-cadd-401d-872e-b9d8a91cd0f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19d6b8b0-4c29-4e4b-b7ed-c9079a5143ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b71bde5-800b-4957-ac26-71b045ef04d9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e01b33f4-9327-41ec-80f3-85a9567b2120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e128f53d-ae3b-42a1-8c52-d283c8222052",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab18a109-d19d-4d0e-b135-c729b98fa3f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a228321-4561-4744-a0d0-440207e4b833"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22507787-d264-41ce-a132-37b127815fc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "075926d3-310a-4538-bf13-6182d0c6d015"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "04af8f1e-02ab-4e43-8718-64537109a83a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2308acf3-46f1-469c-8582-dd087a8ffe1c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f55908d-b7ce-482f-a3de-e65e78c0bb1c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "080ce4a0-0a0e-4d8e-81fc-37309f6a5a13"
                    }
                  }
                ]
              },
              {
                "id": "a836f779-bb13-410a-b0ab-db6029d9cf70",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e737e584-2cee-44f3-813a-aed6f38231a9",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6774aea-7d35-4995-bf7c-4e41f5a249d0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f3682d87-dfae-4c50-98cb-84f31164c13a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d55ca191-b6ee-4a29-99c6-f68a1f1cfe58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "17b9252b-a2f3-4820-bc9a-1c8372330269"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cda60b44-ac7f-4dc9-88a6-fcdb3030a9d0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2da9781a-7dd7-4a35-b5a9-c114a124a8a3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "afd8e3a7-e601-4c1c-82ce-4fba45ac1ee6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9142d07c-7343-4c1e-921e-5cebb039cc9f"
                    }
                  }
                ]
              },
              {
                "id": "3a0b81cd-63fd-4959-bb57-37d3ee5ff14e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "1d96e004-085b-4b1d-8566-1d1f4bde7bdd",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26f10e92-cc3f-41da-92a3-296e8fa4c284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f6f8b754-8605-4474-96b3-698cda5d8522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecf11da3-3169-400d-95db-16af1a8dd521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c334c7fb-fcce-4f0b-80e0-cc531e516200"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "71409237-e1b1-4e4d-abd7-db25efae863d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "76307a63-d071-470a-88c7-e5cb91318bb2",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eed7727e-2c3c-4937-8c02-e4e8fa365c0e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "723497b8-9858-4e7d-80bb-7e93089cb292"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be3d7cb7-5104-44d4-a221-7f7f3a51552e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e58eece-3950-497c-92e1-c5899e45a7f0"
                    }
                  }
                ]
              },
              {
                "id": "6d742e02-edd4-48d3-9ade-c7b4a3a93b05",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc601541-2551-454c-87e3-9ad7ebb8517c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "079b1b4e-d51c-4927-9b3f-3e3034412fa9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dcf330ef-26ea-48af-b881-0722936c5906",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "678ff75e-5a8a-4fe7-8aaa-b95603473c1e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c2bac175-3f02-4873-a351-8106cbc93db3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e1739ff4-b322-408c-be52-79849f8505f9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7ffa82df-6e50-4883-88a4-ada105ae957c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "00eab3e8-f209-406c-a740-ffe8b60a0587"
            }
          }
        ]
      },
      {
        "id": "7ea2b7c0-0692-4385-b9ea-24ed1628607b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1388870e-e7fa-4cc9-9217-a41fa2d60443",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d41aa6fb-1030-4fdb-98cd-330202b79b23",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "939074df-92b5-46c2-a3c3-aa5313f89d61",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32bf387d-df53-49f9-9abd-ce514fac4a8d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "cadc0723-849c-4e09-8877-c77e01cd4853"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00e922db-e4b5-4f1b-9dfb-beedb1579903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a63ef30-5cb3-4a97-8cc3-772a6b55334b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a6354d7-1f09-46ec-9ac0-d4acfaf27987",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dfd79e15-44d1-4a65-b6ac-3ebf0d94e3f8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "040dfc14-1a48-4787-961f-39f273c893d2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3c8fdde5-8d54-404f-aee1-2fdc403d2efc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4e91001a-1752-47c3-9e8c-ddb4318027b9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "99a3e7dd-d38a-46d3-9ca1-ef6efd49b843"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5663bcc5-a9f9-4ce9-8d8e-1f125472e02c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "459a9abc-7c09-46fb-b806-b5a58063dcb4"
            }
          }
        ]
      },
      {
        "id": "c0c78f66-d64e-4664-a773-931b817b3d92",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c77138ab-66ba-4495-a06d-9d9c9c2479b9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7cad9303-87b7-4783-9e63-d74ab925b73b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "845ba46f-4cd8-435e-a39b-793766bf93a9",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c94ed8-a992-4388-b812-24f6b4f25477",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45be81e4-eb23-4d42-8d09-4a214cd58921"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd8012e0-5a29-4d14-ac5a-a776176e114d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f85d8737-2442-4397-bfdd-09cd2d30a262"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "52b45871-b389-403d-91da-818653c772ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7163d4c-0007-402d-bf16-7e360a65a1aa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "75a10545-5933-4fcf-a225-4e297403b9f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "66c3e037-177d-4846-b214-25a4fcde9d27"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "04892d27-d289-421a-a416-4fb31cd8a83c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "76829bdf-1afe-440b-a9ed-480d16693b1e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e0954fc7-d73c-4536-a045-46acb4b8d299",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "14babf4a-14df-42fb-934b-db980a62d8c9"
            }
          }
        ]
      },
      {
        "id": "c7e4c109-477c-48ab-8b31-699b3a59c527",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "22ba2820-b191-4acf-a017-32dba27f328c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dcbb9f6a-5bde-4d87-b8fd-474f7b7b84d4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "72fb8dec-d1dc-4f26-b8ba-34800f62dd79",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c17b6a-ea34-4b35-a89d-8a9a945d662a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f85616bd-0d09-4fe5-b4ab-0eab9b546c54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b5bf940-bf80-4285-85d1-4465ddeed50e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0930a104-1348-46c0-aa7d-a882db3dd587"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "45b664a6-f23b-464e-b2b5-e55331c313f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c5134db8-8ca8-4d4f-a580-55d66f5c71b6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ac7322a-9c3c-445a-944b-516be2bc73d8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e192d5ae-89a2-469a-8479-e59d494fd183"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8e09a046-a07f-4dc9-b0e4-c3d83f514c8a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d201bfa8-47d8-493f-9234-7d3594692229"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2b090d94-99b2-44fe-9e7e-39596dde4b5f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "03daf7fe-e3ac-42c7-9366-16ad8721d684"
            }
          }
        ]
      },
      {
        "id": "70f0e7f9-e170-4a82-9424-654a2acfb4b7",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5f26444f-202d-409b-81aa-2c2e38993105",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "51b8afec-72aa-4695-8ecf-577d4a04b54e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "268281f3-1c23-4ff0-85d3-2d96b0464607",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c1615b17-95c4-49ab-8cb7-4972ff73fcf0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1023cae5-bf32-48c6-b105-d296b673d817",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 135.38095238095232,
      "responseMin": 7,
      "responseMax": 7115,
      "responseSd": 541.267785105251,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1726879393148,
      "completed": 1726879435848
    },
    "executions": [
      {
        "id": "68111e90-70de-4332-8df1-a7f1df5a5723",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e5ba814e-3c46-47cf-869f-f055ee5b5811",
          "httpRequestId": "f11719b7-808d-4bd9-a463-6e1343dcc77a"
        },
        "item": {
          "id": "68111e90-70de-4332-8df1-a7f1df5a5723",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "da270d08-fb88-4989-aea5-991ee0fce824",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 0
        }
      },
      {
        "id": "a7a0452b-798f-4dbc-83fe-80f36c14e6c1",
        "cursor": {
          "ref": "68d91fd2-adb8-4e15-be5f-245fdf57558a",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "0515faa7-47ab-4c5c-b03f-2121d9c548d7"
        },
        "item": {
          "id": "a7a0452b-798f-4dbc-83fe-80f36c14e6c1",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "79a1edd3-effe-4d27-a6e7-c5081f945e9f",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "3b5c9c92-1848-4a6b-adc8-91b2e3bfd128",
        "cursor": {
          "ref": "32443c08-7304-4956-9b2d-545afbbe8b6b",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d125a4f9-64db-4cf3-9bfe-560719703333"
        },
        "item": {
          "id": "3b5c9c92-1848-4a6b-adc8-91b2e3bfd128",
          "name": "did_json"
        },
        "response": {
          "id": "b9ea67cd-a74d-4c76-b24a-78e9bdb6af49",
          "status": "OK",
          "code": 200,
          "responseTime": 385,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0148747d-b4f3-4fab-8243-c4397ac2fcee",
        "cursor": {
          "ref": "52618ff4-1b8e-4943-9eeb-73743bd38cf8",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2f23408d-33b3-4ea9-8f1d-348db29a2d2b"
        },
        "item": {
          "id": "0148747d-b4f3-4fab-8243-c4397ac2fcee",
          "name": "did:invalid"
        },
        "response": {
          "id": "94c707be-be53-4a21-8346-ffdb450cef49",
          "status": "Not Found",
          "code": 404,
          "responseTime": 425,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0148747d-b4f3-4fab-8243-c4397ac2fcee",
        "cursor": {
          "ref": "52618ff4-1b8e-4943-9eeb-73743bd38cf8",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2f23408d-33b3-4ea9-8f1d-348db29a2d2b"
        },
        "item": {
          "id": "0148747d-b4f3-4fab-8243-c4397ac2fcee",
          "name": "did:invalid"
        },
        "response": {
          "id": "94c707be-be53-4a21-8346-ffdb450cef49",
          "status": "Not Found",
          "code": 404,
          "responseTime": 425,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62865e14-568f-4855-abfd-9496f72ed6bf",
        "cursor": {
          "ref": "7bc6db8d-d61c-4c2a-a1e4-6fc2c8d81062",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "3160b382-c3fa-4778-aa2c-b5cf63dc2fbc"
        },
        "item": {
          "id": "62865e14-568f-4855-abfd-9496f72ed6bf",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "da5f4eb1-a325-4edd-9fa6-4fafa3ca3881",
          "status": "Not Found",
          "code": 404,
          "responseTime": 60,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab8c6e03-60a9-4607-86a5-ee89da272cd7",
        "cursor": {
          "ref": "877d19f9-329b-4c5d-ba4f-d5c531afb305",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "988e03f8-3651-49f3-b24c-4fd38f6cd6ae"
        },
        "item": {
          "id": "ab8c6e03-60a9-4607-86a5-ee89da272cd7",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4634501a-ab51-4495-8d3b-6af53b61bad1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 61,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9867e9ad-91da-4306-827b-1f7d9cbf2d2b",
        "cursor": {
          "ref": "4f00714a-cc5e-4dff-a2db-0202d1dd2768",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "bd804b51-dae6-400c-9862-8e3d1a21a276"
        },
        "item": {
          "id": "9867e9ad-91da-4306-827b-1f7d9cbf2d2b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "88178d3c-9abb-4534-a94a-f242db9a2460",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d04398-967a-40a4-9a4c-739c16850392",
        "cursor": {
          "ref": "5b293c21-ab1c-4abb-997b-1e4afffe2e90",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2a13c050-aff6-4d2d-9f61-50a5c9f773d2"
        },
        "item": {
          "id": "e9d04398-967a-40a4-9a4c-739c16850392",
          "name": "identifiers"
        },
        "response": {
          "id": "5ac55d9e-694a-4f8a-b8b1-c88e9d41aab9",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de59754a-a914-4b5e-824a-b811352d0ede",
        "cursor": {
          "ref": "879d543d-a5c2-481f-8f24-dad6de2d0d27",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f846d256-bb79-4f37-b369-d9967140b6e8"
        },
        "item": {
          "id": "de59754a-a914-4b5e-824a-b811352d0ede",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "dc3ce99a-41a6-4373-8b04-8be0d0fb3607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea677ca-efc4-4789-b02a-e2d1d28ea15f",
        "cursor": {
          "ref": "32cc63ae-7fb3-4d34-aec5-654270cca3a0",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1916a01c-82b2-4ffe-abc5-671ad5b26db0"
        },
        "item": {
          "id": "cea677ca-efc4-4789-b02a-e2d1d28ea15f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c50600a1-83cb-4ab0-ba6f-d765b0f890b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb9f2f31-e0c6-4ee5-bbb7-296be6d7867a",
        "cursor": {
          "ref": "e20714b0-03a1-4489-b57e-4d0045e09469",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "7ecfa83a-02a4-44cf-bfd9-d8014ef7e0e4"
        },
        "item": {
          "id": "cb9f2f31-e0c6-4ee5-bbb7-296be6d7867a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e48114f3-8fdd-449e-8e9f-6d7f3f764a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a339ff-bbc1-4978-985e-4baff35f805d",
        "cursor": {
          "ref": "1c2024f5-435f-439c-b920-769be3ae0ab8",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "43877009-9fb4-4b62-85a0-dc24bc42ae81"
        },
        "item": {
          "id": "61a339ff-bbc1-4978-985e-4baff35f805d",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7300e720-e810-49be-bccf-8d858d771829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b570b1-2c32-4b2b-a4cf-f78b120d8572",
        "cursor": {
          "ref": "cbe6c908-525f-45da-a382-cac1cae87e42",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ae089364-d133-453e-b3a9-c7949115127c"
        },
        "item": {
          "id": "08b570b1-2c32-4b2b-a4cf-f78b120d8572",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b57b9a99-336e-47dd-bb25-84f61f320222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae135de-1dba-4e32-8a34-fd954fd311d1",
        "cursor": {
          "ref": "2e9269b8-91a6-4962-bfa3-3b177f2e7941",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e24b8d33-7ae1-46ca-bd5a-6af78179d809"
        },
        "item": {
          "id": "fae135de-1dba-4e32-8a34-fd954fd311d1",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "5cccbf38-ef11-489c-ae7d-24a259d02d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20771bd4-5831-4b63-b5f0-934adfa1e515",
        "cursor": {
          "ref": "41af2ccf-3927-4ce3-b8f2-cbcf5d15cfe1",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "387781a2-bad4-4fb7-98d6-5686feb4730d"
        },
        "item": {
          "id": "20771bd4-5831-4b63-b5f0-934adfa1e515",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "1319744e-e212-461c-bcaa-e86973e47f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d945479-5d73-4df2-bbae-ac8c69c9a3a2",
        "cursor": {
          "ref": "3db0a2f0-7753-482b-a0bf-5d8caea3c65d",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "620ad8d7-9838-4a8b-94ee-022b8ecfa5d8"
        },
        "item": {
          "id": "6d945479-5d73-4df2-bbae-ac8c69c9a3a2",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "e7fd50a2-042b-4b7a-8661-1cef0ec56e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b32ec7e9-0410-410d-98dd-a14cb35710b8",
        "cursor": {
          "ref": "a8f5fe6c-5008-40b7-96fd-9993ad2bf0b1",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "af8e7316-ae18-404e-8d7b-1923fd00db3b"
        },
        "item": {
          "id": "b32ec7e9-0410-410d-98dd-a14cb35710b8",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "742f107f-cdc2-4ef4-ac56-ba1bdbc8a42c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a57d51c-d486-4b1e-93cb-90d0e1ae92e1",
        "cursor": {
          "ref": "4e54fb6a-1b26-4191-8944-42763691c19a",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5e32a9be-24e6-43b9-b4b7-b7ebc56a7b88"
        },
        "item": {
          "id": "8a57d51c-d486-4b1e-93cb-90d0e1ae92e1",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "88402b78-8713-4d35-8320-3b564e6abfb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10a67cd-b2ea-4b6f-8730-1fc79754bce5",
        "cursor": {
          "ref": "8e20c1f9-e080-4434-9436-afa9696954b0",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b6fb51b6-98ed-4718-9688-784a1b7a17ad"
        },
        "item": {
          "id": "d10a67cd-b2ea-4b6f-8730-1fc79754bce5",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "135cedd1-a4e2-4680-9091-a9f1c1c18511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf45a2ea-5c30-4103-9f98-67ea91c32cc6",
        "cursor": {
          "ref": "9ca2d4fb-d638-44e8-9282-1e00643b85a5",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "02a72115-819d-41dd-afe7-9e0f1d93b100"
        },
        "item": {
          "id": "bf45a2ea-5c30-4103-9f98-67ea91c32cc6",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "505dba1d-4efe-41ff-8491-893716efff5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef34665-7732-4b6a-9dc0-f28d566d8a67",
        "cursor": {
          "ref": "100246d4-2b39-4505-8663-1a1984ba1919",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "cc2b29d1-1aa6-4c17-8648-594896ff65b1"
        },
        "item": {
          "id": "fef34665-7732-4b6a-9dc0-f28d566d8a67",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e90993c7-29f2-4d3f-9087-536786808982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff1c2fa-3810-4c5c-877c-8bb634daaee7",
        "cursor": {
          "ref": "c28e7f94-59cb-4f28-a2e7-e4d039bece0d",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a9794a09-cb9a-4d33-8842-5ecced4985df"
        },
        "item": {
          "id": "0ff1c2fa-3810-4c5c-877c-8bb634daaee7",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "0b60202c-6ad0-4691-8f83-f30ed1978b12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d64062bf-78bb-49dd-9a83-210e85e2ff14",
        "cursor": {
          "ref": "9e58a3e0-1917-4a84-baf0-27644640ad62",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ce4ff279-7415-41b9-8ce9-2048505cb10c"
        },
        "item": {
          "id": "d64062bf-78bb-49dd-9a83-210e85e2ff14",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "7c96c1db-832a-43aa-8909-0be271c29b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d5a343-610c-4512-83b4-ea24feda7716",
        "cursor": {
          "ref": "f52064df-dd83-48a9-a0e6-856ad27bc3fd",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "37d02d36-6d1e-4ad9-bdfb-6d6a88884a9d"
        },
        "item": {
          "id": "00d5a343-610c-4512-83b4-ea24feda7716",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e3dc9614-afe7-4349-ab31-56f6332850a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61e16bb3-e840-4e09-828e-14edec0a0cda",
        "cursor": {
          "ref": "14c59002-c6d5-4312-b162-c213db5c2115",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "57333866-0207-4221-8ccc-d164a3359056"
        },
        "item": {
          "id": "61e16bb3-e840-4e09-828e-14edec0a0cda",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4df5f53b-f0a9-4d23-96f5-dad36bad20a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5de5bb1-521d-43ce-98a7-4f7bd8a59be9",
        "cursor": {
          "ref": "f8ba353f-a304-4457-9572-c63255336ad0",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "de4b0458-3034-4dab-bdaa-eb41e5ba4bc1"
        },
        "item": {
          "id": "f5de5bb1-521d-43ce-98a7-4f7bd8a59be9",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "82e57e32-b21e-4311-b476-7cbb4bb98031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd17630-abdf-4f29-a522-160518496db9",
        "cursor": {
          "ref": "06a4ee06-fe81-405a-b7a8-3a2f0082f8a5",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ba7ba3ca-014d-45ad-a4f5-4bcc86f66a4c"
        },
        "item": {
          "id": "afd17630-abdf-4f29-a522-160518496db9",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "0c0f6772-a0d5-4105-a772-fa736fe8908c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f27da5-699e-4714-94b3-d52bb4f5d39f",
        "cursor": {
          "ref": "912b5afe-14b4-4384-a73d-ad40b2309233",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "7bdafa1b-fd9d-488b-bf42-3ba36fe2ca8b"
        },
        "item": {
          "id": "a1f27da5-699e-4714-94b3-d52bb4f5d39f",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "46b204f7-a6c7-404e-b61b-f2a54b41c5c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da50b4a9-40ed-45aa-934e-4fea0c11bfeb",
        "cursor": {
          "ref": "ae2b6d59-6ad5-4b49-b748-40cca59c04d9",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "db29ce49-1cf2-4875-87a9-f1463d1c8639"
        },
        "item": {
          "id": "da50b4a9-40ed-45aa-934e-4fea0c11bfeb",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "9a7466bc-da34-4ece-ae84-1107d0f05482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d30df80-c06d-4687-8c19-deaa04e6a004",
        "cursor": {
          "ref": "06c3cc4e-3ec3-4652-8a25-49c968b4b4c9",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2e6a0fe6-928f-42a1-86d2-80f14a52a465"
        },
        "item": {
          "id": "4d30df80-c06d-4687-8c19-deaa04e6a004",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "7b753f85-73b0-4cb0-aae6-c0fc6dfdc096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14fe70ad-f6f6-4629-a008-ae6104428a99",
        "cursor": {
          "ref": "6f2b4287-342f-42b4-a692-e3d6a8b0e4ef",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "53140940-fcf4-4f25-859d-c6b895ac6f9d"
        },
        "item": {
          "id": "14fe70ad-f6f6-4629-a008-ae6104428a99",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "73a43c38-c09a-4e12-97a9-38ac489d6d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b5e9299-7efc-4b3f-9430-856013c29d7a",
        "cursor": {
          "ref": "934c8bf3-c80e-4eef-8169-81578fd99fca",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e40e1c1b-03bf-424c-881b-639f88a69ea8"
        },
        "item": {
          "id": "3b5e9299-7efc-4b3f-9430-856013c29d7a",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "2621fb2c-7fb9-444c-aacb-e43c0c3ba95d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1ac0f95-3f77-45a0-a4ec-7f85ddf24915",
        "cursor": {
          "ref": "69b67982-f150-42a5-ad6b-98efe17361cf",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c6c62116-1468-46b3-84d4-25679a3f7e0c"
        },
        "item": {
          "id": "c1ac0f95-3f77-45a0-a4ec-7f85ddf24915",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "46a5d099-a15a-4b9f-8992-b9fda110945a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd924d5-03cf-4af2-8054-4fda20178d56",
        "cursor": {
          "ref": "8fdbda03-5f76-406e-92f7-90785c641b66",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ac756cb3-def6-4b1d-b57c-b7a2ff9780ac"
        },
        "item": {
          "id": "4bd924d5-03cf-4af2-8054-4fda20178d56",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "6b30c1e2-03b4-4b07-954b-900cad2c26f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd814b45-8cb5-4a85-b3cf-b265c89fe828",
        "cursor": {
          "ref": "465c4675-ea78-4c09-9eab-66fd4fce4bd5",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "2c975db0-8dc1-455b-8249-4c4db10a2ecb"
        },
        "item": {
          "id": "bd814b45-8cb5-4a85-b3cf-b265c89fe828",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "8a503c86-4850-4afc-99e6-52fc4ff7165b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc4b8224-1f8e-4d4b-89fa-567ce23991d5",
        "cursor": {
          "ref": "f884ed17-ef98-42c3-93c3-da9a277ef6d3",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "7f262c51-ea3f-4619-91f4-cc5372b381b7"
        },
        "item": {
          "id": "fc4b8224-1f8e-4d4b-89fa-567ce23991d5",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "122cd10d-40ef-4d21-b5f0-6892a6a58077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c41b3a-6ad6-4520-ae42-cd1b72e332fb",
        "cursor": {
          "ref": "44506504-9ce3-4c3b-bf1c-ef320b48f1ff",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "51590845-c645-40db-9e00-f50717feab8c"
        },
        "item": {
          "id": "c0c41b3a-6ad6-4520-ae42-cd1b72e332fb",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "e075d5ec-41a4-4b3d-8a11-179ffb29f502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc7f4f3-ce9c-4dc0-8d72-f83e4302595c",
        "cursor": {
          "ref": "59bfac16-cd8e-41a2-a1cd-ac5e86b926fa",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "9f5c6ed3-1536-41d4-839e-50de10df0637"
        },
        "item": {
          "id": "6dc7f4f3-ce9c-4dc0-8d72-f83e4302595c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "6927148b-e123-430c-8560-517a498fea75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77273182-cba5-4c83-8a4e-f3958f3f460e",
        "cursor": {
          "ref": "181d2d3d-0253-495b-aa62-c83eaba6cf61",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "8218cdcb-547b-4695-ab3a-18a83563dd3a"
        },
        "item": {
          "id": "77273182-cba5-4c83-8a4e-f3958f3f460e",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "005c06ee-0af9-43e8-b31e-d60a226c79c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "495780ef-d69b-467d-83dd-2400927161af",
        "cursor": {
          "ref": "09f1cd71-8aed-4df8-bc6c-8269676da2ad",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "5fff6813-8b3e-4c31-8d96-285d39df5417"
        },
        "item": {
          "id": "495780ef-d69b-467d-83dd-2400927161af",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "74316918-6e38-471d-b77e-7f9b5cf144f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b31c14e5-e158-4f93-9be5-abe01c7e0ed3",
        "cursor": {
          "ref": "5cd966a8-3061-4f65-b149-d43abbc01f5c",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "3c70e70c-725b-42a0-9419-2648b112e06e"
        },
        "item": {
          "id": "b31c14e5-e158-4f93-9be5-abe01c7e0ed3",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "3199837d-4b2a-4d42-9198-d3a7e85305bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "369c318a-e461-4e81-a099-64c37ce4ff9d",
        "cursor": {
          "ref": "e3e1dd37-dfc9-4903-a6e2-c44abb83cfe3",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "172cee57-b387-45ad-845e-f1ccd40227da"
        },
        "item": {
          "id": "369c318a-e461-4e81-a099-64c37ce4ff9d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "64a1cac4-c7bf-4f06-99d5-cd04fbb79709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29878084-ebea-4358-a65e-1ba20f02c4bb",
        "cursor": {
          "ref": "8f1597ff-c44b-411b-97f5-afcb2595a105",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "0f7d7de5-6594-4c82-80f8-f38ad31efd38"
        },
        "item": {
          "id": "29878084-ebea-4358-a65e-1ba20f02c4bb",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "0900b67c-0c2b-4b46-8bae-a1ca219477e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a3c01d2-727f-4bc7-9c3f-cf251a5555e4",
        "cursor": {
          "ref": "23de58d4-7fda-44e7-b101-c01eac4527dd",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d6861818-2999-4108-b071-cf21f7d0f13c"
        },
        "item": {
          "id": "2a3c01d2-727f-4bc7-9c3f-cf251a5555e4",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "373aaeae-a795-4c77-840e-91217065a0c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa1df38b-bfbc-4af1-95bd-f9959721fc27",
        "cursor": {
          "ref": "1789987e-7edc-4ce2-9194-414d52131d17",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "cad14a28-c65d-4390-a48d-34e05d1a2792"
        },
        "item": {
          "id": "fa1df38b-bfbc-4af1-95bd-f9959721fc27",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ce4d82aa-3b26-4f70-bad0-33a0d1ccae7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2708d8a-f49e-4707-9e0d-587c81a68fa3",
        "cursor": {
          "ref": "cd9b3e2c-c0fe-44b3-9175-63d6a744f7f2",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "e807db4c-cc2d-41fa-b0f6-5f58839a8f99"
        },
        "item": {
          "id": "f2708d8a-f49e-4707-9e0d-587c81a68fa3",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d6e2f612-d7ee-44c6-a9e1-98c8313675ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a1158fb-3cb3-4766-b3e7-b7e7eb1a0b1b",
        "cursor": {
          "ref": "9a0b42c3-6310-4d4c-bf0a-c0692e0d9733",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "46c81089-088c-41cc-a3b2-0981cceba55d"
        },
        "item": {
          "id": "9a1158fb-3cb3-4766-b3e7-b7e7eb1a0b1b",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "bfa6fd93-a9e0-4add-b7fa-d61077e3aaca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7622f12a-6b1b-494a-8709-8bafff49add9",
        "cursor": {
          "ref": "e1f5beb0-20da-4807-b3a0-4f89be1ca729",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "3258333d-bd0d-44b7-81a7-cb0b81220644"
        },
        "item": {
          "id": "7622f12a-6b1b-494a-8709-8bafff49add9",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "33b5d3cc-6867-488e-ac05-fd6c7598f339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5cfb835-097d-49c3-835b-98ca2741b7c4",
        "cursor": {
          "ref": "7c7c448a-5dbe-418f-bb19-093c5fa5609e",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "9f70fb79-ec19-431a-89fa-f8827251b82f"
        },
        "item": {
          "id": "f5cfb835-097d-49c3-835b-98ca2741b7c4",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "29f723a3-6266-40d4-8c14-f43e0439a77d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a981e30-caa8-4c39-8717-fc88dbcac46c",
        "cursor": {
          "ref": "ec8b9270-ce87-49f5-823b-a38504c10d90",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6434eb2a-e3c0-49e3-8f0b-4479632b6f45"
        },
        "item": {
          "id": "3a981e30-caa8-4c39-8717-fc88dbcac46c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d5d5d2e9-b5f3-4698-a085-e9d7a98ee73b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28130f9-0e94-4e2b-a132-cff716801168",
        "cursor": {
          "ref": "dbe4813c-2f82-434f-9754-2c8d86256d64",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a7fca51a-4aef-429f-9036-736b5923402b"
        },
        "item": {
          "id": "a28130f9-0e94-4e2b-a132-cff716801168",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "81cae959-40bd-45ff-9e5b-02c6c1cfcecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc495845-e207-44e0-beb2-ffe94b817f6b",
        "cursor": {
          "ref": "c8131780-9bb9-4b71-8df1-cf4cef53e25e",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d030e12e-16e0-4397-86ba-89b8ed79c804"
        },
        "item": {
          "id": "bc495845-e207-44e0-beb2-ffe94b817f6b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "4d3c5d79-a986-4fad-9095-9412494192ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df57aa72-5ae9-4f07-9b51-946fba742973",
        "cursor": {
          "ref": "a02fe1cb-55b6-4589-a29f-5fe61960635c",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "9edc34a8-5468-4a42-84a4-ebe6f36d57e9"
        },
        "item": {
          "id": "df57aa72-5ae9-4f07-9b51-946fba742973",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "914344d1-3d9a-42a5-b57d-33a6a9116c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff50166-3330-4f03-8919-fc0c424eaaf9",
        "cursor": {
          "ref": "755a5f47-8372-4073-9464-7e2ce5f0e01f",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "dc5d2b6a-684f-4465-b200-7b3951ff5127"
        },
        "item": {
          "id": "bff50166-3330-4f03-8919-fc0c424eaaf9",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "5898b185-163e-47ff-872d-8b10d37c1dd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b940900-e5a2-49f8-a455-21389e7cb76b",
        "cursor": {
          "ref": "a2bc78a4-3f54-4d47-badd-3af4ef717d24",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "8136c243-3571-4498-9639-96e8b3aaf5a4"
        },
        "item": {
          "id": "3b940900-e5a2-49f8-a455-21389e7cb76b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "1bd67ad1-5813-401d-b3e0-b859085d7627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d26f541-68fc-4021-bac0-880a61c8cfde",
        "cursor": {
          "ref": "f73fec83-d3c8-402b-869a-c1e0e91fdf68",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c331aadf-c2bf-4af3-84d2-8b5862c25d9f"
        },
        "item": {
          "id": "1d26f541-68fc-4021-bac0-880a61c8cfde",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "3cb07074-1510-46f6-a885-5357ad6fc211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d1274cb-1aed-480a-bf32-4b0d70553f7b",
        "cursor": {
          "ref": "00d6b981-80e2-4b9f-ac1a-952327fadc91",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "47e4e078-b790-40c5-9911-0293f36cc9f2"
        },
        "item": {
          "id": "3d1274cb-1aed-480a-bf32-4b0d70553f7b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "180f7830-dd84-49dd-9877-2ed80002b501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f50a75bb-bda9-442f-82e1-9e8d2e958d3a",
        "cursor": {
          "ref": "600906e5-93c7-4ad8-8c23-ae2aa4ce103f",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "6e36bde3-484e-4826-aab5-b81edbbaa5ce"
        },
        "item": {
          "id": "f50a75bb-bda9-442f-82e1-9e8d2e958d3a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f1dd3eae-c24d-419b-9724-e7ff6c52f41f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b081d11-f52d-4156-9176-092e87fdb764",
        "cursor": {
          "ref": "500dc0fc-389d-4f55-a0d6-f5d990b123dc",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "3c9756db-f1e8-4f8d-b978-885ac512a7f2"
        },
        "item": {
          "id": "6b081d11-f52d-4156-9176-092e87fdb764",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "65235514-a994-40f6-bcf6-4ed6cdde358d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0c65b5-6dfd-4432-b136-21c40b430109",
        "cursor": {
          "ref": "569fc46b-bb1e-4f4b-8e7a-a5f6a1dfb66d",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "768468ac-d5d7-4d78-b07e-38e8d05344ed"
        },
        "item": {
          "id": "1a0c65b5-6dfd-4432-b136-21c40b430109",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d7b62c3d-690a-4df7-a2bd-8090f3570cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a57cf20-db8e-4535-a4d8-adbf8a5bb690",
        "cursor": {
          "ref": "51c4b47f-9e31-4234-934d-039b3f260706",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f68cddba-3436-4b74-8dcf-d8a7e1278e83"
        },
        "item": {
          "id": "0a57cf20-db8e-4535-a4d8-adbf8a5bb690",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "fad2d56f-b2dc-4764-8144-e03b74672790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93922d74-28ba-404b-8e95-299a3925f7a5",
        "cursor": {
          "ref": "85a0ee4f-8d8e-486c-871a-e4d340a94215",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "11797708-b5da-47f8-ad0a-e2e2b1de4630"
        },
        "item": {
          "id": "93922d74-28ba-404b-8e95-299a3925f7a5",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "f156f5c6-9bdb-4267-bcd1-b70adfcd57ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8211a002-65f7-47c7-b143-20d6f85ab209",
        "cursor": {
          "ref": "4fb85da5-e2d7-4f4e-9102-1355fa51a44a",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "4b44d529-1f10-4fb2-a723-7e6e659e5d67"
        },
        "item": {
          "id": "8211a002-65f7-47c7-b143-20d6f85ab209",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d5e0802c-f396-414c-9359-013cf64b6f81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a24d4cac-96ff-4469-8bbb-068f52a50487",
        "cursor": {
          "ref": "07339ce0-918b-4bfb-8b9e-f02fcc0cf5de",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ab7358be-663e-4cf7-a10c-308cb5480d60"
        },
        "item": {
          "id": "a24d4cac-96ff-4469-8bbb-068f52a50487",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "41add7a6-5ddc-4bfb-bf60-12c3c747bbd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb768671-fd33-40c9-9861-c00e88e19977",
        "cursor": {
          "ref": "424aa424-6446-486d-83dc-e8edc495114c",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "65edcacb-fb01-4ba5-9794-ab4e263f0bbd"
        },
        "item": {
          "id": "eb768671-fd33-40c9-9861-c00e88e19977",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c1c8415e-2ba4-4e53-8b76-34e8d7fee44f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4259be0-6c33-4155-b88c-d65f6d7e2625",
        "cursor": {
          "ref": "bc22ec5a-fa33-43db-8ada-b177edaa8a32",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "0b77b157-8264-4757-b83c-5a84b2d1a9ed"
        },
        "item": {
          "id": "b4259be0-6c33-4155-b88c-d65f6d7e2625",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3d114383-ad37-4851-acc6-a963afcb7b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65dac079-f338-4453-8ee0-7ba1ab217c87",
        "cursor": {
          "ref": "1d2679df-1c61-45d7-8ba4-c9614db29c89",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "dd19eba8-077d-42e6-bde8-306ede886bf3"
        },
        "item": {
          "id": "65dac079-f338-4453-8ee0-7ba1ab217c87",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "7da182b1-ca97-47b6-a408-c26ca011f814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51927d6c-c65d-432f-ae5e-d5ca7515bb2d",
        "cursor": {
          "ref": "59e14771-6a97-46ff-822f-454398d4d77d",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b33eb8cb-79e1-41d8-9bc8-6ada76c8b094"
        },
        "item": {
          "id": "51927d6c-c65d-432f-ae5e-d5ca7515bb2d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "5cf5c454-837e-42be-a05b-d04ddb0e069b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea9f8fc-13ec-4ec1-a57b-f8f41257834d",
        "cursor": {
          "ref": "6a1ae817-0089-4955-a130-8a1af3bd717e",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "3c254303-2a07-4d04-914a-8050193c19eb"
        },
        "item": {
          "id": "4ea9f8fc-13ec-4ec1-a57b-f8f41257834d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "1a097a3b-3120-4f42-81eb-d605ad58f38f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd9c56bb-114f-4d67-acaf-074bdf286681",
        "cursor": {
          "ref": "00d6c0d7-c244-48c9-b736-568c510622b4",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "047523ea-01ad-416c-a6e4-7a38dc63655a"
        },
        "item": {
          "id": "fd9c56bb-114f-4d67-acaf-074bdf286681",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "69432bb1-5da0-42d4-8a52-51bf577d8a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c37ccd6-64d1-45b1-be23-17b4c07c28ce",
        "cursor": {
          "ref": "17c886e9-16e6-4bbe-a71c-1653f8daac85",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "eaaa1bef-815b-43c3-a5cd-2d302f92ab82"
        },
        "item": {
          "id": "5c37ccd6-64d1-45b1-be23-17b4c07c28ce",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c8565b76-d811-48c4-a395-a9e0413af92f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c71dd83b-0bbc-42c2-a4a5-861d674b7896",
        "cursor": {
          "ref": "72d0e28f-5a70-469c-9091-7ed5321e2978",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ff15e5fa-2515-4b31-904c-ed3b5cf6ddf7"
        },
        "item": {
          "id": "c71dd83b-0bbc-42c2-a4a5-861d674b7896",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "567a7dba-d408-4cd0-ae5c-65e10596b5b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e89fd2f2-fd60-47f1-b53c-a9a15e7e22ba",
        "cursor": {
          "ref": "bb55960b-682e-4ad4-bb11-e1c6e4c15e9a",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "72596a7c-56f2-4da0-98c1-326adeedd389"
        },
        "item": {
          "id": "e89fd2f2-fd60-47f1-b53c-a9a15e7e22ba",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "3d01a22b-dddd-46e1-9fe7-2ef99858deb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc32efa2-fa92-46c7-8e6a-d709740429b7",
        "cursor": {
          "ref": "d23e8c2f-3f15-410b-a50c-a96bc246bc70",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "01909f52-6a14-46e9-b258-1479bae5b9d3"
        },
        "item": {
          "id": "cc32efa2-fa92-46c7-8e6a-d709740429b7",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "6d94b3c4-1b3b-4933-97f1-3b906c7e983d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a3c740-e7b4-4a34-876c-b88c94ed0ea7",
        "cursor": {
          "ref": "29a5d3e4-6873-4488-8a61-e3c186877dd1",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "1a65a506-d7b8-4143-a1c7-c5c607e27ce1"
        },
        "item": {
          "id": "d4a3c740-e7b4-4a34-876c-b88c94ed0ea7",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "00d934cd-2d9b-48aa-bf5c-c102dfc5fd3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "507a217b-39c2-4886-9f44-ed89b3e75c3e",
        "cursor": {
          "ref": "85eea59c-686d-41cd-8ef1-f8b1dbd39a5f",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d51574ed-6f06-4e0f-916a-349c2e4dd282"
        },
        "item": {
          "id": "507a217b-39c2-4886-9f44-ed89b3e75c3e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "23b0fe51-7b78-47d1-96cd-738512e35d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90c9d75-7bee-4d2d-b761-62b77f360591",
        "cursor": {
          "ref": "e2931a0a-fa55-4098-bb94-59d32b7b5936",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9b6c5af7-13f9-4951-8464-781d3a946a85"
        },
        "item": {
          "id": "d90c9d75-7bee-4d2d-b761-62b77f360591",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f8fcf7ce-a08a-45de-800c-ddb958bcc390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f8d6112-7ee5-4799-902b-067b54ad23a1",
        "cursor": {
          "ref": "c92c75ca-352d-46dc-9d23-b21816227d43",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "42b86578-4739-4e82-aa56-6b52966ba07c"
        },
        "item": {
          "id": "2f8d6112-7ee5-4799-902b-067b54ad23a1",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9183b5da-3110-4ff0-b0f4-6ba52df5e58f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1ff2e6a-a875-486d-b127-168c3b7c2ac1",
        "cursor": {
          "ref": "9de90031-5401-4c94-b24d-0c31a7a55239",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "18439348-2ae6-4ed6-a87a-4e8d5feb71de"
        },
        "item": {
          "id": "d1ff2e6a-a875-486d-b127-168c3b7c2ac1",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f90595b1-2e43-4e11-9cbf-b753c9378962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d88128-12a8-456e-8c3d-de6e213f3406",
        "cursor": {
          "ref": "9c2c00d2-34ea-4472-a86c-3a3bdc0453d6",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "be528737-8bed-47cf-b862-f7d4bc786214"
        },
        "item": {
          "id": "01d88128-12a8-456e-8c3d-de6e213f3406",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "322edf07-6e32-42cb-a77f-b57c015c6496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3a3ee24-fbc2-4304-8940-13ade5e24da5",
        "cursor": {
          "ref": "33bb8560-aa29-4a28-b01d-9e80bcbceb2b",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "807f6315-8519-43a5-9fae-9278af103408"
        },
        "item": {
          "id": "f3a3ee24-fbc2-4304-8940-13ade5e24da5",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "78583041-a268-42f1-80ad-4dd26b6f9378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f23ba14-def6-46cd-a305-f1900f4d8739",
        "cursor": {
          "ref": "9766baa7-86cb-4f70-8cfb-518f50fe3fc5",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ec5d698a-391d-4f3b-b050-2bb1f31cae94"
        },
        "item": {
          "id": "5f23ba14-def6-46cd-a305-f1900f4d8739",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "3e6902bb-124c-47e4-962c-76ce4eb2d502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dec71d5-7ed8-4e67-b8db-3b232f802673",
        "cursor": {
          "ref": "1036d69d-76ed-4b4d-80b0-75367b3e9b73",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "08ad79cd-0ffb-420d-b1c8-120d09d920dd"
        },
        "item": {
          "id": "0dec71d5-7ed8-4e67-b8db-3b232f802673",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6c84608e-b19e-46d1-8f97-32aa09c01b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ccaf56-2aae-458b-a288-86d1903aca13",
        "cursor": {
          "ref": "e4fb6af6-012f-44d0-a219-242b135e7acd",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "3a5456eb-a295-4435-a47c-acdd474f1b57"
        },
        "item": {
          "id": "80ccaf56-2aae-458b-a288-86d1903aca13",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "6d7e8a62-2ffa-45e3-a498-81f07fb93437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "358de310-d3d7-4acc-a563-a27550622c56",
        "cursor": {
          "ref": "f8eb2433-6e7b-4dd3-8e85-209bc6e47025",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "4c3dd78a-7180-46cc-8888-ab835b79a285"
        },
        "item": {
          "id": "358de310-d3d7-4acc-a563-a27550622c56",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "3ba2ff46-4eaf-429f-b799-c96b58e921f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab8134fb-f512-4313-a37e-914d6e977a9a",
        "cursor": {
          "ref": "5a637e61-005b-4fc1-ad73-3cf5eb0d3449",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "1c3a139e-3392-4629-8670-ab4a75655296"
        },
        "item": {
          "id": "ab8134fb-f512-4313-a37e-914d6e977a9a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "52b9b597-582e-49f8-9cfe-b9044e49cff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d44e52-9750-4690-a415-bafde5825344",
        "cursor": {
          "ref": "ece6c8e9-6e6a-4270-8c9f-1ef56712d1b6",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7e087387-7b9b-4c59-a3f8-8b5bd18670cd"
        },
        "item": {
          "id": "a7d44e52-9750-4690-a415-bafde5825344",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "090a088a-6c89-4f2a-a828-15e9650e6583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "763353bf-7f93-4d6f-8d0e-5181a94145ba",
        "cursor": {
          "ref": "a150c7d9-13c2-4941-98aa-821b14c56119",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b098ba5b-afe5-4c4c-9197-9b63c1e5a5e1"
        },
        "item": {
          "id": "763353bf-7f93-4d6f-8d0e-5181a94145ba",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "2499fb86-e216-4553-994f-8e9ca8685ef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed5284b-0347-4109-a447-77c21fe05adc",
        "cursor": {
          "ref": "9c59f46f-420c-49c0-b26e-7d9c6fcf021d",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "14908a81-a0a3-4916-9d4f-49730df165af"
        },
        "item": {
          "id": "8ed5284b-0347-4109-a447-77c21fe05adc",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d1d856c0-6447-46dd-a6fc-dd8d8ca0f90a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8deba70-2b3c-4c1f-90d8-8e3dbccff02d",
        "cursor": {
          "ref": "519b4284-3b6c-4e2b-97d8-5fe9dac301d2",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "40d618f2-0719-4fa1-9360-d67225ac1fe2"
        },
        "item": {
          "id": "a8deba70-2b3c-4c1f-90d8-8e3dbccff02d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "6ffbbc61-7449-426a-9d04-33ec31abe77d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dafbe5a-a66e-4cb2-9896-41e93e7fa7e4",
        "cursor": {
          "ref": "0fdde74d-f18c-4cb2-82ce-3bc53c640cd4",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a47ce849-e54b-4258-a960-3e9a4dd48b94"
        },
        "item": {
          "id": "0dafbe5a-a66e-4cb2-9896-41e93e7fa7e4",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "ad471b39-14fb-41f1-83e7-81bc25114623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e06a3b-e2ca-4e91-983b-f26663d4b019",
        "cursor": {
          "ref": "b177032c-3767-4d48-9c63-734a7734e246",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "8de76559-f663-48d0-918f-7eeab2f7c1c6"
        },
        "item": {
          "id": "d4e06a3b-e2ca-4e91-983b-f26663d4b019",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "0e0b185a-6fb1-4f4c-8f27-01959d1eb1d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e9c06d9-4017-42dc-8ee6-d948b97eba25",
        "cursor": {
          "ref": "b58e29b3-155f-4bab-97e3-fc9751a4ef5d",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "cd04e763-062a-44ce-8961-6976fbf8f7e4"
        },
        "item": {
          "id": "5e9c06d9-4017-42dc-8ee6-d948b97eba25",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b91b4d88-10c5-460a-90c9-ce9acd121667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee589fc-bce7-48ab-8d53-e0b587584bc4",
        "cursor": {
          "ref": "675114ce-2b34-402d-a279-81cb6380bc1b",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "1f548f07-3789-4cf8-8cd4-547142581d7d"
        },
        "item": {
          "id": "fee589fc-bce7-48ab-8d53-e0b587584bc4",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c3b434e3-7e6e-4607-9670-2bca3ed46315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e267f048-16c1-4576-bc91-cb1a6737da45",
        "cursor": {
          "ref": "887f917e-8b66-4be7-aad8-4818ac14cb65",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "8817ba63-2d47-4c2e-973d-6307407c5774"
        },
        "item": {
          "id": "e267f048-16c1-4576-bc91-cb1a6737da45",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "400a73ac-df80-428a-937c-9f41b0fbda01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f7b7ecd-3169-4ade-851c-d8309d5df9e8",
        "cursor": {
          "ref": "860f7ea6-dbf5-403c-b1f9-d555d3f5f7fc",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "dbf80fa6-1e8e-412f-b59e-ed3895d27fed"
        },
        "item": {
          "id": "2f7b7ecd-3169-4ade-851c-d8309d5df9e8",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f52b5e58-cd18-4807-ba08-8988c17c8e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "830303df-a62c-4fb6-bcd1-8083c3e1e0b4",
        "cursor": {
          "ref": "d83751d7-c16d-4884-baac-e11920eba686",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1cf01a1d-106f-432b-9dad-435e0c76993f"
        },
        "item": {
          "id": "830303df-a62c-4fb6-bcd1-8083c3e1e0b4",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "a8557f4c-50ba-4b55-92e9-09976e90f8d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf5565e4-ab0f-444c-b586-9568299509ef",
        "cursor": {
          "ref": "accef898-8978-41a6-8f4b-0d0e9d3433db",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "75f4ff07-d74d-42a5-bc93-2d29b9491158"
        },
        "item": {
          "id": "bf5565e4-ab0f-444c-b586-9568299509ef",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ba21b71f-df5d-4e43-900e-80206190c8a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b90111-c6ad-493c-a35e-2dd1b17ccb08",
        "cursor": {
          "ref": "baabfcb2-2a41-46d7-a467-a8e7645790b4",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "7bfd73dc-28e1-44c5-aba2-d9947e60797d"
        },
        "item": {
          "id": "f1b90111-c6ad-493c-a35e-2dd1b17ccb08",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "4af32bca-5429-43e1-a830-b3e3580ed69e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6842af36-370e-4dfa-8361-0a44b10edfc7",
        "cursor": {
          "ref": "bdff1b62-8383-418c-84c4-2198fa8bf665",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "af8736e2-0cb0-47b0-9982-0ddca1d03de5"
        },
        "item": {
          "id": "6842af36-370e-4dfa-8361-0a44b10edfc7",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "304ba60f-15bb-4a0b-a368-8c8ed4fa4467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdbd0ad7-c7a7-4cc4-ad5d-0b36c197b231",
        "cursor": {
          "ref": "38feca19-3491-484c-a7b4-006310248400",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d6ee4a61-12aa-415a-bb2c-1825f8ce01eb"
        },
        "item": {
          "id": "bdbd0ad7-c7a7-4cc4-ad5d-0b36c197b231",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "056aca91-5a93-454b-9f42-f6baceec720f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3734f86b-6223-41a2-97e3-132ce492aa88",
        "cursor": {
          "ref": "fc69a1b3-41c3-408a-ae24-4dfc855438a7",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "9570e5a8-0910-4dfb-8364-648b22547799"
        },
        "item": {
          "id": "3734f86b-6223-41a2-97e3-132ce492aa88",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "512aa5d9-090c-41c5-93f1-ca9d044b0c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "29a3c37c-12c5-4a94-b20f-6210b612ccb8",
        "cursor": {
          "ref": "4fc7c4e6-da7a-49e2-bb6f-f258ad92d5e1",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "0a9118df-8eb7-4267-886d-7e39485d643d"
        },
        "item": {
          "id": "29a3c37c-12c5-4a94-b20f-6210b612ccb8",
          "name": "credentials_issue"
        },
        "response": {
          "id": "af208a92-dc68-4928-8c77-713f897b4c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "e53a5e14-4368-4c4e-9956-c9b0f7a426d9",
        "cursor": {
          "ref": "b1ffb2b8-abee-4a1d-a893-48b60c8bcba6",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b96da005-83d8-4794-8e8a-ce30064ef95f"
        },
        "item": {
          "id": "e53a5e14-4368-4c4e-9956-c9b0f7a426d9",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "435a4430-ff38-46d1-ba7c-e5d9b7f485f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 152,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "df408790-8a7c-46d8-be1b-e00b3d48be8b",
        "cursor": {
          "ref": "8dcb8348-f1c2-418e-88c9-aa341f713b3a",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d8d42382-19d0-4d4d-b58e-28e62e468b04"
        },
        "item": {
          "id": "df408790-8a7c-46d8-be1b-e00b3d48be8b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "bcb7423b-f1ab-4a9e-86ad-9af4928548e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "a7868987-55b9-4d63-abcb-4010ce4193c4",
        "cursor": {
          "ref": "9957e08f-12ec-41e1-beac-815010fdd76c",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c1ac8993-d064-4a3c-a760-89c46377849c"
        },
        "item": {
          "id": "a7868987-55b9-4d63-abcb-4010ce4193c4",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "6c334601-c8fc-41cd-bd6c-b6b0abfc4ba0",
          "status": "Created",
          "code": 201,
          "responseTime": 7115,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a464d22-43d6-4c25-a609-f6a67f371baf",
        "cursor": {
          "ref": "13c8a447-ba69-48fd-aa9b-9a06b6494e82",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "6ebccb48-a701-454e-a488-3bb363f7dd06"
        },
        "item": {
          "id": "6a464d22-43d6-4c25-a609-f6a67f371baf",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "54048aa9-6904-4abb-8329-c02241c747e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "320505b9-52cf-48bf-a49a-4e4d7b0e2ac0",
        "cursor": {
          "ref": "aa01b1e8-bce2-47ff-92d0-7a019cc7e386",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "faa47c6d-228b-48f9-aa0f-82e6afb139b5"
        },
        "item": {
          "id": "320505b9-52cf-48bf-a49a-4e4d7b0e2ac0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a5c5fbaf-bf58-4cab-a681-c1481580de80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "656093b4-81f7-469c-a24d-d907d28bce67",
        "cursor": {
          "ref": "133e7017-c9a7-45f7-a34f-dd34a3e35684",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "5fa4a897-3819-4768-96fb-43cc9d824a86"
        },
        "item": {
          "id": "656093b4-81f7-469c-a24d-d907d28bce67",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "786bf36c-3a6a-43a1-84cf-fef22404ef52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 156,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c260ac-cef5-4950-a507-85457466b77c",
        "cursor": {
          "ref": "cd17bd08-d2af-4cad-9a59-e8defb64d8f1",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b984b3c6-90c1-4b12-b2a6-b29b04249607"
        },
        "item": {
          "id": "e1c260ac-cef5-4950-a507-85457466b77c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c55c3326-35f9-44a5-9ad1-96419bf8bec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccbf1890-c162-4b72-b1b0-f52fc82a4004",
        "cursor": {
          "ref": "a1a166cf-74fd-4c85-b5fc-aabf624412be",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6146b9ea-f8ef-4b07-9422-030bd8fd0b8b"
        },
        "item": {
          "id": "ccbf1890-c162-4b72-b1b0-f52fc82a4004",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "205ab6b9-e4b2-4753-8d9f-57b87a9c0182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5284f8ef-59db-4b4c-b0d3-cc48923694b9",
        "cursor": {
          "ref": "e19d32e6-63d5-4598-9e73-7fa2cba85898",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "61a52f3e-9e0d-4cdc-99cc-d4552b738810"
        },
        "item": {
          "id": "5284f8ef-59db-4b4c-b0d3-cc48923694b9",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "eca652b0-9518-4b7d-9a4d-a9bb8ec57de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46fb5d4a-1336-4481-8130-3f1c53367c04",
        "cursor": {
          "ref": "9f56aacf-32cd-4f36-b8b7-784cd9b08055",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "178f0f3f-b3d6-41c5-95e8-b07356563b74"
        },
        "item": {
          "id": "46fb5d4a-1336-4481-8130-3f1c53367c04",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a34ee6c7-d08a-4dbf-8d6f-2d70d74d9f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a6b079-3be6-4022-93f5-4148e85cd858",
        "cursor": {
          "ref": "d1133b91-0323-4718-8f82-c064ffad77f8",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "caff5a82-c551-4066-a18f-f224469e64a3"
        },
        "item": {
          "id": "81a6b079-3be6-4022-93f5-4148e85cd858",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d625d2cd-12bc-4cab-8c33-80452c380687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f004b5e-1007-489e-9ab9-9e2845113a03",
        "cursor": {
          "ref": "ce61bd47-4d68-47c5-86c2-ada2cb91b8cb",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "48a95a1b-6060-476e-8acc-3bb168a27981"
        },
        "item": {
          "id": "5f004b5e-1007-489e-9ab9-9e2845113a03",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "cf724ad7-bdd5-41be-a4af-8892b3dbdf58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "083d8086-aee6-4d8f-a12b-3927469c4c56",
        "cursor": {
          "ref": "b06fafd8-91fd-408c-8cd2-e0780613a4cb",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "8553e579-0f2c-4f7e-ba44-0fbdc164317e"
        },
        "item": {
          "id": "083d8086-aee6-4d8f-a12b-3927469c4c56",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1370fa8f-58c6-4d3a-a079-0533e07d5b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d19ed84-9da2-466e-823d-05d1c716c291",
        "cursor": {
          "ref": "08750a84-6f04-43da-b45b-612351ab578a",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "993cca62-a13c-44ef-ab6b-4a9a57842495"
        },
        "item": {
          "id": "3d19ed84-9da2-466e-823d-05d1c716c291",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b3f106ff-0475-4221-bb49-4853bbbf62b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc34138a-f323-4b3b-94a1-dff1a08c92d8",
        "cursor": {
          "ref": "7794aac3-c5ab-4805-8474-e358e0b15361",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "788a1932-9dfd-43f3-869e-e64958a6d0b7"
        },
        "item": {
          "id": "dc34138a-f323-4b3b-94a1-dff1a08c92d8",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "811299d6-9c13-4e3e-93da-717ed46a5663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f34b0ff-7cd6-460c-9939-08a251e3c2b2",
        "cursor": {
          "ref": "d484804d-64a4-441d-ab35-e78954f17e20",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "6120dc56-e1be-4119-ac78-77c02b1cd143"
        },
        "item": {
          "id": "9f34b0ff-7cd6-460c-9939-08a251e3c2b2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b83c621f-5897-467c-8b29-0cdf15b697dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 141,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f6760f-a5f2-47d4-a0f6-2bf8bb069422",
        "cursor": {
          "ref": "673fa8cc-7431-450a-ab47-ea68700f6731",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "2de8b4c8-c92c-4652-bb20-beff7eb676c3"
        },
        "item": {
          "id": "b8f6760f-a5f2-47d4-a0f6-2bf8bb069422",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d3521742-139e-4e77-8e21-8cda5a7d4dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40332818-3330-41bd-89d6-5235b86d4f12",
        "cursor": {
          "ref": "3ba34da8-5ffa-4c9a-9dcd-6698232a9b20",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "38106df9-d3bb-4f1d-b06d-6dcc632b0be7"
        },
        "item": {
          "id": "40332818-3330-41bd-89d6-5235b86d4f12",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "cf34a09b-97d9-4bfa-bba3-8d37eb83872c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf35ca2-2cef-4bb2-b6e0-7c80c4f72ee2",
        "cursor": {
          "ref": "6b979ede-b523-43d7-aad9-0150ffd17e64",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "8620e078-38b9-47c1-a9da-9f0fd6913c2c"
        },
        "item": {
          "id": "3cf35ca2-2cef-4bb2-b6e0-7c80c4f72ee2",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2aa5ecfa-4420-4bbd-87b2-0b33ce7bdcb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d409b02-9a30-4200-80af-a364515255ba",
        "cursor": {
          "ref": "58c22293-cff2-43b5-ace3-7ef7614c491e",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "874f4136-824c-4703-899d-788ebd292319"
        },
        "item": {
          "id": "2d409b02-9a30-4200-80af-a364515255ba",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "90d20e1d-7113-43c4-8417-3f272cd860de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59345b2e-d1b7-476b-8f8d-1a322ccf2eaf",
        "cursor": {
          "ref": "55539b53-d3e1-42e5-9b1c-277e3f3efd9f",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2e39f621-7041-422f-a36c-c857bda4a23f"
        },
        "item": {
          "id": "59345b2e-d1b7-476b-8f8d-1a322ccf2eaf",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2e949e78-612b-4e7d-b793-b7dd5dc5e3a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34977039-72ea-4421-9f31-1b85e72cecdd",
        "cursor": {
          "ref": "18d01a06-dfbc-4f28-825a-fb1381f619a1",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "bd6983c1-cdb3-4437-a433-cab865d01fed"
        },
        "item": {
          "id": "34977039-72ea-4421-9f31-1b85e72cecdd",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e04c15c2-ec22-4545-a11b-206fd78ff841",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "285f5e05-77d0-438a-bc50-30e0c853de9b",
        "cursor": {
          "ref": "45119c26-54dc-4415-b06f-ffda6b18c12d",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "2f7855ae-f9f3-4aa2-b7bf-f6aea711b084"
        },
        "item": {
          "id": "285f5e05-77d0-438a-bc50-30e0c853de9b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "bdf451e6-572b-4cfa-b62e-6a16a506a475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f635f6a1-7aa7-411b-91b0-ebafc03264dc",
        "cursor": {
          "ref": "b317ee2e-bb1d-47ea-bf9c-45f5e5b6e795",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "9626b4e3-b133-48ec-848e-38b69f9a4f0e"
        },
        "item": {
          "id": "f635f6a1-7aa7-411b-91b0-ebafc03264dc",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e2d877e7-3936-452c-a9bd-4a8d2513b952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec41b58-3e93-4010-86d7-76eb97c420e6",
        "cursor": {
          "ref": "37fbe068-b6a3-4e6f-8d58-95cc0939d3cc",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e3d1cf97-584c-4c0c-8438-deb74f9ec469"
        },
        "item": {
          "id": "8ec41b58-3e93-4010-86d7-76eb97c420e6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7ce32d9a-f287-4550-b7bb-2bbaf9096c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ed5733-c3d2-4ca4-8866-638c07d6c67e",
        "cursor": {
          "ref": "e45adb46-830d-48c3-a874-d0a9aa6e9e6b",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "2abc2a8a-3c6b-41c8-9120-6629a75b3ca8"
        },
        "item": {
          "id": "08ed5733-c3d2-4ca4-8866-638c07d6c67e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "870d5243-e9df-4234-accc-800ffa37ce95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425ffbab-cab1-481d-a795-bd67a8df47cc",
        "cursor": {
          "ref": "63735817-d551-46ad-807a-02e6fce4e57f",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "35caeb92-83e3-4852-b2e0-fbf384100bf4"
        },
        "item": {
          "id": "425ffbab-cab1-481d-a795-bd67a8df47cc",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "136ddace-8a26-45c9-ba1b-c88aae949d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbcdb707-120e-45c5-a683-467ea648864c",
        "cursor": {
          "ref": "f5f2fb00-9db1-4898-a0a7-04f4c5ee21f3",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "88d1521a-3930-4406-bcc4-055bde1df27b"
        },
        "item": {
          "id": "bbcdb707-120e-45c5-a683-467ea648864c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "513dcfa0-255e-4cbd-a36f-e44f5fb8b993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54adb232-a582-4656-9a24-ea188eed4673",
        "cursor": {
          "ref": "a7fe28da-5ecb-4685-915d-89329cd95b2e",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "6da3cb0c-177e-4058-a9d0-3d59d820de64"
        },
        "item": {
          "id": "54adb232-a582-4656-9a24-ea188eed4673",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2fa692b6-7018-4016-906a-e478cbf448c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74bfb66-9246-400b-aadd-8cb2f1fb3a1d",
        "cursor": {
          "ref": "863602df-a343-4e4f-b74b-b3e0994adf27",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "adcae6e2-6579-4498-814f-e0d30624bf27"
        },
        "item": {
          "id": "b74bfb66-9246-400b-aadd-8cb2f1fb3a1d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0c526d3d-ba4f-4484-9a12-c1af7edb5c41",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 62,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "c474b40f-b944-4dbd-923b-ff54b80656cc",
        "cursor": {
          "ref": "79e2b4d7-652d-472f-a36a-2c5c4f64bb99",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "5b8b4bb8-81d0-40f6-b820-d6169e5d05d1"
        },
        "item": {
          "id": "c474b40f-b944-4dbd-923b-ff54b80656cc",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8113ba49-f3cd-436d-854f-91b6870ad512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a47fd85-8b38-4ddf-a02c-7e9cffe8fd80",
        "cursor": {
          "ref": "f2740d43-bef3-4af9-a671-5bb6bb841684",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "26bbf4dd-271a-4a31-93ca-fd21d432db84"
        },
        "item": {
          "id": "7a47fd85-8b38-4ddf-a02c-7e9cffe8fd80",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ac42d402-d27b-48d2-abdb-1d1695173463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab4348ee-e680-4038-aa62-ae6ebb4a97f2",
        "cursor": {
          "ref": "d6efcc34-6e72-4502-a517-aa06c14e8143",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "add1ccef-c760-480e-a0fa-56a2271ad96f"
        },
        "item": {
          "id": "ab4348ee-e680-4038-aa62-ae6ebb4a97f2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "86e8ced6-88b3-469d-9b3d-94a95f3e4a9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1c983e-6313-4fb1-8a80-fcf84955613c",
        "cursor": {
          "ref": "b6013caf-d2de-4f8b-9ce4-b872243d47c9",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7b6b4e0a-0bc7-44d8-98b7-575c655fe180"
        },
        "item": {
          "id": "9e1c983e-6313-4fb1-8a80-fcf84955613c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5a9d4c3d-9905-4a64-8ade-1b648338f7a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "663f3fcd-6a4b-490c-96e7-6264e383e68e",
        "cursor": {
          "ref": "b3d0027b-9015-425c-a670-8d4ba950516f",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e19222b8-a483-4570-b3b3-31d5ee8ab138"
        },
        "item": {
          "id": "663f3fcd-6a4b-490c-96e7-6264e383e68e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "fed342d0-8fef-4fb2-8a9f-9d47f72ed951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f6408d-7928-425f-a29a-c2d385bfeee6",
        "cursor": {
          "ref": "9e89fb3b-e99e-4ab9-a127-3ba976e3352b",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "61c034a4-ebba-4c49-9019-f2460711c87b"
        },
        "item": {
          "id": "b5f6408d-7928-425f-a29a-c2d385bfeee6",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "91ba7cb0-0d66-420c-a73e-5e81caf30563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eaf8a6f-ea05-4263-aadd-a477ec5ee1cc",
        "cursor": {
          "ref": "140b8000-87ff-4dd0-ab00-3278c81e912a",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3f805340-4544-456c-800e-82c4fe8d390f"
        },
        "item": {
          "id": "7eaf8a6f-ea05-4263-aadd-a477ec5ee1cc",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "fc607d2a-f25b-4a13-9a78-fc7a8700a80f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 72,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "f55d56dd-3892-4957-bbe2-275fe210b804",
        "cursor": {
          "ref": "5025f222-bb65-45e1-a790-2419ed23367a",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ee0f880d-d56c-42ba-a23f-2917ebe70588"
        },
        "item": {
          "id": "f55d56dd-3892-4957-bbe2-275fe210b804",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "6a5e133d-e310-4bdd-86a6-9fabd770b8ff",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 61,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "7ca2d6f6-d332-4952-8ac0-32bcff9c2315",
        "cursor": {
          "ref": "aefb57bb-103b-4f29-9436-f8ff0c9571d1",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b3f8700b-a246-4548-8d0a-9bd8d8b86b76"
        },
        "item": {
          "id": "7ca2d6f6-d332-4952-8ac0-32bcff9c2315",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "8bff5f72-249d-4430-9b87-b1bde4b77d14",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 65,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "5ba2d51e-f37a-4039-b8d5-0d155b91833c",
        "cursor": {
          "ref": "ef16a7a0-ee17-4b0d-9c0b-322882bcb3de",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "47badefa-b0a9-49e0-9ee6-5a8fe9cdaa2e"
        },
        "item": {
          "id": "5ba2d51e-f37a-4039-b8d5-0d155b91833c",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "7ddd0d59-68b2-4838-81bd-5f6bdaa228a8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 59,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "012f6924-4db1-46e0-8b26-798760f38457",
        "cursor": {
          "ref": "e740727c-486d-486a-a876-33a4ca4f20eb",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "13fbbd0f-a2f1-425e-b972-b1a60be4569f"
        },
        "item": {
          "id": "012f6924-4db1-46e0-8b26-798760f38457",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "0f4cd9cb-d15a-4909-bc7f-7386c74da9fc",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 66,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "aa9e9cbb-3ab3-41f6-9240-e7b2a74b5659",
        "cursor": {
          "ref": "3a4c59d9-efa2-41d6-bc61-481c0bdea619",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "64dac55e-1f58-4b3f-b1ce-66f23bf42ea8"
        },
        "item": {
          "id": "aa9e9cbb-3ab3-41f6-9240-e7b2a74b5659",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "261942e5-2160-46d0-92be-81dbe8291579",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 68,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "53a32d65-c7d7-4887-9b94-d2edb50388ad",
        "cursor": {
          "ref": "771ef7b9-eac6-4f77-9661-88d284ae23f1",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "746ed908-6bf9-4e43-8db0-b3e8a05ef6d3"
        },
        "item": {
          "id": "53a32d65-c7d7-4887-9b94-d2edb50388ad",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b98a3bec-d19f-4111-9cb1-f5290c54019e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a81482-3d31-4f3c-9596-57189d3e3cb5",
        "cursor": {
          "ref": "95ad94b6-c55e-430f-b399-cc6c34f2cf70",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f8b7693e-9446-454d-95a0-96572f7f8930"
        },
        "item": {
          "id": "40a81482-3d31-4f3c-9596-57189d3e3cb5",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "26899936-584c-4389-b992-73f5023c6132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bdffa2b-f1ea-4c55-af98-08bf446911e1",
        "cursor": {
          "ref": "fc27a074-232a-442a-b86d-b1d0380e6663",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "9833aaf6-6db1-418f-b743-4fded3bb1871"
        },
        "item": {
          "id": "5bdffa2b-f1ea-4c55-af98-08bf446911e1",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "0053f995-e718-4e30-9008-e0d73b89c2a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba40f51-370e-460e-a1fd-f7d6be09e356",
        "cursor": {
          "ref": "e1101eee-91ab-4773-9942-bb913f7d0838",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "1ba6643b-b15b-485b-8900-ada68cd7b557"
        },
        "item": {
          "id": "dba40f51-370e-460e-a1fd-f7d6be09e356",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "899a2c5f-0f16-4a9e-9278-17656fedd0cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e736035c-e87a-4c1a-928c-723c11ad349c",
        "cursor": {
          "ref": "b2c63469-2729-400b-88d9-aea200b05587",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a8c480b8-203f-4e48-99c5-8a2607e01f85"
        },
        "item": {
          "id": "e736035c-e87a-4c1a-928c-723c11ad349c",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "aa1f96a3-a6c5-4bb3-bda9-49d00e122448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8aed92-b68b-4e20-bf28-d76ff1828275",
        "cursor": {
          "ref": "07c8d0e1-e604-4bfc-a389-3c418fc8800d",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d68778e1-99c9-45dd-ae1b-f77d808ebc3d"
        },
        "item": {
          "id": "8c8aed92-b68b-4e20-bf28-d76ff1828275",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f72d053f-b130-4444-b255-127baaa809c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de0ad7a7-8583-4562-a1c0-c8a4ccfd6f4b",
        "cursor": {
          "ref": "72b1d16e-8d41-4e3a-830a-9ffc37aa9b6f",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "173cac8c-2ee9-4fd3-a477-9189855055ac"
        },
        "item": {
          "id": "de0ad7a7-8583-4562-a1c0-c8a4ccfd6f4b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "105da075-f8bb-4eed-b874-6e56f23f584f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a82553-9202-4473-86be-b0ebb35a74c3",
        "cursor": {
          "ref": "bba86a8a-8c0c-4060-9145-0aa54d84c370",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "944691be-890b-472c-ad12-b71728634051"
        },
        "item": {
          "id": "a4a82553-9202-4473-86be-b0ebb35a74c3",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "59567574-c5ac-41a4-b089-e96de3330576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45629034-b02b-45a2-8d51-029d8d16eb5b",
        "cursor": {
          "ref": "71af3254-8cb0-4ccb-9a27-77a873e9ea9b",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "24cc8b14-f05a-41b6-bed2-447bae3dccf9"
        },
        "item": {
          "id": "45629034-b02b-45a2-8d51-029d8d16eb5b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "73dfef86-39f6-4efa-b42b-c46168d03f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b6d5672-f3bd-4ae6-a704-3306a79ff054",
        "cursor": {
          "ref": "8e6e97cb-c6ea-4244-9ec9-51348c47935c",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "874440e5-a9d5-4913-ab83-a0ccf3cec7ce"
        },
        "item": {
          "id": "0b6d5672-f3bd-4ae6-a704-3306a79ff054",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b2f98cb0-e3d1-4886-b026-1e88b76ab6ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67fd5c90-2303-472c-8069-518832e8b0e9",
        "cursor": {
          "ref": "31aa5176-8851-4aa9-be86-bbcbc62bf856",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "94cabe19-07bf-404d-b7ff-01d96711255a"
        },
        "item": {
          "id": "67fd5c90-2303-472c-8069-518832e8b0e9",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b3bd5aa6-ec5b-45d4-b364-7f1ed06a02c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c3d30e-1647-46d3-8f0f-aad8ae9df5a5",
        "cursor": {
          "ref": "023db832-4a8d-41ad-8c7e-29a931745399",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c36b057e-842d-4768-af81-00a5c4249603"
        },
        "item": {
          "id": "49c3d30e-1647-46d3-8f0f-aad8ae9df5a5",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "6365d310-8179-401b-9218-de4a4ac97d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de149e2a-7712-46b2-a12f-fecb3fd4cfca",
        "cursor": {
          "ref": "6b0fbab4-6fc7-40e5-9c18-8c32ecd6c0ad",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "1c19742f-873a-4fb5-af01-4874b6227661"
        },
        "item": {
          "id": "de149e2a-7712-46b2-a12f-fecb3fd4cfca",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "8931bc1b-da0d-4cee-a660-d0adf07718aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cec435e5-ffc0-43a9-b753-15a3604d15d6",
        "cursor": {
          "ref": "03233526-af88-4816-80d6-2c3cd8eb81b1",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d1d046cd-f4bf-4193-a40b-6de2d377ab69"
        },
        "item": {
          "id": "cec435e5-ffc0-43a9-b753-15a3604d15d6",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c9b00aa4-7f96-493c-bd29-81136c3e1219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdee15fc-3676-433c-b279-a3227cb22172",
        "cursor": {
          "ref": "747f5cbe-30cc-466b-b860-e0cf874e4707",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "9aaaef32-77fe-411c-89da-6b822a514c88"
        },
        "item": {
          "id": "bdee15fc-3676-433c-b279-a3227cb22172",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "8d30e2ce-aa11-4466-a76c-7b4dfcc94554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9303927e-f0ed-457f-b54a-b3cb514122c6",
        "cursor": {
          "ref": "4803c7d2-84cf-4fdd-9900-dff4e0f4564c",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f11955c1-f9ef-43e7-8385-73ab5a079750"
        },
        "item": {
          "id": "9303927e-f0ed-457f-b54a-b3cb514122c6",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "019ac130-ea88-40db-9f0c-2edd874659fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7af0f5e1-da34-43df-aaba-3bc3266edde7",
        "cursor": {
          "ref": "2a5370f0-73e7-45b6-a4fa-83e13412cc82",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "0752bbd3-fbd8-427d-a11d-b1358e1529da"
        },
        "item": {
          "id": "7af0f5e1-da34-43df-aaba-3bc3266edde7",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "369f9f26-32da-4160-bf67-2ae0f8aa1725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7945edde-1dfb-411b-a4a8-b94998d6da15",
        "cursor": {
          "ref": "81d88c8a-bdc5-4e33-9ae2-f64b602ae227",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "57e2b139-0e8f-4af7-bb15-9ee07f6ed395"
        },
        "item": {
          "id": "7945edde-1dfb-411b-a4a8-b94998d6da15",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9c7fcd24-2a83-429b-b14e-5a8a496c7fb4",
          "status": "OK",
          "code": 200,
          "responseTime": 117,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "ec7c543f-375b-49c9-98c1-791a57230e88",
        "cursor": {
          "ref": "af4c7039-312e-47b6-84ae-e39b17929806",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "67ca99ae-e57d-41c6-8434-4f0d101bf61d"
        },
        "item": {
          "id": "ec7c543f-375b-49c9-98c1-791a57230e88",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "47a6dbeb-492a-4760-93c6-087c3c00ec74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d64df8ac-72f7-4c40-96bc-d3c64570149f",
        "cursor": {
          "ref": "e230c89c-e7b6-48f5-b521-b3964ea177da",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "413dbccb-5d5a-4989-8787-1c3874b326f8"
        },
        "item": {
          "id": "d64df8ac-72f7-4c40-96bc-d3c64570149f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "cae705e7-225e-49c8-8d63-9f8f40926974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75689278-a7e7-4582-9dc1-5f18f541f9fd",
        "cursor": {
          "ref": "eb976e91-3f04-44ea-9ad7-f4fbbb3ba03a",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a7673cf0-df6d-4b1c-9aa2-65276e531b11"
        },
        "item": {
          "id": "75689278-a7e7-4582-9dc1-5f18f541f9fd",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "03132796-1a70-405c-8b05-630b131e3f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "961b2f4b-2a02-47b5-863c-a7821592c11d",
        "cursor": {
          "ref": "1731874f-2d7a-40fe-85cf-939a2e6d267f",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "adad796d-121d-494e-af65-bb6fa5109fc7"
        },
        "item": {
          "id": "961b2f4b-2a02-47b5-863c-a7821592c11d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "38ed844c-d9d9-4414-92e8-7910ecf28941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdbe6f63-a2b7-4117-8878-0800687cd395",
        "cursor": {
          "ref": "68af092a-23a3-494e-b4b3-638501c55692",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "4bfb9b60-5ea5-4626-8ed2-9a9f9a4aed0f"
        },
        "item": {
          "id": "fdbe6f63-a2b7-4117-8878-0800687cd395",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "9e40208b-96ba-4e3f-b8d7-be000091162a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97601c28-9cce-4577-ba8f-4d1b7592aba6",
        "cursor": {
          "ref": "3cb027d5-da3a-46ac-b74f-91deedfe0c29",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "613fc3b7-c2ad-48db-84ff-76200c486e37"
        },
        "item": {
          "id": "97601c28-9cce-4577-ba8f-4d1b7592aba6",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "d39b0b81-1e17-4af4-9323-c21903ab408f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35295a82-b56b-4784-8b6a-0fc9d386b837",
        "cursor": {
          "ref": "7e7b7458-05b1-4b77-8d8d-efc4b96228e7",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "cf842fdd-0ec5-453c-98b2-0a3b420f7ed6"
        },
        "item": {
          "id": "35295a82-b56b-4784-8b6a-0fc9d386b837",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "62c6f954-f24c-4db7-b097-273ac0c56fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9d9b5c-4b2a-4cd9-9a9e-535d667ded84",
        "cursor": {
          "ref": "91fac9a4-9571-41b6-a464-d52513dff01c",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "26ed28d9-ec94-4916-8440-cfbb2ef02564"
        },
        "item": {
          "id": "9f9d9b5c-4b2a-4cd9-9a9e-535d667ded84",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "de181c84-c303-4c3b-9375-dec368d94b98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef45c41-0234-403b-993e-5000fcb35f46",
        "cursor": {
          "ref": "48f34134-492e-4dd2-b212-2f886d37c0fe",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "3a1e837d-4abb-4253-9b28-a1b1dd6ec969"
        },
        "item": {
          "id": "5ef45c41-0234-403b-993e-5000fcb35f46",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "49627a01-c8ed-4adc-ab29-6af651e6a32d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0815fb99-2e1d-4de0-b710-27f4695e76c0",
        "cursor": {
          "ref": "314f1ad7-c4df-44c1-aac8-179a495d93be",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "207dd54b-427c-45e5-8fad-4951911c6f27"
        },
        "item": {
          "id": "0815fb99-2e1d-4de0-b710-27f4695e76c0",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "90821f7a-6cbd-43ef-8325-4da066db6c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f49f15-223d-4818-8309-bad1c51069b4",
        "cursor": {
          "ref": "0698382b-c2df-45aa-95e7-ec4fc6891a5d",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "79ff6c8a-33c6-4abf-9cf1-02b0c5912f60"
        },
        "item": {
          "id": "83f49f15-223d-4818-8309-bad1c51069b4",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "927f7cef-12cf-4594-8725-97223d49eb6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccdcf655-7d20-4105-a1f1-53a35f5fb433",
        "cursor": {
          "ref": "45d897f2-06b6-4ab8-bd9c-3705aa7defdd",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "62a6590e-d567-4df6-a3b0-6151e4349f7b"
        },
        "item": {
          "id": "ccdcf655-7d20-4105-a1f1-53a35f5fb433",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "113e31cb-8e74-4aa1-b5b8-8b6184f5a74a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4227d0b9-2abb-4942-98b6-309884fcdc2e",
        "cursor": {
          "ref": "ade5b6b3-3507-4b15-b93e-0853a301d928",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "fce3ca80-e800-461f-b230-4c7949b4b938"
        },
        "item": {
          "id": "4227d0b9-2abb-4942-98b6-309884fcdc2e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "e6eed459-8664-494f-b4dc-5c799ed01400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a96ad8cf-07ef-416b-84fb-d7ed869942d8",
        "cursor": {
          "ref": "43a0d01a-1b48-47d3-8136-e65b7d4bbccc",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "184e63d2-33c8-48ff-872f-e8a758a84e26"
        },
        "item": {
          "id": "a96ad8cf-07ef-416b-84fb-d7ed869942d8",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "44b46a39-e1bf-409b-bb97-2a0e164e6446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b46a5a6d-e142-4a09-a3a8-d2e569962102",
        "cursor": {
          "ref": "74f166e3-eb89-448e-9763-389541246961",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "0fb139d9-c978-480c-bd81-e05f147cf2d5"
        },
        "item": {
          "id": "b46a5a6d-e142-4a09-a3a8-d2e569962102",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "bf4dec27-e035-4f0f-891f-7b9fbe9169ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "991cf9c1-21b3-414b-9499-2d8d544f34c9",
        "cursor": {
          "ref": "299b60ee-fa9d-41de-bd90-e0e7663ca7e4",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "16e278f8-dace-43d9-ab69-c9a910e3c661"
        },
        "item": {
          "id": "991cf9c1-21b3-414b-9499-2d8d544f34c9",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e646f27d-1b34-412b-8079-6a733020b156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b246fc-1665-4103-ac14-cb67b660b000",
        "cursor": {
          "ref": "7dde21e5-c294-4890-8d12-62fc78f63942",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e19ec830-15b2-4a78-88f0-5d1d2c5b4277"
        },
        "item": {
          "id": "24b246fc-1665-4103-ac14-cb67b660b000",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c6f0e5a2-5b21-4e48-bde9-a54903fb5f35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a1eb694-b07e-4de9-9aaf-3c0b09028f7d",
        "cursor": {
          "ref": "24328594-d81d-45bb-8b00-83bd1fa4e808",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "9d691196-0bfd-4075-9569-88fae3d10e78"
        },
        "item": {
          "id": "6a1eb694-b07e-4de9-9aaf-3c0b09028f7d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "874e2376-f55c-4bc1-aa03-349064033f51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e47ca7-1c4a-49fc-8e0f-acc002191050",
        "cursor": {
          "ref": "ff8f7970-0ef5-45c6-a054-48ec91bd89fd",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "29b3c5a8-0b73-4db8-8ade-e458f8adc368"
        },
        "item": {
          "id": "94e47ca7-1c4a-49fc-8e0f-acc002191050",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "825299f7-03d7-4938-8edd-cd487f44148f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab8beed9-5cf9-4322-a184-5bcbf3a7ff16",
        "cursor": {
          "ref": "9494b8fe-4f46-4529-8a3f-5fac86fc0411",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "31854799-6331-40d5-90df-061dadb8be47"
        },
        "item": {
          "id": "ab8beed9-5cf9-4322-a184-5bcbf3a7ff16",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "64a807f8-9b8e-4e1e-8521-25151eae5719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd70222-ab55-49ab-af6a-05d6c17bf156",
        "cursor": {
          "ref": "185a4b8b-d5e9-4533-80f3-7a0ed0596765",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "50b9ca4a-57d7-4ba0-9714-703b55ae319d"
        },
        "item": {
          "id": "1dd70222-ab55-49ab-af6a-05d6c17bf156",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "ef56edda-221c-4361-8f80-d1666079d7bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "651a6bf7-986f-4464-ba5b-704d101a2673",
        "cursor": {
          "ref": "5fcedbb6-48f4-450c-9f1f-762a30d4dddb",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "1cf2841e-ab75-4733-b325-1f311ba71e3c"
        },
        "item": {
          "id": "651a6bf7-986f-4464-ba5b-704d101a2673",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "fd324319-ba08-439a-be24-a28682b4ddee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9190a3fb-994e-411d-8345-4048df957ba2",
        "cursor": {
          "ref": "22a59c4f-334a-4273-b57e-3eb6b939b27c",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "669d4937-0076-4034-9352-b5c138a1bc07"
        },
        "item": {
          "id": "9190a3fb-994e-411d-8345-4048df957ba2",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "84dc33f0-0d60-4ec9-83bb-5de64121c5c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac4f61e-f859-4c1d-b814-d2727856f983",
        "cursor": {
          "ref": "36948c58-c013-4b68-9b1e-47f8ed875c3a",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "1b55a2b9-09ef-48bc-81fa-bd6e04e2cefd"
        },
        "item": {
          "id": "cac4f61e-f859-4c1d-b814-d2727856f983",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "7701aab7-0337-47f4-8bda-4d9ab6f22c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b6a9d71-fc81-455e-98ef-357f1982ac42",
        "cursor": {
          "ref": "8e6a159c-4311-4660-adc0-40bcb2c94493",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "53169d8f-5379-48cb-919c-9bafa6baae57"
        },
        "item": {
          "id": "6b6a9d71-fc81-455e-98ef-357f1982ac42",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "863bba49-94da-4ad7-82f8-a57b2da90438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "161c70eb-6fa3-4b4c-80f6-ef7170896f5d",
        "cursor": {
          "ref": "9b313d1c-7167-471d-a1a1-6c508139f71c",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "c618d4d3-85f1-4e5b-8979-98b747dd5552"
        },
        "item": {
          "id": "161c70eb-6fa3-4b4c-80f6-ef7170896f5d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "82d99758-9c8a-4139-b837-0b87f553f709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb0f899b-b42f-4d07-b766-066d6c8b1899",
        "cursor": {
          "ref": "3c6d43f8-873c-4740-b1f1-a04fb38cb777",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e5549558-eab5-4fd7-8a91-51879b6ef25c"
        },
        "item": {
          "id": "fb0f899b-b42f-4d07-b766-066d6c8b1899",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3ef414cc-178e-4dcb-bec4-3b317deff8ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e38d578-20e4-497b-9d8d-fce72c06d5f7",
        "cursor": {
          "ref": "aebe0505-f6a0-44a4-984d-ced8e10a095e",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "8abca806-dd68-4a4a-a618-92ae2dfea902"
        },
        "item": {
          "id": "6e38d578-20e4-497b-9d8d-fce72c06d5f7",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "0003737b-730a-4862-a458-b51d487e62a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc51d10b-9e49-4a73-9d13-a5504564f5ae",
        "cursor": {
          "ref": "8a25e0f0-508e-464f-82da-eeffd42adb32",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "43e86093-3803-4c34-a136-1f034c61394c"
        },
        "item": {
          "id": "fc51d10b-9e49-4a73-9d13-a5504564f5ae",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "87e2bfe9-d226-4c00-bcf0-93600469827d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48fc9a35-9cbd-4cb5-884c-542fe572a017",
        "cursor": {
          "ref": "e7cc6dc8-82a9-45f5-9470-f0a0ed5b6282",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "9a8df21f-6246-4e83-be4e-fd3fd9e71af4"
        },
        "item": {
          "id": "48fc9a35-9cbd-4cb5-884c-542fe572a017",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "1f04d0a0-2592-41ca-9df8-3d5b42cc24ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfd1a564-5199-46d8-abec-0c31a3e3e5c5",
        "cursor": {
          "ref": "48713e52-23ac-42b1-b33a-7a764e9a1d21",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "88cb2d60-dd0a-4de3-a20e-545b2763eff7"
        },
        "item": {
          "id": "dfd1a564-5199-46d8-abec-0c31a3e3e5c5",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e3602771-d460-4dbf-9f97-30782905b9e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e674953f-25e3-4cd5-84ec-1157f0d0c80d",
        "cursor": {
          "ref": "410f0314-699c-42b1-9f11-a86a0a22892a",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a2e3dd6d-9f8b-4cce-ac33-c4f1e4038f78"
        },
        "item": {
          "id": "e674953f-25e3-4cd5-84ec-1157f0d0c80d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "33486568-504d-4952-8133-65ada1b6f094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 160,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da59348-0cfb-42f6-bb2a-391dd67d15dd",
        "cursor": {
          "ref": "7f885210-191e-43df-9f32-43aa85476bf2",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e27030e8-0c96-48ec-a306-2b34d6acb8f8"
        },
        "item": {
          "id": "5da59348-0cfb-42f6-bb2a-391dd67d15dd",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "2c541f56-a988-4e8b-a506-6e3e8722d97f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8dd6253-7dc2-4cf7-83db-3fad10c50a78",
        "cursor": {
          "ref": "f75952bc-d64d-48ef-95d1-3500d97738e6",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "697206a6-7a5a-4904-9881-928e6aac6abd"
        },
        "item": {
          "id": "a8dd6253-7dc2-4cf7-83db-3fad10c50a78",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "755a3dcf-f868-48b4-99a0-ea82b58bc61a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b60422a-803c-4dc1-a3e4-7cbe41bd6e5c",
        "cursor": {
          "ref": "cf848ca6-d501-4a94-9298-f254276ecb09",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "62433e5f-7de6-44f0-9a35-4bd4ca8b23a4"
        },
        "item": {
          "id": "7b60422a-803c-4dc1-a3e4-7cbe41bd6e5c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b9ff8af8-7765-4a52-92bc-ff4d45b2af17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59341f38-c88d-41f5-b5f0-4ec14f3c7af7",
        "cursor": {
          "ref": "35520fc8-ac3e-4e8a-81c5-aa930960da14",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e06a4a10-465c-49f2-b20f-bffcc6000205"
        },
        "item": {
          "id": "59341f38-c88d-41f5-b5f0-4ec14f3c7af7",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "cd9ff28d-9dee-44e4-911a-1b55c4cc4bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5de78bd-b967-43ea-8ea0-609021d379f9",
        "cursor": {
          "ref": "8e67d668-a118-426e-8d36-9edfdfb31f89",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "9c0e0271-4476-449f-ae0a-d5dc5e5042b8"
        },
        "item": {
          "id": "b5de78bd-b967-43ea-8ea0-609021d379f9",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "740ee7bd-efff-4f37-8520-8ddf855b4d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3002e021-2468-46be-979d-fdc77c9be368",
        "cursor": {
          "ref": "071aa46a-831e-4504-9e4d-d0564a71fb68",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5b677acd-7781-47d2-bc10-8b3adc8e266f"
        },
        "item": {
          "id": "3002e021-2468-46be-979d-fdc77c9be368",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "37db3d49-2e39-4c33-83d7-351372a59584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ca972e-8fd1-4fc4-916b-8b267da925d7",
        "cursor": {
          "ref": "d6d2bf41-28c2-4ba2-b122-3f72ba8bb0b3",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "0b9585ad-f857-46c6-a93e-38496d76a723"
        },
        "item": {
          "id": "45ca972e-8fd1-4fc4-916b-8b267da925d7",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f84855a0-7e13-4c96-85d0-068e9586ee09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "891a5f91-4bc4-489d-b2fb-e76560e3a909",
        "cursor": {
          "ref": "320ababa-ffe8-4784-9361-e2a619576275",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "018159ea-e5f5-4080-8851-b5596656bcfb"
        },
        "item": {
          "id": "891a5f91-4bc4-489d-b2fb-e76560e3a909",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "8cc3aabb-4ba6-4a77-9a48-5b6ba855ffbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab9b8135-5660-44a5-9fbf-e401b1ae40ca",
        "cursor": {
          "ref": "7f2938ea-1078-4bee-a0d7-9a36d8c46feb",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "07d310b4-30d3-4dd7-8016-fd5081a1871b"
        },
        "item": {
          "id": "ab9b8135-5660-44a5-9fbf-e401b1ae40ca",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "59b8fcb9-8e1c-4bfa-9fd3-6d5a8a88df5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea595ed9-ccc2-4978-8570-a1082f776d09",
        "cursor": {
          "ref": "098f995b-3090-4559-a545-030174a5e483",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "3b0e5fb4-c26f-4a01-a12f-a4a8707c45b4"
        },
        "item": {
          "id": "ea595ed9-ccc2-4978-8570-a1082f776d09",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "14f0dc2a-e993-4800-8995-e7f6fba67f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f22bdf33-fd5b-4a3b-958d-ba49c5c1bfca",
        "cursor": {
          "ref": "93c4851c-cac3-4162-a349-1ff19abf6e86",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "b3e17a8a-a5ba-413a-9911-5abd6fd84049"
        },
        "item": {
          "id": "f22bdf33-fd5b-4a3b-958d-ba49c5c1bfca",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e3c7f152-8911-43bd-bb75-d085805b133e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2786d43-e3b2-42e8-88da-a8522b9f0e70",
        "cursor": {
          "ref": "d29b22d5-36a1-4378-b25b-6d307ec97265",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "ccbe63b1-eda0-43a5-9611-b760f987de64"
        },
        "item": {
          "id": "a2786d43-e3b2-42e8-88da-a8522b9f0e70",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ce6695f7-97ae-4d67-903d-ab178339a9c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "111cb788-158e-4cb6-875e-9f2a05864339",
        "cursor": {
          "ref": "45f74151-da6d-4210-9e8a-a0073da4782b",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "e4202d61-b99b-4aed-b86c-3d707074b933"
        },
        "item": {
          "id": "111cb788-158e-4cb6-875e-9f2a05864339",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "6f0ee7a9-4038-4de9-85d2-f1f7e9e9f74f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b787c71-5d35-462c-a8a8-6cfa36c50126",
        "cursor": {
          "ref": "c15a1e8b-30bb-46bd-8c9d-7fa493a5a79f",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d30b7162-75ee-4ce5-902c-ea202316e155"
        },
        "item": {
          "id": "5b787c71-5d35-462c-a8a8-6cfa36c50126",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "09de3136-c4ac-4d34-993e-8f0885cb9d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb26a047-e035-484f-8618-04766338589a",
        "cursor": {
          "ref": "abfb2147-e5e0-466e-b860-34b9e6f593c1",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f0ece5f1-df00-441a-a968-aaffa3b886c2"
        },
        "item": {
          "id": "cb26a047-e035-484f-8618-04766338589a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "79dc776d-68b4-4ee5-b787-95774cf8390a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a897c0d-44ef-45aa-bbd6-d2842d0b31b6",
        "cursor": {
          "ref": "197a0732-61fb-40f9-a91e-5df2377559c1",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3643472a-c189-4f7a-a6f5-9b1722213ecd"
        },
        "item": {
          "id": "8a897c0d-44ef-45aa-bbd6-d2842d0b31b6",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b2feb410-01c2-472f-8c67-78d8566d1e33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2bf7442-f640-492d-9edb-750f82a82574",
        "cursor": {
          "ref": "4f5e2408-8143-45a7-964e-eb1476f33060",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d71c5d8d-80c7-47fd-979f-35c5a02da675"
        },
        "item": {
          "id": "b2bf7442-f640-492d-9edb-750f82a82574",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "fc66e4b4-ae37-460f-8316-bf57f2eea156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "693007ea-e53e-4f30-a80c-82c34677e24b",
        "cursor": {
          "ref": "c5e14a2b-048c-47fe-8249-42b8189270be",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "5a8b2b95-aa29-4033-890e-0b62160f2ba5"
        },
        "item": {
          "id": "693007ea-e53e-4f30-a80c-82c34677e24b",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "c61e8715-d6cf-4c1b-94cf-b96e85c9fa8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f5de768-0fde-45dd-a233-45f63395e88a",
        "cursor": {
          "ref": "db89693a-3059-44ec-92b0-bba0b03c0120",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ac60c3a9-3260-4815-a332-1a8eb71caa6d"
        },
        "item": {
          "id": "1f5de768-0fde-45dd-a233-45f63395e88a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "9163cc67-0401-4e2b-b2a9-cb8b08a4847c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f74bd20-971c-4011-86d4-82d72e600c27",
        "cursor": {
          "ref": "376a40c4-80a1-4f9c-9f63-b41a7cbb5f16",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "0ea67407-3a62-4cd6-88ee-631e2ba3c9f4"
        },
        "item": {
          "id": "5f74bd20-971c-4011-86d4-82d72e600c27",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "60f600e2-4aec-4ccd-b12f-d678bd3409f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "086aae45-e101-4d3c-92e6-9209ca7e8274",
        "cursor": {
          "ref": "c2dd841a-70e8-4ab5-b0e1-8fa567f9f848",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "37a23b12-9db7-4895-85bf-24a49fb83115"
        },
        "item": {
          "id": "086aae45-e101-4d3c-92e6-9209ca7e8274",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "a5bf4796-fd3c-4018-945f-ceb665981a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3966b4c-3218-4f0d-9109-b4121cfcae23",
        "cursor": {
          "ref": "a74392d9-b9fc-472d-90d9-4e496a710cd7",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4ad3e5fa-3108-4474-a69e-2b63b6d7408f"
        },
        "item": {
          "id": "b3966b4c-3218-4f0d-9109-b4121cfcae23",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9d1955d7-40cc-44ac-b4ea-fa4e9a126680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f3f5ec-cfb7-4a9f-87fa-e42c0023b488",
        "cursor": {
          "ref": "50141b58-8c86-4684-ada0-57375e1e0f80",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d2808554-c667-4e23-aa82-ce2e314652a8"
        },
        "item": {
          "id": "77f3f5ec-cfb7-4a9f-87fa-e42c0023b488",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "6999bed1-97af-4545-8253-7268f3f7d9cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f404c68f-b993-437c-94dc-11950ed9b39b",
        "cursor": {
          "ref": "efab7bb6-3312-49dc-8926-b3bb912e11e4",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7ad9560e-3982-40a7-b6cb-baf7ac959c26"
        },
        "item": {
          "id": "f404c68f-b993-437c-94dc-11950ed9b39b",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "136546d5-d171-4ff6-bac6-bdbd683446e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ea843e-cbd4-42fa-b9b7-af774edb3957",
        "cursor": {
          "ref": "788d1e5d-54d1-4ff2-9b27-e1e1971f017c",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "fdd74363-f065-4726-aced-d7dbda175a23"
        },
        "item": {
          "id": "19ea843e-cbd4-42fa-b9b7-af774edb3957",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "92fb441e-7d5a-4e9f-a5d5-e6166476b596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be7b9732-d3ba-4def-bb20-344d12c9c7b9",
        "cursor": {
          "ref": "7b596245-25b8-4f1f-a265-270fe367fe33",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a5fbb1cd-8cf5-4293-ba09-16baef4ac1af"
        },
        "item": {
          "id": "be7b9732-d3ba-4def-bb20-344d12c9c7b9",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b674a514-2848-4f19-88ac-e5a9d277b468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03031e8d-d816-4b23-b682-6659339fdb6f",
        "cursor": {
          "ref": "3f9267c0-8ffb-4c04-8626-c0a900aef683",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "56a3b7c4-12af-44a2-b66e-e02d92780a2e"
        },
        "item": {
          "id": "03031e8d-d816-4b23-b682-6659339fdb6f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "66fdd4b5-f8b6-4f68-a83a-8fa87aeb15a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a297e6a9-e4a5-472f-871f-c795c20316d3",
        "cursor": {
          "ref": "5848a80e-a48b-49e2-a90b-24d88824fa9e",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "58d3b3e5-0e86-4a58-87fe-29081918b956"
        },
        "item": {
          "id": "a297e6a9-e4a5-472f-871f-c795c20316d3",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "463b8c21-d986-4d1e-882a-a561bf538404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa5146f6-ab8f-47b2-ae51-fbb532b4f6a1",
        "cursor": {
          "ref": "9fde575a-e7f5-48a9-948e-e6674233611a",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "dff6cbb8-63ad-4719-bc11-6ad7d12fcc21"
        },
        "item": {
          "id": "fa5146f6-ab8f-47b2-ae51-fbb532b4f6a1",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "3cade2e9-b8ee-4446-90a6-16f74f1aa0fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4ae923-368a-4b3a-92ae-526ce9bc801b",
        "cursor": {
          "ref": "74a9f21b-b752-4014-afe2-ee7ca0e2762a",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c0d7d313-f9b6-4298-8521-578bb4d8d9bf"
        },
        "item": {
          "id": "3c4ae923-368a-4b3a-92ae-526ce9bc801b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "88bc6096-8084-4f48-985f-d667f5d06c2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08abe787-e8bd-4ae3-9e6d-05f16256c8c9",
        "cursor": {
          "ref": "0965ee6c-476b-4ca5-b84b-dae0a723f46d",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "81888f6b-fa36-431f-addf-c7b929615cd9"
        },
        "item": {
          "id": "08abe787-e8bd-4ae3-9e6d-05f16256c8c9",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "4ce6e623-42d2-431e-b10d-2be1806ffc61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed8cc7b-b1ad-4118-8a2c-e4ed62e7eceb",
        "cursor": {
          "ref": "08158841-7720-4a6c-ac02-ca45bd1b17b2",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "1e2b8928-561c-48cd-babb-ec308233081c"
        },
        "item": {
          "id": "fed8cc7b-b1ad-4118-8a2c-e4ed62e7eceb",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b7fa0f79-cd35-40f1-8ab5-c5c0e994ff7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7900653e-a3a7-40e4-888a-95d8b289cec5",
        "cursor": {
          "ref": "d4e90675-d359-49af-8b6a-e77a97e10f00",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "23f9e8b3-4fb1-4eca-9970-6c03b2f19ef3"
        },
        "item": {
          "id": "7900653e-a3a7-40e4-888a-95d8b289cec5",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "490b40d4-db94-4d93-b783-919c948823a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f64367a0-2dcf-4770-9c29-cbbbcb57d536",
        "cursor": {
          "ref": "7c6c9b00-c709-4b81-813c-814b8412e221",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "9259825f-210e-4981-a8ee-61cd4a4af426"
        },
        "item": {
          "id": "f64367a0-2dcf-4770-9c29-cbbbcb57d536",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "674d38ed-4ae7-4aaa-8fbf-50011fad1c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b597ac-2405-4ec6-b69f-6d5d48b60271",
        "cursor": {
          "ref": "665fae72-afb7-479b-a160-8bd032b48b7e",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "5b8527ce-f35c-4ac9-a4be-4d5b75e793de"
        },
        "item": {
          "id": "24b597ac-2405-4ec6-b69f-6d5d48b60271",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "c3529e2b-ec16-4f01-b632-faaa50fce70e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19fa652f-81a8-4549-a3b6-b7e967b5d20a",
        "cursor": {
          "ref": "86484525-ab64-43cb-b7d5-9c2377b61470",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "050df41d-20cb-404a-81f5-dc9d174920b7"
        },
        "item": {
          "id": "19fa652f-81a8-4549-a3b6-b7e967b5d20a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b106822e-42e7-4b57-9e2d-73d73e8e492d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a412cfce-372b-4b22-8607-0658269fc3d5",
        "cursor": {
          "ref": "66d8dfa6-1c09-49fa-aca9-2cc8c8f1eab8",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "19fca2f4-e9b1-414f-8d36-25c6f2cb343c"
        },
        "item": {
          "id": "a412cfce-372b-4b22-8607-0658269fc3d5",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b19c4f08-db07-4794-b057-aed386927423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f55684-391e-4773-b48b-4b5e83ea7ee2",
        "cursor": {
          "ref": "2525dca0-0272-4367-9480-ae7d17b5f0a9",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "4516f8f2-4258-433a-85fe-64759bbdee43"
        },
        "item": {
          "id": "27f55684-391e-4773-b48b-4b5e83ea7ee2",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "beaee791-edf5-48be-85d2-3dfe399f280d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd7520af-e8c9-4046-99bd-c1c6c781e8f0",
        "cursor": {
          "ref": "05103b24-f33a-4550-9dd1-d494f2a202de",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "68e2d832-25cf-4c7e-8fe3-9ec0f48d2970"
        },
        "item": {
          "id": "bd7520af-e8c9-4046-99bd-c1c6c781e8f0",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "3a8db9c6-d204-4c2a-bf6d-cfe2dfbbf9f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "648be9af-5fa4-4b72-b4d7-3cf1c74410d6",
        "cursor": {
          "ref": "10cc0ef4-9aef-4c31-8fbb-d270eb91e7e8",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "794f7cf1-b95d-40aa-8431-ef5dd61ed0e3"
        },
        "item": {
          "id": "648be9af-5fa4-4b72-b4d7-3cf1c74410d6",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "48d2dd8d-1813-47c7-9a5c-8aec23ce4035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f31d90db-3f27-4cd8-a324-3f76c81abf57",
        "cursor": {
          "ref": "ff94e80e-20d9-4c6b-9915-04c27c0e7a44",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "8121c90e-f930-4bae-a0a8-43ee55747521"
        },
        "item": {
          "id": "f31d90db-3f27-4cd8-a324-3f76c81abf57",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ee38c53d-fbe8-4110-84fd-138bb04e165e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "970ac056-1425-467c-a39a-dd010f2191de",
        "cursor": {
          "ref": "4eb04431-7378-4bdf-88e1-d969ddebd91b",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e9fa054a-8265-4bc5-a5c8-240733290ff7"
        },
        "item": {
          "id": "970ac056-1425-467c-a39a-dd010f2191de",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "0324cac0-a018-4b64-be9f-f27fb7185b40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "377061cc-a8dc-4e34-9f4d-913cbcfc8233",
        "cursor": {
          "ref": "02932a4b-5ca4-4118-a717-ae638259a587",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "115d9495-21c5-46de-bd47-9a57048c888f"
        },
        "item": {
          "id": "377061cc-a8dc-4e34-9f4d-913cbcfc8233",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "95d9daad-8bc6-46ec-a7b7-b8156c0f7e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 844,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7004824a-8655-4ccc-a395-f46cfae8c789",
        "cursor": {
          "ref": "72acec18-97f7-4909-bbb4-588b272f0d73",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "374e92bd-eab7-415e-9e06-0e5468693b70"
        },
        "item": {
          "id": "7004824a-8655-4ccc-a395-f46cfae8c789",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b6d04b3a-2efa-4421-9c36-16a63a8e9684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32676f7b-996e-4361-8626-5961ee39ede3",
        "cursor": {
          "ref": "86273872-d272-4e15-817a-2b54c67a2d66",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "53856c3b-5408-49dc-a3de-004f098db28f"
        },
        "item": {
          "id": "32676f7b-996e-4361-8626-5961ee39ede3",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e2365e57-2a65-4c1c-bd9c-4f110c4acf6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5cb5c17-b870-4c37-98f7-eff036269112",
        "cursor": {
          "ref": "9091f1a3-5ff0-4b02-a555-1bfe4d66efbf",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1bc75bf3-db39-404b-999b-2869e4652897"
        },
        "item": {
          "id": "d5cb5c17-b870-4c37-98f7-eff036269112",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "5a2ecdb2-4b58-46e4-8806-310be8a16e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce062bc-ef73-4a22-bc01-1c868b98c1e0",
        "cursor": {
          "ref": "e4d18e68-8b63-4f7c-bc98-e1791c62ce14",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "cf57ea55-f3ac-40d8-bfe1-76585a561fa0"
        },
        "item": {
          "id": "4ce062bc-ef73-4a22-bc01-1c868b98c1e0",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "cbfd6bf9-85f1-4d24-8655-9c77317f2415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e128f53d-ae3b-42a1-8c52-d283c8222052",
        "cursor": {
          "ref": "339667b0-2bc3-4f1c-9518-e2264bb45a63",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "012d7528-6173-4a43-a7aa-22cd1077839f"
        },
        "item": {
          "id": "e128f53d-ae3b-42a1-8c52-d283c8222052",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "e0fe6ffe-57d3-4672-952c-86e4ad32544c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e737e584-2cee-44f3-813a-aed6f38231a9",
        "cursor": {
          "ref": "3d9bc691-e438-458f-8ce6-9c07404a177f",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "bf5db2f3-a407-4e6f-a90d-84e9f2d6e17e"
        },
        "item": {
          "id": "e737e584-2cee-44f3-813a-aed6f38231a9",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "471e2543-66e9-4891-9100-15b3f3b6f602",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d96e004-085b-4b1d-8566-1d1f4bde7bdd",
        "cursor": {
          "ref": "061351c2-52c5-48ca-9d76-80efcb14e9e5",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "b863917d-ccf2-4c04-9733-3f67ab546543"
        },
        "item": {
          "id": "1d96e004-085b-4b1d-8566-1d1f4bde7bdd",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "8be839c2-aa1b-4067-bc89-ce0a94d53179",
          "status": "OK",
          "code": 200,
          "responseTime": 118,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "76307a63-d071-470a-88c7-e5cb91318bb2",
        "cursor": {
          "ref": "7c29a2c2-a60e-4143-ae2f-e677d317fa36",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "dbef3dbd-32b7-4aef-8758-6b9f814da06a"
        },
        "item": {
          "id": "76307a63-d071-470a-88c7-e5cb91318bb2",
          "name": "credentials_verify"
        },
        "response": {
          "id": "7ddeadd9-858f-4641-9bd8-f4509a1540d0",
          "status": "OK",
          "code": 200,
          "responseTime": 3088,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d742e02-edd4-48d3-9ade-c7b4a3a93b05",
        "cursor": {
          "ref": "4989a243-cf1f-4464-8240-e0fac0241665",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c8ad1577-8442-4bfc-a77b-50f4ce859b1f"
        },
        "item": {
          "id": "6d742e02-edd4-48d3-9ade-c7b4a3a93b05",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "345fba27-99cb-41a7-9f82-16b7486ad0be",
          "status": "OK",
          "code": 200,
          "responseTime": 3462,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "939074df-92b5-46c2-a3c3-aa5313f89d61",
        "cursor": {
          "ref": "c942a03a-7ee9-40e2-a7bf-3d5a8c60ea21",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "848971c1-fd0f-490e-bdae-109f526d976c"
        },
        "item": {
          "id": "939074df-92b5-46c2-a3c3-aa5313f89d61",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e3799a0a-0dba-4915-9c3c-b967115b648a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "939074df-92b5-46c2-a3c3-aa5313f89d61",
        "cursor": {
          "ref": "c942a03a-7ee9-40e2-a7bf-3d5a8c60ea21",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "848971c1-fd0f-490e-bdae-109f526d976c"
        },
        "item": {
          "id": "939074df-92b5-46c2-a3c3-aa5313f89d61",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e3799a0a-0dba-4915-9c3c-b967115b648a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "845ba46f-4cd8-435e-a39b-793766bf93a9",
        "cursor": {
          "ref": "300c6e72-e122-4531-b3b0-5f08db39c8a2",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "04e6ea1c-1caa-495d-b13c-801547d5a57c"
        },
        "item": {
          "id": "845ba46f-4cd8-435e-a39b-793766bf93a9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8dfcc55d-623c-4013-b158-05e28782acd2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72fb8dec-d1dc-4f26-b8ba-34800f62dd79",
        "cursor": {
          "ref": "36476719-b58e-48d3-8253-ca6fa19481df",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0418252d-2bda-403c-8e61-8ed2275164d9"
        },
        "item": {
          "id": "72fb8dec-d1dc-4f26-b8ba-34800f62dd79",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e91c4c47-28fa-4af5-938c-88f355b47d53",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}