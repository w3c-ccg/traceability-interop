{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "4fbfb930-9390-47aa-bb0f-86e0fbfcb0fb",
        "name": "Clear Cache",
        "item": [
          {
            "id": "52b81638-7c15-40fc-a653-398aa2364417",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c29c62b3-06da-400e-9f3b-757e11a87199",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "56abee8a-40f4-4deb-994a-eddee6d414dc"
                }
              }
            ]
          },
          {
            "id": "277a9695-cb75-46e8-90c5-30d0385015ec",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fe95607e-14dc-45ec-8be2-4648fcf2c642",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0870a961-b6c1-49ca-99ac-0eb5f10d4406"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "71561053-497a-48b9-9e9b-09dc365a1ba1",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c82618dd-7260-4f26-9019-ae3bd7bd8e6a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6fd3eb99-6eb5-4eb0-a569-4da146ece793",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff32ac65-ffd7-482c-a418-2d3991bca88a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "54525e5e-994e-42d1-859f-30535a081696"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6606efa5-572b-459f-bf93-57b0bc0df688",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1e05aca5-f844-4e74-ad22-852c299f7d61"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5e85b178-8dd6-43fa-9156-3442aac25cf8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2f28d4e3-4d82-40ee-b6dd-34b109f17d9d"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6e646846-ba85-4110-9432-0c9df6750b33",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e1cfb016-3c8e-4f07-8c2c-b6f38863d4fe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0ecc1226-0422-4753-a2df-1b7fe97835d2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aa785780-9d7e-4f0a-a2a4-a99ee563ae4c"
            }
          }
        ]
      },
      {
        "id": "8f2e0c74-59b6-4e46-b500-6feee201d62c",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "5a00ba28-f4d0-45e1-8bd7-f621969586c7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7df30912-91b0-4158-adee-b6ffbcd748e3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "02e94f94-0b90-45de-a84d-341a938c7fee",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdacd872-b967-48f2-9daa-6ad1e55bcc4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "95a9e672-4557-4010-856b-e14b42d44e56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e0e2d2-b5d5-460f-82f2-fac299edf7ea",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a84e3ac-aed1-478b-81ae-18526604ac92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8c08bf5f-8d9b-40e1-a1f1-b3b1659ac195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee62717-7184-460b-bd2f-7b653340a31e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb0764a8-dd90-4aec-8335-33bac065dd16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "89bf7148-0adc-464f-a2c3-c950f0c0f131"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "238517ca-5e78-45b8-8341-5bce1b87dc41",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "984849d4-8a84-4db6-832a-e61b47d22234",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "249e105d-0bcb-4fd3-ae13-39b3d6bf81ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e81f9159-4588-4fdc-8deb-be8a6041f5b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71574093-26c7-4646-984b-1985f23095b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f014ffba-d29c-4c5a-9c2a-1de1e2b49a5c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2c750f30-bcc7-44fd-9eb0-cac12cd50a36",
            "name": "Positive Testing",
            "item": [
              {
                "id": "97fb4ab0-20d2-465b-8497-fc7922807f98",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "657a725b-0061-4e18-8526-4ddb13c9fbc5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "f16a2719-f7a0-4c0e-a213-f1affd1eab21"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8586b49a-e783-45d6-9405-967f5fdaab65",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "ee342192-a672-469c-946f-b91d7c77f788"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "18dc8776-8456-4174-ace2-f13c5000d1ea",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2b0ef38d-f716-4a4f-9e2f-a1a83d5e7b84"
            }
          }
        ]
      },
      {
        "id": "5ec770c2-689c-4d32-82be-377a97fd71d2",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "4115b92a-76a3-4384-b78c-0131d1a3582c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6f71d9b6-d2fe-4318-a1d1-d94075323725",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "598d8c1a-75b1-4583-8e4c-bbad60598f97",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d11461-e93f-4fb5-a1e4-7eefd0e03de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "910d0b5c-21c2-4086-bb7d-b236431ad943"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6863e9cf-7806-4ce6-be0f-3ffa32a9fbb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb1b5f24-7186-47ee-8d10-8efa599d3c8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b258fd-0897-4660-8f81-94d93eff8b72",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "468ab550-ea8e-482d-91f6-c808de8f9099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59ba3571-5ad3-42dd-b422-e74bb2a8174a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f80ab0da-3eff-44d0-b8a4-6601bc81a149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d02907a-3876-4d67-a2bc-ad64d2ddfc48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "facc4b83-e54d-4c14-858e-5b4b4f61d251",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c79a943-597f-4a60-b17c-e9d99514b9dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd8a7baa-8b17-4637-ac69-d49af1c327a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f94660-b6f8-4e5b-a0fe-8da17e3b671b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "785942d4-768c-44bc-a9cb-06a997fbcf28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c18c2ca7-f728-4434-b203-60863afb574d",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e0e7b32-f955-47fc-a25a-73e029d44d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9c878d5-974e-4a0f-b5bc-c8b5d3ac492a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5b54af9-e922-4850-8f9b-24502e3622a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41f42767-60a5-4e6e-994e-fa51c90e4041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3d9e7d4-8f46-4400-8911-95124a09b2aa",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f80af73f-0972-4b89-8afd-eb4f746f61da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75680c6a-1805-4a48-86b8-5dd4941b9035"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6c6b714-98c5-47e6-a422-46e4c013311a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a65f6d0-bb29-45c0-8c39-1cc10d123681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39716290-8d1a-49fb-8cc1-3b18b393da9c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e0fbc7-7d8f-4998-b79b-fe7e2f04b6a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87e0dff7-bd8d-4151-b368-eac02bb7e0bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a880aae-0e88-48ee-9b44-e68db7452f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0a1db5e-9a35-44f1-8b32-8062d41baa6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb070e15-adc5-45e0-8147-4c68fbb7849c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c735df8-ef32-40d4-8fcc-62a501717d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4216f0e-7e5e-4b89-9ef7-bc13f5a245b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c918653a-9cdc-4b16-9724-b6e7d076c305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b301c602-66cd-423a-9473-9295365c51ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8032762c-66d0-44a6-966a-03617ba9eafc",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cea1738-fd43-44f1-8380-0a5461944ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4207af22-5043-44b7-8313-8cf831d5b75c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a07f8ac1-d544-47e2-8773-681a88934722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77562e21-d738-4f29-a155-9bfc661e56f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be644db8-e1de-4d00-b1c8-09746b38e745",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "821a74cc-4f0d-4b6e-9365-f7d14a4f926c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3dfb5b3-3cba-44b8-92b0-4870e852fd45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0095cbf7-98e3-4b68-9541-8fdd492c535e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "458fc330-4618-49af-93c4-91005514d906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edc93112-a458-4a65-b212-b1fb0460f7dc",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a4ec243-cbbd-40c0-a586-9677c3fb88d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0275511d-8ffc-4d71-9bc4-4ebe09b275f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41ea5444-e1f6-448a-9f9f-60edc335e3a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "09ce7206-32a7-49d3-8cd7-8adf431c2610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ac0bb7-2ed1-42cd-85c1-84a7c38c4960",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e98b904-b450-4523-adbd-a13e4a1ad5dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a63ba2e-7deb-469c-b6cf-869cf9a5dbd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d496d20a-9e88-4cb7-b978-9fbea899fd0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96efd029-3655-4b20-9b60-beb9981c1b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "317e2759-63c1-44d2-a1a1-afb72bb23f5b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec946452-7931-4968-b0a7-82b45217ece5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbac5e2e-5f52-44c8-b7c9-261457e6bc5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3066faa-2867-465c-b41f-7e02f2a8067c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "95ced579-ba37-483f-b70a-adf2c097f36b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adca7cb6-01d9-4988-89c3-23031a7249b7",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3570054-5d85-4424-985d-c1c1ed00f244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "623c213b-9095-497f-ad2c-d1fbbd34680e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d3094d-83eb-4a94-8995-ecfc621232e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a313580a-ce57-48e0-9259-5f9588b82e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "015b0b57-a5b2-428d-a871-98eacdc2d66e",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef4b8c7-8248-4ec4-884f-0a66b27627e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88396dcf-8cb0-4ad2-8972-17e9ab121f27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b27856-5f63-4e54-a080-ec026d7af68b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f04e23fa-b48d-4a81-847d-9b41e891ae59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08bdb34a-6621-418e-b328-71a1c6203ed7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62de310d-b895-47d5-9c8e-044115b0b41a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "967ad1d3-6274-49e8-89e4-92752925389a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb0d7d5-ddb4-4b73-b23b-4c13b058229e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ffe21bc-e1ba-4dfe-baab-e892b2c028fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4cbc898-c961-4d27-b5a4-2f464b3d9666",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d51891d-656d-4a9b-bd69-215645db9733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a16abfa-8a98-42bd-84ae-7fcf0074435f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2bd9f9a-c9bb-4437-a43b-1ee9f5e44d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93a04127-9131-479a-a6f0-e765d3530ae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5409400f-0f41-49d0-be48-5ebc2262e951",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acfce589-e83c-496b-892d-5ac3073ba7fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "733b52ee-8fe8-4899-9474-9308158f9e38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cac21e8-6db7-4a65-ad98-a6c816fc9539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a2b6284-377f-488a-ab0e-369d6fcb3744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c3e2f6f-9f3b-4b6c-a2f0-3bc65d68fe39",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afdbe8cf-e7bc-4410-a14d-4d193f466da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3602992-647c-4bcf-b6aa-97d4b0ad962f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "966ffbd8-f45b-4309-9d9f-3ee722729314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7489393f-ff09-4df3-a642-e6cea20a31b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a453568-c16d-44a9-9be8-907080bba5f6",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c354a9d7-9025-4192-98eb-cf7585e405f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ac50a42-8b5d-4df3-a9df-529158e96e38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b36ad22-9053-4b6d-b94f-a53f6d9900e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "346f8a6e-d70f-4772-871f-9f1e61e3967f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ab9758-c2b8-4d44-83ad-cdf821dcaf42",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d3751ba-8f08-4b15-a3c1-6b78e3db1d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "950b2a31-4017-49f5-98ba-2f8c7ddf6c88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a8dfbbe-3b34-4082-a45b-846c64afae6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e81c006c-2ecb-496d-8d84-92ade12cd184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0b8c2ba-84ef-40e8-b4ce-bb6744396cb2",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb3aa473-5065-47d9-84fb-fb12e2b01681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bce6b775-51f0-48be-9ca1-799f109616d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d779cd8c-2bdd-45e0-a5bb-71cbbcef6fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "535dd934-aba2-4c23-9a84-232bdab7ff2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca3c07a-d468-4988-8534-b6d0bfa2268b",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e7fc68-f90e-40a4-a7d6-1a0e18b789d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ca86906-c4ab-48e6-bebe-2c75adeb12a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7977f03c-b8b2-43f5-ab93-dddf6f0fca40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ecc9ebb-25d7-47c5-b0c9-18e7ba6d9fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77621f9a-2d29-41ff-b2fc-bd72f4933bfe",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d45d4ca-bf57-4d5d-9a03-030ba01a8eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e84b2c5-a411-46f7-944a-2b9345ddebfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "782a1ca7-7af8-411b-ad00-6a84fc626b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ef942844-6834-43e1-97cb-e72a78fcd7bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c130a67f-8193-49ba-a0a7-4620812bc497",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "590760ba-b9f2-4e96-86c3-e59c6cac2b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9180f853-5081-42be-a91d-8f1944df9fe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1655d541-fb8f-48af-89f1-e8efeeb90436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "def94731-1a60-4181-9155-91f6bd170abd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bccfa22-8bb7-454b-9d4c-1bc92bc352b3",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9920df88-3339-4c14-830f-35e114146ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84646d23-541c-4c36-9996-af83c9f3b550"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5803643-67a1-4a26-b03e-200e74b7ed44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "09686b98-67b5-487d-8789-6ba556c7c9fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "500918aa-771d-411b-a439-fce5d68600cc",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "944734a3-fb4c-4c69-baa2-9f6f2e12e1e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f924a98a-8a10-4782-93eb-6c5a0764599e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b3bd7e-f3ba-452a-b866-4533d631242b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca7b9d1f-415c-4d77-bf43-964e63b57121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec0760e-c132-4f63-bba3-73f87b9410f6",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d70c996-6018-41f8-8e73-f28279d8bff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a2e065c-7aa3-4d75-94d3-db7e1178d83e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc2b473-a87a-4703-9c72-438fe6ba8e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0489e243-774b-4bd5-9465-2d3c43535a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "476956dd-7a59-4610-b65c-522b69bc91eb",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f183059-1c1a-415d-89c8-23f5b592f9b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47e0844b-c514-497b-92ae-53c60aea9078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dcb060a-a304-4422-a13e-a4d28234f58d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1aff994-2c21-428f-9630-b53cec3fed59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1109ea5f-5950-43e9-b5f7-d8ffdce1e602",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a278395-f085-4051-afde-34cfd2e0509e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da3d1fa2-1756-438f-a649-be6585e641e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d701c3-8138-481a-bbd5-9196decb697e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b23e3b83-22b0-4452-831c-6727d9bd0630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0233eee7-22b2-4b5d-9196-a0d03e4d683a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "362f5384-01e0-43cd-a613-ee63fc9aba66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e068ba9-309a-493e-a7c9-00df4bd8ebf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f21522d1-c6a0-4ab2-9375-16b03a1f5ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "115fad2c-70f2-4e8f-a329-2dfda2cf3203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e934084-21da-49cb-a2d8-1d34ea47ea30",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a786b846-c155-44c2-8e61-ac3cbc01bc86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbfd474e-2509-457b-9441-96442fb0e397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cfbfbd4-77ba-4b10-94c3-fef6ac31ba3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "393d0d35-9e2b-44dc-9fdd-751955df41ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba07cb14-55b0-4844-8ea6-96223572f22c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4488d243-04af-44b3-9be8-ef1c7323bb7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ad6017b-edc0-47c4-892c-31ca080fd5cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57c95a84-3c59-4850-a915-22ba456fab75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5666059-b759-409d-b994-aeb95218ca24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc0d434-f85e-4005-9dbf-5765e04e757a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac3c8bd-d030-4c6c-9cb2-404f1e90303e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a56557b-0b47-4a40-8dc9-48008822e9af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "030ab49d-a718-4ece-a6a8-79b25f7ce104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef0e93b1-1c8a-4d19-a5f2-f9d52c2af85a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1989707-97a4-43d0-84ec-f176a8d9736f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77987a90-c389-4731-8691-15b197471bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e8be1d5-24a5-4170-ad74-9d41471cf2d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b69e86e8-1cfc-4800-af51-e7c0d7fd4d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5857671-da6d-4c50-b20d-3cba176be143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "973fa24f-1688-48f2-aa9b-580c76a576fd",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29fe99fe-7e69-4759-adde-962d513d41b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50952540-2f08-48e3-bdd1-e7ce59b840de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0758ddbe-38ea-4e36-b4f7-7f3b9a2f711a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "8bf8a5cb-30ea-4c16-9dd1-7909cef4de27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "994fccf3-faf1-4fa7-9868-0e78fe09cdf5",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf8b2cc-7a5b-4e0e-8aa3-4be5d5ed3513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "30ef5717-c0fb-4219-b42e-3982ae894a8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "863a10c4-3085-4f2f-b327-d498c2d04e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e6567c95-86c5-48f6-bee5-7cf11c8745b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3920ad87-c3b3-42ae-8f7b-011b1933679f",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9daf317e-8eba-4c55-8862-5d3043dbc3fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d6d0163-a56f-4ef9-9eb2-a9657d9d03e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c26159e-141b-4a71-83d9-235bca53cbc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f69e38e-03d3-4705-8b8c-33052e3a2e30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4aef242-d8ae-4842-b0d1-7f798182b40a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb3069eb-00b9-4f01-a830-d6aa910ec538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eddfcde-47e3-4d90-9494-842d4a660a5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d76bc84-7e0d-4232-955e-e5b935146994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d17ca587-1323-420d-9d04-d4d3e8acbaa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fe03df6-84a3-4889-80d5-5e4f122b66e9",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf72560-d73b-472e-a567-2736dd21ed5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baab788f-93ce-44ee-bbb9-a17bb390d3c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e69059a6-8562-4981-8531-63e0e0006454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "020788e9-7d98-4751-bc4c-3e525728703c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e74e740-d139-45c4-a32d-73ef75ef9a8d",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c3dff8-90dc-49f2-87e6-e201f9015a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3eb12cb-bfe1-4d7d-a108-bd19132d693a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b183ea4-90cc-46d0-9467-47894a367858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4198000d-11b4-4232-94af-2fd567f38914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b8852a4-6134-482a-a104-62dd363ec9b2",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e4f0b88-1343-4642-91eb-ae8f8ad6c126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "178e48a3-66ee-466c-a027-9d39a4c72009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "513b5f8f-0bf8-4dea-ba52-2f354c977a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "477c1b42-47dd-4851-b137-945ba9299c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "338c40fc-87fd-4fa3-9091-5e54129d85ee",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "615c3d9a-9803-469b-9fd8-a8d0b385d619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e46b0af6-41f4-413c-ad76-dc9ee2a9bf13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a4a14f2-ffd8-44e9-9b03-058631240559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "a93b00cb-b5d4-496c-b487-7ec3ed928997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab201f7-a434-485c-b01a-35f7471dd76c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8647dd33-5e4f-4183-b07b-0585647cf643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b241f2a-b51a-4d7f-a3dc-e9bdabb50869"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06db29b7-b38a-43a7-a566-7324e3237354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f34c7a5-a690-4294-9ddb-dbc575a37770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12a7e372-dea9-4265-9163-1663cf8d822c",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b75fef8-02cd-44e3-bbe2-d6d0390e155e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0663b680-0cd2-47c9-83da-713178aca3ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3651f2e-4ffd-44b5-8c66-bd4408178946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5729f78-7fde-4908-8263-3cbaba60e825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80a08e2c-7fb9-40fa-ac77-1f820d714a22",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c35b4a40-f37f-4ff4-bf86-284c2b6d8f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8927c33b-19a2-4764-a25f-c2536126cb1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4f4cf67-3248-426f-af25-b292e69d4608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4de604d-f240-47ff-9b57-afdcd6a71760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac19eeb-43cb-4d4a-a8db-c16c0cb7e336",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "624c425e-aee3-42d8-894a-6b51d97390b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "546e27a5-69ac-4df5-9524-f515483c1c5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "771609a1-9244-4d3a-899e-58ee63c7e9fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b31f9f60-567d-4238-a5de-1e46a7319d19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d4ebaff-64ed-4ded-bdb0-c7382ab3d98a",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "702f56e5-fd54-4c77-bc0c-263e7f32d6b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f4634ba-7065-4522-83b2-2e922a9087b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b9c3848-a1f2-466e-a088-ab292fde6e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "add4c9ea-e3a7-4fe5-8391-5824f2bf725b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13603de5-725f-497b-b62d-fbab0e072eda",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee0ac8a-fce9-47f9-88e2-a48f30bf1fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8408717b-c434-492b-8d5a-001cfc667261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "018f66e2-d8ee-48b8-b6ad-64070bb2084d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "99c3441d-35bd-449d-9f87-b3c5cb220dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70c96c98-7c66-4084-88c7-8c12e96d0648",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39345968-b1fc-4359-8cad-5eb5364e46f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b69e83e8-57dc-4e4e-a020-c86f862f3986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85f9e53b-7f1a-47d8-b3fa-109df079a102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b606add4-7fc4-4602-a97e-99945c5c1c4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4abe9e3-bc73-4fc6-82d8-8309b5d697b4",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4adca7d1-3320-471e-80c3-32d103470b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e5bd431-a067-4feb-99f0-3544d949c93b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e31d12b-cda4-4add-b3bb-5f8370b809a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0f96227c-0842-4c90-8422-68af9d90f596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d90b1a6e-abe7-4c30-90fc-00edf0d19c3c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ce00f58-6003-4445-b5a2-e899c6a6dd04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6ce44c4-b48b-43c8-b6fa-270a6b9d65e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cbcc4be-4fbe-4c1e-87a9-43e683e53ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "08976362-7747-445e-b1f5-18b8f651d4e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e34265-663e-4c2e-afb7-89f49a307074",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e87b1b58-4cb9-4e99-8ee7-4eaeb7232a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a2d6f3c-0d38-49bd-91d0-7a599f539abd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162514a6-3c01-4cd7-9266-18d4dc466dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "45590aa6-be01-4531-9155-740863145fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "265f6da4-fdc5-482f-967d-8bd08368c1b5",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89273657-a501-48d9-9117-8051bb5c127b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5fba14c-394a-4702-9f96-216e0b55ab22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e329d0a-1eac-4e7f-8939-5fbbf6691f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "97b83729-d491-4835-b737-87cb7f9589d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d7ba1b-ab3e-4d8e-aedd-ade0d9786a1f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3680f4cc-731a-4d31-b508-2d00d59148bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d9ea568-347a-4855-b4c3-96a01a496b9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9da9790-403e-45f3-aec6-7baaea876dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1c9e8b2-41c8-4a08-a71c-4d23ecc06155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b6a6fe2-40bc-4428-926e-4980899ca994",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85afb8c8-d6df-4960-9525-196416555f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9922308a-f810-48b5-b151-09e9c542e46d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1e57f75-41df-4693-8b96-ab3a9926a639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fef62c18-649b-453d-8482-24a028fa71e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b240506-9ac2-4445-a566-1e4ec6f16646",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa449782-7be4-4c0d-a085-e6363396f644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67228cb7-225d-471c-bad9-253d11362b27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "570d3583-5302-405b-a4b5-b05ad69cf099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "06b3c09c-e53b-404f-94a2-3a9e9ebfa83e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b12ca6-31f8-4ef1-aa43-a8526e2052a1",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aacc0b9d-0404-40b0-9c5f-8f0a7347db00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8a0e951-c002-4488-945e-62dcf217de9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8a1880-f371-4eff-acc7-d520c0f87b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e84fbcbc-414b-431c-aae3-4b25d03618fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "418b2785-d0ab-40ac-bac5-89fe59fea5da",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6fedaf9-95eb-4c8d-963f-8e9c6e1e3d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "810419b5-297e-4304-97f0-856772742c60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5455836-58f8-4d02-9b03-4e032cf667cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7629629-ee50-425a-8150-a1eedcece3c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761fa4bb-91a6-418a-b3c6-2bfa834a03a7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05bcee06-e7bb-44ca-a817-114cfe6617fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e17c8c6a-a097-4109-ad9a-2f8416993f9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4c0050d-4621-49e4-b3b3-c35ff1834685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb2e9e2e-a9c7-4cc4-8498-08c33910b27e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06d40925-d55f-47e8-a3e1-40ea7e88e5b7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83814f0f-5207-41c4-ab98-62c2cb352a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28346aa1-05e0-41e7-8113-70aca3ad12ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3dba6df-4bd6-4e95-9848-ba679d1246ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "29fbc043-f068-465f-92fb-e06114554592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e30d0d0-37c0-4c04-b1dd-317cbc6e13c5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f84efed0-f9bb-4c41-b412-6a44b8b3d494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "677efc88-c180-4af3-b2dc-7250da261538"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fad10dd-082f-4c99-a42a-acb5025f31a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f83d4a7-a249-4395-9f50-a03752e0cccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "902a03cb-67b0-4206-b939-2d8c7bf0882a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73add9fd-f5d0-4109-bb17-2c07d1c7d1c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df37f45e-d589-43d0-b27f-d1385e9dda4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae787148-21d7-4543-9a53-19de00373d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "1552292a-d8e9-45af-bea1-a5a0ffa60c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c2fa996-f425-4330-8e37-657a190dd638",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d706ee6a-4fde-41f3-b038-2cda1051d5c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c6bcb98-b1f4-45e6-91ae-0af82a810c4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0768d49-86bb-4ca1-8145-8e04fe9a51a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "52d5cede-fd91-452a-949e-1ad56d2ebe08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dad70644-25a0-40d7-9fda-8c31e428402f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ad3128-660d-45fe-9f38-a52ff27adabd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab69689d-c4fb-413a-bbb8-0d3edf61bcca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a55753b1-046f-48a6-a6a6-76b7e43151fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6f331b4-8c9b-43f4-99a5-64a1bf0cc7bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2297285a-3b85-468d-ae86-ec19d9c1ece0",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d980916-f12e-45f3-8ff5-be492da9c63d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0ef76e1-02a5-485c-a51d-ceeca06398e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c265a04-9d4f-4c7c-a6c1-39de4d7f5351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "669f85c8-de26-4f98-89a6-100ff9126cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d42194df-a873-48f7-9301-887ee220d26d",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e8be15-6cf8-451f-a1b1-64d4b2fa96fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "372bdac3-b9a8-4318-a619-ac2905b5cb80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37731f8b-e65f-4430-b603-df99eb39e007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5ad2f67-142d-44ba-91d7-819322ef36be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7075792-52fd-4ae5-9f98-f95c5e931a71",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c82e8d-f321-4ec1-bb72-c638341140f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "981867ea-0696-424f-818a-dea49afc0a66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80b44438-0271-4d8b-b992-996b4870340e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f86b3cb2-a05f-4a73-807c-7319ec1d9cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f36ea2d-85c1-488b-86f6-eb4bc8a54d21",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "925f7ad1-b659-4232-86ff-8bf3ede1fe6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a92b725e-09bb-4f78-aa3b-0dc70e82f82d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f9984a-7eed-4483-818d-aca589f5e4c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "df1ba206-7496-4f02-bb0d-5a202b24efde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43864bc1-dcc4-4c9b-ad64-ac79dd79c045",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a87cb3f-5aa2-41c7-8088-c5905e03f562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c6bb67d-e998-4369-91bb-5e4ac4ef6ad9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9082fce9-0dd6-4a64-a6f5-da29861510a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e105c352-b52a-4387-892f-c2198e2018f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d7c6a27-9cae-474b-b9a7-e460535e7691",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9555d3b5-fbc2-42ee-ae74-873b9da25f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aee7e479-283b-4807-8d57-56b69cfe4bc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a702806-7eb0-4fb1-9274-ccf4a1b2d4ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e258d8d-a8fe-4b2a-88f6-fd23a8e2dbde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4acf3c98-8bfa-40f3-9b88-d759ba37f826",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4325d5ea-c198-4845-a80a-de4c435dc323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3b9f7b5-e2a7-4a46-ad4c-9a116c16cb91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9228f866-bf85-48a3-8227-a6b6a5c8a2eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8dbfa35-39af-4009-9215-e71a8285bc6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee27735-f870-4f26-8d6c-d79f64e9a8d6",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f9adca-720d-43e7-96a2-b64fae50f05f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a0554d4-4ecd-4bc8-a114-8fc346efeafc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdec515e-82ac-415d-961e-375c4ed5efbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f5a78b4-954c-4401-8c32-59e7f3250778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d0a83b0-1a76-4593-91ff-ec637a02e54b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b14cc6-d855-4fc1-b0cd-c3db23b1e1f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75356a3a-6188-4dec-8889-ff61f375d5df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd191d57-7865-4876-a95e-2f71d72357a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0489f916-63a9-4020-acdd-2e2e7d155a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6c9baff-5998-4d34-9e38-2ca458d97148",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb834a2-07dc-4dfe-8792-9bd5312b9d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74c069bc-7c2a-4a46-9e6b-653b20292181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f3717ab-3070-42a1-9a23-72dc75abb51b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9063870e-93c3-45b6-bbdb-b5bb7a6c186f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a9fd48-83ab-41b4-9ba3-de33c6355b93",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8172ba05-dbcc-4f53-84b2-1230393db600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5659207-96b5-4d8a-8063-c2a0a60b77ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6d99bd2-d259-44fb-814a-39d78d5e06aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5de6653f-0e29-4e59-b289-2ab36223a0ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c396db3c-d7fd-4ea4-a397-e33f975e68f3",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e7a10a-3b97-4607-bf36-dcd48ed3d292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a4a1e39-f87f-4946-ae45-556014c7e94b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0623cc3c-b868-410f-a05f-a14e21a858a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "34c3f34c-e2c9-40fb-91dd-6db901efe6a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ec0ed5-2c7a-4cb4-9ca1-895723082f0a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "232805e7-2491-4f2d-9338-5acf28a88368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc5caf6c-08d1-4ab3-8dbc-4db3134f75e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d823f0-d6ba-49a8-9a7f-3ee9bed7fc5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2a9d8c9-03a7-4750-91b4-3b6ef4527fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "008f5882-7951-4d05-9158-4e1e7d7c00e2",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e81234d8-5d5e-4cdb-8218-998223f5bb6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c39a767-2eb2-4b96-a1ad-4019a522d273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28617b80-d608-42f8-9469-0d74b0181673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "be24c22f-fb09-493c-bf84-9df25cd3c9f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf57f2e-cbdb-4f6b-b223-82adfd47af92",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd29f10-0b5b-45f7-b2f3-652afbc4f484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5839eb1-3fb4-413a-9ae5-aebdf0b1f55b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe0eecdf-f674-4f51-ba5f-c305e76a762b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0776cda8-3ca1-4e6c-a493-384c75f7d93a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a3f26f-0970-464d-9674-a0cfad399fdb",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56eb68ec-096e-4096-834c-65b0c29915c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd45663a-84cf-472a-9489-5ccd08d41d25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc4c5f82-1177-4cbf-8d1e-f51579632183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2e1486a7-2580-4576-a96c-2a6fc6e3bc98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2684ae66-bd59-4a34-909e-e3d54445dc8a",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "069f747f-ca22-4065-8e1c-8a998c87550b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9c0ab64-c6de-497e-811d-eac8dc819213"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2dbca51-b45e-4357-a93b-029b04edc3bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "410092cc-7b0b-4d85-a277-4ab3fbb97095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc967022-218f-42da-8399-6373644e98ff",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9458696-04b8-4b48-a985-298ba8b36b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1044692-2508-48ab-afc3-3aae8a9f5a3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e8fb31a-c6c3-4ea9-aedd-11a4603a4735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c8981a8-71e3-4a78-9aa7-e8143ac030f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1101816d-df60-4235-b11e-a5acc1d43765",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d03197-277c-43dc-99a9-9de3c8814bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11f5c301-3564-443f-81ec-abb9da652a53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85acd132-4fa1-464f-8863-440003bdc2b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd661c4b-da01-4120-9ebb-ddd836c44d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42aeed56-4704-4066-b522-ff01a6c0308e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c1ef0f4-0a3f-4e93-993d-e56765b73b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "febbcac4-f426-4fa4-819f-7c2e3f97d2a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96f11682-836a-412c-8a05-20b0e6466630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe0b9ab4-56dd-4934-a619-f8d43829f50b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7722e42c-099a-4a14-bca7-8bd548893d52",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d643c48a-0507-41f2-9c21-3ba8dc056b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfe53d6a-0a10-4fe4-8402-8f1686149594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "904db498-44ce-4a10-b068-d6b9abe2400e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cfcaf788-f9a4-4d5a-9468-98d0cfa62025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6feaa372-05cc-4ba6-b5c7-ef54b315515b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "070ffcc3-cfcc-46fb-8e9d-6e8451dd7e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cfae1ed-3cb0-422f-8d94-de31d9eb0002"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc70d1b0-a05f-4cf9-b1f8-10094f20e0be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "549cec89-18b4-4cdb-bab1-4bfaea11053b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d56231-feab-4fc5-a466-91c0b11b6125",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "879717c7-1f83-458b-bab3-d2b9f0df2fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b93f910-f23f-476c-9e0c-729a465beaa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca6b306-85e4-4c61-b448-94cce8b0eb4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7fb3136b-a3fa-4015-b858-651c50cbea1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2be2db17-9e17-468a-b46d-de05313e36c9",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c299f7f-8b05-450e-a3ca-d2a34f3bea28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "876222d1-50a8-4b82-825e-3a96e2193688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc9acdd6-5f7e-40e7-afe3-a27fd00389fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ed93091-fa01-4a92-aeab-9e7b10dd8dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7074cf12-35c6-40d2-8631-0ba1792f0c8b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6346739a-b686-4296-9235-205f823e0901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05dcd4fb-7b48-4035-87b0-6b1eeff940d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ccda58-644b-41df-8034-16dbc74ad3a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c656faf6-28c4-41e4-b270-e54d94907a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfb118e9-16fd-4303-89bd-fd25d1fc80d9",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db0d90d-75c9-4be9-9096-715d7936170d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "231ed8e8-f4b6-4e3b-b78a-3dc3b41ba199"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1322fa41-4a7c-4b51-9c1e-136f9d0a1d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a4272f1-63d2-4e76-b9ee-a9705957d805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9836af02-9bd7-49a7-afdf-4ef31570bf87",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a1b5a0-def3-46e7-9ada-f3d2da80a3a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a237c4d0-3e33-4296-9708-8ea68f0297d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c0382f-a916-41b6-ba21-67dbb22f1b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6be95e94-a13c-4b31-92f0-aa2a5e73296b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e58ff7-ce07-4609-a938-92847faf869a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "570462e9-4975-4466-b587-fe0c1199a424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6b12d226-c1a7-40fe-9f89-e6383d86a185"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92eaf589-257e-4a46-a0f3-d205e984a738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7775a86f-0993-4364-af89-2f81466a5f29"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "44252305-1239-46c3-a424-aace986217c1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6cb839c1-b2a3-48ab-a39f-cb1e1410f854",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d163ee-a803-49a2-8961-0181e62f6441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df26231b-4c66-4d4f-96ab-d1c92bd44669"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8773009-7b8a-43f0-84f1-46c2a35bdd56",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "664f728f-5547-470c-a659-2cafbb150898"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66852486-5753-402b-9ad2-5a7f53632657",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5a12e006-4cd8-4cda-8b78-7abc2c75c92a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce403b4b-615d-4b0e-8924-bfe3e5a4d783",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f5765af0-7114-4fc8-9bff-150d17c40556"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "157618b0-3e23-44c1-86c5-fdce7ecc8211",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "49b5d9f4-bc81-49bd-8a31-a41d44b29394"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "48ee39ca-7c47-4ad0-8739-70710c052234",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "46df862f-d59a-463b-b446-378fd8d62564"
                }
              }
            ]
          },
          {
            "id": "a5c40c10-36d4-46de-8d26-ce6600948713",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2e960e03-1a1d-4aed-9d69-6a93f8304804",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "610f076a-eee2-4952-a4b0-1a247cee9c54",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe84d168-300e-40b1-85a5-556ee2648cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b36b9753-97f2-451f-ad70-f4138d8c8de9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "273f9fd0-478c-4263-91b3-cee5e61e4755",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "565a9c3b-48cf-460d-a844-e861ece70c7b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ecaf85d8-2bd3-4c0f-97b4-0f1d55be1fa1",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c27a5cc-bb9b-428c-8988-f9139ec51f75",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e3785c0d-8242-434e-8686-7f080af0cdcf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c2eb281-7ad7-4ff0-bdd4-c96216814b5d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "046200b4-727e-4c89-bdfb-64e89c798cae"
                    }
                  }
                ]
              },
              {
                "id": "fb3f680a-11b7-4ff5-8ee2-c4ed27c4514c",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "23d58827-b93c-4fdc-89f8-26bbc004fdc0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3fe45b9f-920b-4e10-b756-56cbe7e37946"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0df8e660-d4ac-4a12-9ce7-f421eca8c54f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "28e11aec-7797-4244-9a77-6ea444aa43da"
                    }
                  }
                ]
              },
              {
                "id": "17588bc9-0cb3-459e-8209-578ec5843334",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed7ac0e9-789c-4b6b-9782-0fcffe5ea070",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8c4a6b46-51c4-41d1-84ad-67e403123285"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab0f690e-1205-48fe-9a3a-686d42848b9e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0ad040f8-2b55-46df-a630-689077ca4d46"
                    }
                  }
                ]
              },
              {
                "id": "6fb8a239-15b0-4171-b7d8-607693a002ef",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea4a2566-d71f-4b0e-a6b2-f913ae2b8062",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9cb4bda7-ec4d-4c59-a688-36de0f8a368b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c0917074-60d6-43b4-b88d-c1528aed9c61",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "080e2f4a-2ff1-45c2-ae4d-2fcbf8323404"
                    }
                  }
                ]
              },
              {
                "id": "7d4703b0-6cd4-4e7a-9e95-f0f2f5f8ad4b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2387124-24ac-497d-9f97-1f5638735952",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3bd78e98-1e4c-428a-bd22-6e1e7451fab9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "016ff7e8-4766-48e9-b87d-f4d49d3bbe2c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7a8a1de5-5268-4073-a3db-72aa5e22ea8a"
                    }
                  }
                ]
              },
              {
                "id": "2aa2f501-a921-4571-acea-eee430921c3d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c7e2a60a-c349-4401-8e29-58af791f1212",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1f64cf20-9468-45ae-b715-7993bfc9711b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "574a3695-2d1c-4c6f-940c-e8c8a971f51e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b8b19c96-97f7-4574-80e5-d1ce427640b5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2fe547bb-9c8f-4620-9ae3-4c44f8aff714",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b27a71ef-1e59-4af9-a849-134c77db48cf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "edca947d-0633-4f32-8f16-eeb7323d0d46",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1f16538e-7a0b-4605-b608-7721739a39d6"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "43118261-163a-459e-b0b4-38fdefc2d572",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "43562fa2-fcfc-4875-9e92-ec70f655668a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4282fa50-591c-4126-92c8-9dfca2c0291e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8dadde00-07ef-46cd-b950-e4b1ff0fcfba"
            }
          }
        ]
      },
      {
        "id": "773c8105-8adc-42af-9819-81f49e09b28b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "76414652-f15a-44a7-8598-8dba36863f85",
            "name": "Negative Testing",
            "item": [
              {
                "id": "265de4f6-15b9-4882-9c50-c2f22c081134",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e6b88155-b93a-4472-a052-34fbffdffbfa",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e25ce844-2332-4fe0-8f62-6c38350c3e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e37da0f4-cfe4-4599-8e54-179e1b59baba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc8ac1d-d5a8-4cdb-8b5d-e624eb462cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea60312f-978c-41b4-93b4-251a6a12870d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e0522e0-01d2-4cb0-9af3-e6a00f71776a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4de9476-9313-4a9a-8019-99769a11cf6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da7a7198-9c6d-4abf-9b16-3cd43bd435a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd097c0-e6e4-4d1a-87ce-3c75db4ecb34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "16d92300-d61e-4b38-972e-3fd27e4ddd28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2738e9b-df7b-4b6f-87a2-8b5b4d68b607",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98cf5b67-8c75-42e3-8c86-e7c219f6c39a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "211ad52b-6409-4173-9d7a-8b2a507cd408"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1fe2290-fc08-4b9c-8882-d7cdd9960daa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a71b332d-a44c-47f3-b10b-d238a2c03020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a36117ea-e631-43c4-aa20-afa5b9e55e79",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c230090-8627-4814-a029-8b693070b43f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08a1acd1-a8c7-4062-b9cf-bd2d566ada91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "413aa4d1-91ee-4a17-b910-b414a2151d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e3e19c8-05ac-434c-8ece-d96afc9afdcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07a91d1a-263c-431a-9387-8bfd1924f7f3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a2a67ff-eff8-4434-9642-23221de071be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bde44eec-48a4-46d6-9e81-a520ad90c172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d6b2b4-ab13-4286-bd97-3555dfaf149d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d0de83d-1fa2-42c7-aa37-0ef89aeea0a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c98499b3-68d8-4173-ba6f-9ad400bf2458",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef72419b-ea7c-41eb-87f2-b4c70104d5ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68f18019-4902-4c80-ae8c-d261d34907fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3730e75e-48de-44e2-b956-f6b5613a62b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a9061d8-eec6-477c-aec8-74f2f8afb65f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "787b5bd1-7c8f-4322-b2a7-b38ddf473235",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83120f38-cb76-4401-9d80-71fb033c9df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf550f47-e3da-401f-b852-6232e75fcec9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95dce95e-f677-4fce-beb6-17465dfb2e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8d39aa6-e0f4-45f5-afa1-26fae8c7e7d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96cb15e4-692f-4908-8635-2112f6f0bdad",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31de60a7-7ebe-43db-948d-88789a7f2fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5e8e906-edee-42d4-b72a-75b12e680e31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa08b763-3d7d-4806-a002-6a88462b04cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd9a8d9c-d716-4488-bd9f-5aadbbe2b712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dcf2ec1-f413-44ff-9d51-87468dec6796",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ec91e57-80e1-4e36-a55a-9741eeb867d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39c127d0-66ef-442e-acc3-7e093653298f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f3cec6d-0f4f-4fd2-953e-bc0ca2f0f264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "57152a11-c11a-472f-9a46-d2d7c150fa49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "623b25ae-27de-46a8-914e-ec2b0c723974",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a5b0830-d945-4bdf-9066-5c6e4160d6e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28593c61-86db-45a1-a057-1e8ad59786bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0315428-ba73-4b4c-bcf3-945332b4f26c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f10cbf8-b8d7-40e9-95b5-1dffe1a9088c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98023a12-8d12-43c4-85cc-a9dbf19c2a56",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a15a1a6b-89c4-4c9c-a555-3569bb7d2639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79b34568-5cdc-4ea6-b023-0c90226df5c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2064e39b-afbf-4580-8987-6d0c6b94f480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "17fc1381-7896-4c8f-86a9-a19c48c06ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a42ab0-92a6-44da-9f8c-0b4d4fab40bd",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1d340d4-6083-496c-9796-0d5d67fb50cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33d0c1af-6c40-4c88-b8bb-453cf5080004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22234728-9962-4398-93c7-61abf6df418e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f9fcc8e6-4ca3-473d-83ea-585b0a154dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78ea2c57-bedf-4475-9339-3dab5b89740d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f4d26d-c309-4ccb-b11a-cb4532fafd26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1111a9b-254d-48ca-951c-581e282ec063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7bb8f02-a590-425b-acf3-23496b4ad370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbb633bb-bd23-41c4-b99f-4efcbcb45513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "534bd558-c78c-4e33-af7d-eb6894360671",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1782ac09-d3fc-400a-bfdd-bb22a38fc3e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc7c24e7-5022-4c51-ad60-f49cc3521a88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d45f5ed8-7c5a-4ed2-9701-3f233fb1441a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dcf260e-231a-4a4f-94a3-e827f8ca22a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ff0accd-bcd0-4e6e-ab68-59ead23df01a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56199b6e-ab6a-4590-a74a-35d19b55338c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c99c227f-7ec3-439e-90bd-eb5415f9d9c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b877dfd-90fb-4a43-a62e-265000850d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ead51561-15c6-4b17-baea-597ea8bd1be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad558a0-5f2d-4130-998d-fcb4c05c1e29",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1afb32b4-9fe5-49f8-9e71-18b72b96d8b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a660b4f-a7e2-4e05-9e94-4379e4cff3cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e254093c-a2f7-4d02-aa61-60e1411f785d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb949d54-43bc-497c-81d5-936b3d45a6ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88586612-b649-4afa-84e7-690572fa84a5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ef0789e-fcd5-412a-95ed-efae505f3101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73e4d705-4bc9-4a94-b438-33cb17c32536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33fa1861-d516-4539-88d3-dfa16e1af913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec8dcf1d-2298-44e4-bc36-66667f88327c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec7c943-7174-4c11-b49c-93b81e95a4c5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48274297-5690-4671-b27f-32798e8b6697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4b2e155-150f-4445-8ff0-7d717eab0e8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdffe376-edba-44df-9236-667b5c53ee81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "39e48aab-be0f-49c2-b25f-93679fb422a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b96e4bab-7b6f-4196-ab9e-89443a52a258",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe6851a2-4ed7-4289-9378-78484a1c841b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb1812f5-7f73-40b1-8f75-a66545a26404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6976ab3f-a320-4be6-aa4d-5b67e1c37c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ef8b85a-27c9-4b3c-822a-2185ebed4f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4ef434c-fff7-4e00-814c-21a62ff7ddc0",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f390ae0-bc75-453f-935d-fcae22ce2164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55b59a07-669b-4dea-9aa6-cad12865a2aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc1d8d4a-09e7-4400-a6db-f6d50341e194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0137c82d-2f96-4fed-a9ad-9a7746af88e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee35b16d-5e69-43a6-b7e7-aa9d242a35d3",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac54946-e979-435d-903e-1bb2c4c2da77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3af161b3-61d0-4cc0-abf6-d8bc8ad58426"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf4d972-f2fe-40b0-b8a1-d3d740f2ad36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ee90c2e-7d44-4c6a-9c2f-fa4be37c09f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f24fba13-e7a7-4188-8e06-6d161a9ba12a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e99a9e1f-1320-4a8c-a8a7-12a30f50ef43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1eca784-b673-413b-8df9-7e22d382aaf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4c1090f-5e86-44aa-be6a-be73f9f49df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9224469-507b-4d70-aeba-76efb88718d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed0ae757-30ad-47fb-94fb-984d7447bbe9",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "704287a6-d798-4a56-a02f-97a276c310e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a363ffe-7763-4808-810a-3aea226e9b3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb7f118-f103-425f-a8b4-1395774b0f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5de746c8-3dbc-4b0f-b3cc-e4ef335150ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf36c28-8b87-43a8-acd0-bae3f2e7df6d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8895180-33ee-4762-8101-19749bd95aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3afb32ce-ab48-4007-86c5-885de5ed0edc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb5c543e-39e8-4c9a-839d-ab215eb9d602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7c367b5-f2d1-4e58-bb3a-8d5d088aae75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b197681-df78-427e-b3ff-07fda5ec5c19",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d6491d-38ae-4907-9d9e-5c2231f05670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89a8d84b-4e83-4977-a3d4-e1e532d69ccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bc42da8-a860-4f96-97f9-02a43d0febaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "661de5b4-d640-40b5-bdc7-35fb7f326cea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3679dcf-4132-47c7-b49d-253c0405e842",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41be534-e5d2-46cb-aa45-0f2af43e46e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cff1013-6330-4a72-a1a1-672fa3c4ce39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d5dffe6-c2f7-4f4a-8a2c-88e42660dda5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dc32b20-943f-435d-98b3-e0f06d71f89b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "889e4b29-7388-4820-b045-0307fc5a2b44",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0380658c-047a-4a19-8d86-774ed2b27f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1baf865d-ccb8-4fc5-a8a7-c592a41e28fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "915c46ba-15dc-4fad-a1c2-f2898193292c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e08baa1-b63a-42ba-8a57-4485a2e8e5e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe26bd6-0008-4af7-97b7-909d6f19d30f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9f4847-f305-487c-a4b5-97d83aa812e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0294bee-7b7d-48a0-a84f-e7c068cccb6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6efe7a82-1eaa-4508-8ea5-ca41f07b03f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65616a37-c304-4b56-ab4d-c6679ac9a27c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1303551e-bb90-49b6-99fe-54c1102676e9",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8f6503-6f4c-4b8a-9f91-006e55d84720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e15d66b6-59c2-4b05-808a-30203b513cfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c666d974-d127-4a58-b7ea-c149768ea12d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5b36361-743e-4499-9b4f-cb7877b7f476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d01b4871-1872-4676-a8eb-1493be283ab5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22b13b82-1955-4cf5-8cc8-6c60b3b1c762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d159905e-6d6f-4f7b-8ef4-ef2978042860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94150a23-a971-4490-95ff-b71ae7a6f272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d6b5bac-031b-4d29-9377-f903bbf5546b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62dae4ec-b243-4899-b767-6b7c04fd9696",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb168240-85a0-40ff-b8e6-a5e47539adbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b311c82a-0201-45ae-afbf-117f07b750bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad784dbc-8abe-41f6-a01d-41d1033a69fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d471594-077c-4fbb-b76b-9d5d3e52ef83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cb725c8-bace-4cba-a6dd-7dcd427ed181",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfce9027-87cf-4c2c-9261-a86f097f64cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b6fc096-bc0a-43a3-9fb8-a3baaa89939f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b289c1-c934-472e-8a12-a0d5c656c729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4260a6f-ae97-4f85-8014-495c61b1152b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ee3b3d-3fb4-4ccd-b7d9-1ea831dce2ce",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b7ce8a5-0fc9-4158-a640-b5b1ae45fd60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d76aa241-09cb-45b5-83e6-9a70c967b353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c0cb80b-d05a-4ce0-aef2-5333e403efce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a153d897-9af6-4111-9abb-a9c4f531ca64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e71cd064-2a1a-4083-95d8-c8f07a5ed2a7",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a8d841-f56e-40bd-8c03-484c031b5955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c98578a-4f0b-4679-9c3d-b03589247731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0681562-311d-4378-a19a-e836a51faa65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f810243-5084-4924-a826-6a89791028dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeb29fd8-9b33-490b-94e6-665c20143c15",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0126e5f-88cc-4bec-abec-c951212d43ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab0140b2-95b1-4e97-a75d-323dca2901c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e06e6a1-d6ef-4365-a119-dc61aeb10f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8a58319-905d-4cf8-8b0f-d181056af73c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dcd36e8-ad9d-4f3f-98a7-fe98b56a8c80",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a2fce2-ced4-4201-99dc-de964d33ed4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da1ea721-e244-462a-b42d-1b9ccec37010"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f269c05d-b0e5-431a-8fa7-b55e5284aa61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b40433c-d8ba-4b24-b811-794d5e1668b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcbae7e6-0d61-446f-9ea5-7ef1cceef8c4",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d01412c7-897e-492a-8416-fea3ebb8ad9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4861ea89-d78b-47ef-afa6-ec350eebb03e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf7b9454-975f-4a3c-bded-e3197e7be7c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40b9bfbe-059d-4e08-b91c-93416b606032"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b3b3fb05-324a-4ce9-9373-90afcf3505a8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "14655ee8-1056-494d-b058-a0def849e538",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa693b5d-6958-467e-9e67-e994e77d9338",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "817bed69-3b94-4f0d-8639-e0edc9b7f967"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a369eea3-c24e-4f27-9819-9875dff6c952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d9710da8-2830-44f9-aaad-241b59e4cb8e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "47f00491-a6f2-493a-9b83-150f523c268f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7df6f67-5b7b-4cc5-8380-859fe0e76960"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9bacc47e-d1b9-46c9-920f-ec1543aed150",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b2cb3d1a-1206-40cf-8613-dc27a1c72d8e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7a47e999-e215-4c7e-9a0a-7a2c5e48bee1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ac21e813-fb45-49d4-be3f-1b4be18098e4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b704f230-fa94-4fe6-b172-b6a484c8e064",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "42878f90-a584-4850-a7ed-2aa87fc890dd"
            }
          }
        ]
      },
      {
        "id": "d716e802-7050-4280-a556-3b0c03c760fe",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "84dc798b-b919-4081-b6cc-a6644967f428",
            "name": "Negative Testing",
            "item": [
              {
                "id": "723bfcc3-8536-42a4-a551-d629479f4619",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a7130b67-8a4c-443e-b978-4488b8dba94e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "623d8408-b250-483e-bf9d-4f50dd3cfd8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17bec51d-8191-404c-a0a4-29d87317cafe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca2000f4-78b9-4b66-8cf4-15403aa783e2",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d6f383d-bfc0-4bdd-a486-af3d8d619974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bc9dd03-7444-495a-b3e9-71eddbf56dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c558f7-6d9b-4c19-9ada-5d9a69ffc70d",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc6058e-764f-4ab6-af2a-2d3eee5a827f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66952e67-9490-44bc-beae-ea994f5c6086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e0c1ea5-95db-48b0-97c6-799102b4766d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f25fd941-2b40-4472-80d2-6bbab8c78014",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f037f19d-2c9b-4025-94e1-dfa82e2e3d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6774f790-7e09-4554-acdb-41c9740bd8f5",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a28991-ef7d-4001-82bc-1c8a0af1dad6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "013df938-4077-4ca8-aaa4-fea81ae13036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "760bb900-e463-4b24-87fb-42d2116db5da",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd9faa0-f369-4e34-8de0-90dc24017660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "533341f6-ba33-40d8-a573-4052c6e94430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff826c74-4c8f-4291-9edc-0d97f3adc247",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b150025-6015-4096-abc8-2f30b6f21d76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f8f3084-18cb-4f94-960c-24386c4e2ff2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afed6b85-912d-45c6-9a1e-7f82ef40d479",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1fdb93a-0c92-47a8-8b1a-484af5337a14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c466ffd5-0a49-40d2-8609-8377643a5b28",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2994b1d9-bc8e-450a-83ea-a3d06994bbbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "423a1485-06fa-4f28-abee-4c7a89f37e0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1327aa93-6ac6-4685-819a-553afec29e51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a96fc3b5-2157-4cfc-9fda-e8188eb9b545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06334938-3eba-4af6-9232-d7bd2a2d86b6",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4899c21f-1563-4573-914d-e14b67b118ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eda90a5a-c631-4ee1-8bce-48311e02c891"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d2e2a13-9364-4644-80da-c52709419d2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce75bb07-066b-4001-b82b-74c5d38ea124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f67626b-31d5-4d27-b7bf-85dca924da66",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2314ed3-62fb-4345-b364-975bac0fc98e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "144e74cf-55a7-4bc3-ac20-8a85cbe6c2cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "839142a3-9be8-496c-acea-31bed562e5a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5b085cf-b648-40a3-970b-4ce43f924dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a11672-f02e-43b3-81cc-4d6299cc60f7",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c9e9eaf-9ac5-44cc-abf9-f3cf638df013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc49eba8-cfa9-4fb3-8d39-52e5d65ac5e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f773884-1a5f-4cb7-b357-9b2fd622e7d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24c2f422-deb0-4e71-901c-9b513c16f180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8065e372-38cd-4a83-b6aa-c204f8e80138",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e66402-d7b3-4e71-9cd0-838758c4c1aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b7792b9-ddd2-4e58-a93f-42adb3ea4e42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86fb6352-a698-4e0a-b8e7-3c5c9b2c7538",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbf03e21-c11d-49bc-afa5-dbedaf2c9e7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4390f304-cd2c-4c3a-8a52-d0e0ff1bbcaa",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea3eeb46-0548-44d4-b7b3-182a3ba22d26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc6240bb-ad8e-4435-94f6-8d27d2ba1463"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4867b9a5-936c-403b-9f8d-6201a9aafb3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe9ea9d9-3a19-45e4-b34d-c303117c3fa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f12850aa-7ba2-42af-88f0-1a146e7770e8",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c8db27-ea52-41ac-aeaa-eba6c8d5f24d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edbbc368-8988-43b4-9297-72537d007ded"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb38fdd5-762f-4840-aa7a-ebb7f1712d04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "812a6813-d18d-4748-8939-0b3d663797e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e0d2ab2-6179-4ba1-b905-be0e7eea1e78",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b52d467-3498-4b03-8018-10fc3c7cebc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1725544c-9551-4305-84d7-9617e4830e37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8a4ab3-3e72-4ebe-955b-0dde50e9b277",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73bd0b0a-e842-4815-8ca9-e7b59ac6824f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0bff613-809d-4bc8-9d43-426fa880f518",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66229057-9eaf-4c50-b18a-50f93e93318a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93a9c395-7830-451a-b49b-89eac09ab106"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff76df2f-85a0-4e55-b31e-70cdfa868a19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "490a9eff-5e57-49b9-aa6b-182ff628433d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a04feb-4e9b-47ee-a894-8630bc8f31f9",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33cf4be4-d8bb-466f-b4bb-7d248e6cc947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3de7f9bf-fd7e-4ee2-89d3-a20055d16022"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e66e1706-e9fc-4c6f-902c-3cd335fc934c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f7a06cf-ff75-4539-987c-07105b690269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "244077dc-12d8-4bd1-9e33-0da1221090f3",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c3d28de-1ff6-4b44-a36a-117d1ac55918",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf0bcef0-6a5a-4d83-93c7-4c0f6f0a4ce9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a09810e-09d2-451e-a138-4edfcb4c2ab1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "628d490e-1fd1-4a6f-8f1a-44a4f92ff83b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4194c759-3b92-451e-9282-c3f902568e29",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7854a11f-290f-4352-b445-ede6b2a11610",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "825314eb-0a3d-40ca-bb08-bcb8d38b0063"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e88d3945-181c-408b-a4a5-640ad3db78c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b310af56-2077-4bad-99f9-31dbe0727e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4876f231-496b-49bc-a7d3-3b34252a8ebe",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a90908-de1a-47b4-8526-4d292e3b59b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cf5529b-2371-45fd-a1ba-b51d5d873b5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "251450bc-0e58-4613-9e60-909de4312819",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17c4b6a4-1319-4084-8f0f-2f8d9812abcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48a4bb1a-a474-47aa-914e-e35380731933",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e61d92-5943-4779-afa2-5c3de9809dc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fd2ddfd-cc76-4b49-9a24-002bbe64f61f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77e2a1ea-8f49-435f-811d-ef2e7ef26175",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "951f9e75-60a2-4edc-a204-2f31784bdce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "190ada1f-c0bc-4e3f-b14d-109c56c7801e",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e44a1ee1-a263-4f0f-87cf-a7cd1c7b1e76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f238f95f-9585-487c-9d6d-cf44467d8e72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1612f949-a13a-40a4-ab37-1f62224ad57d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6278309f-86fe-497d-9499-bb09a9bce377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb32e622-335c-42bb-b826-6cf35bb3af6d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f2e1c2-a966-451e-ba91-0484e0a572c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68d3b2b1-c916-450a-9a95-3a1bad20c98e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee4352a-690b-42be-b2bf-512237c7e701",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "325b8eab-797c-402b-8bad-075d702b3302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc3f10d-ab2f-4527-bc46-a4707f495a4f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b40c3b87-1cca-4a68-bfd9-e13eaa4936e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f920454-6104-4907-a515-5f280073fd63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3595ecbf-b10b-41e2-9b2c-e6f46b5db34e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "768046d1-e6a3-4d66-8cac-cd52ba129556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a5eda1f-1cc4-4c0b-a081-affc7ade8bd0",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "687484cc-ef6d-48b2-9f00-f5a81dd0ed76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fb2834d-dcfa-4fc5-b360-4dbe07ef307a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eec4341-654f-476e-aa9b-ddbce5842911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2979a69b-ba91-4ebf-ac8a-ad18857de38b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cbb3e88-073c-4033-996b-3b7ba193d02a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f26ff3b-fa39-4816-921d-95dcda426d19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0dad96fa-3114-40f7-b226-70be7c7c933f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c33f446-f2d3-43cd-95f5-83ab37335cc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98d494ed-12af-41d9-9fa4-028ea6162034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c62a15-e5f6-4024-9065-7aaf9edcc51a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7483a19e-8dcc-4c10-97ea-a9febc1ef13d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21cb62ec-6f11-4edc-9d0b-c6d964c538a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e1fea3-edd0-46ae-b516-21b1c39bdbb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "823675a4-3e39-4d48-8922-330b66c0dc3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb086a4-f177-4d9e-8d88-dfe283f88fa9",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8137f929-f943-47d6-9431-66b032ae8a1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "191a74e4-9726-4a52-bdea-9983be460834"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d98acd1-7d7e-40ad-982c-a2b29c3adc60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11d2c691-7ab0-4536-a79a-8f799b060e4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce18226-e432-4620-9bc7-a14d44592323",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc483cc3-4f11-48a9-af7c-b8755dfb5494",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb107f5a-000b-432c-ac01-06dac10158d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d34afd83-78c9-40be-be0c-6430f36ac187",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "332da734-3b0d-4713-a896-bbab5e6729dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a39c2cea-5fc7-4c71-ac2e-79872fcbd6c3",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad06a3d-35c6-45f6-91f4-77a84baf9685",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd799c8f-37a9-4559-bb9b-336fd5e0708f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd698399-62a8-49a7-a3c0-b3bc445fa22a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abd7fa90-28ee-4561-be3a-64cc310de46b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bceae741-f8d5-4f16-94f9-046b74a75111",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "800c05c4-bf24-436a-9abc-9f85b585ab32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8bdb7a4-8e52-4f4d-a467-dac83a726c31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ec64e3-6445-49da-b113-352ae1a1bd3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aa0fe73-0748-4878-94a0-fb9583a12aa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a504d0b-b4fe-4b47-9f70-bfb48989f4c5",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b448bfa-7f1b-4c37-a0fd-88f7ea06d9d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0baf813f-03bb-4488-bc21-1422d5adf42b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8007cba-05fd-46b1-b136-1249a5874bf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b09e58e4-4e40-46a8-93c0-1033e13a1ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271d8f3d-adac-46a9-a0e3-3592ee986890",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3abc1dc6-c536-42f5-94df-9eedad4146e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0934b735-ad6e-449e-917d-e7db9adc2694"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f82518b-a792-4499-89d2-836226c1d6d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "324911f0-5ccb-45ed-af57-bebb8da61d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "813ca0f0-ad1f-446e-b145-626f0915f9da",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ec2bdc-acf9-4a7f-aa9c-5a891dacee19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7e601c6-43f4-4d05-a873-a908bcbb7f8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0bbf8d6-ab84-4fc7-b23a-9aed848bbd7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d52433e1-5e8d-4dd6-b42f-479bec38610d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c182ce0-09d4-4e5c-9a26-b0de329ad2ef",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e02c30-546b-4a5d-b23a-27fde2ee0dcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34f97005-8c5c-4482-b4b4-2da438d1750b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd8bb92c-8961-4e88-8d90-42c7219d32de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46b07326-b8bd-4cff-9775-3287c87e99fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db4d8b9-f026-4b29-92d7-654ac1aa70fe",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e70c05-b6a4-4a66-acc6-ef47e4b05585",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cc37215-a43c-46eb-9ca6-2f912713cfb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7ee536b-e1da-46a8-8c39-cd11cba74862",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ae908f7-d16f-452c-a812-ec2d8ec3d64c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3cc1d65-2b55-4328-8afd-abe6512c1be4",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fba36ed4-b576-46c9-b309-e4fb3e96d466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4ac1e01-3fd3-4962-911a-56000b5f527c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f0963b5-7060-485d-a0db-68a85065bffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "518806c4-7449-498b-93e8-38c0f72d25f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ea2960-a804-4595-937d-4a7b7faa7db5",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75dbfde9-4d1a-4102-b861-9a2966d9a22e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "959fd50e-93a0-45fa-9d2d-ee5d21167987"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c1122b-8462-4463-8e10-062541c02f1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8946c274-e6d2-4e99-8757-e3d0792bbf4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def2d86f-2a99-4731-b6e9-030c32ef359e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c23b04e3-b76b-4b62-8c5d-d68b02da4239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64670789-2f64-461d-80f6-c72234ff314e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "582dbed6-40f2-4580-8ed1-51a737901da3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44fc526e-241f-4937-97f8-54ef5f4177b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ec2f40-d17a-4e42-a886-11bcda372fc0",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59527868-a2ee-4bb2-8e8f-1480675bd5ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dbba89d-ea75-4ae7-a976-a8463ae3306b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86a5304c-6b7c-463e-98b9-2b941d743e75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8ad4a26-e81d-4800-a6f6-daff2d4e20e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e94704-9a5b-4e97-8d01-8787c78d1ae0",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe81ddd-c0bd-4461-ac0e-d36694dd534e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "306c939d-a995-491c-84c7-bc5aa1b90315"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aeb67c1-3b20-4efe-941a-153999310c1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e29f4676-4f07-4f57-ba5c-1a14ed178c3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc9f99a9-5cb9-4215-a9e5-4d0b6f416ed9",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e19633-f984-409e-a045-5899ee11d51a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12d1be81-ba86-464e-95ac-feb4c72da1e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b551395-6ebe-4477-a6e4-9682badbb224",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0658d211-1739-48d4-9b5f-bb917e20bcf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7429199f-7dfc-401d-9cf8-3f2f43f5920e",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5808abc8-b21e-4279-af3a-db7639ca6414",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f5585bd-0980-4e21-97d9-cd24e0099308"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f26f3a38-36e4-42e4-9428-89011ce2322b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "083bdbe1-bc37-4a59-99d3-2b9587b2e0df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50da9209-51bd-44d3-bb35-694d04481823",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "806e2c02-bac5-4079-978b-2ad2cf96dc13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb89f81e-ab43-4c4b-a1fd-46fafaa644eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be6cba6-e4fa-497f-a0cd-38b1a1713e98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bae2f6c5-3652-474e-98c7-d70fef4461e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ae577e-1fb2-4b47-9cfe-6e85629d6542",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29be46c6-e1f3-43af-ad27-526b17587d9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "855bb352-686f-4e84-a963-2f6c1c3ef7be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40128501-1a22-47b4-b254-4af4232b1e6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8033134-2ba0-4097-b4aa-17766c6b942b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c789ed-02f2-462d-a708-83920cfc7d37",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "891b53ae-14c7-49cb-bf4e-d6779cc4de16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eeee653-d254-4b0f-8b63-50778151d99f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e1d748-cc94-48a2-b722-3eb15c766110",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "649595df-53ca-4d91-95c3-ffa495fe1cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "549d4b76-fda9-49ed-afcf-26a639b26f60",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d97c542a-4a52-4bde-982f-454b9868ef48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a22ce09-0d09-4296-bc68-5de393fa46cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d6511ac-bc92-4ca5-bc53-42b593b3df82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7705efe-9344-46a9-9816-4781f9119cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b3ed71-7cae-439f-83e4-7249396cff60",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b34ea3-e01b-4246-958d-64d994abe61d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "755dd5fe-0840-4280-9953-4c6b484339ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c5f218-28e8-4bbc-a597-a433b4b7ba94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3bb7c05-1750-4d9d-ab8a-ca172d9f33d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a0090ce-eaec-4789-b20f-e6d3d5c0cc75",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0438df67-458f-4590-8c6e-b28c5d824d34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a245dbd3-e127-47e2-88ce-b5a5a620d65b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db90635b-ca85-4aa7-b6cc-0e871e66d2ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5993a9e2-5cf9-4da0-be36-9b8dcda51d93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08426650-1dec-46c1-87cd-db0074c632cf",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b52e8b6-fb74-4974-b148-10fec79aee5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00073734-f10d-48af-ba35-f1ba594b823a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cbcdeb0-9dc4-45e0-a5dd-6b47928ac0f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09017783-bf8b-4dd7-8cf7-caf879c2b7ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d07a0756-c92f-47a3-b7d8-4ef4619e186f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f85c89-d313-476e-83b0-c74f2127bbba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8f81e4a-60fd-412a-b3ec-34bf56fb0f62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45281982-4499-4bf2-aefc-196e39a26ec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "366e3f95-2312-479c-b30d-d79d76b1b4b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd051da2-36ad-4e2c-a4fb-e79011110191",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc2e294-2069-4df1-a191-2076c8966fcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba672194-725a-4a96-b933-8a59d5d6ff7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50174704-f3a2-4eb5-adf0-702fcc2b6b48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b6f9bbc-8c66-423d-8110-918d724901b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67009647-4b72-4ebf-9ad4-0ae38d7c1793",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f668395-16cd-4cb7-be7e-6dcb39a766af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8109e22-6263-4e8f-9c54-f244db67797c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e67a33-5c9b-4616-8025-530218648291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "523436df-4576-431c-8a07-902f66d48d36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a1f88a4-9af5-4f2a-919a-7f88335dfcc9",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42bf5b69-a349-418d-86f7-d305d9bb1911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0db7d2f9-a5a3-484c-9aaa-feff6df6d2d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d697a948-ff88-416f-bbee-3ce531c1d817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04dfde06-8415-4d37-bb67-461fb53b53d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6182d8c5-b287-4d1b-8f5f-070441085b84",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f517173f-8732-44ed-ab8f-b6660c45fc86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b272168-6744-41ae-8b9d-6b162f2070e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ffcb5b7-7c7a-42cb-a8d3-2bc3526da834",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cf7ab43-dfc8-4319-9cb1-fc2e65034b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6009d518-82b9-4781-ac63-c1d5eff0c80a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e482645-db58-44de-8f74-f9528f595a73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93726eb6-94fb-4cfd-9c20-c1aa058da58a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f5ca2ca-ac25-45e5-8d55-b97a385d303e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a013dfd3-3e06-4601-bbea-de93d5b0039f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c79825-e706-45c6-adf8-f2da6b053766",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f78c27c-3433-4426-ba42-0c8cc420d5ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0300f1bb-64f0-4b18-9769-4b267091143a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c0d0bb8-b2e1-4510-b2b1-99ec8a7af131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11b9a1df-115c-49a1-add2-186a14744733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1fcea7d-a467-411c-af4b-4580e3142541",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdf83b00-c8cf-4f6c-b41f-04ade85b70ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47408250-ea10-4cbb-80ba-8005d930110f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e14663-a9a4-4cf4-93a7-281ea9dea233",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5b06437-9291-479c-91d1-7296b9c62526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "913f3db8-48de-442b-9841-cc6e5f675858",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "160c9af4-45f7-4a35-9b51-013ed8937a71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "754745dd-90ce-4524-9b72-86067085fd69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e9aeec-fcd5-4f56-9d14-388a63499cfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2493f1e0-1732-42b4-8c37-36004021b3fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fdce46b-ba6e-4968-b326-fbd13c6c1882",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f309ee-149b-42c1-966a-459b007707c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9df19aab-74b6-4146-806e-86b7f034ea01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd7f07b-afe8-421c-a287-10bb5aa74842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b466b174-69bc-41dc-b5c5-95d909da8690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d635766f-617c-482a-8931-f70eeac48056",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb0b3b5-1c44-40bb-bf10-588fcdd96e89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d52529f-acea-4b0c-b911-b06a9f4ef75b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac3b303-9a44-40f5-b306-d1509866cc4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba584480-3a57-4956-a673-65639b784e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc71cae9-8f14-4874-b0c2-59edce9ba064",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d29586cc-9bf6-412d-bc55-ad90ff7fb88a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77d2d3d1-5f99-4274-a782-6f79b1eb652d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db1b51a-92f5-475b-baf7-083b069a0da9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2de30677-b60f-4d3c-a3a2-2c89d0ca0be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff8a214-8a25-42da-9785-8a4a6b694a89",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b02224d-061e-47f2-86ee-d6e1463e18c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94be1e46-5a3c-40bd-98b0-d3789a2da0e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59fabd06-1ba6-4958-a5c7-3fff112e70f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd8aaf9f-7e12-4c6e-8152-c4dd57a724b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1d074ee-bfdf-416c-bad9-4bbdde00ac2c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4049e4f3-9ad9-4c31-972c-c95e00c91b20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2137b8fb-b036-45fd-abcd-855c6f2b25e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40737cb6-8cbb-4067-b3a8-63700f89f18a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "642d034d-1770-4ab8-8de3-f2cf83c834ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4951fb24-2ca3-4772-9987-1ec1cba064e0",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b4713b-01c8-4553-8899-cc27295d8a8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d18aa2ad-f524-4c68-8632-f424263075cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44ee0968-2721-40fa-ad92-5087e254c4f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55014d71-5885-402a-8d7c-c12641a90b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a007a1-9d30-49c2-a969-c83c587e47af",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd208eb-1a23-4642-a9b6-ebc46045deb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67d69fe2-77aa-4fe5-8784-5ff828981bb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b385a2-6de5-4d14-ab4e-05020ce00f47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f344aa63-7b42-4926-89ad-67d3f5114884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c62ca7-554f-4c9e-bee6-32e29dae6387",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "298146d7-72f3-42a2-b604-d5aad1de20ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4524fd7b-a7e0-4593-abd8-6aeccaedc740"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61940ac1-7565-4244-8b17-79676ce338c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11f92dac-c3ed-4e95-9edc-9135d81afda0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a381ad5b-ac98-4210-924a-941cbcf51c7a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e14b4dc-20e1-4317-b304-305c29da23dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b28067ef-f4a4-466e-82e8-893de9d7dee1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60fa4ab0-51ef-49d7-9537-54f3dadee5a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d05c9d91-6b90-403a-8e12-7568965df1ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0614bd33-dafc-4251-8956-dbed9194847b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47343b96-2c06-480a-a607-303103b4318b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25756423-0acd-4017-8544-64007f11f627"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd943ad6-7ea7-4fc5-a616-7c13e7221450",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d5de4fc-1303-47a7-af06-87b0ee38e116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44988c4a-3fd2-43aa-af1c-65984ddfc601",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "920cb7f1-52fa-424e-8abe-e9adacd814a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37b04070-c464-4104-8246-4e38a5cba322"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65fefc80-2046-4373-a497-352b49305855",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76f88f2d-11d9-4f08-a603-aa90842b3322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed90dc53-1c9e-4351-a09a-065d29e36183",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaee1cfd-e87b-4f80-bbf7-2a868b2bbef8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b661069d-4a1a-4842-97d1-e9ec47367ce7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1ae2b5a-71ae-40bd-9d54-e3aebd530231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02e7a014-51a2-4ec6-b69e-47fe1721349d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "729a3b5f-872c-4ae3-af62-5cc4bf3b5577",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55b356f3-8b39-4ead-a232-5b815560e0ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb20289f-1ae7-48ad-9e13-b667256c3432"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a5be25e-abb8-4a3d-a7e9-670ccd0e22ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecbea3ef-5bbd-488b-9e47-94b0a7b1be48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "359e0807-1770-4b88-9e7d-c6ef876cb5e2",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1471d43-2d97-4d67-949d-d5a31b5bc668",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d58584b8-5e89-460d-b909-f59901e9bd16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cafcc59e-c1d7-4d43-84b6-fdd94faad5fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "663636e3-676b-45a3-bb00-7d352eb0d8bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eddc4f64-fbd6-4775-aff0-c81c620f2426",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "738b15ae-3feb-46b2-bb83-71dceada2807",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de73fe4d-2631-4a08-a9b0-fc197ea513a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd9cb96-d0c4-49a7-be15-206d9f4589ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "102362fd-818a-454a-b78a-1329843ce224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e23b29-11bf-407b-860e-b2f40d5b07fb",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd449b9-35c6-4193-b937-d334a98415cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b06d1895-d564-4a75-9fc7-c819008b49a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4492fdab-e7d3-4350-a029-55732844918b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a739429-db7c-47e1-b3f5-656eabcf9191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1787104e-013e-43ab-919e-858fb6056ef0",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a2a23b-3beb-43b5-a11d-275184a59844",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87a8c64e-6b8e-47ad-a8a8-80ec19d64140"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f79f1b2-1b0b-483f-b0f3-76632cffaa83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cf0c6b4-c8ec-4ecc-835b-faf026258167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0be557a-080a-4776-8952-2943bf187512",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09a3a180-d649-4244-9285-9f90b205e048",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9f421cf-f860-456a-9052-e13f9174b682"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c3fc65f-a552-4137-92be-21c6af09f864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c751d82-2d2c-4642-9ec8-b84d7c65db97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "697a26ab-7d64-405b-9747-08a5977fa7b1",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83156ef1-317d-488c-95ca-f4fb07be6383",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ca065d3-83a7-498c-9bcb-4a52149a5b03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed20b407-6531-4929-9e75-aa6121c7fd87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a21e3779-4102-40d7-a646-ec92604f06f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "863eb74b-ed2c-4d5c-92a3-5d9d29a1d088",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ceb04c-3bea-49b2-80ff-e2f85fb3ec59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cec3f6b-d52c-481c-b6af-3f9d0999cac5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a44d9b59-51b7-439a-a314-7a963e02df0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc878cd7-01c7-498b-89b6-c362ce6149a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2479dde-2533-4700-a3e1-6899294c7212",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e1639a-d53c-4bac-b8d5-8990dd685c32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ab5d80d-2f60-42a5-ae85-041e68bf70a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a96be5-bf36-4bd5-9dca-37c3f3c4fa67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "425bcc61-5e48-4666-8cc2-c2cabb0c31ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1ff276c-9cc3-4b3b-b9e5-af9c4cc858e4",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c17abb63-c21a-4373-b7c0-223eb8278fea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60f96b0b-db35-452e-9201-d36d719d3f9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aec16020-b367-44c9-9b72-ac0d6b8d359b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81e97011-858a-4e61-81df-67f088ff4064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f083bea-0328-492b-909c-e9d795e39ad1",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f64f271-9268-4b6c-b3b9-48e14fc68565",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "169fbc17-5cd8-49b4-9a42-dce4534f834f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d0eebb-e1e2-4f6b-a268-d0a294dfa4c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c50f9eb-2eb0-4b84-a478-02f574eb58b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aabe0378-e69b-42ca-ae40-eec4a77f9d20",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da0e066b-da5e-44b0-9f05-9c4aa4d0b7af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1973181d-84dc-4fe7-9d2d-c8ab6405e7ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbf79e0d-855e-4548-8139-f86cbbb75698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50bfd6a1-4ce6-4e4a-b6a4-b6bba59c0a06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c221b8fd-f8dc-4548-8354-09d6e6f54a6e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c12c7c-edc9-40ed-9e46-d1713aefd95a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00c20bb1-4ae5-4232-b49e-4d6debd9544f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1059135-8369-4efc-a744-94b70b2e4c92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7afecbea-c718-4ee5-a63b-187f4020bd03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee44b20-e2aa-4809-894c-9ff1e90d3415",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cdd175e-7a5d-40df-a3f9-47d6e4463927",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea6caed8-4b20-46cf-b5d9-ca4af6f9f15b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e1b2121-cf5a-497b-8b69-738c34cad4b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63d80e37-fbcc-4924-85ec-1a9c8d6603be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d60d894d-7816-4e72-b80e-2197ddbe347f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8bd9953-4abb-40e9-8ed0-d9472df388d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b8cd616-c567-4654-94d3-55b2f20411f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "794c1de4-7afc-42ff-8c65-fa62f6e370cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "368b7a11-fb54-42de-807a-4c2eb9e4c9ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cbcc683-5af3-45fe-b043-06e68350b39c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dd161e3-e62a-4d1d-b1a3-075539796eea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "686ba2e9-7db9-458e-b85d-af808d47607a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e7ebbe-1200-4854-ab4c-bde073a191ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32faad87-f4d1-4ded-9c0a-995285f339e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3571b586-e3a3-417b-b14f-feb9fe09f03c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26669057-8c3b-4d92-b628-70f280a03a40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40fc7502-a24c-4b9a-85c3-610234732df4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca69caa2-b9c9-4d64-9870-bc305c39ba37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca7ee250-befc-478b-91f3-991cc25fbf3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9396dfa-6d16-493e-b9d0-88606e22a092",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e99709c1-8330-40c3-b3ec-7444758c6c3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "651edc7f-9048-487b-901d-966a48f0d744"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5db6ef1-d105-4b85-bfdb-9f5dc919178a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2f27501-78a2-442b-bd4c-e53fe2e40595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a2d4bc-e25c-4799-a9d8-edf74b09c356",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "432a8f7e-9f8c-4d35-8d9d-05aa9e60e186",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6171bce2-51f2-4fb5-9ea6-94cad82ecdcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "272d86c3-d1c9-4af5-8ff7-fc6f8e256e5f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65a14f05-51ce-491c-8b33-003d78ca0904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f80dc794-284b-43ab-a9b0-a341589d894b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce93a3df-c7ef-4ead-868b-8aa0361fc598",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f8c0a40-fa03-4756-94dc-7f0f06a7d996"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a12170b3-f3e5-4bb3-b9a0-a41402d82c47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5dc9749-e934-4aeb-bc8d-608151aa94f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c624b7c6-804a-4eb0-b129-f7e927efa3fb",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c03b3934-49cd-42a9-8183-3377e82c61d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2fa89fb-3d92-4d8c-ac75-0c081b6a1524"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b411ff-b4da-4d45-a32e-88d374df19d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15ad5916-48cb-47b5-aab7-b2639cc0043a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd8bcd5-fb6c-4b47-9b48-211d52b79ca9",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "962a1b71-bc8c-4561-9831-2005825d265e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ed779cf-a751-42a9-ad6a-70df0f5bc2a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7359a606-97a8-4440-a37e-2f3640b21197",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65e5b71a-fc90-45b1-8163-976a2f06def1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c61263-f0f1-42e0-84a7-00e6d4af675f",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2549dc52-912b-453f-99a6-14948b4da229",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99a10e88-00c4-4784-9992-49921d7fe10c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f137b60-7ef3-4835-abdd-066dc8560059",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b369e2e7-8508-4c04-a980-920665a549bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e265f2-969f-4237-afc4-5c01a5c98e5a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f6a6166-f7c6-4fce-aca8-cae28bae5198",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85114792-99be-49e9-b534-3e9752fa989e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fc20789-e51c-4436-8b6d-d44e27b45ae9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c31f231-8e73-4d23-acaf-41ce761f6e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9617a823-c6a1-4708-b179-94fe618fd229",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0281eb32-0c1d-4547-b25d-3f5c0757161a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25c4be37-1b8f-4388-8a6c-b9a6fbd6cab2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a41d2bf-29e5-4aaa-8184-8b9d7e418db8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d07f94af-fa24-4b39-92e9-245e6fff7977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6304a41-2c54-42a9-b5ad-da8716925a98",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "850eb8ff-907d-436f-ba58-e7aa292aa505",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "109b1889-d1a6-4e58-84ba-6916d386b4fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68705bda-4c90-4f35-b548-aaada22012e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abdccf6b-7596-414e-b771-300fe8048834"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7e4fe4c-c54c-4761-94cb-d64b389d9dde",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9e2bd2c-ce47-409a-93f7-71f97bcb8636"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e72ada8-9ef3-4997-988d-7bdc1ba353e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2e704b14-ea1f-47f2-a82c-4965bb61c7a6"
                    }
                  }
                ]
              },
              {
                "id": "d3192d83-e10c-448b-80b8-af274d2b0741",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bd0412b6-cf56-4ba8-8bd0-6198b77549d5",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e1322e-6240-4380-a1b8-c6ae7e084936",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7adc020f-16ae-46e4-b229-3c028dba84f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7b397d1-0365-4830-b807-24ffbf8451d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "913d4d71-9e5f-4dc0-a3fc-e015daa2d0d2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08fbb61c-c142-49de-b041-a0c847582637",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4450630f-3a79-47a4-a778-231cc4fc418c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4bdfd4c-de47-40f3-887a-dd55fd94f748",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f3b8c45-dfb4-41df-b041-819b79b5a4ce"
                    }
                  }
                ]
              },
              {
                "id": "4adf2a28-127c-45e4-ad88-60b213ea4cae",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "87b06467-d7de-42eb-8264-6c8b5bf72a91",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d0f485e-179a-427b-a4ad-bde0fa6ffc77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "06c6c11e-bc3a-4076-b0b4-8ff7cb1e30b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d384afca-f5e6-44fd-80a4-82facb34560e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebe878c9-f3d1-435a-9924-f47a55689886"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7cb411b1-280d-49b0-85a4-c7dc2313239a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b6d9a8fd-f1c7-4c3a-b67f-b80669efc173",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f162a75b-7b31-4b26-8ca5-65cb1cc9b130",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "33e9c9f7-2d5e-4fa1-92d7-344d81b553b0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "158a58f4-c175-4d85-be51-af723b6afee1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "01c68716-128b-4c47-9f05-65c6575af33c"
                    }
                  }
                ]
              },
              {
                "id": "8202e436-f2fd-493a-b479-22319c1f0951",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b90d9483-1ac4-4f52-8b4b-6425d3eab474",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fa02e67e-e108-4374-b66b-cd2320f93838"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "36487be6-930c-4da7-8409-d3de96d9138e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "648db94d-91e6-4059-9c4e-99a7e57761d5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "90ca00d7-becc-496a-b402-cd69b9133912",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b8e92f24-d8c1-40d2-a2fa-100f631d8e78"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1ad8a23a-dbe7-475a-aedb-912552492487",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0f168807-6220-4f89-9be9-555134711582"
            }
          }
        ]
      },
      {
        "id": "314a2965-81a5-42f5-9aa6-6b773a5a33e2",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "dda82065-5ea2-4ab8-bd9a-357f76a4607b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "048c50e0-09e3-4bd2-84c3-a420ab10fa96",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c7b4635f-823d-4395-9971-06e731f0da61",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ffd9a2-fcdb-4862-82b3-4b4c13193220",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e8127ffd-75f5-4e02-b99b-130e1aae16c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d38c51-7aa5-4194-b744-7fa5d9011401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0a57c7b5-8241-49ed-a2c3-c7cbeca3301d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e71b4ed-8714-4d57-87a1-26ec839c52ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "416609f5-a18f-440d-afcc-1abd70d27cc5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "71bd0485-95fa-414c-aaad-86a66691e4b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "215146d0-e6ba-4197-bfc2-a68659de2d46"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0ce05a6b-a3dc-415a-ac94-27f0a93e98e3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ce6f544e-0422-48be-83b0-c821da455026"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6847165a-b515-4503-bf10-4c63710e0529",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ae5d9437-55d6-406c-a11a-abbd484e5fd3"
            }
          }
        ]
      },
      {
        "id": "1a5a33aa-5699-4445-9874-41816bbd13a8",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b190fef2-126e-48af-80fb-2868a06cf1be",
            "name": "Negative Testing",
            "item": [
              {
                "id": "354f5027-0d47-4ebe-a801-2651dbb19af7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ca7a26a7-eb0f-4945-8f44-f7e20c37d731",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45834bd1-4f3c-40c0-b920-4e3ae24e2b98",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8232062e-1e1a-4333-a140-b62b007a017e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38fbd028-a9c3-4761-81c4-3eb974566394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "46932f56-4e42-410f-86ba-c074de0642c1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92a28ae8-53e6-4a86-b002-1b69e0cf9688",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "77ed87b4-3334-402d-80fc-0554d1bd7d34"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "15d11a92-f2a5-4ba8-a9f3-fc941574c15a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "21222049-b3b7-49ab-bad1-8e66c58db064"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cfed5f71-7a24-4ab9-90b2-342ddb465a97",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2f83139e-3f93-4267-9ade-1db576891810"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3a3de787-a194-4692-b905-4f7e8997c894",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b393f958-4afe-41e4-87ca-9f70f330b2e9"
            }
          }
        ]
      },
      {
        "id": "686c43a3-23d7-407e-bd70-ff4799747517",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0d75aa6b-0108-4eef-8ad5-741283585664",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e9297abf-3656-47f0-a8e8-44120e9e6103",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "78e781a3-5245-4846-81b0-bb6ecc1ca24e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a7229f-536b-4d71-9392-57443bba563e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50b35060-3200-45f6-9951-de356bb75f3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "008790f6-b3a2-45ff-85ed-23b9c5d4ea9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e1233330-e385-4859-8b4c-83985d198ebf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a098a92-7162-459e-83ba-d39ed185ccba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d24b581f-ea33-4a4c-ab6f-a42ad4452a77"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5bf75667-3fef-4386-9336-15c904cfc641",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "07adcd73-cfa2-4b32-8306-1c28b4354221"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ad3a19e3-6cf5-4695-938a-94f8df5f4afd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ec928e29-1a9f-4373-b3cc-2a2b5e3b7358"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "269d9228-4499-4207-8a55-599ef4c3100d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d5353878-fdbd-4f93-8e88-761a2013f51f"
            }
          }
        ]
      },
      {
        "id": "a1421dc2-70c7-4ac5-bbc5-85c1e8eda05f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "de03ca86-76b5-48ce-8f9d-e83f31814870",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4f15cbfe-d6f3-4dec-8d99-7bab916357a7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "0d444dab-73d0-450c-b379-ac638bc22028",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "51398d79-08b6-4f3e-a471-944d5edca259",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ba4d397a-0e38-4490-875b-2682ed5673c9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 8.480158730158724,
      "responseMin": 2,
      "responseMax": 942,
      "responseSd": 61.33038621263268,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1727484288122,
      "completed": 1727484298343
    },
    "executions": [
      {
        "id": "52b81638-7c15-40fc-a653-398aa2364417",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8b44b6e9-1678-4e27-a155-3007326cca18",
          "httpRequestId": "0e0893a5-d6a0-4102-949b-46b3824e2a5f"
        },
        "item": {
          "id": "52b81638-7c15-40fc-a653-398aa2364417",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "9a54c51a-6295-4273-b14c-4f1d14d19f65",
          "status": "OK",
          "code": 200,
          "responseTime": 75,
          "responseSize": 0
        }
      },
      {
        "id": "277a9695-cb75-46e8-90c5-30d0385015ec",
        "cursor": {
          "ref": "ce5ff079-519e-40d8-9530-5f7d2940c6bc",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "caefe87c-8a5f-47c2-8fe2-c727762841db"
        },
        "item": {
          "id": "277a9695-cb75-46e8-90c5-30d0385015ec",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "8355fea4-4b27-4ef5-9378-1a42f94273e7",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "6fd3eb99-6eb5-4eb0-a569-4da146ece793",
        "cursor": {
          "ref": "51665af6-4dce-461a-afc4-425a7225ad93",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "eb4ec1dd-cf5d-4179-9e10-85a2751801c5"
        },
        "item": {
          "id": "6fd3eb99-6eb5-4eb0-a569-4da146ece793",
          "name": "did_json"
        },
        "response": {
          "id": "3d53595d-60d0-415a-9631-39810194f424",
          "status": "OK",
          "code": 200,
          "responseTime": 209,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e94f94-0b90-45de-a84d-341a938c7fee",
        "cursor": {
          "ref": "75baa536-7668-4c62-afc8-202bbd3f75de",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7010f2ed-e0c7-4e8f-9d7e-1910f128dc7d"
        },
        "item": {
          "id": "02e94f94-0b90-45de-a84d-341a938c7fee",
          "name": "did:invalid"
        },
        "response": {
          "id": "ed6d877b-3ffb-4f98-9bdd-225c976ce53c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e94f94-0b90-45de-a84d-341a938c7fee",
        "cursor": {
          "ref": "75baa536-7668-4c62-afc8-202bbd3f75de",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7010f2ed-e0c7-4e8f-9d7e-1910f128dc7d"
        },
        "item": {
          "id": "02e94f94-0b90-45de-a84d-341a938c7fee",
          "name": "did:invalid"
        },
        "response": {
          "id": "ed6d877b-3ffb-4f98-9bdd-225c976ce53c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e0e2d2-b5d5-460f-82f2-fac299edf7ea",
        "cursor": {
          "ref": "2347ffd8-63e6-4daf-9b0d-300a6cfa9e9a",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "115fdbfa-d89f-44dd-9cff-a2e116ab04c0"
        },
        "item": {
          "id": "f3e0e2d2-b5d5-460f-82f2-fac299edf7ea",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "296ab408-33b0-48fa-b2a3-b6a33457aa79",
          "status": "Not Found",
          "code": 404,
          "responseTime": 59,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee62717-7184-460b-bd2f-7b653340a31e",
        "cursor": {
          "ref": "5f9aeb65-1441-4132-8973-fb0b17dd2138",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e1487798-e740-4d91-b1be-a2de3df774cf"
        },
        "item": {
          "id": "3ee62717-7184-460b-bd2f-7b653340a31e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c76c7341-8006-42cd-b822-754e39e30158",
          "status": "Not Found",
          "code": 404,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "984849d4-8a84-4db6-832a-e61b47d22234",
        "cursor": {
          "ref": "3c6832b1-60b9-4e5a-b856-9e5495d4f1a2",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "24d234bc-8c3a-4e6b-b682-40896e8a855f"
        },
        "item": {
          "id": "984849d4-8a84-4db6-832a-e61b47d22234",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "2907925b-f03e-4f38-b49f-b51cc945ae8d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97fb4ab0-20d2-465b-8497-fc7922807f98",
        "cursor": {
          "ref": "7a5f8135-4d24-4de7-98d4-1df4a507b843",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "62e56537-515a-4bff-b84d-2cc95c34dec9"
        },
        "item": {
          "id": "97fb4ab0-20d2-465b-8497-fc7922807f98",
          "name": "identifiers"
        },
        "response": {
          "id": "1cf83cde-5e02-4afa-8025-3095525fc4fd",
          "status": "OK",
          "code": 200,
          "responseTime": 153,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "598d8c1a-75b1-4583-8e4c-bbad60598f97",
        "cursor": {
          "ref": "2af79ea6-0907-461f-aa84-d1cba3495898",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2d7019ba-6c67-406d-beed-4fa61c9dca57"
        },
        "item": {
          "id": "598d8c1a-75b1-4583-8e4c-bbad60598f97",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9a23759f-35a3-43b7-83fb-06969f594cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b258fd-0897-4660-8f81-94d93eff8b72",
        "cursor": {
          "ref": "f920bfdd-abf2-4278-9daa-78f08e3a6f99",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "73a47f63-4bb3-43cb-9f2b-74f25b28b189"
        },
        "item": {
          "id": "45b258fd-0897-4660-8f81-94d93eff8b72",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "15d20773-d3bd-4cb1-aacf-f4ff4446a892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "facc4b83-e54d-4c14-858e-5b4b4f61d251",
        "cursor": {
          "ref": "d658376a-b950-416e-be26-2ede3b5b4b11",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "24314e69-be2f-4a53-9af7-148477b1900a"
        },
        "item": {
          "id": "facc4b83-e54d-4c14-858e-5b4b4f61d251",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "07a88ea6-7d6e-4524-9727-1006c94efb10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c18c2ca7-f728-4434-b203-60863afb574d",
        "cursor": {
          "ref": "9c6d0a71-2ea7-4af0-880d-9804a4cc2048",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "df8eba80-bffd-485b-8745-617d9205b409"
        },
        "item": {
          "id": "c18c2ca7-f728-4434-b203-60863afb574d",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7e53c2a3-fe01-4764-8d85-e04bafd164e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3d9e7d4-8f46-4400-8911-95124a09b2aa",
        "cursor": {
          "ref": "beb7a896-b31b-4670-b606-4767e1543b16",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "a14d112f-43ff-4495-806a-27e4112f4044"
        },
        "item": {
          "id": "e3d9e7d4-8f46-4400-8911-95124a09b2aa",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "e0ed4e92-f74a-4f49-84a4-86f07ce4e3ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39716290-8d1a-49fb-8cc1-3b18b393da9c",
        "cursor": {
          "ref": "64da2187-a5e5-4b43-ac75-1583b4dbbbc0",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ca1ca11f-b41e-4b43-bc9d-b454fa8da1ae"
        },
        "item": {
          "id": "39716290-8d1a-49fb-8cc1-3b18b393da9c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "3af944e7-7386-4f68-bcac-70147443220a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb070e15-adc5-45e0-8147-4c68fbb7849c",
        "cursor": {
          "ref": "4791dfb8-c739-4d67-b6bf-d625e8916713",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "beb4a589-d745-49a3-bf45-9337e64a0220"
        },
        "item": {
          "id": "fb070e15-adc5-45e0-8147-4c68fbb7849c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "5b8c71d9-75be-41ee-a92e-e866918e1095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8032762c-66d0-44a6-966a-03617ba9eafc",
        "cursor": {
          "ref": "3a41d48a-6db3-42d7-8521-714b4515f465",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2bec21bf-cdcb-4e93-bc8a-08fac518e0d2"
        },
        "item": {
          "id": "8032762c-66d0-44a6-966a-03617ba9eafc",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "252a9755-5ba3-42f6-881f-47b8e2bb373f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be644db8-e1de-4d00-b1c8-09746b38e745",
        "cursor": {
          "ref": "c3fa3a44-d854-4e4d-854b-df789fefe1f9",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "72de4325-d19e-4b4a-9fb2-e659db5fa18c"
        },
        "item": {
          "id": "be644db8-e1de-4d00-b1c8-09746b38e745",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "2a15e682-59bd-4f1e-ae25-3f93dba87761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc93112-a458-4a65-b212-b1fb0460f7dc",
        "cursor": {
          "ref": "20d62105-c37c-4f7c-9c7c-05fba0c820d4",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "70d9db32-1952-4ef2-8e5e-d6988b2df845"
        },
        "item": {
          "id": "edc93112-a458-4a65-b212-b1fb0460f7dc",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "b925c6d1-ebc3-49c6-ad34-64d078319b80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ac0bb7-2ed1-42cd-85c1-84a7c38c4960",
        "cursor": {
          "ref": "bfcdc362-701a-4890-97f3-368a5132d027",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3c3b8910-45ff-4cb5-a1d5-197508ae6b6d"
        },
        "item": {
          "id": "07ac0bb7-2ed1-42cd-85c1-84a7c38c4960",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "f4cbf452-5832-4d3f-938d-b556fd206ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "317e2759-63c1-44d2-a1a1-afb72bb23f5b",
        "cursor": {
          "ref": "2dee9180-bec3-4158-b3f2-3ebe78151da0",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a01cd444-4145-4a21-8d96-fecf5147963f"
        },
        "item": {
          "id": "317e2759-63c1-44d2-a1a1-afb72bb23f5b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "25c29b74-9bbe-4d95-ad4e-3ab01e7baa45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adca7cb6-01d9-4988-89c3-23031a7249b7",
        "cursor": {
          "ref": "f490440b-f3ac-428a-bb9e-b4b56958dab6",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "726ff042-9731-45bb-bdc5-005c2fb4f7dd"
        },
        "item": {
          "id": "adca7cb6-01d9-4988-89c3-23031a7249b7",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e97df4b7-8cbd-4078-980d-dd0df759956a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "015b0b57-a5b2-428d-a871-98eacdc2d66e",
        "cursor": {
          "ref": "77694377-5688-4130-9427-60bb4c906c21",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "7cbaa4fb-0555-40db-92c4-662908289f59"
        },
        "item": {
          "id": "015b0b57-a5b2-428d-a871-98eacdc2d66e",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b9d76bfe-e1cf-4b10-8628-a804a0193a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08bdb34a-6621-418e-b328-71a1c6203ed7",
        "cursor": {
          "ref": "239b5d60-03fc-4719-a552-3f5e8e5c930d",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d1487ce9-1a56-4873-a70e-b3eb7ce73a76"
        },
        "item": {
          "id": "08bdb34a-6621-418e-b328-71a1c6203ed7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "be2f2a78-b859-4632-b969-182a06b6d68b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4cbc898-c961-4d27-b5a4-2f464b3d9666",
        "cursor": {
          "ref": "f9902c8d-5315-45b9-8ec4-67adece50db1",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "8e482bb1-a98e-4a04-bf95-e628ebe8e251"
        },
        "item": {
          "id": "f4cbc898-c961-4d27-b5a4-2f464b3d9666",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "88b8cf9b-4a01-49df-92c4-a87379ff75ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5409400f-0f41-49d0-be48-5ebc2262e951",
        "cursor": {
          "ref": "4b28b21a-2d60-4fc4-8500-74fe5537868d",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c4280750-1b2b-44b4-b581-ece4315f6b3d"
        },
        "item": {
          "id": "5409400f-0f41-49d0-be48-5ebc2262e951",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "42cd24e2-833c-41a8-84b5-dd9511c67e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c3e2f6f-9f3b-4b6c-a2f0-3bc65d68fe39",
        "cursor": {
          "ref": "699b7d40-78d0-4985-9f0b-ea408d710fe4",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "ff59e275-c6ca-4c91-8384-2c83ea7673ce"
        },
        "item": {
          "id": "5c3e2f6f-9f3b-4b6c-a2f0-3bc65d68fe39",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a2a7bdc9-152c-480c-b339-df271dd5f980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a453568-c16d-44a9-9be8-907080bba5f6",
        "cursor": {
          "ref": "973682b6-687b-44a0-8052-88556c7ffe4b",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "94df4c71-6a98-4f74-8e75-63958569a20f"
        },
        "item": {
          "id": "5a453568-c16d-44a9-9be8-907080bba5f6",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8277542c-dc20-46f6-adf4-35bebf249028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ab9758-c2b8-4d44-83ad-cdf821dcaf42",
        "cursor": {
          "ref": "03a54e6e-4bc7-4277-ac20-ee7687066731",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "31fa5c90-fc61-426c-ba88-ed9971395197"
        },
        "item": {
          "id": "03ab9758-c2b8-4d44-83ad-cdf821dcaf42",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "93d32ff9-bf78-4e57-95e0-ce93659f6022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0b8c2ba-84ef-40e8-b4ce-bb6744396cb2",
        "cursor": {
          "ref": "382462a9-a611-4f08-820e-95588b38d950",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "38d883f1-bff0-4b11-ae23-b9fae2c03923"
        },
        "item": {
          "id": "d0b8c2ba-84ef-40e8-b4ce-bb6744396cb2",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "490cc7de-e09f-476b-be50-02af59559950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca3c07a-d468-4988-8534-b6d0bfa2268b",
        "cursor": {
          "ref": "90197ca5-5f4c-44d3-9797-59910258c886",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "932a7e3f-efc9-4316-a747-d26cbbbb5649"
        },
        "item": {
          "id": "dca3c07a-d468-4988-8534-b6d0bfa2268b",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "25550315-7cb0-4cba-b874-0fe522d06d32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77621f9a-2d29-41ff-b2fc-bd72f4933bfe",
        "cursor": {
          "ref": "d1b63ced-9f89-4e89-9eb5-9150142c3f61",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "903c571f-491b-41ba-83be-b4056f795147"
        },
        "item": {
          "id": "77621f9a-2d29-41ff-b2fc-bd72f4933bfe",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "82da68b4-8c40-462d-a209-fe7513665a85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c130a67f-8193-49ba-a0a7-4620812bc497",
        "cursor": {
          "ref": "83e719cc-a4df-450f-b495-df0546fc0143",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "9176c888-fae5-4faf-9912-adf57ec76bda"
        },
        "item": {
          "id": "c130a67f-8193-49ba-a0a7-4620812bc497",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "1ae23225-223e-4094-81c0-22675ab1a196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bccfa22-8bb7-454b-9d4c-1bc92bc352b3",
        "cursor": {
          "ref": "095bee7a-e1ed-473f-9d21-04027b9d1ce1",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "0599bb0e-f2c2-439b-84bb-9c409265dc67"
        },
        "item": {
          "id": "9bccfa22-8bb7-454b-9d4c-1bc92bc352b3",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "4949ba30-69eb-4237-b2ec-7e2acc8a0008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "500918aa-771d-411b-a439-fce5d68600cc",
        "cursor": {
          "ref": "dd3ff147-1bea-416c-8c9b-4c7c39dd7d72",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "394e79d2-e652-47ca-853b-ce798a797187"
        },
        "item": {
          "id": "500918aa-771d-411b-a439-fce5d68600cc",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "081ccad8-e972-4413-b48f-f37e5e1e9309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec0760e-c132-4f63-bba3-73f87b9410f6",
        "cursor": {
          "ref": "f0ebb51e-2ebd-4977-9ae6-7bc6b16bedfb",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "cd4753bc-b57a-4496-b383-e713762e2c46"
        },
        "item": {
          "id": "8ec0760e-c132-4f63-bba3-73f87b9410f6",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "211c7683-6238-4c23-8dcb-0a9c4849f761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476956dd-7a59-4610-b65c-522b69bc91eb",
        "cursor": {
          "ref": "b785bf11-d82a-4095-a450-e6eb9bddd5d4",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "735a42c8-4954-460c-bc4e-9d0f22135f5e"
        },
        "item": {
          "id": "476956dd-7a59-4610-b65c-522b69bc91eb",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "99d58ae8-8f1c-4e7a-9212-3ff5f7cf8133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1109ea5f-5950-43e9-b5f7-d8ffdce1e602",
        "cursor": {
          "ref": "3f56c7b5-7a72-4f63-a1ce-11b427317e7f",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "74a8ed90-646e-4464-9f71-c05acc2bb95f"
        },
        "item": {
          "id": "1109ea5f-5950-43e9-b5f7-d8ffdce1e602",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "6fd37f8f-7b0f-49a5-ba9b-8a98b7cc5c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0233eee7-22b2-4b5d-9196-a0d03e4d683a",
        "cursor": {
          "ref": "a0bfc139-a230-4ada-8e6a-295e32d4ae4c",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "1a239118-6208-4087-8dbe-3d7f04413627"
        },
        "item": {
          "id": "0233eee7-22b2-4b5d-9196-a0d03e4d683a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "180e617a-0f24-437f-a87e-38a674281e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e934084-21da-49cb-a2d8-1d34ea47ea30",
        "cursor": {
          "ref": "3f7a2716-245f-4f75-b164-353ebccb57c8",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "91ac5f0d-cf61-405a-8a7e-262ff88448f6"
        },
        "item": {
          "id": "0e934084-21da-49cb-a2d8-1d34ea47ea30",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b2926d4c-f816-4fbb-9195-93c1dc7d0b07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba07cb14-55b0-4844-8ea6-96223572f22c",
        "cursor": {
          "ref": "51bce2df-862c-4c4d-845a-a0d938e04089",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "7194673e-99ec-4fc2-ab5f-7275eb0ced23"
        },
        "item": {
          "id": "ba07cb14-55b0-4844-8ea6-96223572f22c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ba774f0b-7531-4e46-a348-07a3ed6d0759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc0d434-f85e-4005-9dbf-5765e04e757a",
        "cursor": {
          "ref": "f4a5cf4f-92f4-4cbb-a059-f0c4408ff648",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ec0f75e3-74ce-4f95-a754-66fa3e5891b7"
        },
        "item": {
          "id": "9dc0d434-f85e-4005-9dbf-5765e04e757a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "86fc6fd6-080f-483d-91ec-65857cb1641d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1989707-97a4-43d0-84ec-f176a8d9736f",
        "cursor": {
          "ref": "0fa6076a-a7b7-46a6-938c-7574395e7bd8",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "05244c61-581f-4121-9b26-0a5a6cb1e9d3"
        },
        "item": {
          "id": "f1989707-97a4-43d0-84ec-f176a8d9736f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "ba096cd8-a353-48cf-b6ad-50adf9d4fd52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973fa24f-1688-48f2-aa9b-580c76a576fd",
        "cursor": {
          "ref": "c9cf33c7-ba9e-490f-823e-2504b0a2fb77",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "80866fbb-fdde-4046-8a48-7aa4885bf291"
        },
        "item": {
          "id": "973fa24f-1688-48f2-aa9b-580c76a576fd",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "5c7e96b6-553c-4ecd-a254-d0c8005c6ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "994fccf3-faf1-4fa7-9868-0e78fe09cdf5",
        "cursor": {
          "ref": "2311777b-17a0-46f4-b998-a46deeb12b7f",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7fe36a4b-80cf-4aa4-bf8f-86862af2ec7a"
        },
        "item": {
          "id": "994fccf3-faf1-4fa7-9868-0e78fe09cdf5",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e29d302d-c953-444e-88e4-448f0ee62c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3920ad87-c3b3-42ae-8f7b-011b1933679f",
        "cursor": {
          "ref": "c30fb9f1-a3e5-4122-a6c8-b5ba2a7ecf8a",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "42664841-c835-4e3d-8ccf-cd6b97a077ce"
        },
        "item": {
          "id": "3920ad87-c3b3-42ae-8f7b-011b1933679f",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "202622ca-1df1-4649-a65e-61a70d1a1d32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4aef242-d8ae-4842-b0d1-7f798182b40a",
        "cursor": {
          "ref": "f99f5607-c84d-4715-9e13-90f896b7d52e",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "5af19e72-70ac-4e37-a9dc-63f89600af34"
        },
        "item": {
          "id": "d4aef242-d8ae-4842-b0d1-7f798182b40a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "bf5f066e-32b2-41ac-b97a-dac40a761130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe03df6-84a3-4889-80d5-5e4f122b66e9",
        "cursor": {
          "ref": "73782475-c41a-4a8e-9f56-11afa1b160a9",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "3208074b-8f5e-4a1e-9475-5949634077f6"
        },
        "item": {
          "id": "9fe03df6-84a3-4889-80d5-5e4f122b66e9",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "2ec7dc97-8230-4cd4-915a-44c3d6ec6d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e74e740-d139-45c4-a32d-73ef75ef9a8d",
        "cursor": {
          "ref": "98702d1d-8ff5-487b-beff-7286fbe02371",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1cf0f126-3721-46b7-868e-4f0e108125ee"
        },
        "item": {
          "id": "0e74e740-d139-45c4-a32d-73ef75ef9a8d",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ddbf4615-48f1-4fb0-a945-d2798cfd1f23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b8852a4-6134-482a-a104-62dd363ec9b2",
        "cursor": {
          "ref": "66828d12-4582-472a-8790-a419afb011a5",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a988c13e-35fa-4665-ac7c-47f5304e679d"
        },
        "item": {
          "id": "8b8852a4-6134-482a-a104-62dd363ec9b2",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e090b2b2-f3da-466d-b057-d79d71a1971e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "338c40fc-87fd-4fa3-9091-5e54129d85ee",
        "cursor": {
          "ref": "5e873bb5-a4b7-4072-9d65-8baf95d99779",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "09879caf-f77b-45c3-85f6-c82f183d3cfc"
        },
        "item": {
          "id": "338c40fc-87fd-4fa3-9091-5e54129d85ee",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "2fdf382f-6bf7-445a-bf95-d5a1aa16e53e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab201f7-a434-485c-b01a-35f7471dd76c",
        "cursor": {
          "ref": "77dab3c7-e303-4152-be0f-7c487941f3ac",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "7f31f3bf-3c09-430a-a1c0-c342ce57fe9c"
        },
        "item": {
          "id": "9ab201f7-a434-485c-b01a-35f7471dd76c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "30c20e35-62f8-47dc-87ca-571f03b0d733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12a7e372-dea9-4265-9163-1663cf8d822c",
        "cursor": {
          "ref": "0f58678c-d687-4dea-974c-fe007f519e3b",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9202c437-f5c6-45c5-ae6f-c94f94883d47"
        },
        "item": {
          "id": "12a7e372-dea9-4265-9163-1663cf8d822c",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "65081d80-7251-43d7-ada1-e4e5f788800f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a08e2c-7fb9-40fa-ac77-1f820d714a22",
        "cursor": {
          "ref": "c6edf359-9361-46ae-b151-4529db8ced43",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "73fa9f5a-ff00-4d08-90ae-a62868e4d442"
        },
        "item": {
          "id": "80a08e2c-7fb9-40fa-ac77-1f820d714a22",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c33b3bc7-d060-4c8a-88dd-c5011f4e10a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac19eeb-43cb-4d4a-a8db-c16c0cb7e336",
        "cursor": {
          "ref": "c3926f6c-ed49-48b4-b348-9fb2b058d920",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a7dc99c0-d90c-463a-befc-a6ea050af51c"
        },
        "item": {
          "id": "cac19eeb-43cb-4d4a-a8db-c16c0cb7e336",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "686a1055-74b9-4545-9b7e-90a5fd4bfbd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d4ebaff-64ed-4ded-bdb0-c7382ab3d98a",
        "cursor": {
          "ref": "37cc05c6-262b-4919-86e1-f32baa4a44de",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "be9fbba6-a4db-4a51-acbd-9fb1a41d1232"
        },
        "item": {
          "id": "8d4ebaff-64ed-4ded-bdb0-c7382ab3d98a",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "af83ecfd-75aa-415c-b27d-87eba627c3fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13603de5-725f-497b-b62d-fbab0e072eda",
        "cursor": {
          "ref": "9895e836-5abf-4e2c-962b-e30ecae4ba95",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "02f704be-7d43-46d5-9ad7-68c37f02d889"
        },
        "item": {
          "id": "13603de5-725f-497b-b62d-fbab0e072eda",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "0d86e99c-2449-4b7d-b85c-3e84b165bac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70c96c98-7c66-4084-88c7-8c12e96d0648",
        "cursor": {
          "ref": "89329722-c944-44a0-8d7d-7553502fb400",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "8f62beb0-7655-4a31-8bbb-1bdab16483ee"
        },
        "item": {
          "id": "70c96c98-7c66-4084-88c7-8c12e96d0648",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "35b204ed-d571-46ca-856d-007534def680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4abe9e3-bc73-4fc6-82d8-8309b5d697b4",
        "cursor": {
          "ref": "e141ec42-ea5f-4e99-8aea-98daa4174831",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c1632ab6-e5eb-4057-9325-d0a4e0881b6a"
        },
        "item": {
          "id": "b4abe9e3-bc73-4fc6-82d8-8309b5d697b4",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c12e6e3b-3580-4999-b89e-9154ec1af490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90b1a6e-abe7-4c30-90fc-00edf0d19c3c",
        "cursor": {
          "ref": "f31f5135-d458-4c48-b830-fd841d29f237",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4af1274f-4967-4ce0-adfb-dc2fb03f0c0e"
        },
        "item": {
          "id": "d90b1a6e-abe7-4c30-90fc-00edf0d19c3c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "3fe2f49b-8c67-48cd-bebb-9be883ae3f13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e34265-663e-4c2e-afb7-89f49a307074",
        "cursor": {
          "ref": "4619abf9-7194-4b68-856e-6c794142afd4",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "9b56cfed-ec2e-482b-a001-7389e9c0c3f4"
        },
        "item": {
          "id": "d9e34265-663e-4c2e-afb7-89f49a307074",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8b3e2536-405a-481c-9031-816a001bb6b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "265f6da4-fdc5-482f-967d-8bd08368c1b5",
        "cursor": {
          "ref": "992b90e9-e777-40e8-ae4c-f508349f9f29",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d763706c-3173-475f-b928-b4a3749df193"
        },
        "item": {
          "id": "265f6da4-fdc5-482f-967d-8bd08368c1b5",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "08cbfe0f-a58f-413c-8082-c9e46db0ca8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d7ba1b-ab3e-4d8e-aedd-ade0d9786a1f",
        "cursor": {
          "ref": "170c976a-4cb8-4efa-8ad5-7276e151c989",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6620d79a-69da-4a56-a2b0-8e383563cc3a"
        },
        "item": {
          "id": "d8d7ba1b-ab3e-4d8e-aedd-ade0d9786a1f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "2314a51d-54c6-48de-9088-7d8e4f1375de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6a6fe2-40bc-4428-926e-4980899ca994",
        "cursor": {
          "ref": "41266a12-3982-41e0-b716-edbe0cb03d4f",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b47de19a-3c9c-488b-99c0-f1db77e4dd22"
        },
        "item": {
          "id": "5b6a6fe2-40bc-4428-926e-4980899ca994",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "152f2de0-11c2-4f3c-a7b3-5599f2ac2a55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b240506-9ac2-4445-a566-1e4ec6f16646",
        "cursor": {
          "ref": "dacb17a5-95f3-4c99-ac09-7725f435e558",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "7a43db47-7e7a-42dc-b91e-f689046ab842"
        },
        "item": {
          "id": "1b240506-9ac2-4445-a566-1e4ec6f16646",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0733a132-223b-46a1-a206-f7e6cdf270f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b12ca6-31f8-4ef1-aa43-a8526e2052a1",
        "cursor": {
          "ref": "0e69430d-e381-47b8-9fdf-319ed2b315c2",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "43cb4a32-d66d-41ec-8624-4725e45c0b4f"
        },
        "item": {
          "id": "94b12ca6-31f8-4ef1-aa43-a8526e2052a1",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "8908def7-786a-4ca9-af32-07e4e2cdd18d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "418b2785-d0ab-40ac-bac5-89fe59fea5da",
        "cursor": {
          "ref": "93285261-031a-4c96-93ec-59dca865591f",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "976b6590-b9e7-4ea3-88c5-886bc331bca1"
        },
        "item": {
          "id": "418b2785-d0ab-40ac-bac5-89fe59fea5da",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "74bb149b-456a-48a0-913e-3ef2084a26f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761fa4bb-91a6-418a-b3c6-2bfa834a03a7",
        "cursor": {
          "ref": "1197166f-774a-425b-93f7-3a85449ab63f",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a74b65fa-b971-48bd-b02f-3c521eed1478"
        },
        "item": {
          "id": "761fa4bb-91a6-418a-b3c6-2bfa834a03a7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "0acc02fa-b877-4d65-bd85-2294e7081e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d40925-d55f-47e8-a3e1-40ea7e88e5b7",
        "cursor": {
          "ref": "b6ef6c2c-57f3-4a90-991a-8b1a5b0390fd",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "af1be58d-11a8-494a-bbd6-0297c1ab7e3d"
        },
        "item": {
          "id": "06d40925-d55f-47e8-a3e1-40ea7e88e5b7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "cc460d3b-667d-4f20-b66e-ffeb522b8245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e30d0d0-37c0-4c04-b1dd-317cbc6e13c5",
        "cursor": {
          "ref": "84a0de06-9b3c-4a6e-9bf3-05ad4054ee52",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "458e76b2-225e-46a9-9538-ad45763c4df1"
        },
        "item": {
          "id": "3e30d0d0-37c0-4c04-b1dd-317cbc6e13c5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7de94fa4-c8c5-4224-9993-f82414ac84f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "902a03cb-67b0-4206-b939-2d8c7bf0882a",
        "cursor": {
          "ref": "e14ee3bf-edb5-4de4-8531-423527dfdc5f",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "2360144c-ecbc-4073-981c-bea216a40854"
        },
        "item": {
          "id": "902a03cb-67b0-4206-b939-2d8c7bf0882a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7c1bba1f-6174-46fa-9d18-f67f30897d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c2fa996-f425-4330-8e37-657a190dd638",
        "cursor": {
          "ref": "241e95dd-7434-47f2-8e59-d54919a1c924",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "34902fbc-bdde-46dd-a8f5-e4013f3f5ea1"
        },
        "item": {
          "id": "1c2fa996-f425-4330-8e37-657a190dd638",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "94d08345-e706-464f-a74f-02c24c00d1b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dad70644-25a0-40d7-9fda-8c31e428402f",
        "cursor": {
          "ref": "e3a77215-6dbf-4411-9c29-63e6fe4e8f21",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "afe89ca5-3101-42c2-a14c-15215ae8c1bb"
        },
        "item": {
          "id": "dad70644-25a0-40d7-9fda-8c31e428402f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "22ab8efb-9009-485c-9c01-211990ee2b3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2297285a-3b85-468d-ae86-ec19d9c1ece0",
        "cursor": {
          "ref": "2465e79e-04c0-4569-a90b-357149ebdc8e",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "5639ada6-8ce8-44bd-afe1-94415cd9d66b"
        },
        "item": {
          "id": "2297285a-3b85-468d-ae86-ec19d9c1ece0",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d75bc912-1ecb-42bf-b9d8-a0a3f0b76a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d42194df-a873-48f7-9301-887ee220d26d",
        "cursor": {
          "ref": "1f5afb47-3b52-45c7-b292-4103e2841110",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d9935ae5-701d-49a4-9911-401ce1300a23"
        },
        "item": {
          "id": "d42194df-a873-48f7-9301-887ee220d26d",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "739ff4ce-05f8-457f-ad17-56c49eef686b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7075792-52fd-4ae5-9f98-f95c5e931a71",
        "cursor": {
          "ref": "441da719-f67a-4f92-b598-76894e88abcd",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "7a474dd8-fec4-4c4f-8428-e8636e4ba568"
        },
        "item": {
          "id": "b7075792-52fd-4ae5-9f98-f95c5e931a71",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "4f3e1f22-7a01-43b2-b722-771a60e4b1df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f36ea2d-85c1-488b-86f6-eb4bc8a54d21",
        "cursor": {
          "ref": "fa6fc73d-b5b3-45aa-9bd8-be39f91a2764",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "cf8b8f06-8b3d-4eab-ad8f-c48561c798db"
        },
        "item": {
          "id": "5f36ea2d-85c1-488b-86f6-eb4bc8a54d21",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "175e0498-6ae0-4922-ade3-24cd4e272daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43864bc1-dcc4-4c9b-ad64-ac79dd79c045",
        "cursor": {
          "ref": "9c6f96cc-5edd-4847-82c6-08c972f6780b",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f0c736cc-4343-4873-be17-b3e96345f64d"
        },
        "item": {
          "id": "43864bc1-dcc4-4c9b-ad64-ac79dd79c045",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "3d4d8023-a713-40cc-8758-8b7d5e7e8182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d7c6a27-9cae-474b-b9a7-e460535e7691",
        "cursor": {
          "ref": "976cf5ac-5e4e-4602-aa5d-2d1646ea0867",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d3640473-5940-46cc-ab98-6517e77ee032"
        },
        "item": {
          "id": "0d7c6a27-9cae-474b-b9a7-e460535e7691",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "62d1234b-b0ac-41ac-9333-3f65c0b58d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4acf3c98-8bfa-40f3-9b88-d759ba37f826",
        "cursor": {
          "ref": "05799b30-8189-4bb1-8acc-2cd436e0e773",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4350e239-fe84-4405-9908-f71af4f776a2"
        },
        "item": {
          "id": "4acf3c98-8bfa-40f3-9b88-d759ba37f826",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "077a0fd8-4553-47ba-9a1b-49654d1b125a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee27735-f870-4f26-8d6c-d79f64e9a8d6",
        "cursor": {
          "ref": "5e6f7830-7e47-4864-a102-830e5a3de199",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "5e8ecaa0-436a-4d99-a105-686e670c2883"
        },
        "item": {
          "id": "4ee27735-f870-4f26-8d6c-d79f64e9a8d6",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "cad849e2-7fb4-4487-a414-00a83e9ab2b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d0a83b0-1a76-4593-91ff-ec637a02e54b",
        "cursor": {
          "ref": "84b70260-2327-4b17-b3f7-b1aebad9d1ff",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "5840c13b-a72d-428d-b004-b6814bfe9fd0"
        },
        "item": {
          "id": "2d0a83b0-1a76-4593-91ff-ec637a02e54b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "89822304-bf16-49a0-901d-64896ab1b783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c9baff-5998-4d34-9e38-2ca458d97148",
        "cursor": {
          "ref": "eaeceeae-bea5-435b-902f-301b060603d1",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "7cf2afe0-acd1-444e-8537-afd9a87b790c"
        },
        "item": {
          "id": "d6c9baff-5998-4d34-9e38-2ca458d97148",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "d37bc45e-424e-4617-8636-651aa1b27763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a9fd48-83ab-41b4-9ba3-de33c6355b93",
        "cursor": {
          "ref": "868c5ab8-cdd7-4425-90ef-4c9e6469f652",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "a4976d31-1769-4a09-bbf3-04137341b247"
        },
        "item": {
          "id": "95a9fd48-83ab-41b4-9ba3-de33c6355b93",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f3db8daf-76c4-4d24-a18b-12fae0ea1a22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c396db3c-d7fd-4ea4-a397-e33f975e68f3",
        "cursor": {
          "ref": "f40b176a-2770-4004-afab-c3ff4411ebcf",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "8b1450e9-c7b1-4147-a766-de37e5409346"
        },
        "item": {
          "id": "c396db3c-d7fd-4ea4-a397-e33f975e68f3",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "99b12083-75d7-43cf-bbf6-6e313dfff891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ec0ed5-2c7a-4cb4-9ca1-895723082f0a",
        "cursor": {
          "ref": "dd0b8673-3a05-4cdf-9bf8-ac0585c357b9",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c60c0178-ec3a-4b9b-b489-ed86cdebf90e"
        },
        "item": {
          "id": "14ec0ed5-2c7a-4cb4-9ca1-895723082f0a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "7fa79080-127b-49fd-837b-1cc315885d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "008f5882-7951-4d05-9158-4e1e7d7c00e2",
        "cursor": {
          "ref": "98d3661e-1f25-4977-9cad-e942e08560cb",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "0d40973e-c085-4571-b796-05e18f47fba3"
        },
        "item": {
          "id": "008f5882-7951-4d05-9158-4e1e7d7c00e2",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "9df56a4f-ec7b-4892-bd6b-dd0b35224eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf57f2e-cbdb-4f6b-b223-82adfd47af92",
        "cursor": {
          "ref": "a50a7db1-0f48-4c5c-82ff-37bb9924c911",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8572f9df-d091-47a0-9552-0a32f61cd472"
        },
        "item": {
          "id": "9cf57f2e-cbdb-4f6b-b223-82adfd47af92",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "116b9ffe-b88f-41eb-9594-4ebcab883200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a3f26f-0970-464d-9674-a0cfad399fdb",
        "cursor": {
          "ref": "112fc82d-5a7d-4d5e-b4dd-328415ba66f9",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "85188a84-b5d7-4a5e-85d5-fb12ac396821"
        },
        "item": {
          "id": "f2a3f26f-0970-464d-9674-a0cfad399fdb",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d718e836-efcb-47b9-a808-42a83b042f6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2684ae66-bd59-4a34-909e-e3d54445dc8a",
        "cursor": {
          "ref": "b9341ba3-f9db-4815-a6c4-9bc70ef83a44",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "e6caa6b8-6285-4455-9927-baf7510dd2b8"
        },
        "item": {
          "id": "2684ae66-bd59-4a34-909e-e3d54445dc8a",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3d988e31-85ba-4a55-993a-793bd3ebd045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc967022-218f-42da-8399-6373644e98ff",
        "cursor": {
          "ref": "fe18d4ed-2980-4174-8ae3-0c818bde5a0e",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "1f893b1e-8c9c-483b-a6f2-cd8ec4da9f77"
        },
        "item": {
          "id": "fc967022-218f-42da-8399-6373644e98ff",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "52f4a29e-0f52-43d1-801e-fc367329906c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1101816d-df60-4235-b11e-a5acc1d43765",
        "cursor": {
          "ref": "95b1cf4b-18e3-442e-b014-fc5357a86c05",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f6ed248b-9fed-4313-a9a8-b70750053240"
        },
        "item": {
          "id": "1101816d-df60-4235-b11e-a5acc1d43765",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "be5a119b-b1a1-4303-9472-d207391e1d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42aeed56-4704-4066-b522-ff01a6c0308e",
        "cursor": {
          "ref": "424a9f55-d819-4077-989c-6d43ebd74319",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a2c36374-ac08-428a-a7fa-40898dd92354"
        },
        "item": {
          "id": "42aeed56-4704-4066-b522-ff01a6c0308e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "07da80c8-fe31-42fa-a483-6b17732db172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7722e42c-099a-4a14-bca7-8bd548893d52",
        "cursor": {
          "ref": "e8c97972-89c4-4c56-91bc-18c2fed8c839",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "765a1e11-e2e7-4451-805f-e0bcd28b098d"
        },
        "item": {
          "id": "7722e42c-099a-4a14-bca7-8bd548893d52",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6ff7adbe-5902-43fc-8d43-35863c6071b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6feaa372-05cc-4ba6-b5c7-ef54b315515b",
        "cursor": {
          "ref": "9ca78764-1eb0-40ea-a4cc-d59d0352ddce",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "32ae60cc-8681-4fd6-bd5d-cef6438747b7"
        },
        "item": {
          "id": "6feaa372-05cc-4ba6-b5c7-ef54b315515b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "1d0560da-2f76-4c74-8157-77f2ae891c96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d56231-feab-4fc5-a466-91c0b11b6125",
        "cursor": {
          "ref": "4553b547-e6d2-41e0-bee2-0a164e9687c9",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1e9fcc7e-174e-4e93-bdd9-d699590906ac"
        },
        "item": {
          "id": "22d56231-feab-4fc5-a466-91c0b11b6125",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "312e15e7-2018-4070-a06b-56c77e028daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2be2db17-9e17-468a-b46d-de05313e36c9",
        "cursor": {
          "ref": "b6fb2e02-1a2a-4ea1-9e98-2085c48ea5b2",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "b79dde06-a419-40f6-9f84-e98af4683694"
        },
        "item": {
          "id": "2be2db17-9e17-468a-b46d-de05313e36c9",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "47abe60f-0a98-4fd8-a4be-280fc37a7481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7074cf12-35c6-40d2-8631-0ba1792f0c8b",
        "cursor": {
          "ref": "cc2c39ec-6116-4f9b-923d-0de2b59ee26d",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "48a0fa07-f4f3-4614-a31a-f7a737a6ff02"
        },
        "item": {
          "id": "7074cf12-35c6-40d2-8631-0ba1792f0c8b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "c84cc510-9aa2-4289-9752-60d8b9ffb527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfb118e9-16fd-4303-89bd-fd25d1fc80d9",
        "cursor": {
          "ref": "f7843f40-b172-4e1f-8e04-8a7dfda8d218",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "fa0534f2-098f-4677-a796-05c48270d53b"
        },
        "item": {
          "id": "cfb118e9-16fd-4303-89bd-fd25d1fc80d9",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "8694a403-78ae-43c8-a885-dc3dac1c5403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9836af02-9bd7-49a7-afdf-4ef31570bf87",
        "cursor": {
          "ref": "50491a8b-57ed-4d17-90d8-ea7b775ec0a8",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "be087df6-b673-4e90-b2b6-d60ea00bda05"
        },
        "item": {
          "id": "9836af02-9bd7-49a7-afdf-4ef31570bf87",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "dd9c6192-f9b9-44cc-bb7b-9a0897b6e6d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e58ff7-ce07-4609-a938-92847faf869a",
        "cursor": {
          "ref": "08e36e44-d498-4717-8378-398383fb697b",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "0217cad2-4942-4a91-a694-522d319f8ca9"
        },
        "item": {
          "id": "51e58ff7-ce07-4609-a938-92847faf869a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "61cec79f-bda8-4cad-a0b4-cc7aa0450f69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb839c1-b2a3-48ab-a39f-cb1e1410f854",
        "cursor": {
          "ref": "bcbc8afb-cbf7-44a1-8588-974649afa878",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "356887a4-8770-4b51-b21e-2cb41e5a1d11"
        },
        "item": {
          "id": "6cb839c1-b2a3-48ab-a39f-cb1e1410f854",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "7bac1c29-7b6d-4954-a877-5898cc419e00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "610f076a-eee2-4952-a4b0-1a247cee9c54",
        "cursor": {
          "ref": "40126256-6e96-44f1-80a0-a66eabdd4ac2",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "63876da7-b7d0-4196-a7d1-dc33fb9fa275"
        },
        "item": {
          "id": "610f076a-eee2-4952-a4b0-1a247cee9c54",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "a56f7c63-18e2-4015-9bdf-2890ddbdcbaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ecaf85d8-2bd3-4c0f-97b4-0f1d55be1fa1",
        "cursor": {
          "ref": "08d22441-82f1-45f0-82f8-951373dc9331",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "8d94fca3-fcbf-4877-8f67-95c75b031e84"
        },
        "item": {
          "id": "ecaf85d8-2bd3-4c0f-97b4-0f1d55be1fa1",
          "name": "credentials_issue"
        },
        "response": {
          "id": "873561ff-81a9-404b-b2fa-12415967ae91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "fb3f680a-11b7-4ff5-8ee2-c4ed27c4514c",
        "cursor": {
          "ref": "fbe81fc4-efc9-45a6-9a9c-6c4fa43c1e73",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f10b2100-0e45-4841-9838-bf75641d96d8"
        },
        "item": {
          "id": "fb3f680a-11b7-4ff5-8ee2-c4ed27c4514c",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "7e39ad3f-ae4a-4f59-b61e-f6b36dc6890f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "17588bc9-0cb3-459e-8209-578ec5843334",
        "cursor": {
          "ref": "b7c7f6aa-632d-4044-b3fd-6a71f73bb0f6",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "01fb89be-5bd5-4cd5-a8a7-0673598c10e4"
        },
        "item": {
          "id": "17588bc9-0cb3-459e-8209-578ec5843334",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "82a97b56-ba34-4d0d-ad4b-268798883cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "6fb8a239-15b0-4171-b7d8-607693a002ef",
        "cursor": {
          "ref": "0b25be3e-df34-4c3e-ab8b-1e4c1a5ad79d",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "096dd5a4-7409-4fd3-91a1-108e26b96dfb"
        },
        "item": {
          "id": "6fb8a239-15b0-4171-b7d8-607693a002ef",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c36e4b51-13b2-44eb-addf-b77edfdc9cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "7d4703b0-6cd4-4e7a-9e95-f0f2f5f8ad4b",
        "cursor": {
          "ref": "ccb2d04d-7564-4912-9f53-41be8b9fff0a",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "9a0b6d96-2de6-41ca-b11b-cbf425d0260a"
        },
        "item": {
          "id": "7d4703b0-6cd4-4e7a-9e95-f0f2f5f8ad4b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "1aa2a4b0-6321-401c-88b5-21fee58ee009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "2aa2f501-a921-4571-acea-eee430921c3d",
        "cursor": {
          "ref": "9a7fde47-a811-412f-ae21-0a8ff4b95312",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "3c4a031b-6008-4386-9bf7-ccf6624c10cd"
        },
        "item": {
          "id": "2aa2f501-a921-4571-acea-eee430921c3d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e7d53e34-9ecb-47f9-a49d-bc282803dc8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "e6b88155-b93a-4472-a052-34fbffdffbfa",
        "cursor": {
          "ref": "68ce0de4-a213-4c79-bb76-d72ffc1670de",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "713df28d-95e8-42fa-8608-6a762ba09df3"
        },
        "item": {
          "id": "e6b88155-b93a-4472-a052-34fbffdffbfa",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "513ff971-0250-4f5e-87c9-449a46065d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e0522e0-01d2-4cb0-9af3-e6a00f71776a",
        "cursor": {
          "ref": "785e7b25-17db-4add-854e-82bc35146d20",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "339b08be-920f-4a41-aeec-ea6c1c10ff0b"
        },
        "item": {
          "id": "4e0522e0-01d2-4cb0-9af3-e6a00f71776a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "502bf8a1-9061-42dc-8208-1109857c6552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2738e9b-df7b-4b6f-87a2-8b5b4d68b607",
        "cursor": {
          "ref": "4f8b41c8-dca1-47ba-b227-95d809594faf",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "fce84d79-2f77-4c04-9825-15ccbe180871"
        },
        "item": {
          "id": "e2738e9b-df7b-4b6f-87a2-8b5b4d68b607",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b2e4667d-fe9e-491c-ac95-426219647258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a36117ea-e631-43c4-aa20-afa5b9e55e79",
        "cursor": {
          "ref": "7ae8d925-aa0f-4818-a415-a82f942ec315",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ca091149-564e-40e8-8bf3-a7820cf174e7"
        },
        "item": {
          "id": "a36117ea-e631-43c4-aa20-afa5b9e55e79",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "77d75bb7-6c28-4fd7-9d15-d7d8e421c109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07a91d1a-263c-431a-9387-8bfd1924f7f3",
        "cursor": {
          "ref": "68fe9480-b115-4cea-b6f9-218a729131d8",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "ebe71178-f210-4d1b-9815-f10cb868e749"
        },
        "item": {
          "id": "07a91d1a-263c-431a-9387-8bfd1924f7f3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "51e66680-8978-4e3f-8c1f-8fa0585bf205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c98499b3-68d8-4173-ba6f-9ad400bf2458",
        "cursor": {
          "ref": "271d73be-d51b-404a-8681-dd2a35b54e1e",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "8270651a-7a64-4a23-9391-f5ae2a5e3870"
        },
        "item": {
          "id": "c98499b3-68d8-4173-ba6f-9ad400bf2458",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "adac30c6-8f69-4b36-8d6a-c4eb6bf5f1da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "787b5bd1-7c8f-4322-b2a7-b38ddf473235",
        "cursor": {
          "ref": "243180e6-def5-4b21-8837-f78890a887eb",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "bccdb8b0-deef-46b7-8a33-0b19d123e473"
        },
        "item": {
          "id": "787b5bd1-7c8f-4322-b2a7-b38ddf473235",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f53e7ab7-c798-4d8a-9fb0-32f4115585a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96cb15e4-692f-4908-8635-2112f6f0bdad",
        "cursor": {
          "ref": "01662fcb-b048-4b41-be23-309373046db7",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "74f8b80c-e891-462f-a52a-fe48bc3dc221"
        },
        "item": {
          "id": "96cb15e4-692f-4908-8635-2112f6f0bdad",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4ad23d6f-fa6d-42b8-b44e-d7371c269f45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dcf2ec1-f413-44ff-9d51-87468dec6796",
        "cursor": {
          "ref": "7c64a52e-3ec7-4188-89c2-4b94955b3c24",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "5e9fbfd1-14bf-4221-a2ad-672ac7d554b2"
        },
        "item": {
          "id": "9dcf2ec1-f413-44ff-9d51-87468dec6796",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "89d6b350-1cf6-441f-ad8e-39a83ddafcd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "623b25ae-27de-46a8-914e-ec2b0c723974",
        "cursor": {
          "ref": "046838c2-8924-4762-9ac6-d86d7e58ab43",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "fe164855-6d42-4f84-baac-da3fe060f612"
        },
        "item": {
          "id": "623b25ae-27de-46a8-914e-ec2b0c723974",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b237285c-f07b-4fab-877b-134ece0cf4bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98023a12-8d12-43c4-85cc-a9dbf19c2a56",
        "cursor": {
          "ref": "0ed7c845-54a0-4ad1-ab09-1c3ddfd00350",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "2204c702-9751-4474-97b2-95af236a000e"
        },
        "item": {
          "id": "98023a12-8d12-43c4-85cc-a9dbf19c2a56",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3689e6c6-49e7-40b7-b119-455feef20288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a42ab0-92a6-44da-9f8c-0b4d4fab40bd",
        "cursor": {
          "ref": "3b1ccb44-8300-44b5-9476-7557479da515",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "4250c698-e419-42b6-8847-0a30d4bb1ea3"
        },
        "item": {
          "id": "e5a42ab0-92a6-44da-9f8c-0b4d4fab40bd",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "04158385-517c-413a-a82d-f86c6592ee37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ea2c57-bedf-4475-9339-3dab5b89740d",
        "cursor": {
          "ref": "b06e18b4-2e0f-407f-943e-fe51988ecc92",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "7017e830-f8aa-49c6-8da5-d44ca268e93d"
        },
        "item": {
          "id": "78ea2c57-bedf-4475-9339-3dab5b89740d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "802dae30-ea16-42fc-a930-d5cfdcb27433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "534bd558-c78c-4e33-af7d-eb6894360671",
        "cursor": {
          "ref": "a0cb54bd-a5d5-43f4-a759-62e60f70540e",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "10ad591c-b6af-4287-8ffe-d936cab5d5de"
        },
        "item": {
          "id": "534bd558-c78c-4e33-af7d-eb6894360671",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "97c623a9-c638-4581-8191-5f1b9a8b82ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ff0accd-bcd0-4e6e-ab68-59ead23df01a",
        "cursor": {
          "ref": "50401f9e-3a0e-486d-860e-4b0df4a62357",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "290b03e8-76dc-4c7d-8d52-7d464fe63c84"
        },
        "item": {
          "id": "1ff0accd-bcd0-4e6e-ab68-59ead23df01a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "47c1253e-6a6a-48b5-9025-a1ccbf9a0795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad558a0-5f2d-4130-998d-fcb4c05c1e29",
        "cursor": {
          "ref": "a363ee51-2ae3-4dbb-995d-5b4c5657e1f6",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e652168d-0a0c-4aac-b5af-1f893c230b16"
        },
        "item": {
          "id": "5ad558a0-5f2d-4130-998d-fcb4c05c1e29",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "187549de-661d-4237-849f-97a61df399b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88586612-b649-4afa-84e7-690572fa84a5",
        "cursor": {
          "ref": "ff424207-3fa9-470a-9d84-37b6e3be2f7d",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0440bb2c-8e34-4184-a57d-74cff733ca5e"
        },
        "item": {
          "id": "88586612-b649-4afa-84e7-690572fa84a5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "18091f07-6864-459f-a4d1-fd8e52a7dc54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec7c943-7174-4c11-b49c-93b81e95a4c5",
        "cursor": {
          "ref": "25424627-46e3-4bac-83bd-f6730f1f0328",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b459104a-9454-4ae7-a638-34832314e6d3"
        },
        "item": {
          "id": "0ec7c943-7174-4c11-b49c-93b81e95a4c5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "baa8a5ca-36b5-4033-b2d4-790a6a048de9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b96e4bab-7b6f-4196-ab9e-89443a52a258",
        "cursor": {
          "ref": "8aa4dc91-e9ca-4226-ad91-37ac7968019c",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "cd917eec-4287-446f-abf2-5b04714f4c64"
        },
        "item": {
          "id": "b96e4bab-7b6f-4196-ab9e-89443a52a258",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c080808f-c88a-4f5d-acd5-803f99c748ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4ef434c-fff7-4e00-814c-21a62ff7ddc0",
        "cursor": {
          "ref": "4c9276df-e9d9-4107-b03a-bd88554a5db1",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "8a00fe24-abdf-4796-9766-305df0ca0869"
        },
        "item": {
          "id": "f4ef434c-fff7-4e00-814c-21a62ff7ddc0",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3dc66b3a-97c7-4bdf-9ac9-30fc42e028d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee35b16d-5e69-43a6-b7e7-aa9d242a35d3",
        "cursor": {
          "ref": "da884c44-b1fb-4765-8c26-6f5395fc60ee",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5c9a2c57-7633-418f-951b-182f0605d1b0"
        },
        "item": {
          "id": "ee35b16d-5e69-43a6-b7e7-aa9d242a35d3",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a9f0fc48-9787-4082-b538-1779292d1da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f24fba13-e7a7-4188-8e06-6d161a9ba12a",
        "cursor": {
          "ref": "652906bb-0dcf-4cb7-8c8a-fbecb5e2995f",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "dac53090-07d2-43f8-95e3-45516121693c"
        },
        "item": {
          "id": "f24fba13-e7a7-4188-8e06-6d161a9ba12a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "320588ed-43ad-4628-ac20-c391b4791a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed0ae757-30ad-47fb-94fb-984d7447bbe9",
        "cursor": {
          "ref": "fd2fd205-b204-475e-bfd7-c31bc04f8676",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "b786b7bd-e16f-45e7-aade-32ec3527764c"
        },
        "item": {
          "id": "ed0ae757-30ad-47fb-94fb-984d7447bbe9",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e526adcb-478a-40ed-bf84-9971d5e8dc6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bf36c28-8b87-43a8-acd0-bae3f2e7df6d",
        "cursor": {
          "ref": "2b62bad9-0324-4fbf-97d3-acf6e5eb4911",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "14247b5d-6306-41b4-823f-a522caa2fa2e"
        },
        "item": {
          "id": "1bf36c28-8b87-43a8-acd0-bae3f2e7df6d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b03f8d74-95db-4ccd-8c17-beec811d367c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b197681-df78-427e-b3ff-07fda5ec5c19",
        "cursor": {
          "ref": "8a31093e-82dd-42a9-b3a5-f8973042f6f1",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "20fa80e7-42f1-4db2-8c4e-0cd2bb43e2d2"
        },
        "item": {
          "id": "9b197681-df78-427e-b3ff-07fda5ec5c19",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5bdfb92e-9390-4eba-84e1-c3e89f651973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3679dcf-4132-47c7-b49d-253c0405e842",
        "cursor": {
          "ref": "b3670ce1-af57-4244-acf3-1a1f3ecfa898",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "2bc2a5cc-3286-472d-8889-f1dde70e383a"
        },
        "item": {
          "id": "e3679dcf-4132-47c7-b49d-253c0405e842",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1ce91eab-694a-4c32-9245-f53ed9a72c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "889e4b29-7388-4820-b045-0307fc5a2b44",
        "cursor": {
          "ref": "b9a736d1-5f33-4b8d-9e21-13d10aa13f7b",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ed85ec69-8976-4950-a2b5-eae7873bb065"
        },
        "item": {
          "id": "889e4b29-7388-4820-b045-0307fc5a2b44",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "82026898-cb03-4d96-a41d-e990f2690575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe26bd6-0008-4af7-97b7-909d6f19d30f",
        "cursor": {
          "ref": "15a2c78f-b7bc-47d3-a443-86876cb67525",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "0dacdc5d-ba1a-4e4a-9bca-25b72d27e144"
        },
        "item": {
          "id": "1fe26bd6-0008-4af7-97b7-909d6f19d30f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3e1fe302-845a-4adb-8dc5-60db4d3e1ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1303551e-bb90-49b6-99fe-54c1102676e9",
        "cursor": {
          "ref": "24708de5-6a66-4fa1-a7ea-b60c1b76f855",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "4bea570b-e59c-4afb-85a3-8fbb111437a3"
        },
        "item": {
          "id": "1303551e-bb90-49b6-99fe-54c1102676e9",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "960270fe-ac09-4b36-ad55-5510148b86ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d01b4871-1872-4676-a8eb-1493be283ab5",
        "cursor": {
          "ref": "d2b028b2-9193-453d-bd49-ae8d055dc917",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "d2365822-a6a9-49fd-9d24-3a8792577740"
        },
        "item": {
          "id": "d01b4871-1872-4676-a8eb-1493be283ab5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1624bf8b-e5ff-49fe-b0f4-a4159fc9d973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62dae4ec-b243-4899-b767-6b7c04fd9696",
        "cursor": {
          "ref": "bad7d652-cd3c-4495-9793-ae511a5a91f8",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "41637661-bd20-4ef4-8057-bc91451cf4d5"
        },
        "item": {
          "id": "62dae4ec-b243-4899-b767-6b7c04fd9696",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b4d7ee77-5de0-4f2c-97e2-c0d13b9bdc95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb725c8-bace-4cba-a6dd-7dcd427ed181",
        "cursor": {
          "ref": "0e84fe11-d99f-43f5-84de-c5e43734b437",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "46c5e50b-ccb9-4470-99ee-3f5c4141030e"
        },
        "item": {
          "id": "2cb725c8-bace-4cba-a6dd-7dcd427ed181",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "a4b246d2-cc4e-46bc-b28f-e634a4acbe37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ee3b3d-3fb4-4ccd-b7d9-1ea831dce2ce",
        "cursor": {
          "ref": "6eba4302-0016-48de-8053-2207984095f9",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "babd58bb-2313-4d6b-bfdd-529fd27052c3"
        },
        "item": {
          "id": "28ee3b3d-3fb4-4ccd-b7d9-1ea831dce2ce",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "0b12a3a0-72d9-4f4d-8120-037b5bdcfbc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e71cd064-2a1a-4083-95d8-c8f07a5ed2a7",
        "cursor": {
          "ref": "624c7f81-71bd-4cbe-aa35-e45a7957bddf",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "849745b6-35d1-4b7e-9917-35291d617ac0"
        },
        "item": {
          "id": "e71cd064-2a1a-4083-95d8-c8f07a5ed2a7",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "7a273030-eab5-418b-9ef9-b4822c9fc80b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb29fd8-9b33-490b-94e6-665c20143c15",
        "cursor": {
          "ref": "6e6d7fcf-5fb0-45eb-9fff-5b9527c2147e",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "fb25bf64-121d-47b5-805d-15ceeb0b7249"
        },
        "item": {
          "id": "eeb29fd8-9b33-490b-94e6-665c20143c15",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "eacf75e3-f9a2-4c13-af0d-b52e798457de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dcd36e8-ad9d-4f3f-98a7-fe98b56a8c80",
        "cursor": {
          "ref": "e444987f-10c6-4ace-aa4b-4ae949301ab9",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b69cf4e9-7340-425b-9665-e75af491a970"
        },
        "item": {
          "id": "7dcd36e8-ad9d-4f3f-98a7-fe98b56a8c80",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f949362c-e504-4e54-a2a9-064319816dc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcbae7e6-0d61-446f-9ea5-7ef1cceef8c4",
        "cursor": {
          "ref": "1f3b6c6e-0991-42ec-a8b5-8076fe8cd101",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "41cf134b-adca-4135-8f93-f862df385bff"
        },
        "item": {
          "id": "fcbae7e6-0d61-446f-9ea5-7ef1cceef8c4",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "8fc65833-88e1-4bec-9707-70330b9f19c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14655ee8-1056-494d-b058-a0def849e538",
        "cursor": {
          "ref": "e0d06024-6094-446f-8aa0-e18360127838",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "69c09705-6a0c-4c0b-b19c-b7a7c320350b"
        },
        "item": {
          "id": "14655ee8-1056-494d-b058-a0def849e538",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3ddcd7e7-72a5-47bb-aa6a-935b4feebd26",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7130b67-8a4c-443e-b978-4488b8dba94e",
        "cursor": {
          "ref": "2463c984-7f33-4e22-955d-0aa57d75bee8",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "aad29924-47fb-44eb-a33e-848cbef7ecc6"
        },
        "item": {
          "id": "a7130b67-8a4c-443e-b978-4488b8dba94e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e98aa1de-0fcb-43f8-99f8-1d868cf4f845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca2000f4-78b9-4b66-8cf4-15403aa783e2",
        "cursor": {
          "ref": "85fb52dc-83ba-4f67-ad75-4478b4b8ef46",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "5f061b9a-dca4-4135-bd45-ed1e2b3b783f"
        },
        "item": {
          "id": "ca2000f4-78b9-4b66-8cf4-15403aa783e2",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4b6fa919-dc65-48b5-ac59-ff4ba1c58c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c558f7-6d9b-4c19-9ada-5d9a69ffc70d",
        "cursor": {
          "ref": "51f92097-3890-4a92-a743-0f20bc876df3",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "269f34c0-2e39-4483-a112-ba39cbf78f43"
        },
        "item": {
          "id": "f5c558f7-6d9b-4c19-9ada-5d9a69ffc70d",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "7ffbd056-8d3f-4e93-8a0b-eed17cb4f2c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0c1ea5-95db-48b0-97c6-799102b4766d",
        "cursor": {
          "ref": "81af1127-08df-4944-b4c4-03edea33659b",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "9ec6f80c-105f-4375-838c-2caece60e91b"
        },
        "item": {
          "id": "2e0c1ea5-95db-48b0-97c6-799102b4766d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "185bb17c-15b4-42ad-b1c0-190ae69b2bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6774f790-7e09-4554-acdb-41c9740bd8f5",
        "cursor": {
          "ref": "8a0a2414-830e-44ac-8a64-bf7c75909b6c",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "58be6800-d2a1-4916-9689-1c0372bc1514"
        },
        "item": {
          "id": "6774f790-7e09-4554-acdb-41c9740bd8f5",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a245062e-ba24-46d2-9f2b-61351ab3dd6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "760bb900-e463-4b24-87fb-42d2116db5da",
        "cursor": {
          "ref": "146c598b-a3c9-4f26-8b5d-f5d963ba46d2",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ce02ebb8-8ee9-4e58-b26b-4e7a14e5019c"
        },
        "item": {
          "id": "760bb900-e463-4b24-87fb-42d2116db5da",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "5e273234-2b73-4f49-8047-91b19b07194c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff826c74-4c8f-4291-9edc-0d97f3adc247",
        "cursor": {
          "ref": "10ccffc3-9ed9-46ed-94c8-aa6018cca830",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "97805f6b-1eaa-4aaa-9180-24d68a7cf234"
        },
        "item": {
          "id": "ff826c74-4c8f-4291-9edc-0d97f3adc247",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "64163984-02b2-43a1-a92b-a01006023fc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c466ffd5-0a49-40d2-8609-8377643a5b28",
        "cursor": {
          "ref": "cd1973cb-8b6c-4c4a-90ad-0ce6686e11ad",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4b18b0f8-0816-4d5e-87b8-a510e765b59e"
        },
        "item": {
          "id": "c466ffd5-0a49-40d2-8609-8377643a5b28",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "c6f1d02d-6b0b-4c32-b757-2d273d880e62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06334938-3eba-4af6-9232-d7bd2a2d86b6",
        "cursor": {
          "ref": "f6c0c4ae-6570-4830-ab6b-7a7431b31166",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b2f80a9e-7528-46ec-a52d-84cb039d57e8"
        },
        "item": {
          "id": "06334938-3eba-4af6-9232-d7bd2a2d86b6",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "171c0f98-aed9-4592-9742-b14237894a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f67626b-31d5-4d27-b7bf-85dca924da66",
        "cursor": {
          "ref": "3bbe7a66-76c0-4a4d-9417-43c7f6d614bb",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "26ae671f-bfb8-4902-aed5-06c754e721f8"
        },
        "item": {
          "id": "2f67626b-31d5-4d27-b7bf-85dca924da66",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "914e5a78-e25e-4f6e-91c1-601939a796ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14a11672-f02e-43b3-81cc-4d6299cc60f7",
        "cursor": {
          "ref": "1fac4995-6d82-479e-8a75-1b61b8e1ff52",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "6a8fb77d-7c66-4a3e-b30c-8c7d8b965277"
        },
        "item": {
          "id": "14a11672-f02e-43b3-81cc-4d6299cc60f7",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "286c216d-1201-4c65-830d-3720515726e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8065e372-38cd-4a83-b6aa-c204f8e80138",
        "cursor": {
          "ref": "6c8b0a05-aeb6-4961-95d6-7a24db570128",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "135337b0-3abe-45fb-b2dd-1625bf414c85"
        },
        "item": {
          "id": "8065e372-38cd-4a83-b6aa-c204f8e80138",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "8c0cc697-0e38-4171-bbf6-8c25de9a1b51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4390f304-cd2c-4c3a-8a52-d0e0ff1bbcaa",
        "cursor": {
          "ref": "1787f341-71b2-48d1-b60d-58f66f32c937",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "16f4c333-f58f-4143-9aa1-b6547ef8114f"
        },
        "item": {
          "id": "4390f304-cd2c-4c3a-8a52-d0e0ff1bbcaa",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a68a2695-75bf-47a1-bd4d-9cd8cb75ead6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f12850aa-7ba2-42af-88f0-1a146e7770e8",
        "cursor": {
          "ref": "02a3433a-397c-4b56-9755-8b8fd3b55b37",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e6182665-7a94-4b6c-bca6-f26e0dd06bc7"
        },
        "item": {
          "id": "f12850aa-7ba2-42af-88f0-1a146e7770e8",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "360ef096-b712-412a-99e9-0cb39830b2fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e0d2ab2-6179-4ba1-b905-be0e7eea1e78",
        "cursor": {
          "ref": "520f790a-7041-4de8-80b1-d9c1e9857719",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "000c6b16-8818-4abf-b049-1f52778070d2"
        },
        "item": {
          "id": "4e0d2ab2-6179-4ba1-b905-be0e7eea1e78",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "87cedba5-1966-4b12-9815-d808610c27b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0bff613-809d-4bc8-9d43-426fa880f518",
        "cursor": {
          "ref": "7fe73df1-3b53-4e64-8a9e-8fd4e3ec3891",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "871031d3-be29-4f21-9878-4165762560bc"
        },
        "item": {
          "id": "c0bff613-809d-4bc8-9d43-426fa880f518",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5be55e99-d7bf-4509-b052-507216415082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a04feb-4e9b-47ee-a894-8630bc8f31f9",
        "cursor": {
          "ref": "7b1d369a-02df-486c-a4d6-f1ff25ffd137",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "65b8c20a-eccf-403f-9fc0-a558f662e635"
        },
        "item": {
          "id": "42a04feb-4e9b-47ee-a894-8630bc8f31f9",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "eae15c2e-b04b-414e-a8c0-f06e39eaaa11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "244077dc-12d8-4bd1-9e33-0da1221090f3",
        "cursor": {
          "ref": "9955a979-ab2b-49a5-8123-b3f8ad974c4f",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3f3e8a2b-77fb-4d19-81e2-de9c260eb2e7"
        },
        "item": {
          "id": "244077dc-12d8-4bd1-9e33-0da1221090f3",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "17298370-b8a0-42d1-9cb5-0e678705875d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4194c759-3b92-451e-9282-c3f902568e29",
        "cursor": {
          "ref": "9cd109b3-9566-43ca-8551-4fd592961a3a",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "550bb826-830d-4ab3-8b7d-c9f20ce59e6f"
        },
        "item": {
          "id": "4194c759-3b92-451e-9282-c3f902568e29",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ef8c3784-3657-4330-8236-5a008ebe6f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4876f231-496b-49bc-a7d3-3b34252a8ebe",
        "cursor": {
          "ref": "2fcc5d24-4af7-4bfd-8303-cf6f16464616",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c2b86571-2579-4709-b2d6-85eeda3120be"
        },
        "item": {
          "id": "4876f231-496b-49bc-a7d3-3b34252a8ebe",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "67b3fec6-63b9-4629-8911-1a28c61ddb42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48a4bb1a-a474-47aa-914e-e35380731933",
        "cursor": {
          "ref": "22c2dd42-26f0-4c05-afce-f25b38e5500d",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "7a0364c7-0c2d-4928-b88c-c35234e4de02"
        },
        "item": {
          "id": "48a4bb1a-a474-47aa-914e-e35380731933",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5c05ee28-77f3-435c-892f-8c74b475a435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "190ada1f-c0bc-4e3f-b14d-109c56c7801e",
        "cursor": {
          "ref": "57f35273-00d4-49b9-a28a-6753bc708b52",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ac6c8104-b414-492a-bb4a-72cc7a7daf8a"
        },
        "item": {
          "id": "190ada1f-c0bc-4e3f-b14d-109c56c7801e",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a04bf2b0-48bb-478b-a13f-63bd6c83d86d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb32e622-335c-42bb-b826-6cf35bb3af6d",
        "cursor": {
          "ref": "e519c460-6a32-4318-b106-e941de9face6",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "198b024a-3601-4ebc-8c1a-1cf9d2bd98e4"
        },
        "item": {
          "id": "eb32e622-335c-42bb-b826-6cf35bb3af6d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "641e012e-3fd7-4f7a-b007-95e578fa7888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc3f10d-ab2f-4527-bc46-a4707f495a4f",
        "cursor": {
          "ref": "9867ab69-0732-4121-8524-b9fac9564a7b",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "bcdf0a4c-94f0-4b10-bd19-06ad6c143842"
        },
        "item": {
          "id": "abc3f10d-ab2f-4527-bc46-a4707f495a4f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "adfbe059-bb48-4204-9385-379a054de0bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a5eda1f-1cc4-4c0b-a081-affc7ade8bd0",
        "cursor": {
          "ref": "e93a1fc7-6f01-4da7-a3f8-e1d3ce6ace7a",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f1fda5e8-7517-4fc2-b86a-e4662faf89a8"
        },
        "item": {
          "id": "9a5eda1f-1cc4-4c0b-a081-affc7ade8bd0",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "3840516b-c748-4cdb-9bdf-aeec606378ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cbb3e88-073c-4033-996b-3b7ba193d02a",
        "cursor": {
          "ref": "881b493c-3e6a-4ec5-837c-86f775ec1e61",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a8fe730b-8680-4158-8916-f5a14aece49b"
        },
        "item": {
          "id": "8cbb3e88-073c-4033-996b-3b7ba193d02a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "83258794-1859-4459-9ba9-cf22670fe1e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c62a15-e5f6-4024-9065-7aaf9edcc51a",
        "cursor": {
          "ref": "afa75020-4ac0-4a08-887b-3fb56698dede",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e9ae95ea-e58e-439d-b263-21e09cdfab38"
        },
        "item": {
          "id": "e3c62a15-e5f6-4024-9065-7aaf9edcc51a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5d955b31-962c-4276-b78c-9f34798ce207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb086a4-f177-4d9e-8d88-dfe283f88fa9",
        "cursor": {
          "ref": "18ad96a0-f802-4ba0-b14d-711ee9e50fc1",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "38cb246d-242d-43f1-863e-d682330721cd"
        },
        "item": {
          "id": "adb086a4-f177-4d9e-8d88-dfe283f88fa9",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b32de5e5-cc7a-4608-9ecd-16e005c672a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce18226-e432-4620-9bc7-a14d44592323",
        "cursor": {
          "ref": "1bf5971c-8bd4-4e4a-b0e2-a374c75d0919",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2520bfdc-44b4-4ec4-bb53-67d1937f917d"
        },
        "item": {
          "id": "7ce18226-e432-4620-9bc7-a14d44592323",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "bd48a07b-ed88-4c5c-97c6-d1e89ec0e97c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a39c2cea-5fc7-4c71-ac2e-79872fcbd6c3",
        "cursor": {
          "ref": "39f68b34-9f9e-413c-84c2-cc3291ad5269",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "5c25da70-d37b-4ce6-ae7d-cdf3f65c7f10"
        },
        "item": {
          "id": "a39c2cea-5fc7-4c71-ac2e-79872fcbd6c3",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "fe4051a1-dd59-4192-a149-e322b6f309d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bceae741-f8d5-4f16-94f9-046b74a75111",
        "cursor": {
          "ref": "8a6c57c4-1209-4898-ad89-d8c886216e1d",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "5b4d84f6-dda0-4cf1-a652-256fe3bdb613"
        },
        "item": {
          "id": "bceae741-f8d5-4f16-94f9-046b74a75111",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d20995f5-1816-402e-bbfe-a1a7040055b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a504d0b-b4fe-4b47-9f70-bfb48989f4c5",
        "cursor": {
          "ref": "91eb3fe6-fbbe-4bd2-868e-99c5a1cd2bc2",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "0aa7cfde-b8dd-400c-87c7-6f756458495b"
        },
        "item": {
          "id": "0a504d0b-b4fe-4b47-9f70-bfb48989f4c5",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a7846c3e-ff36-40d3-b836-56d6d80c4e9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271d8f3d-adac-46a9-a0e3-3592ee986890",
        "cursor": {
          "ref": "2cba8a24-fdcb-409a-b9da-3f10cf989a1e",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "57a12aa2-2a78-4d83-994f-a02f038db4ec"
        },
        "item": {
          "id": "271d8f3d-adac-46a9-a0e3-3592ee986890",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "16c8d9a9-abe9-4ef3-9501-03861fd26fa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813ca0f0-ad1f-446e-b145-626f0915f9da",
        "cursor": {
          "ref": "bb4fbdc7-9661-4c5b-a113-ae037a4841f3",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "147a1d35-9358-4fb4-9819-701756274b86"
        },
        "item": {
          "id": "813ca0f0-ad1f-446e-b145-626f0915f9da",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "24d001de-a4d5-49b0-861e-af74ecd87f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c182ce0-09d4-4e5c-9a26-b0de329ad2ef",
        "cursor": {
          "ref": "bf48ddb9-a128-4583-b3bf-a5366a9ca358",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "999562aa-0b10-4963-a89d-bc784da59ca0"
        },
        "item": {
          "id": "0c182ce0-09d4-4e5c-9a26-b0de329ad2ef",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "6493b3cf-6853-4cde-bb1f-acd9b78a96e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db4d8b9-f026-4b29-92d7-654ac1aa70fe",
        "cursor": {
          "ref": "5ab78394-a6bc-4059-9099-1bf0d5049268",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ecb45177-5ac4-4aa7-ac0a-c6330baf5c5f"
        },
        "item": {
          "id": "8db4d8b9-f026-4b29-92d7-654ac1aa70fe",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "45511bb5-d000-4b9c-bd63-89b4aba6f4c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3cc1d65-2b55-4328-8afd-abe6512c1be4",
        "cursor": {
          "ref": "44146aec-0d60-4a81-94b4-94a4d63b9960",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "a0aa54ac-212d-46f4-9d1e-615fd26b048d"
        },
        "item": {
          "id": "c3cc1d65-2b55-4328-8afd-abe6512c1be4",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "4dfdc301-79b3-4553-8729-1ac5d541b880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ea2960-a804-4595-937d-4a7b7faa7db5",
        "cursor": {
          "ref": "c9ffa2d1-04b9-479a-89e7-504c8ca7b808",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c780b8a6-1d2d-48bc-a75e-73d211f84123"
        },
        "item": {
          "id": "c0ea2960-a804-4595-937d-4a7b7faa7db5",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f0afe653-2648-495e-b8d6-e89406ffb32e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def2d86f-2a99-4731-b6e9-030c32ef359e",
        "cursor": {
          "ref": "9027970c-9c98-45a8-b188-dcf149190a53",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ae2bbc20-6d3d-49ae-a692-0b05cc6f0c35"
        },
        "item": {
          "id": "def2d86f-2a99-4731-b6e9-030c32ef359e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "adef0541-b9ff-4af6-b07d-865e3002f73e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ec2f40-d17a-4e42-a886-11bcda372fc0",
        "cursor": {
          "ref": "67c931ff-e7ce-452a-8ef8-21acdd4b301d",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "8f1df642-53a5-4f6f-977d-924fcc2880f3"
        },
        "item": {
          "id": "c9ec2f40-d17a-4e42-a886-11bcda372fc0",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "39e1aec4-0ed7-4602-ad09-635ab4e7157d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e94704-9a5b-4e97-8d01-8787c78d1ae0",
        "cursor": {
          "ref": "61557166-c070-4c35-99d7-3555a29a206f",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "1e9596df-0bbf-4c0d-8409-12b809ac96dc"
        },
        "item": {
          "id": "08e94704-9a5b-4e97-8d01-8787c78d1ae0",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "f0b5b1dc-36d2-473a-bca7-93b00358f644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc9f99a9-5cb9-4215-a9e5-4d0b6f416ed9",
        "cursor": {
          "ref": "914cf869-dfac-4bfe-8c3e-524916f0b2fd",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2f557501-3003-4e58-aa28-78896786ee41"
        },
        "item": {
          "id": "dc9f99a9-5cb9-4215-a9e5-4d0b6f416ed9",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "148b53da-0d26-4203-8936-2ebc84ad8617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7429199f-7dfc-401d-9cf8-3f2f43f5920e",
        "cursor": {
          "ref": "c4c311ed-bdcd-4f0e-8d54-76d2626d2bb4",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d07660a2-8be5-4764-a994-220a04f856c6"
        },
        "item": {
          "id": "7429199f-7dfc-401d-9cf8-3f2f43f5920e",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "04d8595d-c816-4aaf-986d-d35767338bbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50da9209-51bd-44d3-bb35-694d04481823",
        "cursor": {
          "ref": "7a131d74-438c-44dd-8baa-790480cbcb81",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "08d94317-d5d1-4b7d-9d48-698fd79c0e14"
        },
        "item": {
          "id": "50da9209-51bd-44d3-bb35-694d04481823",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c297f304-7081-4e64-bbce-b30c8b534820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ae577e-1fb2-4b47-9cfe-6e85629d6542",
        "cursor": {
          "ref": "c789f7ea-aadf-46aa-9d09-6c9bd20b456c",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b670fbff-3699-4ecd-832e-b52edc00287b"
        },
        "item": {
          "id": "45ae577e-1fb2-4b47-9cfe-6e85629d6542",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "01531294-0d82-4d02-af87-301b50a18a9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c789ed-02f2-462d-a708-83920cfc7d37",
        "cursor": {
          "ref": "e5270c51-e91e-4ad5-a9d2-5484f85803e4",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "5427f7b5-4a1e-4e81-a6fe-5b2fd8badfda"
        },
        "item": {
          "id": "f0c789ed-02f2-462d-a708-83920cfc7d37",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "12ae10d2-d26c-4129-b2c9-a53b232a215b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549d4b76-fda9-49ed-afcf-26a639b26f60",
        "cursor": {
          "ref": "85a4f241-1766-4de1-a6f5-c3a3df8d58d8",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "43ec77a5-f555-495e-b5bf-ddb784b95cb7"
        },
        "item": {
          "id": "549d4b76-fda9-49ed-afcf-26a639b26f60",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c5f37784-ff98-4aa6-aeb2-13af2dc25382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b3ed71-7cae-439f-83e4-7249396cff60",
        "cursor": {
          "ref": "b3802643-94de-46ef-8d15-729ab02b47d0",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "92a4cccc-dea6-42d4-8baf-6c459a366a44"
        },
        "item": {
          "id": "90b3ed71-7cae-439f-83e4-7249396cff60",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "84c700c0-e28c-4a7c-b62e-9df242ad3d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a0090ce-eaec-4789-b20f-e6d3d5c0cc75",
        "cursor": {
          "ref": "910a0686-1209-4eed-a490-4685ae87d34f",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6da0707a-3abe-4dad-81e3-bc0fc9374f63"
        },
        "item": {
          "id": "4a0090ce-eaec-4789-b20f-e6d3d5c0cc75",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "4d2e1091-79ce-451e-967c-7b0c5c26b96c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08426650-1dec-46c1-87cd-db0074c632cf",
        "cursor": {
          "ref": "49d649a2-0216-4fa7-a90e-cb5e4d0106d9",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "fa541872-fa11-4a7e-8b0e-c8ce6e1d34d5"
        },
        "item": {
          "id": "08426650-1dec-46c1-87cd-db0074c632cf",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "5c77c708-7807-4d3e-8e20-497f81eed4e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d07a0756-c92f-47a3-b7d8-4ef4619e186f",
        "cursor": {
          "ref": "e91e3343-23e0-4b30-8ad2-efd69100a013",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "8d66e81c-d737-49cf-a5da-ab0a05cc0e3f"
        },
        "item": {
          "id": "d07a0756-c92f-47a3-b7d8-4ef4619e186f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "2659d7a9-5bd5-4702-b94d-05eec4b71caf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd051da2-36ad-4e2c-a4fb-e79011110191",
        "cursor": {
          "ref": "abe881d7-ef54-4f94-8bd1-1c09b5ac32d5",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d8b8f636-3a0f-4a2b-aa15-133b51363923"
        },
        "item": {
          "id": "fd051da2-36ad-4e2c-a4fb-e79011110191",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "e919d74e-5e98-47cb-93f0-7f854b934198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67009647-4b72-4ebf-9ad4-0ae38d7c1793",
        "cursor": {
          "ref": "3093e73c-6009-4212-b456-8e8bda97024a",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "5300606a-aba8-42be-9cac-5855992eab5e"
        },
        "item": {
          "id": "67009647-4b72-4ebf-9ad4-0ae38d7c1793",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c02b02d0-30ee-4204-b9de-e26863565dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a1f88a4-9af5-4f2a-919a-7f88335dfcc9",
        "cursor": {
          "ref": "642e8fe7-bff8-428e-9fea-f571cd1dae1f",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c09ac2f5-1ace-4d14-b428-3c9bd3ff6b1a"
        },
        "item": {
          "id": "8a1f88a4-9af5-4f2a-919a-7f88335dfcc9",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "6d59fd43-8bf5-4217-80a6-7a9023905454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6182d8c5-b287-4d1b-8f5f-070441085b84",
        "cursor": {
          "ref": "8400aab3-c25a-4ac5-8edc-fbc1acac916f",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "19a66c64-e123-4611-b331-c175240a0cd2"
        },
        "item": {
          "id": "6182d8c5-b287-4d1b-8f5f-070441085b84",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "4f74d6b5-7f7a-4fa8-a1c0-615972f9e37c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6009d518-82b9-4781-ac63-c1d5eff0c80a",
        "cursor": {
          "ref": "66d88439-4056-4ebe-96fb-1739cee02198",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "753637e2-2f78-40ab-86d6-c0cd33d3c91a"
        },
        "item": {
          "id": "6009d518-82b9-4781-ac63-c1d5eff0c80a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f7e7607f-376a-4c64-88b3-75d679b9ecb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c79825-e706-45c6-adf8-f2da6b053766",
        "cursor": {
          "ref": "55b73b5c-0d9d-4410-ae16-55cda5aeea5f",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "a75eaa38-1b06-4fb5-8aec-873e3ea2b4c4"
        },
        "item": {
          "id": "86c79825-e706-45c6-adf8-f2da6b053766",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "232aa16c-2f43-4bcd-9ab0-20103f89c2e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1fcea7d-a467-411c-af4b-4580e3142541",
        "cursor": {
          "ref": "69f4abc2-a7f2-48f8-a495-d5fc6eef00eb",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "2935a53b-7674-4fb4-9f7c-0f81d92dcb5d"
        },
        "item": {
          "id": "a1fcea7d-a467-411c-af4b-4580e3142541",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d161da01-ff92-4820-90ad-cf7a36b34b3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "913f3db8-48de-442b-9841-cc6e5f675858",
        "cursor": {
          "ref": "6310743f-7acf-4173-88b0-e9eaecea0588",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e8869704-c1cb-4bbe-bff6-6674f5c04f0b"
        },
        "item": {
          "id": "913f3db8-48de-442b-9841-cc6e5f675858",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e21d8941-d10e-43cb-a93e-8ee2b287e57a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fdce46b-ba6e-4968-b326-fbd13c6c1882",
        "cursor": {
          "ref": "63d3da20-7516-40b6-8309-6e45932d8901",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "d18f2eb1-495a-4515-803d-3d0a5aa3753e"
        },
        "item": {
          "id": "3fdce46b-ba6e-4968-b326-fbd13c6c1882",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "d454ffc7-5451-45e0-8155-7e42eed31121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d635766f-617c-482a-8931-f70eeac48056",
        "cursor": {
          "ref": "4aeb58f5-a6d7-4171-a435-61e0545508fd",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "061fd8b3-3ff0-4604-acad-08cf17740e97"
        },
        "item": {
          "id": "d635766f-617c-482a-8931-f70eeac48056",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ed9bd350-4c93-4d66-bf4b-28c6b5f4d7ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc71cae9-8f14-4874-b0c2-59edce9ba064",
        "cursor": {
          "ref": "229afd14-8629-49f7-84f8-c4afe692d9ce",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "79074b79-c4ec-466c-af45-edec1edb7ac3"
        },
        "item": {
          "id": "bc71cae9-8f14-4874-b0c2-59edce9ba064",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "097abe0f-cf88-4806-92c3-be03101b01b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff8a214-8a25-42da-9785-8a4a6b694a89",
        "cursor": {
          "ref": "45f5775d-ca8c-43ee-a5a4-d0afb7891737",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "59c7611c-1bad-4de0-b4e7-3b4d7a67165d"
        },
        "item": {
          "id": "8ff8a214-8a25-42da-9785-8a4a6b694a89",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a338e3d8-bfcf-444d-a5bb-22c3595e08c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d074ee-bfdf-416c-bad9-4bbdde00ac2c",
        "cursor": {
          "ref": "9c36c5cd-4f52-4d26-b649-55e16b783fb2",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "5d0021dc-f508-47e8-9aa7-dd98a6b48805"
        },
        "item": {
          "id": "f1d074ee-bfdf-416c-bad9-4bbdde00ac2c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "55a68a36-101c-4944-ad0c-19e4c7bae11a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4951fb24-2ca3-4772-9987-1ec1cba064e0",
        "cursor": {
          "ref": "b8ede08b-dc9d-4c86-b2bf-31fb7422bb0d",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "5d009723-aefc-4ee8-a709-07731fbdbc51"
        },
        "item": {
          "id": "4951fb24-2ca3-4772-9987-1ec1cba064e0",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "09d0f94f-e29d-4da1-bd42-1739922f867f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a007a1-9d30-49c2-a969-c83c587e47af",
        "cursor": {
          "ref": "d0aeee41-b38e-4d7e-aeb3-40fd85b6a6f0",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "c717a79d-de85-4325-bfba-61a87585eb0a"
        },
        "item": {
          "id": "e9a007a1-9d30-49c2-a969-c83c587e47af",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "920b87f8-6e70-49f1-9d48-018e3c136aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c62ca7-554f-4c9e-bee6-32e29dae6387",
        "cursor": {
          "ref": "2643c5e0-d60d-4f54-8c37-20ee1fc07bbb",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "55138133-2d52-4605-941e-61099ee774e8"
        },
        "item": {
          "id": "c7c62ca7-554f-4c9e-bee6-32e29dae6387",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e8e7cdef-3401-4aa7-8d09-40365b4b1d52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a381ad5b-ac98-4210-924a-941cbcf51c7a",
        "cursor": {
          "ref": "e0dd99aa-1d88-48b9-bb09-212091bee7f2",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "50904d13-0bbe-4aa1-b247-363361aee183"
        },
        "item": {
          "id": "a381ad5b-ac98-4210-924a-941cbcf51c7a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "7d103ef3-29ab-4164-8a7a-512d23bfb1d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0614bd33-dafc-4251-8956-dbed9194847b",
        "cursor": {
          "ref": "70572a0d-3ca5-4d6f-8ed3-b617c93d5b57",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b6e67a65-75a1-416f-be29-71a57864f913"
        },
        "item": {
          "id": "0614bd33-dafc-4251-8956-dbed9194847b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c21028ca-1a6b-4474-94f9-941ae0620124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44988c4a-3fd2-43aa-af1c-65984ddfc601",
        "cursor": {
          "ref": "24cff692-5fc2-496d-9c6c-5e8f9a0fdcea",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "0396399c-4e5d-48ff-a697-283836b07a51"
        },
        "item": {
          "id": "44988c4a-3fd2-43aa-af1c-65984ddfc601",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f8548015-ab06-4f63-a6af-cc810ac00e0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed90dc53-1c9e-4351-a09a-065d29e36183",
        "cursor": {
          "ref": "fc9f47ab-71b5-4d02-ba42-ff6a0d2a5327",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "a488190c-d18e-4947-8436-009f5f194162"
        },
        "item": {
          "id": "ed90dc53-1c9e-4351-a09a-065d29e36183",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a6b3e5b8-6cb0-4030-bd96-f72a03637cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "729a3b5f-872c-4ae3-af62-5cc4bf3b5577",
        "cursor": {
          "ref": "28415d42-352a-46df-b517-12e5a5fb10ec",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b2910fe4-ec95-4dd5-a607-cbbfae970fbf"
        },
        "item": {
          "id": "729a3b5f-872c-4ae3-af62-5cc4bf3b5577",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7e552902-fbcc-4e8a-9415-e0770cccccd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "359e0807-1770-4b88-9e7d-c6ef876cb5e2",
        "cursor": {
          "ref": "1e24929b-8718-48fa-98bb-bd72fb544b77",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e2b8f7d2-f012-4a37-801b-e27521f0e92c"
        },
        "item": {
          "id": "359e0807-1770-4b88-9e7d-c6ef876cb5e2",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "9de19adc-250b-4045-93ea-a3b8e913dbda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eddc4f64-fbd6-4775-aff0-c81c620f2426",
        "cursor": {
          "ref": "f569ef8b-0085-4beb-b17d-51cc448dc184",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "daa09046-4ea1-43c9-b99a-795e13eee038"
        },
        "item": {
          "id": "eddc4f64-fbd6-4775-aff0-c81c620f2426",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "395db93c-fe65-4435-a61e-82d4f12d1e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e23b29-11bf-407b-860e-b2f40d5b07fb",
        "cursor": {
          "ref": "d5d12667-03e1-42c3-9aab-390cfe9b42a2",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "9c76bf4a-d8d5-4287-a1db-1d9df2220944"
        },
        "item": {
          "id": "f8e23b29-11bf-407b-860e-b2f40d5b07fb",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "639c4072-4817-47d4-8e49-8a218c24aaf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1787104e-013e-43ab-919e-858fb6056ef0",
        "cursor": {
          "ref": "617f2e49-2322-42fe-bbd8-58f291da691e",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "6efd7f2b-a47e-4944-9c06-2b4be64151a6"
        },
        "item": {
          "id": "1787104e-013e-43ab-919e-858fb6056ef0",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "92ad0833-fa25-4b43-adc4-d10531848e2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0be557a-080a-4776-8952-2943bf187512",
        "cursor": {
          "ref": "4fb254ef-b3c0-4bed-949d-78ae2e728656",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4680a416-3fb3-4595-820a-093c43707e39"
        },
        "item": {
          "id": "b0be557a-080a-4776-8952-2943bf187512",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "9bc703e1-c685-42ae-a7ae-54f0cae549cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "697a26ab-7d64-405b-9747-08a5977fa7b1",
        "cursor": {
          "ref": "b284f040-537a-4da4-b513-58b1d9084273",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "0bfb29c4-9651-4cc1-b217-02ce6e8acea5"
        },
        "item": {
          "id": "697a26ab-7d64-405b-9747-08a5977fa7b1",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "fc4fa99c-6aae-4a37-a693-7c1678054808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "863eb74b-ed2c-4d5c-92a3-5d9d29a1d088",
        "cursor": {
          "ref": "87b50acc-47e2-47d4-a60b-a84825a5dcc2",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f3168bd4-0315-4d90-af5a-9cd9e1bb564d"
        },
        "item": {
          "id": "863eb74b-ed2c-4d5c-92a3-5d9d29a1d088",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "61e7bdbe-0d82-4e34-8435-974bd8d126fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2479dde-2533-4700-a3e1-6899294c7212",
        "cursor": {
          "ref": "c33bac5a-d84a-4c7a-b55d-9df6a3c14dce",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "cb734603-8100-4535-8809-ffff1f2c0b3d"
        },
        "item": {
          "id": "e2479dde-2533-4700-a3e1-6899294c7212",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e416b349-df0a-4a3d-a2a2-e72c3a704b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1ff276c-9cc3-4b3b-b9e5-af9c4cc858e4",
        "cursor": {
          "ref": "09efa232-9f36-4593-91b3-1b0ba7a2d85f",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "9e0dce95-5b5f-4795-88be-d76a88a192a3"
        },
        "item": {
          "id": "d1ff276c-9cc3-4b3b-b9e5-af9c4cc858e4",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "1cbbc852-8446-475d-ab24-e9e2ce8e4ef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f083bea-0328-492b-909c-e9d795e39ad1",
        "cursor": {
          "ref": "7b7e4cfa-8d26-48a0-a30c-fcb196021bec",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "657dc4a1-6558-4621-aa23-bacf99e26280"
        },
        "item": {
          "id": "5f083bea-0328-492b-909c-e9d795e39ad1",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "cc335c5e-a452-4197-b62b-a293c7cc6464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aabe0378-e69b-42ca-ae40-eec4a77f9d20",
        "cursor": {
          "ref": "5ca759f2-bb63-4b4d-bff1-3efac75f162f",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a77c8a08-312d-4714-9542-43c62dc2db1d"
        },
        "item": {
          "id": "aabe0378-e69b-42ca-ae40-eec4a77f9d20",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "54598501-5dc2-4f00-a1cf-7eeb85f79b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c221b8fd-f8dc-4548-8354-09d6e6f54a6e",
        "cursor": {
          "ref": "d905d764-d370-40fd-8efd-0ffb33b8c1c9",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "aeee2e23-0d02-4918-a436-a6af9b86ef6d"
        },
        "item": {
          "id": "c221b8fd-f8dc-4548-8354-09d6e6f54a6e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "5c2d7caa-72cd-4dfb-ae75-166351b1f3d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee44b20-e2aa-4809-894c-9ff1e90d3415",
        "cursor": {
          "ref": "2684cb65-7a01-43b1-afd8-611a4d332a53",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3955b988-0069-4ed5-9717-fc3bce858852"
        },
        "item": {
          "id": "fee44b20-e2aa-4809-894c-9ff1e90d3415",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "84a123a6-32d9-4356-abfd-9f7787d43ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60d894d-7816-4e72-b80e-2197ddbe347f",
        "cursor": {
          "ref": "3614f9df-cd48-49f1-9455-159a1d231318",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f52d38ac-6e27-4675-bc09-857c6c6d9f0d"
        },
        "item": {
          "id": "d60d894d-7816-4e72-b80e-2197ddbe347f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b1f612b0-bade-4d66-ac79-f395b171e3f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cbcc683-5af3-45fe-b043-06e68350b39c",
        "cursor": {
          "ref": "0664b1e2-829f-406c-b7a3-360f55e5cd74",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "bd201d2d-fe75-4218-a44e-650d844d6a88"
        },
        "item": {
          "id": "8cbcc683-5af3-45fe-b043-06e68350b39c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b10754e3-bffa-4277-a779-e696661d1fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3571b586-e3a3-417b-b14f-feb9fe09f03c",
        "cursor": {
          "ref": "c0e95b3c-ce87-4309-953b-69bc8a2f3398",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "12e27b0a-2a3b-46f4-a392-38a0403989fb"
        },
        "item": {
          "id": "3571b586-e3a3-417b-b14f-feb9fe09f03c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "9907e56d-1df3-46e6-a5eb-ba7e4ef72e1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9396dfa-6d16-493e-b9d0-88606e22a092",
        "cursor": {
          "ref": "a1d4bf1b-0ede-4918-9e05-2b12186a78ea",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "299fbfe5-2843-449f-9d32-85c7b3f0d3f2"
        },
        "item": {
          "id": "c9396dfa-6d16-493e-b9d0-88606e22a092",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "dc2498af-a4fd-427c-b1ce-65a6cef97817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a2d4bc-e25c-4799-a9d8-edf74b09c356",
        "cursor": {
          "ref": "41f07fcc-dc34-4491-937e-9db14cc2643e",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "2cee0f67-9bd2-4c2e-b8c7-8cb3d7540bc0"
        },
        "item": {
          "id": "d2a2d4bc-e25c-4799-a9d8-edf74b09c356",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4c83cb72-6083-438d-9406-359991586dd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f80dc794-284b-43ab-a9b0-a341589d894b",
        "cursor": {
          "ref": "ce2ee18e-aa6e-43a4-ab53-4d967f8e291e",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "3813f392-3748-438f-926d-6fc6ad9a4e8d"
        },
        "item": {
          "id": "f80dc794-284b-43ab-a9b0-a341589d894b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "6f95807a-649a-4e08-83e8-61fa506c3dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c624b7c6-804a-4eb0-b129-f7e927efa3fb",
        "cursor": {
          "ref": "58de8246-8e31-463e-9b06-5fcc72011b0e",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d37c98b0-ab37-4193-b596-c9349c71879c"
        },
        "item": {
          "id": "c624b7c6-804a-4eb0-b129-f7e927efa3fb",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f2df1e8d-2380-4732-8667-73cc207f4c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd8bcd5-fb6c-4b47-9b48-211d52b79ca9",
        "cursor": {
          "ref": "f4bdf59d-f2aa-4885-bc65-28056be63a7e",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e983bf4b-b212-415a-b5d0-46a440d317cd"
        },
        "item": {
          "id": "bbd8bcd5-fb6c-4b47-9b48-211d52b79ca9",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "abacbc62-ab60-4ab0-9c68-a36580dba57f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c61263-f0f1-42e0-84a7-00e6d4af675f",
        "cursor": {
          "ref": "4634e70c-1ecc-4d1d-9b0b-ae32fa923045",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "16c19970-8208-4cd9-bcd2-cc10fffe898c"
        },
        "item": {
          "id": "96c61263-f0f1-42e0-84a7-00e6d4af675f",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "0517a96f-ca33-4083-9132-2fcb04a28001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e265f2-969f-4237-afc4-5c01a5c98e5a",
        "cursor": {
          "ref": "d7705a2c-7974-4829-a9c2-ad2fd1154aa6",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "2bba2af2-254e-4707-9430-5c7cc1fc9527"
        },
        "item": {
          "id": "15e265f2-969f-4237-afc4-5c01a5c98e5a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b8a387be-be46-430e-906b-ae307e86632a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9617a823-c6a1-4708-b179-94fe618fd229",
        "cursor": {
          "ref": "c3c560bc-1196-4ac1-888b-7d65097579db",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "6c901e8a-c14d-43a3-9a3a-4f3ef68dd543"
        },
        "item": {
          "id": "9617a823-c6a1-4708-b179-94fe618fd229",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "6aeee96f-c41a-40e7-af6a-64259b3cc74e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6304a41-2c54-42a9-b5ad-da8716925a98",
        "cursor": {
          "ref": "91a71222-7856-4c22-a4aa-79895bda04a9",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "2503f0e5-351b-45f3-bb66-62fa29c783eb"
        },
        "item": {
          "id": "c6304a41-2c54-42a9-b5ad-da8716925a98",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "27d14fa0-b2f4-4cbe-8f8d-41b91f295042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd0412b6-cf56-4ba8-8bd0-6198b77549d5",
        "cursor": {
          "ref": "d388e53f-ecb1-4ee4-a8ae-2135a7d5acf0",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "2be1ac50-c41e-4f79-9de0-bf30acf5a956"
        },
        "item": {
          "id": "bd0412b6-cf56-4ba8-8bd0-6198b77549d5",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b5bc9288-39d2-47fa-b840-4a95844708fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b06467-d7de-42eb-8264-6c8b5bf72a91",
        "cursor": {
          "ref": "aa1eba20-ea51-4541-a701-4b07cff0a0b9",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "92039a58-7d1d-48ce-b3c4-88157be26961"
        },
        "item": {
          "id": "87b06467-d7de-42eb-8264-6c8b5bf72a91",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "e31634d8-9cb6-46e4-88cf-9692ad9a281a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "b6d9a8fd-f1c7-4c3a-b67f-b80669efc173",
        "cursor": {
          "ref": "9c8e527c-c793-4609-bfe4-027a3d653b95",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e2f04c20-62d7-4e32-8b6a-b164a56d3a77"
        },
        "item": {
          "id": "b6d9a8fd-f1c7-4c3a-b67f-b80669efc173",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ade438ec-b0b7-49cc-98ec-c15f23645083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "8202e436-f2fd-493a-b479-22319c1f0951",
        "cursor": {
          "ref": "74b6da00-7c12-4faf-9c90-49dce42d187a",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1edc7cac-5a60-4ea0-97b7-2aefd089d8e1"
        },
        "item": {
          "id": "8202e436-f2fd-493a-b479-22319c1f0951",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "88ba78f5-bac2-4f7d-816d-7517a45b4130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "c7b4635f-823d-4395-9971-06e731f0da61",
        "cursor": {
          "ref": "dec7e45e-551d-4784-9298-2a0e21b0b6df",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2963e7c4-7f86-4011-9f3d-0eba6f2cc719"
        },
        "item": {
          "id": "c7b4635f-823d-4395-9971-06e731f0da61",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6e283906-7d06-4277-9899-89bf52aeeb37",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b4635f-823d-4395-9971-06e731f0da61",
        "cursor": {
          "ref": "dec7e45e-551d-4784-9298-2a0e21b0b6df",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2963e7c4-7f86-4011-9f3d-0eba6f2cc719"
        },
        "item": {
          "id": "c7b4635f-823d-4395-9971-06e731f0da61",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6e283906-7d06-4277-9899-89bf52aeeb37",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca7a26a7-eb0f-4945-8f44-f7e20c37d731",
        "cursor": {
          "ref": "d61b1228-cf82-4a17-be5f-fb1d6bb96245",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "866d4bbd-89b5-4a5d-b4a4-424acae337ed"
        },
        "item": {
          "id": "ca7a26a7-eb0f-4945-8f44-f7e20c37d731",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "a2ff83ab-811e-4042-a4b1-fcfcffbd9f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e781a3-5245-4846-81b0-bb6ecc1ca24e",
        "cursor": {
          "ref": "4fb828c7-e014-4b62-bda5-b423d3a0822d",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "61fcbd17-6ad7-491f-8418-2523460f9514"
        },
        "item": {
          "id": "78e781a3-5245-4846-81b0-bb6ecc1ca24e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "34fad877-7282-487e-8c29-74f0a3d77cf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}