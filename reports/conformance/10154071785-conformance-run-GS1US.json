{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "4ed7fbbc-acb2-43c8-8f68-785a629e2565",
        "name": "Clear Cache",
        "item": [
          {
            "id": "239147b4-6225-45e8-a8b8-f711b383ed5a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a0f0d99a-4929-43f0-a5fe-4b68bc404433",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8e9b5091-9f1b-43ee-bd05-8a7ec0a8b556"
                }
              }
            ]
          },
          {
            "id": "f9bbe31e-10fb-4334-b4c0-02cd2297eb6e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "aceb7c53-36db-4f7d-b438-ce868dc2155e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8bff8253-c5f1-42e2-9530-019428cc230d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "040d1448-4b7b-43c2-87cc-3ea43c994752",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "13480eee-73e9-446f-905a-a31b51ccf16b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8ce57d09-3037-4715-b6dc-152241baf606",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8834160a-3502-430a-9d0d-8b20308e8cf4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f62c1a63-c088-4019-8a6b-a36e17e917a8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "46ffc4ba-43d4-4af6-8e51-f2e04d750ae1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a65e43a1-3482-4fd6-830b-d6088ce016d3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f0f21703-eb8c-493a-b60b-e799204db43f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "de884471-558f-4e2a-afee-c690cc1045d4"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f4ebc46b-8a08-4445-aaca-fa3a4d99d6f2",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e3071165-890e-4fe4-bd53-636e79cb346c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f9339b6b-caec-4f7f-b525-165ec669f73a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3eec50ec-80bc-4653-b41f-18f0ac464782"
            }
          }
        ]
      },
      {
        "id": "72a48f9a-80d9-49e4-88b3-3ccaeb4382fc",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c4a502b4-87e1-43d9-95e9-b8b4aede7a0c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9be245c3-5cd2-44a0-9f28-c79d652cb004",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c3a4164c-9243-4655-a92a-c70ff9e97fb7",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4128ade-cdea-4909-ab8e-bed59553e1af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5a4d458e-d9d1-44ca-bb1b-aa91deadd066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "076adcee-e6d0-4a2e-a9f5-e8870655f59a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "582a8381-da98-4537-875a-9576fcc28b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8fabe304-1f9e-42cd-bb06-8f67b323cf2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc59747b-24a2-4987-ae7b-67c76a3f6f01",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adba44b3-3192-4dec-a0cc-f9005f62c701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "516ad11f-2ed3-41df-b658-d050783922f3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "68f183f5-0fdb-4978-a04c-9c8f301193eb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0087daa7-ab02-40a8-bfb9-3ec697bfccb9",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f31001b-e41e-4638-bab3-d72929002d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c24bbaa7-47fa-4fdd-8fcd-aeec7cad7f7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc62755-2bba-4baf-a5c3-669b97a435b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1802fc7-1acf-471c-b3c1-9d05ae7fee06"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "277e95bb-dbd2-42da-b17d-6b4cc4ec5a21",
            "name": "Positive Testing",
            "item": [
              {
                "id": "49a93628-0ea4-4a3d-8d8a-9bbaea3fae69",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f471695-3ece-437b-a813-abdd93cc1e9b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "29c0e056-32e5-4ccd-a769-e137f129be11"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d39aa604-700f-4a86-9afe-5da51712053a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "61814146-8a1d-4d97-885b-e2d96e3250ce"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5fdd0c59-04e3-4937-9cb7-cbbf0b2b3404",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "26d7d5ba-3082-4a97-9481-f0b0ca441c7a"
            }
          }
        ]
      },
      {
        "id": "e3e5a0df-9cb3-47d9-8fe4-e5c82e5d0b31",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "0ec46f5f-cee0-4c73-8a75-268df1ecb5db",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c31221f1-c998-4f0c-95d4-a1ce69deaf90",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "79f0c809-4b68-45ba-9ebc-39284534e4c4",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1cef0a-b643-4316-a1f5-f911037e6b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "852b1830-ed1b-433f-baf3-838dd6b18b22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c30586-87c7-4fcc-8ca5-81e0b190cd18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de243005-ec57-41f6-990b-de0aba63a74d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45fc6113-5755-475f-9007-f299842b484f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "743f856a-ccdd-4080-ac67-bf919f9fd6b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71cbe891-955c-499f-9e7f-a8f51bc813a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82051d0c-2703-427d-8e3b-b34c7e41e802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05cd86b3-cb62-4df2-b3fb-9818071a3836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bdec36d-25da-4bbe-b09d-00ed7c39dec8",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e7a977-16ca-4908-a122-364fcb6ec380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9721b01-3d4a-4c9a-8b31-9cbdb525457e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec582fcd-84c2-4e6d-b283-342f9460aabe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b053a9dd-a677-48fd-89e6-c0eb6e22a3a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b6ad10-2e71-4f55-8bc0-fc41b2c548c7",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41f2bfbe-882e-4afb-abc4-d93204c34f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfe571a6-0c37-48d8-8241-ea029181c2e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9af7fc2c-c9db-4295-92a2-8adc3743c6b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f23ea092-f45b-4803-914c-ed75f792f943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c91b9d-ef92-43f7-aa1a-fc0ce8058304",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9c7f8a9-5c8c-4b29-8b34-44b60fb7be78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "808aa84b-7344-4810-8eb0-522475622207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "491649f9-d47f-48a9-98ba-39a9524d0c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "09b8fd9b-7611-4ea2-a8a8-9408c1830caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074cf730-58d8-46b2-a53e-e6edaa3f60a9",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f10474-2e16-4684-ac91-432b8a42639f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dbd3428-7fb5-4277-b303-770e50395634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb6d9fe7-1535-4c3d-9df1-fb3eaef62bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93be9ff3-c74c-494f-8074-59455088b676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08cad339-b368-4a32-99d2-96a5e8c8bb97",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81167a35-abe4-4f1d-bbfc-4a2f2fe948de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23a91436-8698-4335-809f-30b1e52f8e85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd415ae6-e5fa-4235-b79f-fc495922666e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72a2cc23-d4bd-4767-bfeb-db0d2c2ce8e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66357ad8-7243-4094-8920-961c1dcdd691",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "644afd31-8fbd-4190-a85b-85d4862aa3e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b7a620a-3cb3-494f-ac94-aca2f280b70c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea1d4903-b96a-47e3-b4bc-848511da74a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9609f2ad-1432-4d5c-9ac2-a8fc6e9a430a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a1ad5d-fee0-428a-927d-fe6bca3fca02",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67042f79-a909-4ee3-a62a-8f36aa988252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "964df8d2-b140-42f4-85aa-96e6c1680bd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d738867d-964c-4d39-b2c2-d20cedbe371b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a651dbf-bbcc-4fe1-933d-1d59ec4afc9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a9648ce-6b94-467a-b591-29bf6cd5eca4",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "231162e4-4334-4831-bf15-6bf21309b8ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f428fbda-664b-4fbe-9ca0-34d6cd5e001d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c3ca46-08d6-44f4-8141-59d2cac6f590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68d700b6-16fc-4d43-aadc-f3dd541a5379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1053d0b-edb9-420b-9280-da44908da462",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "464b1f21-9f0e-409f-9e4a-2a8eecc99a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "839354e0-ac58-46f9-abfe-37788841d71a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f73f1ebd-cbb3-41e5-821e-1c7e60a763c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2a8954a-77cb-4968-b83e-fd8c41e72abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5395a17c-aede-4103-a8d4-992847ee4a10",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d27d0378-bee1-4652-a694-d6a415c54e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e03effa0-7c7a-4e5c-a5e0-509e28d0ed52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8210cef0-537b-409c-ab65-edfaa726f720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e4fa1c0-fc40-446d-9cf9-c665c618b002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d7c1fd5-c1c7-4227-9686-a9ea52563b26",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc40829-2a73-42cc-8aec-52dbbec6bca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b23a995-6ff5-4e29-bea0-358839af9622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76728bbe-d487-4169-92be-3b8c619561ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b11f376-bfdb-46c6-bf5b-98baca39ef9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb08ca8-b07b-478f-871a-7f741821b408",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eed4358-7eb4-401a-bc1e-eeb7e08293e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20bfc717-353f-4f98-954f-185fb9acda8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ebd3cb-4223-44b5-a785-b68fe7d33550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d298c42a-1a5d-461d-92fa-9c9fed082a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b8d4cb7-667a-4ed4-b60b-e2824e0cd380",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2b3ef4-e9dd-4340-8782-06f77d7ea59e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "287b84cd-a6b8-4bb3-9624-d7b5fcb83fca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69678308-4783-46d6-b0df-05f35d01188e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a842b3d1-476c-4091-9ed7-1a6e917c7d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da77aec-4347-4b65-9b30-9b74bd6d5342",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9363e6b-8f23-4435-8701-24640da32137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f192c3be-38ec-4b12-a0a1-377639a1c97e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4be96fb5-e58b-4a97-87fb-48ee3eca2bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "258a7005-cea1-400d-a4a7-ab00b4b53a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95c44581-ccf3-4a9a-b45c-65bd5c4cb672",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb24b3f-b862-416e-afb6-678870f100af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a19ea1e-750c-4246-95ab-278d1a63b3d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b3c0d0d-ce86-4677-9d29-40d8210e84d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df888db1-b26a-406a-b6b5-95d366c7a3db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbe400d8-5c08-4335-a657-7b6a76a146c5",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b7136e-5bab-4500-8b18-1aaf8a073546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1e6db48-e4d3-4dd9-80d8-f0870ff6af79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20080075-cde5-4e56-aac4-13cfccba88c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e252870-5791-41c8-8ca4-b3a6c0acc434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cad8158c-28cc-419f-ac39-cb6a6003bb0e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95db8f55-7180-4811-b05b-27c2541e560c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5fca298-71fb-48f7-9795-0aa15e578249"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ecf33b-fc20-400e-b3bb-577d8dc3174e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "64908d70-5679-4a30-94f6-7f6469b87735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57f320e9-d787-4508-8f28-bd0e456cef50",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "048fced7-47b9-4313-8424-7fb14fcad486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f8aa311-7a9d-451b-a4e8-109b7f80eb53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53bafb9b-f881-45a9-8822-dac9029f3fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "09924e8a-dfa6-4cf2-827d-1d0773052004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adafb604-7491-4bea-bc3f-e4af0398a0d0",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc67e4b-85fb-4fb4-8a2e-714da77d061f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b15a674-8efa-4a67-8487-a5025d603480"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd19d329-65e2-4177-86eb-0fa09f1d188b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f593c7b-d087-4163-93d1-26729dba9eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79c1fe23-2f38-4a3b-b490-8cbad4ab3875",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c377172-3545-4d25-b562-10335c3e387d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2fa170c-3b2b-436a-aeff-04065dccc6ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4038eb2-2c90-4f07-96fa-885163655ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "93b939d3-17c8-41f8-b77f-cf142ae3245a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80dbf81a-9a34-47db-8325-0dcd49d4b15d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f551783e-6530-472c-861f-e3cb6af847d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffa340fd-ae8b-478f-820d-8e3464d74cf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4136797-bcdf-4ac0-b8cb-e5308c351228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "627bfa54-41f8-4c5c-99a3-c844dd3e0eaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "558f430b-ed71-4975-92b5-ab3b3ba24802",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3622882e-8421-41e6-a0d6-17b612cad4b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f049318-541f-46c6-bf51-66e790a3f1b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b535078-563d-4012-8c07-355b2906a0ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f49cba27-0193-45f6-bec5-169ee9521dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ea60858-53bb-4d5c-89cf-777f60991fc2",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c8a180c-e01c-461c-b72b-0d6be24ec4f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb67651d-35ca-4345-884d-18e3b06f8e36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc2f45f7-45dd-4b57-ac77-8691f8c806b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "91721fb1-79d2-4950-a32c-cca19df552e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4013afc-cce2-4b67-ac15-ffc26a5990bf",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a2e97b-3e8c-4472-be35-bc8559f7d76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb31a55b-c3b6-403f-88f5-04f5d42654c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa15009-5f77-4869-a33e-6fa656e0edb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "95841faa-7bd6-4c9b-a254-ca1ece3ab44d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3f295cc-437c-42a5-8b6a-03a6c9f00d88",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15cafd52-994b-4bdb-a241-5bd342189e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bafc86c1-be1e-44c0-b824-53562551c0af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8901976-f153-4a88-a836-4a5e142fcbd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d101db56-ddaf-4f83-bc45-a41e73128ca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad6af32-ea4e-4af8-9a3a-7bebcba509a4",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c24bbfb9-b1fe-4b39-a2f6-fd5838bb8580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "775d9461-6784-4f06-a809-0c07cfb34ecf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a877b14-1d25-4681-bf22-d8fb52a1ae2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "23a8e7ef-db56-42b3-a21b-e68c3b9d698c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68cde414-a8e2-4833-8d26-7567e1c1240a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f888eea-32e4-49e3-8d1f-9e44a33fa828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c90a06c-7b46-410c-91cf-647d9678f47f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38bdd8bf-66c4-433f-8af9-8e76726faf8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "19a14926-a3fe-43dc-899f-4fbc34b0418e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f060231c-ca5d-404e-8847-d7f37aa1ab9d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9887fe5-2ef1-43bd-bc1b-c089a99b2dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60604da4-723b-4c85-9227-f0b22cc291ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4159334-cbdb-451b-ad53-d61b2c2a1c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9d7ef82-3f89-4815-bad1-71f11f5bedae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5464f92-d0c2-4b89-be8b-eceaa5fdb512",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "309975ec-6350-49fc-8e5f-27534ae23e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03aeacb7-78a4-4370-90d9-e6ba37508f77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc44ed9-3e4c-4865-a22f-a5989c9c8286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1117394-bfe1-465a-b2b9-2c3fcb11a118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dad51e0-28b6-4ac6-8d3c-b9cd9eaa2714",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36cfd8db-473f-4be7-8a0f-2bcef5d5cd18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c13da7b9-2e18-428e-a290-bb7f96af9c8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d238b49b-7b7b-4cb9-8b38-cd039216270b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "060ea75f-b718-4d43-8d28-ef619b475a94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e6b788-f886-4ed9-88f0-8a3e780e0e44",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df349fbd-d162-4307-af82-562c55688f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd512bfa-75bc-4568-8554-6a9e2c035c70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d844809b-517d-41b7-89d6-029ca1b0dc3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc53c752-3a7d-4d9d-b018-eb2dd8adea31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a72f00-588f-44a2-8ec0-b15fff40c9a1",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "886cfa85-158c-4443-b80b-74daa7c8dea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2906a1fb-1a3c-435a-83cc-b8a4ab9eae37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "869584c6-f999-4201-b32f-6c2abb95cc00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6078dfb0-15a1-41fd-9442-3178d63801e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60dfee3c-b7cb-4235-ba77-69bc38e1a431",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b936a7-29fd-48cc-a3f0-3f194e06b93c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d4c201c-551c-431b-b41a-bc7732b4f40c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7243d281-9c66-4e5c-b52e-2c330695fcfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "fc41f396-3654-4851-852b-39c805182dfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c103c00-4125-49d0-9e39-3e8ea0d00c88",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e972b21-1a5d-414c-8500-ba9b0561023b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "94a343c0-dddb-45df-bd64-453917e99c50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd066dac-0622-4a4d-b1d6-54c97dedf08a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ba491984-e0a6-4098-8f1d-787873448d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "242fb8cf-f9f7-4ab9-b815-ba87c8b6cb2e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f744dff-394d-46d6-a0d3-5b23d3c4c135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50fd496f-20a8-4671-b26e-7eccd7b86047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87001ce1-8e7e-4a03-a525-34f7fac28859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9f322a4-e4ed-4179-aa68-a120474a5b73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca35bfcf-cc59-45dc-b52e-18210f322026",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff6e3b9-e429-4e2a-898f-a88c4501c2c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a11a5bd5-82ca-416d-968d-78ca1e2d8356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe334286-4b39-4a5f-8081-12011bd2785a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "80f241df-65ba-4001-a73b-e660d0660025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed35335-74f1-4d60-b562-a87867e3b3ad",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4766852-d1c4-4743-987a-dcb79cc0f541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a0a770c-05e3-4f96-a963-f9415502ae28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e2a7d3c-096f-489e-945b-60187797a9e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ebfe502-25b2-4c20-8fb1-b962dfdb0a47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dce9b436-80e6-40c3-b419-0895e18d6140",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14eafad5-3d1a-457c-84c6-cd60c9488dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25af418a-68f9-4277-9a81-465596b5d994"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe0a48e2-7441-4b7c-b719-6cc59d109b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "125d37af-4dc4-47d2-8966-c45f3b488e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f5609ee-667b-4040-a6d4-16f050d1525c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c955da30-0fcd-43a6-aa0e-c74828403f95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c4edda9-a84c-4f72-b667-6f1883687beb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7116e08-a3da-4713-a5d9-6ebedfc2d4a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "69bd3283-bd5e-41b7-bbad-303e686473f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c68e8486-77d3-48e9-872e-dd83c64c807a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b16c73f1-2ca4-4c97-9d97-0f504fa6bd04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecbd9191-9352-4b18-a57a-1cdef97cf99f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47999135-a386-46c6-96ec-931507930666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "5d211481-bea2-4d74-a262-94cd2dd71a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0805694e-8779-48b2-9034-1ae98ff7e03a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c334c468-1a9b-46b9-a537-f97856a90c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e31caf2a-bab7-4193-ba83-3ffa04d24a26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f26e7c-b44e-4e57-bb6a-301ba27f6b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "df38841e-6f79-4171-b9e0-0a441294e259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "529b0412-8f80-4414-aa19-118f16508803",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "297f33eb-e541-4970-a7ff-2ce33081ae1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12a6051d-b92e-45c1-aa81-8f6a7af9e19e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0349862d-9152-4277-9b92-8b889b6c10a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5553959e-caea-410e-b705-762e7ad26e6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2309f8be-01c2-4f2a-b600-f2d59aa12db1",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5712a5c8-accd-41ee-8644-30ff2c93f249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31810d68-6fa0-44fe-a697-d8ec483f4a37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a39942c5-e0ff-4a55-bf14-55e036997391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "41af3a03-48f9-454d-a8cc-a7a568f0ef06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bd3fcf2-cfd9-46de-9506-c91f8114406e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "098b2aed-b0fc-4f6f-9c4d-9e272eda2c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9385071c-0835-4f30-88be-33e8c20bb9c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c8dd35-0e5b-4e16-9546-cc204c2b3791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "00973651-cc28-492d-b4e6-5c399348c4d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e0e28d1-bfdc-4d8d-bbfd-cfeca76a205f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c377d9e-7216-4f1a-9348-d767948f850b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1459fdc-f281-4d8e-bb72-8854d0876b5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e792c47b-2a59-47ed-a0a2-71965031a30b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "44eee766-aabd-4c22-a47a-3e7771fb8ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf71acdf-44a2-4773-ae6c-a20a9835d492",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "558ed01a-5777-49fc-b8f6-5fde930f9456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09ad527c-1b08-4cb1-8e19-99617029af16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1ba105f-1934-487e-91cc-155db9f1e260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b26ae6e7-529c-4333-907e-0ef3207ef454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b02e99d-c03b-4932-9ca2-6092da2df10b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79688d05-2895-43c4-b692-a145385650bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff4ecebb-c8a4-45e4-9238-4dce0b417b98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd979c46-b058-48db-8656-d88be2f18b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "64091587-5547-49dc-b0e6-e61e60dc64d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec5416f-955b-4331-afaa-18530fc22a50",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4872f75-2943-4e24-a7d0-ddf90696e212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18ef8e24-0bab-4356-b76e-c8eba27f6a3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5400020-738f-4959-8254-00e4a01eacb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a113c810-1b86-4bcc-9a62-ba2a2c53f272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1db1d523-1e8e-4720-8e31-8ed34a078dd7",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50df36d1-98b4-4143-a2c5-3227c24f0e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeb3ba45-7a4c-445a-a416-31f498774b93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d88ed00-d25f-467a-a0fd-ae2cfa0c9e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b3cb1fd-eafd-42b0-b19b-5eac652a7de4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4404772-0d54-45c8-9045-b7261eaba1dd",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c16de187-ad30-459e-9334-37fd830c69cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "961e4201-80cf-4950-a0a7-34d256732c1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4edca4e6-5c6f-45a1-a3e9-dd4b68574175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c0a9e9a-12bc-4e86-b43c-785504cdb5db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b1ea392-1516-42f7-a3dc-b693f807232b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a42d7978-9e0e-471f-9cb2-2ab8619aa7a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6e89669-0e25-4ed3-8f93-b64fb7e548e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee57da1-f8b6-4e3d-b1c3-3e15a3e3a32f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "78fd76c5-00fc-4a46-ab40-92d0c22d5c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cff6b917-9491-4ddf-ae89-9c5a6da9a1b2",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d23375e-0888-4155-a421-9629bbd748a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a51409c7-4b2b-4f11-ac4a-75b4e5c4acda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb0edf35-193e-4c00-b960-98cd55fc79f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f7c1df1-735a-41ea-9c77-08dde761fc04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c72a2ba6-a561-43b8-b7d6-8fe4d7e517fa",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b896f7-5bcb-4417-8dcc-51506adada69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "117f56eb-ec52-42e5-936b-ac034c3803ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24ea5e6-0b2d-42eb-9f1b-92fa38719cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "181adf70-3f49-4a69-80f9-df6fc0c8d1c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38188008-8460-43e5-ab08-bb29250532b9",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc39efec-9d76-4d73-939d-560ba8fb1689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "972b6af9-3aaa-4a28-9617-c18e06cb3d00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85954aec-7b40-4511-9c12-1720a77bf26c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "de152beb-732a-447b-9b63-6afb451dd37b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f3717bb-6c88-4d0f-99e4-b42ce5e4a664",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1025c5ee-729a-45d2-a29b-4a9f1b748821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a74b5268-7d13-422f-982c-221edd2e16cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "772ab1dd-7008-4c39-9cbe-a11b2a35190a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8d05a66-1e18-44fc-8293-cf2f8479d646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fabdbf64-60b1-4948-872b-6eb33e721567",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0aa68a6-3c5b-4e9a-b8cd-ea63ec6031de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38fee138-48e7-4808-ae47-5f698575cc3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee99b08-c078-49e8-a748-b3f1601a54c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ccd51b4-f8c5-446b-8f4e-8e1aa97172aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed983a36-f081-44ef-8ba3-8958b96ff8cd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39702d99-b394-46f5-aab6-70a8562e73aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d0f506e-f30e-4305-98b3-f5e587c56b47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec4dde2-086d-48c0-a8a6-014bb243bcb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "51cb9ed2-f52d-498b-8c24-53204bee0697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1fc1c35-81b0-4b5f-a584-2017a5297644",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c147e035-8108-4cbc-a07c-0d90a375b700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e97d1b9-4a28-4fe8-b574-8f91151d3ecc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c4c22de-2398-4b59-8078-e952dd6fba4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "879bb4dd-a5d3-4302-9f0a-d3bb4ad2cd38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd2fe66c-bab0-4827-bfaf-b871659841fa",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2952ac0-88c9-4134-b462-6a06c038e1ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ef94b6d-4067-454b-89ec-da17adbe9f8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "522790a7-2840-491f-b5ef-8fc53c9ac50c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "52eb6c2c-168c-432c-8e54-b72d417667ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6286b571-184d-4287-bf21-cff15322e83d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0644d8f0-dad6-4f86-be5b-ab75e8c42bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "581170a3-c958-4b4d-9647-4a0e24578c88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dfec4aa-3894-448a-8e58-3b3f58cfbac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "0434560b-f257-4caf-8283-44cc13480579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3beb9fec-47c7-4e44-a604-6df4309a5da4",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acfd8979-f5ea-44dd-b303-d7e3005e938a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40c0f51c-7345-4bd8-ab7c-9baac342921f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d8cc3fc-7551-4f39-b8b3-0be99081b078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c097acb-81e5-47e9-8a35-b15bda006b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b7b144-50cb-431d-bd22-ab09d563e697",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e041e9e-5fee-4e3d-b9ca-4e232e0765f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "214e08e6-7c73-49f7-9426-f55268afcebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3590b04-2287-4a1b-93e3-759d3f1f778b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7409f21f-8af9-49dc-bc19-2ba0f70902a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "918c6635-83e5-4659-b270-b45556bb0286",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd97162b-0e4d-4305-a341-1bd08bffe751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6c31ebd-be2c-4a2f-bbc1-9994783716ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c3be47-aae4-45c3-84fb-cea7a62be450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3ea1f66-dc6d-4b49-be8d-97598e8f49d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d82757-665f-4c60-b2ae-28da7f9270bd",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d8fe4a-2d55-41e8-a1e5-4057c5b3a8d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "273202f6-6a00-4a2c-a023-3225706f2fb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c50ad41a-e752-47ce-a239-374d92622236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ec13fe5-206c-4227-bba3-888d70a1842c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "089e4a61-3890-48e0-9aa8-b689d37fb3ee",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b44731e-bfee-42ff-a505-5cc1d98d1523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b02ba3a2-3e79-47f2-93d5-c170e0cf87e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d382ad9-9c06-4c65-974e-a95857dff860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "65abb3dd-8d65-4842-9683-18f8940a3ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e1e8567-5740-43d7-8136-ff41db6f22c5",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d505ce40-a74f-4f05-988f-adae7e024190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc6fa428-2daf-4345-b964-bad3cd9350df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c4efe9a-9e49-48d9-956f-0cd22675a6cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8b7eb50-b043-4906-8ec4-a10b11364041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13cccbf4-7db1-4f42-857a-3051476e30eb",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "680f4c54-dcf4-4357-92e9-e606af7882e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d0cda60-2fdc-4f10-830e-5639f4096db5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b99168cf-94f6-4332-91e7-10aabe6169b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f93b2eec-c0c3-4e44-a995-a1d817c5748e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b23cc670-7b00-44ed-b577-197715cb2692",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e4d403-f4d3-4197-b317-df9862733702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d86efb5b-1b58-4102-8456-10a19e79da38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb5fc715-d13a-4d10-ba2c-8c97d189d872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1133b75-9d14-477f-994c-51cc0cde4360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14de430c-f7d7-402d-93df-8958b60002d8",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e611d3cc-e2c0-48c1-8b2a-aeb5cdfe9652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb8521d1-955b-4d32-b245-7b34b86fb021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6e4acc7-3099-4d20-bcb7-dddeede7955a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "caa99d38-fa25-4303-b01d-0fdd24d4d6b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae307a15-fe28-43ce-8d4e-82b85bc731cf",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b3e94a-f751-493f-a684-828071201de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a0e17f5-e66b-4b5f-aef1-aad793c46ca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd8db98-e61c-42f9-aa57-5c70fd5269c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "62a68619-66dd-45dd-aaaf-a4873debeed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a5b8a7-b999-4e66-93a2-dcc216080e88",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf180a4-4178-434c-8906-2764a7112bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3340bc1-7c47-4ece-8b1c-a7ce1ebd9b0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57c5a58b-1e2a-44c1-921f-aefe64e65bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7473f7a5-26fe-4fd4-a163-0b2068bc78a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c70370f1-8592-493d-ad38-f933e6a8af08",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c93feffa-e3b3-4f64-a249-9b7ec6774d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f4b0b10-e24a-49af-8554-342c9d8c43cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbb9a173-29d2-4776-aceb-f4c3c029bbf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f5f0e663-1743-4909-8dfc-da99b6dc90e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "747a645d-e4db-4499-9a7a-040943b339d1",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35638a00-a0d6-46c7-9f6e-c5742adea3f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd0a7108-18e1-4c48-b407-b2a517c16c6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc6649c-9e44-47c1-b68c-f83a63044630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "306a34b0-bb18-4d48-9433-4cf69749a6f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a9253b6-ce5d-4cfe-a43b-d3c172c81d9d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "619d850b-0d11-49eb-aea1-079554633f13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d1da058-1537-4a65-a1b9-15804bdc44b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d67888-e48e-4f90-8253-67004932c523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "af0eba11-3a0c-4473-bb2c-8378e3767b67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8613c445-9764-4c23-b5f5-82bac72be4fc",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e430bdd5-d215-4d84-9924-b3d6c599f5d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "142ed7ff-8da5-4abd-84d1-333db6773804"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8fdbb0d-545e-4fe2-b9da-a481f00c03ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7abc0db-83d9-4974-aec3-6799b391f9d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc53bcf7-bae8-4ad3-92e8-9c43c7629007",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d8516a2-2d49-45ab-ac96-debc35fb6798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c35db40c-f5c1-4813-a602-6ce39d10cffa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f51467f-b0cd-4e48-9b03-ff824f5ce870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "384392de-ab3c-457a-88b4-eb1074042114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44065700-7676-42a0-b4a9-a9dda0109fb5",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "212f4b9d-d100-4679-a486-1dacf5543a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7444ed33-e2fe-4e52-8f71-e2da53cc7f07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0481c8f-ffed-470a-b554-a47e60082c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "441f156d-fcdd-4e71-a046-3aa6303206c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ac9f812-adc0-451a-8e14-4c5d7d794fea",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed30296-a4a9-4e0a-9052-a563e160a0fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15bf2145-a8de-4173-8d58-7b41a0dd4a9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa481115-45f8-453b-9a8e-2899971afdf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7c9de3fe-18ed-4478-9cd9-2f22e398a5ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30945d01-53ad-4b10-8acd-ddb17b59bf88",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc86599-e5fc-42d8-b80a-2cc4a248e03b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f92d365-9cba-446e-a2b0-e06b57b94d66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c171e41b-4ada-4b00-a254-261eb08dbf5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d96a61b2-f1a6-417c-94cf-5d09947e176e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0651a2ce-2865-45f3-b158-6c3c78121dfb",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa7db02-9998-468d-b995-977802c0bdc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d44e9cb4-fd6f-4fbc-82d3-b4dd1b0a815e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "937a1881-361a-4e86-bf66-6ea3afd3f0c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fec1890f-c40d-48ad-9ee4-6b307b554df7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8858078-b57a-4909-998b-2a6a81637aa0",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "961a5564-0e0d-4e15-9084-3aee7ce3ae28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e92d57f4-fe6a-46f2-81fb-db46d3f93cba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c5bcb5-c6f9-4b14-8e46-29d6b25952e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "14f1b411-a4a3-4357-bdb2-11c7a9258e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee93fe13-d694-49c4-9de9-411b4bee89c9",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8041fb4d-2458-413e-8537-036e4289d4fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79a3c2ab-d04d-4808-9cd7-a62b711fe61a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a3e2e8e-87bd-4016-9ae1-c7a47c9c93ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd3ed602-ef45-4a03-87d0-c12e139a3376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f89b86e-fc9a-4236-97a9-39b19cc6e390",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f8751c-595f-47c1-a1eb-4575e3b226dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d549230-a4be-4ad0-8696-d742c60346d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b755094-c70d-4526-8b90-ccf79bf060c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b22b9d1b-1999-4ede-9131-8f9ac68d4b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9816a055-f6ac-467a-bc07-57f38d96d285",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9259bcd8-affa-42ef-8503-13b8d34534cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75c49b5f-a138-4003-ba8d-737e7cff6e09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87847380-1802-40f6-8375-e8326f8d26c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c0ed9e7-3f51-4c3a-ad5c-bcf6819d027e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc086070-b820-42b7-b6dd-e23e70555bbe",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80046740-6591-42bc-9f3c-b033846e42a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75c79623-4646-468d-949b-3bf10086afe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb6c99b-eafd-4ecd-88a7-1a83fb71ab3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0652376-7dfd-4cb0-94f1-1cfbf082b107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc08ae15-6bdf-4eb3-8616-b4486935fb4e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cba2490-b8a7-46b6-b1fb-a2023fdbe304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6477f11b-038d-4382-9f18-bcc33d968768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a7f1f4e-bd60-4f01-b2b8-4a9d5a195674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4962b16-6c50-4dd7-825f-7d737694e35e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7495c950-d065-4ebc-a563-ebdd8da321ee",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a22dd16f-cbca-44dd-8d51-7af48fee1f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40293561-1a27-47ba-86a5-aba0200d17d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b735c1-113f-4b1a-ba07-1474d66bda23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ce085b8-a091-4796-9a4a-a0c7fa038f98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8a86638-2cc2-4060-bfcb-e83913a8f21a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d252207a-738f-46d0-b265-009b52179556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff903a03-56ef-42e3-bdae-b04c4827fc7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74afdf4e-a213-4fd2-b111-1d53680fa75d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ef1136b-7759-43ff-a60f-86794c494d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec9b89f-6abe-4cd7-9af1-3b0eb6657dca",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f30a61d-0c5e-4439-8b32-32104363bebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a4ad34b-8ef9-48b0-8dc3-bcd0eb4508db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "389fee43-4384-43f3-a8ef-8bad979f21a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ffed20a1-2c56-42cc-92fb-60e5b3dbf3d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a5e9a9-31ed-4177-8ca9-660f0a2004c8",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a8842a-a0bb-4ee2-b220-7097b967b299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9888d639-1ab8-4952-97d4-7d8ab730ada0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "632f6b43-9669-4076-a0fe-f3e6cea5934f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "be508ca8-2de9-4541-bc63-07e70c46b50c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ec181ae5-ba88-41cf-839d-6e9e53923328",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cbfa57c7-b6a2-4144-b2f6-5eec96d6c8c9",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3872eece-b531-40e7-b92d-a6885102c2f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ec929e5-2cfc-4d99-a612-d8cc08ebb925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4428360d-d20e-4206-bfc0-4c204623398c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6737e5b9-8040-4bfe-8b29-6bf8cddcdfa4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "45e55687-0bce-415a-9437-8bb1a28f6e85",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5aed8ab-9abf-4660-b6a7-4bf37ca93d7d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "45807368-9720-4477-b8d3-84edd5319786",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5af63903-17fa-49d1-bb61-2f63a070d320"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "048852b6-7bfd-4220-af74-f662d8dd3d67",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "80f115da-486b-4e93-9385-deb3afe9380d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "12f99fbd-4b4a-4673-8b45-f821358e012b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "30b2a46c-4eb7-445b-a0ed-c24e12b9b0da"
                }
              }
            ]
          },
          {
            "id": "2924c603-59a2-4fee-85fa-f65e9cdb2fa1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ab78c823-50ad-48c0-993e-fbabf22e2037",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "7c5a5356-33ca-44ce-ac23-36379b8ca1ec",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "916c544f-cddc-44d3-80b8-db533f766cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "15402ac1-e745-42ad-88f8-454c69da9f41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e7016c-898d-43c6-b2b2-0042dbc6c5c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bdde60c-395c-4270-ab4e-19e6aff47edd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1c6bd2ff-f8d1-463b-befa-7c4e67c8ac22",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2fd55c00-c160-4595-b992-59e38ac2246c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "59a8cb35-543d-4258-88ae-c24cdaa522e5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94eaea1b-55ce-4d21-9a41-fc1e1417f39b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dde0095a-f579-41f1-ab0b-5c2631a4096f"
                    }
                  }
                ]
              },
              {
                "id": "21eae4bd-3639-4a71-8e75-6b56191f67ec",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d5a300b-47af-46ee-bd7b-9d4598e9c72f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "46ce9046-ed0f-4f13-9e8f-f69f9501cf80"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3611a83e-0f01-4241-b936-3602961a6f6e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f064eec8-fd61-4313-aa7f-e56f049e780d"
                    }
                  }
                ]
              },
              {
                "id": "65d75932-fb74-43d6-bbc1-1c8f3ffe7388",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5825bf6d-686b-41a3-bb45-b36ca4d99190",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "79498182-2406-4468-93d7-261c04107be6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f5410d54-ed10-4c16-8982-c4ab2b0c965b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4b7b46f3-6162-4294-bd84-5505d3b4042d"
                    }
                  }
                ]
              },
              {
                "id": "55b5b0b8-44ad-4739-b3a2-bdec1c7779e7",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a88047e-34be-4aa1-952c-dc1c7e1dbc9a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6cdf6704-9071-44f9-83e2-6b267c913d3f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ea95869-c761-46bc-b04f-d700a25cc365",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b484496e-dc5f-4f83-b148-21c50b2efb39"
                    }
                  }
                ]
              },
              {
                "id": "fd394b0c-1044-4fbe-9442-8ce283d9d105",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ac92f91-1c3b-468d-9a6d-9128c9cb610a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4aec9986-059d-4475-ac3d-216a0ccc4c51"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "abec1c5b-a3c1-4f21-bf16-07f1d708fa6f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d31fb324-bbd2-42c7-9fd9-4080bfcb236d"
                    }
                  }
                ]
              },
              {
                "id": "7b474aee-4c60-4289-9e54-eaa41181fed9",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bdd018ca-febb-4837-8f83-4ec12984dc21",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "adf74c80-9541-4198-9a43-ffbfe088b8fe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6280d960-7210-4802-8129-050c537d42b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5a6231bf-55d0-4b00-82c9-59c0786a4f5e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "70bddc2f-9a2f-48f1-a094-91dd5eb10ae9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ae85eb05-b5d0-4c23-a0f4-c0a325e4f5e5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e0cc0e82-f9a9-499e-9250-6e87f6e2bcd0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f6783b0b-07df-4135-8433-0877362a6d9d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "76eb9879-8f67-490c-9e70-4919b30be0b6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "3cf2df1b-dcda-4c48-bc14-c46f8c27b2f2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7cec9c3d-7fa9-4751-a370-8378f70e9fdd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0257fbaa-4975-4146-b982-ad2a8bc17dd7"
            }
          }
        ]
      },
      {
        "id": "bc39376e-f840-49fc-b165-e15cd1cbcdce",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "cc7e2106-7ed4-4a76-b64b-a55fd653e2a5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4ea53484-b238-40fb-9faf-42971f46eae8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "16675dbb-1e5e-4518-8325-a6fc2634e57e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f313a086-6c6a-4341-b4e0-49a2ed2e9fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b1befee-4f9c-462d-ae8b-110d883189c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ef1e15-6569-41ed-83f2-595e1c4bb49a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "65c59ebd-0c22-4e49-937a-e7d56b0010d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c3edae-8e47-4255-91bb-e5b8bfc0d1fa",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e76ca1-aac6-4e46-8c6e-27a6346345f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "907a5518-e9b7-4fe2-ae39-e53ac807b12a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3468e8f0-2cc1-4b21-936f-6b3e01af75f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dc65e8f-4478-480e-82e8-f2f596651a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45391a88-15a0-434b-9320-8e081c5da343",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d40158-1a3c-4d2f-84dc-9053d9d642e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "980cc781-e8f6-453b-a15b-42fd71ebbd37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a615f1-c200-48ad-8068-a5689ef823bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7efdbe45-1ee4-4449-aebe-4001f845c230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a32842c4-8ae7-4243-ade1-6ed70ca6dc1a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a073ec1d-ca15-402a-8087-9a661b417451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc9751d5-a344-4afe-819f-8ea3df92b0f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62e82ac8-2f29-461a-84ee-e06d05632445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "46484ad6-7c4a-4fb9-916a-a666bbfd7788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cefb4e8-f1a4-4dfa-9a8e-e65514dfd4d0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb791749-ab0c-4ed8-a1af-8c7705937292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67dafea2-3d17-4110-af25-f11e71db6ef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3862b2d0-0c32-462c-aa76-a4da75f830ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5aeb73c7-b1a5-4b10-947e-8dacdace7a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f973243a-afa2-436f-8e2f-dc39354c2c34",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf8b1fe5-fc94-4015-9528-391c91592119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d64a45c4-012c-4d06-a241-9b1d53a42bc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "960b7a1a-9036-4a10-9074-4148192dc2f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "707b21d3-c626-4adf-becb-c393e8f1d6c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b64014-1e6e-4f92-bb5f-32d97cb5fc99",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d630b20-cf49-4664-8b43-4ec12e2ec991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ba1d3c4-c23f-44be-bec8-faabd71e9ff2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef6ba4ea-e6ba-47be-849c-eb1c6e390bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0c2816a-ede3-4b80-adf1-2e85cc1a7865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74537489-9e64-4e4c-80f6-a5a2ecf46fbe",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "342837d1-8d41-428f-84b2-d3331522a953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b89ad34d-f0ad-4784-8d56-553f701a13d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10db4dc8-dcff-4f90-9515-e8d7dc52089c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9692e0c5-aa47-4d23-89ea-05655a25e8e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "882304a6-9595-4fc4-a832-a9da54ce063c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7edb988-df16-4de2-a7ce-fa3b328472e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed6c63ed-0d79-4765-81eb-45c6a455fcc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e238323-3b79-4c9f-b0bb-45d69d53d67b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e92c2410-7df6-4609-a382-90c1395e00c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "310bad06-6223-46f8-8e50-9b2256e12129",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "121d1c77-f1a2-4b51-9aa7-42d2360f4505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f4d41b5-bf23-448b-ae7e-b7d6c7932116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9de8330-f063-4f50-8957-7eaab9d4bab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6253749a-5db8-4cfc-a60f-5de68fc23769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c5cd322-1dbc-47bd-bdcd-d73711ae75a2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40952862-47c5-49d8-abae-fbe6faa5e115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bea68007-0ede-41b7-a0f0-8abf1a25701e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b739b238-7836-4004-a481-7e09b374ab26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "36c3b840-6d7b-42ed-af55-6c1db81f08d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "527b8e9c-5780-4525-baa4-c5ea4567b3f2",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de41972-7f39-426f-9e45-fd59e475ef48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a3e9c0f-ec07-4c91-b319-ada95de6d81c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc91240-5bbb-4752-b138-d164009ae248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0a79a3b3-273f-4143-8625-a095fcb81cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c16b3eb9-37f0-4336-bbca-39ba42338858",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c01d066-8ad0-4fbe-afd1-93e01b1b2c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e8a4845-d929-4e5f-824e-02a74927f9d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04447939-bd9a-47f0-a7b2-b7ec87b6fb02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2145c57f-7eea-4941-a2b4-65afbaa1a6b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a03f9318-7024-46d1-bd20-7ead300d95e5",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "146a9d35-aaee-497d-bb11-dfaa7223882e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c550faa2-e9c8-4af1-ad86-a9f96ffb902a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0589aa2b-e661-402e-9994-1d3efb815f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "df95126e-da8a-42de-8740-3bfe6aaae4ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5792dd2a-b0f0-40ea-8364-e12014112d5e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74999958-7dc4-40ea-bbcc-cb11eef7f8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e124f35e-d7a9-4689-9e79-c86ee7789547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88094e70-6970-4f3c-b844-3238ffdf2d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "86f65813-3097-4e9e-94f1-aa56368a29a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f56ae0-1a16-4ada-b039-1195b6eb8b09",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72fcec2-fec4-4427-978a-56ca2e01fca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62ca7ef9-1eb5-438c-aebf-c12cd0ec9260"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab10f08b-e362-4a2a-9609-5d60dd598af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "95caf6a5-9596-487c-bf3a-0e6c609b8a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d6037dc-bacc-45d8-9b39-38a0523ee5c0",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1675abf4-9e5a-4ae8-9eac-ba97ad564a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eb4a743-44df-4322-ae65-70c01dfb0295"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9406055-311c-44db-a138-3c0a08d9d0e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "238012e3-bc88-49a7-a8be-eba53b891067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6080cd38-fdc4-4678-9135-53127c0602c0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a14c503-40b0-47ac-b596-f8d64e81a13a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f1b375c-758e-453b-8e23-c76f1ed7d2b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a90536-6e57-4962-bb4a-2d2c79e699a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fc1aba0-db58-4346-9fe3-506b1bd19ff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82195062-be1c-4776-a6b3-7049eedc1104",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba4cade3-9640-4a91-b977-d3d03d1123f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e954cf7-160a-467f-89f4-4026c601253f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80841d7f-7fc0-429c-8ac5-99a1ca2f65fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d16b922-c990-4b50-8a26-a32363e67f03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "081ef50a-8db1-480b-888d-fac2a4e4822f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f7d15a2-e822-45ea-b597-797a3e845d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d1bbc24-f68b-4e01-a5ec-3dd308195425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f298fb-5826-44ce-aa03-91c374bf6d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06939d23-f09b-4289-a4dd-6df5ac11a366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec70dd5-266d-4814-a355-f6c11e64e2cf",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "946f5efc-fb04-473b-b81a-7493809488e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94745808-3107-4119-aabc-8b3d31534a3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ddda7b5-128c-4fe1-8b05-f8cc0471d570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b2954a9-d340-499c-b752-d7da9e0cbd7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7512c208-7571-4b11-85dd-fff5a9ee8040",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3376261f-4d0d-421e-8c73-31ca3f127f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c24aa951-6f8f-49be-b2d0-4276dab3527b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e44b69b-1d0b-4d37-b02f-ccdeea46810a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d57c5bf-7458-447e-b981-502410f63a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9482884-6b21-4836-a575-4034f55b301d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18163cc9-ce0f-4402-834e-d9f150f98e50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16ec3b8b-a56a-424e-ac1f-4d88d9401797"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d3ceafc-beb3-4ca4-960c-bfd348a56f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5613b38d-74ab-4e5d-bb6d-d7ba528473a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19835267-4c26-4c45-8a41-1064e928603a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e26d6f27-e757-4852-bfaa-eef3d884d251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58aa4f7e-03b7-4c61-9a96-6bd660c27b2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa42cfb-d7d2-4b67-bc4e-01a5fed4be45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b45d1277-4bc7-4c26-a0a4-da35622f39a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e851e4-2466-4e09-882f-ed8e1896b539",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6893e50-f432-4e1b-b136-2feb2251e736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f69eb286-6afb-4e71-8d29-bd588d0dc1d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efbb7ff2-be6d-4cbc-818e-4830ac500244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37edaeeb-6d6f-4dc2-9adb-d1af88322b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c394d2a-e891-4d39-b85c-d1665a944bdd",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79161824-b5f5-48bf-bf4c-29f31c03ec50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7d09c3d-c396-444a-bba2-d6c3df8f0b30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef0ab870-fbd8-4290-b9bf-5a6e2d2c6f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84a7153f-ca48-4d78-b12c-ab90f5478239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf9bd75-eeda-4cd1-bebc-95d9067cbc25",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e8615b7-350b-492d-abd6-72ff1833cb8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3045e4f3-aabd-4890-ae89-7a9424821bb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def59db9-38ad-4f01-8540-24fdc935b770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a49be845-85de-4127-881e-13876d6018c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ccff6c5-9fb9-43e0-b911-0b67f1ab2389",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7443bfca-a649-472f-bedc-4d83afdc67e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c2c8d3a-569b-4bda-ae89-b99ed045b72d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83183e8f-49ab-4603-9cca-6fcfc1fe75d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5bc7171-8f99-4158-bac8-43104dc8cf31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da41c330-1c2f-44a4-b686-40a34e79ec5d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1edb621b-e87c-48aa-8eca-a66d4419cb86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3c00af2-3f8d-45e0-91c8-a76e99548966"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ca990b-b3af-4611-8f53-16b9524958bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee5a433c-5677-494c-8727-89bff4c28419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1564eeb-3328-4317-83ca-6eabb34e1066",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35dcd91d-c013-4896-b408-d41f43b3a340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "076e389a-1e9e-4dfb-bd27-3c1aa5de6fbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06548d36-654c-486c-9733-8e10c94e58bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "916eea72-1e79-4c99-b5d2-ea66b6742c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7585dee8-cce4-457c-bc74-3827d5ed8d3f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca80c780-8ca3-4467-8f76-e718a20d23c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f22a83fe-3bad-490d-9108-b2976d211fa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a07d7f94-e27c-42b5-b163-821bc0a4ea1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b7b07df-69e4-4ca0-9a2f-4c4a02585eea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4637c26f-8b77-4cb4-9478-e8735e24eaf2",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0529425-f9a7-4bdb-a244-db2b44fe0cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "882b022e-5a88-40e5-b2e1-d28c1c9226ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "962cd85e-2b70-465d-8a72-b40d1753a0df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbf1fb74-b46d-40f7-936b-36a116e9e038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7a9bbd-573f-4326-9bd1-784ac1ce6320",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5164cd63-e5bd-4bd5-ad00-8a71e998d631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19b8d8ae-f4a6-4e54-b65d-9a6286d48177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff03f549-c773-4405-917f-3951940234d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc18616a-8821-49c8-8659-0ebb366ab3e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42c22bef-9b08-491b-9cf8-52459c05b0d3",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31c59a0e-9ca7-4f5e-b5a3-7afca2d655d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4585beb-b9b2-4796-bdc5-ec2c756146cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b07c7e85-6b4a-4f2e-8ce7-c846f05f916e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48a292f4-11e0-4ec4-aedd-224079a09941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81464401-36d2-4d25-9035-13dab2afce5d",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "675857d1-2675-44ba-893b-f0ace86fc524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac1a3b1f-baa1-46c6-9a14-49a20036f740"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8eb3673-f1d9-4645-b7cf-06f7e7a341e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d335aeaa-08e9-4d35-9a14-be89a751ce25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50445d5b-a3b8-4097-a4bb-3eec39e5934e",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28fb5eec-aff8-4bda-a29a-607e48411b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7470c52-3e82-4d1d-9bec-21aa2eebed44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47274349-f13e-4a94-ae05-af7d6df8e32f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7f32eed-d626-44c6-8cff-3070c39cfeb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e04dcd4-0afe-4f77-943b-98b6fa2ff10d",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a7b4245-9395-46f8-a539-bb7ee2ec06ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d6e945d-8818-437f-9e59-57dc2d3ec0c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7bb428d-5b57-431f-999f-8b5e2740b35c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22d0090e-a7c4-40b5-95c9-acfd9809bcec"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "636cc925-2900-4bf5-aa77-bdd402e45f1f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "974669d6-df50-41cd-a31b-0fef01f8269c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620b81a3-6a6a-4145-98f0-ed5eebb2b3e5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e9290332-a270-47f7-ab76-6e9b90f412ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f80d8d37-ba15-4e54-ab21-b8203cffb09b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "31957f03-f7b0-4725-80e4-196dbe38e39c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea3acdae-225c-4072-86c6-fb94b0da18af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9bee484d-6b63-483f-a14f-8b3cb08e02c9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e1cd74f8-bb06-4aec-b41a-3c563b9471b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c4c3ecee-356e-4144-9949-a25939148c68"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b19ed788-b629-4536-ad2f-70a8e65e83c5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "be3d5a6b-fadb-4d26-a43e-d80b7d771f62"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7c0e6cb5-4523-4dfd-b517-d109f62926cd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "14f552de-6eee-4d44-a71f-8d3a4600b843"
            }
          }
        ]
      },
      {
        "id": "59b6376c-b8f9-4ae6-a4ab-1ced3057797b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "73cbb165-d0d9-4710-bd3f-a93b8c8c0f22",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fbe9b5f2-9ef1-4735-ae00-94ab82dff220",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6776edc0-4e8a-496e-b503-5b422597ec34",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d8dd7c-2e7a-4c73-b2aa-857775f68275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfdfb0c6-567c-447e-bc57-c8cf06d4ef78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db3148c-f88d-425a-8e26-5bc0d90f2e6e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ac0a9ba-d175-4f97-803e-4a32fa20e05e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e4b1d41-f79b-4aaf-b2c8-746da8aadb50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7657c999-2600-4dcd-86b5-f518cc107398",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2137ef7b-f2dc-4c9f-be2c-b934708bb1d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4240a503-d7d6-4053-966b-420c98fdd84d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce6b0577-dc20-4d73-98fc-64fe617408b5",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1066123-295d-4b61-afe1-b743388a39f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a926374c-56a5-4bce-b805-8a13e2969e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f531d014-00c4-4bff-9d4f-b5f6e10acaf6",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f46d5015-8bf7-4d50-b8c7-ec0900909af4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d679be9-d3c3-4426-a867-70fa9fb34462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "903d74e1-0a40-41b0-bae6-85907a51ba7b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a41509f-fc33-49ea-ad49-b14bcfecb8ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e86c1a74-6733-4486-a9dc-7caa78319ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e81698b-4337-4524-8786-f1619ebbb2fa",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8fd471f-3143-4676-88b2-5d8918bb2ed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3d1397b-f926-4b9e-8fae-3b0ed3f8e326"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98fdce68-baa7-4c68-905a-efeb4c901f30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23bd991a-9c91-4771-a3bc-9e3bdebf0a84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad8a49e-666a-40d7-9977-b5afe2fef5a9",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e3cac7-7afa-49f3-9c08-f64f314696ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c083a38a-7223-46b5-be1e-1a2fe7980240"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57113404-6310-4ce0-9160-e64dea400207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4cc0ba2-c809-4749-9e23-205fc139910f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a2b499a-7199-489d-a127-a9d01846de3d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23951950-f34b-4b04-800b-5482aa3b2738",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aeddb13c-0c64-4eb2-93a8-e77ab247d490"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c9f3cd9-0f43-4d8d-82d3-16b663b98103",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccb0669a-63df-4599-ab28-ffb0901cec6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c2740ef-b00a-41f9-afeb-912f12d22469",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf0f296-c780-4465-bc4c-f801bbf862b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2df431ad-d427-48bf-bb0c-b4c6df7cd402"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e8907d-3731-4990-9b3f-c8d9b16d81f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd8b25ac-1ad6-4b20-bd82-ae24c41d7db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af9996d-54cf-4244-a00a-acb937f58f9f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f4cdbff-16d4-4c63-aea9-27e480a32962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa023cce-43fc-4e0f-a505-eacac556514f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9224774-4b22-47c5-8cee-bff2d949f21d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "122f6afd-4096-4b3c-8bd2-ae44f0e4b3eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e8681be-1a51-46f3-aa8d-aa2319bc40f4",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d75c56a4-5968-4cf6-87ef-dfd76a4f1cfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d456cff3-2d56-4906-9f5a-a114249093f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6842df67-2a73-4968-a801-228200fe4d9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa7a5c6e-2832-4313-9ae1-099e5e6fa5f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06645278-dfd7-4a5d-8b10-a1a3d3daaf38",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c6e6d80-e6c0-40d5-8c03-f948df010590",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e384ee19-f381-45b1-a01d-7adcc1bd6493"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a0eee8f-fdea-475b-9921-2ee57455e020",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5da383c-0b56-41bd-99aa-2b9cc974b655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15cb5604-1115-4dff-a97b-431dd2a54879",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1137a616-c0e2-4adc-b6b8-03df5ac7e21d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "387463bf-8f91-480b-a318-8a472f7bfa69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd79d41c-1491-401d-a7c0-bb7f0a7a210b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36eb6e00-7642-461a-9b4a-23a52ed33faf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2873f34-031f-40d5-8db9-19e2edecb947",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2925fb08-1e13-476a-9f02-ff7b78fbff0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd572fb3-cc62-4e05-ab62-995cc1cb2941"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a55bdd5-de7f-49d6-a0cf-9033a132b40f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c403deec-8119-4612-820a-47c19b12bfa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "939ca8d5-6662-4248-8559-ca59dc9e8705",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d13d17c9-5dc4-4ccb-a5ba-88f5cc67fbe9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fcb194c-f746-4a88-b78e-44cf98247dd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6739359-b903-49f9-ae18-be0255cc1790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db45234d-5254-49af-820c-4082adc9f6e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1efbb46c-2e39-48ae-a422-693bc83c102f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebafa736-a507-40a7-b549-a4c5aa2a6c8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c146be9-77c4-403b-9d93-1fac53c76ec2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a8a277-cf2f-4315-9b3d-bdb080f47922",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f24eb34-73d0-490f-babf-43042ba1a822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff0c94a5-0615-4ddc-810e-64f11fb6b92f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e3a66c4-58a1-40ba-8d0c-3e9f63fde66b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b272fb5-2f36-40e8-8773-a9a1b5b07c04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec97c727-3e95-442c-ae02-f56104fdfe45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30954492-5e37-4741-a68a-c3b65305178c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe93457b-4a74-47c7-ab23-b6200883e3c8",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a030fe04-739f-4347-9af5-f1bdd743957c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01dfac20-2580-416d-b4e0-87f405b9f1de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94fe0646-aa4c-4cd6-a779-2b6d4c40ac73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b561edc-cde2-407b-b2ee-e7738dab7dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb9c787-b89d-4d5b-8fe5-affc9465b2e7",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4118c8b4-b114-4225-8cc4-dc4f50b41854",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c68c172-e6e9-4951-b729-8babab011065"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa9fade0-6d6c-4329-a6ff-919c0732c277",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27d350cf-de1c-4511-a566-d76cfc2276ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f2fef1-b2f5-49fb-a4e7-07f487a0e903",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec94ef0-807f-4aeb-94de-c6562bcb01f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1797b520-e237-4b37-92f2-112629c07edd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd3b5f50-d3cd-4e02-bd57-b3186840767c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b742319-487f-4106-ab04-35a487287a87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3ce151e-bf13-4970-849d-88c7261ee369",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb40dec-d420-4992-b16f-12e87a590147",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b64fa01-ed95-4125-b18b-853235e91b36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eaa991d-b28f-4789-9873-8253c0ac5b52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e62a42c-5a00-445e-9970-4da63563d4c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2719d3f-df1d-478d-95fc-5ae67afc3ecd",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a58b955-9557-4a79-91de-f44161a0a082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c2af5c3-a4aa-40af-9744-319a70e9dc0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10e15e3-eca3-448b-bced-9d142fddb86b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d43c2ef-fcc7-4f78-b97e-b46d2768c48d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe9972c-39e2-4fb1-ba4c-0f65f530cd79",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51037dcb-f9f8-4189-b77d-e3e67cd978a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38e2dc30-81dc-4cb7-84cc-cd66c9e03335"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf26e87-cd5d-42b3-99d1-4466026a4517",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9e95052-57fc-40fd-951b-81b6a3538acb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8fe692f-ed57-4615-97a5-acdfd8709da9",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e927002a-6531-4cb7-b57c-ced77b53f2c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fab29b46-d325-480e-9058-355dfb0a0c64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49320ef7-d8d5-4954-a899-336bd9c2508a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5998de2e-78f1-48a8-8e56-32dc4e134f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07731996-6f94-41a2-a240-7552a8b3f93b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63329d72-6b00-4029-a7bc-fe00846524fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47006b24-2967-457c-8316-a06cffe35eea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "737ecaae-98d9-4790-ae8d-0f298836f255",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a00c3f74-93fa-4e73-95a3-9ebfbfc144cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d923a334-fb11-4f90-9932-e1a4cdb11992",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10169053-e992-4022-9205-3acc4034c622",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b424aaf-fb1e-4921-a39f-848894ecc44c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37cbd5cf-7ad4-419f-8e59-7b1b45d8ada9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52713dc3-f5f3-4009-8fbe-32ba077c9c35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2418566f-a1e1-45aa-b0d2-a086b40fdfa9",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c012efa-6a48-471a-b891-f8a58dbf5b2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58023b25-c080-4a33-bc47-08274f6ddbf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a487507-848b-4810-9bc0-863c95c5a0b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94441734-608a-4c14-a79c-1cc7f3abc403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e0c04a5-a110-4d78-b5fb-d76a9c18a88a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6c5ecaf-4b9e-4306-8b37-523ed3e8ace4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d808b719-fa9f-4d4a-bc7d-c1cccae688a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "943ce8ff-f698-4e58-b489-247d32c65d86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cb231e4-60b1-4cad-82ae-c00d5d31e6e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff360585-a0ab-417e-9ac0-e40e966e2c82",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05bd5d09-f9f5-43db-8fca-08463009cb27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "979243e9-bdda-4c85-9b21-64bec87c0def"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c6ce39-baf6-48af-bf6b-7109a002637d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "128abfc7-70f4-4ad9-ab8a-8a2144e928c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f455b96-c492-4e53-be84-f4199d56830a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1da2fd0-c016-4904-bb6f-ce44a99b1522",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22732145-0566-4eab-962e-88096b5d7236"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c982fb8-00f1-4c23-890c-291e47f85e5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21c87675-eaff-4ecf-b84b-5be20b127f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b43e80-cda3-43ab-878f-faf36b57ae43",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "295658e0-a3f5-4707-9224-28c9e9e858d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba333482-0fb4-402c-bc3b-9191d56f3f93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb96eaed-6ec0-42b6-94a7-39d68a7b9942",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3120d363-6ab9-4454-8bc5-67ad6e18cd4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec6f3ef-ed84-4630-bba7-c6d6e22ace59",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5064c4f-7493-4782-abc4-3b12e435981f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d7eb7b3-64a8-45a1-8e21-f7ada389de7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a9a2e9a-507b-496e-8200-3b3a6ad6c4b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "487f853d-2dc2-4375-974e-fbaf2f40eaab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413fd4a0-0069-44d1-8fff-3b3518fc73d6",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a9d090f-68bf-49e5-ba01-36dbc14bc75f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "102970d9-2dcd-4284-8533-1c65ed44d6ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb744553-ecbb-41aa-9f5c-1419695de40a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ee8b743-e22b-474a-933e-33e875c9bc2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9710f387-2456-4edd-94c8-85f7a13c6194",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0d65f7c-5e34-4a94-872e-6f703f94aeb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a35a1396-5e2e-4004-83bc-ca62325c1a01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa985b0d-d8d1-4481-9e11-8b42ec776f9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97c85ff5-0ef0-45be-80c5-fa1e159fed5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bef493f-54a2-49e3-aa11-c67f3f5855ef",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa6fac00-f2d9-463a-9762-57d62202156d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68d9ac25-bb60-4298-baf0-e6f11b61a8ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "160e7842-85a6-4784-a7fa-7b0b06e707e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "709bd0e7-07a0-4574-88b6-4cc7211a1224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "944a9186-fc01-4207-975a-c445fe45f478",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5590d5c-a6a3-4ce2-a7cc-e24097d77f54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ef289b9-73d2-44a9-af9e-71a341d7c71b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19be32b7-2207-4606-b324-8d13611d05f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c0bec68-6894-4455-9f86-297e3c68ab20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58834935-adac-47c7-ac31-a983500ad5c2",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed5ae8ca-e566-4a99-99fa-4fe3c328e8d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "885523ec-fb67-4eb6-890c-09bad32c34b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75b7a22e-d209-47d2-ba85-82cf8935ef0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abe46c24-06f9-4872-9728-4992abf5089e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db452f4-f3a0-4aee-b8cf-622e86e9ea79",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02189b5e-9672-4ae0-9aef-0626671f9be0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ff4f27f-3919-44b7-be2e-bbd67a607f65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f23562-ea8d-4fcd-9ec5-8ba21e1d0b6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07c0c78c-7710-4899-8bec-d12a4c200d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "947e007a-1981-4903-b400-aa5a9544d4ff",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f53a46-b303-4af1-9cfc-78fafc6c9786",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd092d87-c9a0-4c20-bbdf-252b776e687a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef38734-df48-424f-84ad-e18890153012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "031e47b1-98e6-4740-a202-1d363a2c114b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1a4709-cc8b-4cc7-95f8-b8d2509fcbb0",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb0e8d2-1d03-4d2e-84c3-527cfffb0439",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf2cef85-f5b7-4b10-af78-50fc2d7b7b88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3088b241-bca7-477e-8f69-94c99ab4cac7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d612636-b674-49ff-be30-67a0a45c9889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d2b9a29-02f8-4bfc-a0c8-49eecd596895",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66850532-6035-41a0-ab44-a0cedea8fad3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcef1b14-f612-4290-a321-e5db557e8bcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e74921dc-e0b9-45bc-9271-783a25f17f21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdd95362-e6da-4a25-8641-1758f2da684a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "651eda83-f505-4fad-b22d-cb3b7cac008f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f6792fe-6e8f-4487-a839-db1a8603d9e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c14858a6-6a9c-4a65-80b6-89142808a998"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd8b1c0-962b-42f7-9da9-b79895141130",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90bded7c-498a-4a20-b139-7b94b3d4cd3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be7067cc-ba87-4f54-aafc-aa27432dfb56",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b58c571-5ed4-4ff2-ba97-38d38ddeeec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91ea3793-58cd-45fb-82f7-78a72bec7a4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e362c01-fbb0-4c64-9724-f14b930940ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c62d738c-95ca-441f-aab5-2521b6aa45b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "138cbf50-2620-4e8c-b30c-1cab7dce1214",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db56de18-3907-4604-9a4d-1f3117edc3ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3106313d-19ce-473f-a64e-7b8eb3116792"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b5d48d2-5bd7-4ec3-a11a-ded255834195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbad4c0e-bbdb-4ee3-beb7-f2dcff7383e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45f90118-b9d7-49f0-a915-9601d951789f",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffbbf7fb-4152-409a-9bfb-3f1d10e1e225",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba3932b8-94f0-41ff-95ae-5647325eda58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a87bbd65-20ec-4879-b1d2-2e1d4c3a18ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ad0ab27-748d-4c9e-8146-2fef5e7e0362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a85a7421-64d5-4b44-ab01-78e295413364",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06f44219-114e-4ae1-b5ab-0a5df66210f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcf3ab47-78f9-48b2-8a9e-25eb4a752c81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b36ee7-cea3-4456-82ac-ee505d29e5e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cf33030-c30e-420e-892f-461763210ede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ee0db02-777f-4ce4-a9cf-f2b371889da3",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f499c9-8796-4581-ad57-0e08d086a284",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba9e7852-b511-4cbd-aa69-03b6ed3b67fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "335506bd-5d6d-49f8-8abc-77dd97fef628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87fb0126-c861-4afa-a2b0-f36187802812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5208a445-90a2-43c3-9fd0-6947c203418b",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa6fe14-9b7d-4518-803e-75148d98f664",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e7e5f5c-a6d9-41b5-adfb-49d756473bc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "579fb334-e88b-4b21-99f2-3ed040abc5d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b00bf51f-3e2d-4c8a-b459-508b94637d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cacbf17-896c-4b46-a3d7-9f66cb845655",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e44cecc7-2a2d-4f80-b29c-0048a526021d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07178e7b-2094-4f0c-ada6-0048de903ef4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1888b043-1832-405f-b4d1-8c72ca22c63e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e6484c3-049a-49ef-ac62-e94de637598b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a69fa261-1da0-4720-be65-d5acef286c24",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b98d77-0217-44a9-b0e9-c06dc048a013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "964ab3bf-d2e7-4725-95cd-066b78734f1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d7a541-a67b-4ae1-a3e9-66c8ab493d8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90710578-5615-48d6-90a7-463b15741a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86290eca-d143-4088-9204-7528cd0813cd",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3256d0f3-d4b1-4753-9608-15ece3c5d42f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a338a73e-eded-4be6-8eea-696fc2c8184c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "850bd591-0c1e-4d81-ac3b-bce7e41f7e79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36bc40ce-23d1-4ba7-9b47-7c0af2ea1dd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e568939-f12a-4813-9bb4-882870ff9cb6",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecaa38cc-d2a3-44fa-811b-836bf0549412",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4aa905a-7d29-47b9-a375-265cca093c03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf1d86c2-f278-4cf3-a111-804b31b68711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae47e3b1-7e51-4151-ba3d-2df1bd5e0435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cd4e41f-8352-48ca-92d2-7239b178ac4d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3691565b-79ec-4ca9-80e2-365d227ebfae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8284a77c-8246-413d-8150-93d5f8b9177b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b2d0a67-f8af-4517-a792-f5b435792051",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e2f3138-4185-4540-a25b-e41038e1acec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6453ffcb-3b1f-4648-979e-49144cacba5e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9830117-d199-49a7-b434-2ff0fb6374c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "137c6f95-bde4-4a28-9a4d-5db7cc80cc85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "396275eb-2181-4fa9-8a8d-30ade6792070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ecd318c-0d65-40b9-ac3f-a4e1b9ccce70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f73983-010d-453e-af89-ee04c2d7712f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7fa77b0-e841-4143-b1fc-0cabc7227eb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7068d384-2758-4476-a997-34e4afb169db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18dc775b-f6b6-4107-b519-75344fd5a189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1686dfc8-5f7f-422e-b711-ea58d9f40ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed1e3afe-1cd3-4ef8-8a26-b3fffd2d116f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6bdd225-abec-466f-a217-abd38f4336a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27b43e6c-eb72-40a7-a136-aee004b45705"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8147a77-2d74-4e35-bba6-5d83c4041ca1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82d211c0-dcce-419b-94f9-139cc578c50e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7999a1b-dfef-41a9-9132-7d3e843994bc",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "739790d0-3764-4dcf-96e3-12833ae2d2bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61c0a92c-2c13-4739-b60f-0581aaac2a8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0597e70a-35dc-401c-babf-c5d6516446d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4af11b07-5ee8-4a42-a1f4-d498d84c0155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b59196-e24e-4924-aa44-fd2b6f37407a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21066067-af33-4bbe-a548-eae84cb3cc9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43b15d82-876a-4b1b-b642-30f9116e23a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e419c88a-dea0-4844-9994-469777c98949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1adc54a9-3681-4e10-b379-0f33eed324b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44180803-551a-4e38-b27f-99ae20216336",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e3bd5c-f1a6-4744-afac-95f973144090",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "926cdfbd-4fd0-4398-b091-c469a896eeb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b944823e-02d9-4ff5-bbaf-471bafd868a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48b550a9-3881-4303-beb1-4c57b50ef34d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da397fd-0d56-43be-a55a-703e184695db",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e2da41-cd67-435c-8328-a04b5c343db7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67413a5c-84cb-4e70-b2ba-e3a174186b61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c98d26a5-8aa0-4750-adf6-65b2f508ef8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "208926c4-f8d9-487d-804d-4fafd38120c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6806e01c-5452-4233-89bc-170be0fedf90",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba097fcf-bbdf-459f-818d-3ea02932c3b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c756127b-ce19-40bb-a000-25d3b5cae52e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa29bd0-6bd7-4c1c-a39a-77cebcbb5dc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "374b566e-3a10-4729-b042-3a682f80d103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84233262-cf42-49e4-bf1a-5d67488da131",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "984abfcf-7900-465c-ae91-e2498c2a8e4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff83f2e2-067d-47c0-a06f-7f9eca0af654"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a34522b-e3d6-4e75-8734-5b6ae697ae25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dab6392c-f0e4-4f52-a210-dea9949e9f1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45719f26-b7bf-4068-b4b9-a581d0d9df31",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df104bd8-bc73-487c-bb04-a253d28ff62d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1750df2-666e-45c5-b765-491cc1cf459f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ccba33c-eba7-4e8c-a705-3101c5fbe1ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6941ca2b-22bc-4119-98a2-310abcc8a0b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b03714-45bd-4378-a3d1-741e3180f1f2",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e73560c4-3f18-487e-9434-1ede4a18b376",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80016c4f-9f4c-478a-8f99-198fb0db21b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd5526c1-ed01-47c7-b5ff-67743cf8cce4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebbb97c1-7609-49d6-81e7-db5a73c04149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "637a3b64-1bff-402c-a7e3-aa0d5c4e202d",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81543145-ad91-4bd0-aaa6-289295795f59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab77de06-8c31-4103-89ac-f5005a84be4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "676bce6d-c8d9-4556-afc1-ceef01e225b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12ff2840-ccd3-45da-80d5-6ecbe3b91f4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b8646a0-cc73-4b0a-8fee-abf8ed878b52",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92dde702-1ef7-4a72-bbea-16c4ec630c31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61fcffd6-2a71-4b1a-861c-699165ba63ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fd88a6a-b259-41dd-b127-c1c9b8013c54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1de9e151-6d6e-47f9-88cc-64334ddb6cbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "369345d3-2963-43dc-a9d0-d2160eecc3a4",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ce08a1-eb7b-4539-a469-5bcbe6515f06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33de9fce-2212-4aa5-a656-40cf46ab6d1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba6c3cad-3e91-44d5-b39d-61c7d78845f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf5218ca-c14b-4a7c-9ec3-91703367d030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c97e82b-285f-4e51-aec8-48c8c8f7ac30",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfa04ffd-2e53-4d55-8ae7-0a18e33d30dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f191f300-8727-4e60-a04a-55a7997c9deb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30fd2026-3acb-44bb-90e0-1df9d1175b49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f17a18f9-099d-4ce2-974f-1ae8e8e71168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3df9d9a-c9eb-48a5-b827-603f98301515",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c483cc-8328-4afa-8e5a-9de9a95f669e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60730ae9-5569-4d5a-b2f5-347e7108b880"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c43731-ebac-4a49-8348-6de3fbe33072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e54c3728-42dc-4225-82d9-7812928724a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c23babf4-134d-4c17-b8d6-f468603cc841",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ee115f-90d0-48d4-b282-bbd134ceac25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8630922e-ca7e-4d49-9d95-dc8755cd83cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39004b6-b1ca-400a-a78f-110ebe663bb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3095e74-c526-42d0-8474-5d2fcaa03035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a81acdd5-3718-430c-b8a7-1341dc160c97",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06e6cf7c-dd0a-4b5e-a7fd-d12ee21c32e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d575189-6de2-40ec-9cdb-44c73fc2de6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c15ff92-dad0-4e67-964c-85e145243131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eeef774-0501-4353-88fc-e4edb3991eeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de7a2577-305b-44af-ad58-1b82b8799d87",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e86c9b-456d-40fe-9f1d-ed9c381b47cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a01b618-4337-4a12-8df2-da8dcbf75596"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b053e85b-0146-4333-ba76-5a9faf02ce06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d73e1ec-20c4-4273-8ab1-ac24338e3d4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c47b95-5ccb-45f0-9b5d-599e76995362",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6475aad-42e6-4a5c-a6ed-9aff7a0d81ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08324b59-4c19-467c-a0f7-bbb27788e1b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5fe4568-3751-4897-8156-292155ed3fb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f1064eb-b6b4-43d2-a121-6328ff5512b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff09661-4f10-4f7d-9888-6b96084800f0",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e44233c2-a488-493e-977f-45f822052be7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01d07356-1c15-4179-9626-e42703268602"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "880b9ef3-d427-4cd8-ab19-19f0edc77ab0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76400025-9010-4734-8b2c-833d571c8afc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abaf4a13-0db0-4f2e-8a0b-9b1ab28f11c7",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96bfed0e-7e9a-45fc-9cae-3fd2a0a39418",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4db26325-e2b7-4271-a3f2-90e68535c1d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "273c469d-a271-4f17-b029-272614792126",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e2775f0-5066-4fda-8853-d2606905e3ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c782a275-8ff8-4b45-818d-292783fffe17",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd64d585-6b21-46e8-a4ae-f51392ded145",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4bec35d-db6a-4982-be63-7ab2bb64bb36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd1c65d-370d-4e43-bb11-b4c8813582e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8bea228-ccd3-40f2-9466-2ac414345c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe456f2-a93f-48b2-824b-eb725bf7ba73",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ba265ce-1f9f-4414-b9a5-67160a2823b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24f7eab7-4cf7-4b3a-bd78-973240a0e08a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20845038-ae00-4dd4-9a48-04e95a099bef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9010cde-ccf1-49a7-ba9a-7291421ce439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10cc7af7-92e8-401c-8d10-383de5e75e8a",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c1c7686-ee4b-4776-b886-c9d62149f087",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b14a05b-5b93-4153-9a83-0abc324702f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a53b7d-3f70-495e-bca7-96c938b4e0aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0613715f-1dcb-4661-8bff-1811f4f67d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fa6a52e-e030-48fc-b231-6336d4a26a0f",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf00852d-4d20-4852-9bba-569608983b76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42ae6fb4-5ae2-4578-8805-9519d4c05778"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d19e43-f9e1-46ed-98a4-959a6d20dfd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f837118-e8bf-4073-aa14-aeb3d6656f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61d24e61-1d97-41a6-b009-81c00383e0e9",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6000ce5b-6e7d-4805-822f-c032ca4c1943",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ce69399-a9c1-4d03-b1f1-b126692195dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4b6707-8708-45e9-9b83-5330d8459115",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "207f9096-6759-4356-a06f-56c47de30ca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9581e5ac-7ff7-4ee6-ae17-d4316449b2ac",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ef979c-39e2-4469-8c46-c3f100c66392",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e873e6ca-04bf-4c4c-9f1f-87faf845c60f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39ba6c5-2fa7-4843-9be2-1dbaa237cc8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36c30486-adcd-4528-8f9b-ecfe88ef1634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "725d76c8-9b78-4108-86ac-d1a4f99fe942",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab8a354d-4b95-489e-850b-9cb2fba8f4c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d75b9c61-8cd6-4464-bcfe-167dfbf174cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef83023f-d9e5-4cd8-8410-d02943648c77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "163bfc47-d717-430f-9c98-659d3858c240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0179997-050d-4a32-817f-919e2048826d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f9b3c74-0d80-4410-9f87-99753439b99b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53248e72-d86b-4582-ae42-708558add59c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa410328-d617-40e2-8a99-7953d04fe3d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46a59190-db06-415f-a138-6803a53b623b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d29a1e20-f7f1-4904-b1ca-68a8864c212a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0453f771-02ca-40cc-9073-f0676c185463",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36a29914-1c15-46ef-96e9-ff8f27cb83d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "593160e0-5584-44c7-8314-3cae0807bee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a22ed303-db44-428a-a8c7-a4a055f072e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd37da31-28db-47ac-bbcb-dd683f845228",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2798984a-1148-478b-8d88-7d169672d50a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "598b42f9-7ec2-447c-a8ad-4cdf5c3d2c21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f30947-2787-484c-8785-0c50512d29b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8008c17-fb51-4490-b993-4f55c0c92372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c15487-62f5-4835-aede-6db18439fecb",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c4e7fc-8338-433f-9521-8a9b37dbf5b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bcb0107-8d35-4e19-8c31-47332b7be97e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afddb90d-3ab8-411a-ac93-d43ad1ccc8b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03abb539-54ab-4017-a3db-d18f6dc66073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bb1e143-dbd8-4b2c-9f5d-32c55b812d25",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1382095-6031-4af3-99df-85ba0668e3a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1bf8464-3121-4ff0-82c2-4481a6dd8c74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "415124d1-24f6-4f92-8dc2-9b717e67b42f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27a571e6-3ed4-419a-ad47-ce9fbbb4094e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "553ee4a3-4729-4945-989f-2d24c57d90ab",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19e98d3f-eb45-4050-88f1-2488a3eca402",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "125e18b5-6146-4bcb-b2fb-e8819e638d77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f39e3840-d664-4bbd-992c-87d93aefb317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "228c2c35-2827-4cbc-aab0-2bdf112dc656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2659e496-d4ba-418b-8863-e44d4a12d8d4",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab68c5a-00e4-4b0b-b763-1cae986532ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36372f37-5656-4fef-88d3-ad19cb9fd4c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ae9ff9-4c28-4977-8c18-bdfa23f70158",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a4c0519-839e-4c93-868d-9714ee8c3f6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fea5ef3-3b4e-4b72-a9fa-78c76eb0d443",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "118697fd-8d51-498e-8bd5-6dbd323b9670",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f90538d-a65d-423a-a0f3-194e4259d3d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17853dbf-c6e6-45c6-b4ba-7be44699acbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b552112a-0c4a-4739-8e4c-c49f0919777c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d79bec00-5e88-4e74-ac0f-0d63d5989efc",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3896593f-bf09-4d80-8105-68fbe0866c94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f074b39-72fa-4a84-9605-5012a6b7b0d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e9567bc-960b-4100-b173-229524f133cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61b5bba9-db16-4c14-a2a6-d805c4ed39c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e217ad8-0441-4774-b5af-38ebb68137d3",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f663b13c-2971-4ece-a12b-77f032d48a9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c966d40-a8bf-45af-8b1f-e30df431ad0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2925dd32-8ff4-41e5-aca0-158015634c50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15e69180-0670-4930-bd31-a15157e49515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59c9b215-cddb-4924-9ed3-7109a8fc25f2",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c157ced6-9ea1-4281-a554-5fab4aaf261e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52ab714b-129c-4318-871c-520d0d8955bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd8193ed-c64d-4ea6-b127-0884e77adbcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89730ed0-dcd9-4fb0-8165-cb5282615721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5426f8e5-605b-4840-bf57-f87bd5e971be",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d4c258-7536-49bb-a195-52d7c735c980",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "105c9f79-79bc-4e7c-8c09-1e420da60398"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e4726a2-5787-4983-bab9-ea5d48cc5785",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e99169b-0d65-4265-88d8-384290d9fc40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4340e9d3-1e1b-4c6c-a9c9-e102c1e90e76",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a6b186-fc60-47b1-be4f-d63c74a9cf6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a43b56da-6630-478b-a547-061308848bcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86f97dad-4b89-4581-8f13-c13a2a6d5e70",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2caeccbd-78f2-4f39-826f-6f3dced54953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da84e8d7-6de7-4588-8cf2-5b6a22697e15",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "733efae5-d2e8-45c9-b954-c9feab2047ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39ce0cdc-0f3c-4331-b583-63041bbad899"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9448a35-1e69-47f6-a5f1-4b0749aa4697",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fe05dca-2468-4910-8770-673a69378d4d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "582e5282-cead-4e46-b4cf-372116814655",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b9c8570d-6294-49d0-a67a-36f7e58d78b5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3250b82a-903c-4361-be33-50e84ac3b8ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b685513e-7ebc-4470-b39c-5268cd049a99"
                    }
                  }
                ]
              },
              {
                "id": "6ace64bc-c5a2-4eb3-857f-4e0021160c45",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d8b717d1-e1b0-4d1d-98e7-eecd995203de",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "435d1429-e6f9-47ec-9ee3-5dd5abbba086",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1363c624-6bb9-4e24-a7f4-d19eb24b5d5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae229b3-4ce5-4605-bd5c-82a6e86bf333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7238d30a-0bf9-40bc-ba86-322a99dd32c3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b6ab3f4-ddea-4d02-83ec-a8666d111d93",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e893ffb7-f4d5-4d63-878a-7959d8bef9ce"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f098370-094c-4150-bf4f-bfa3dd4ac299",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86d2739a-ef05-4d46-8fc2-e50f5e0c554f"
                    }
                  }
                ]
              },
              {
                "id": "d269049e-965d-4cd5-8f55-83785624e13a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f387ed08-281a-4c27-bf21-a7ce03023073",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae493ee0-43b7-4fa0-9b7f-3c1d9a6e1e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "9d9628a9-2b53-4a7f-889d-61aef5a55e83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df00de1e-fdfe-45bc-8836-1eeaf84e1d71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0024e7fa-d949-435c-b822-4024f8edb066"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "901b3b20-c878-49f6-bc1e-9ca67c27ae56",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e68df497-aec1-49df-a494-310a1863dea7",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2842ace7-7be9-4aff-9ce9-aed1b8215fa4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "06402bfd-4aa6-41a4-ae2b-c44324c32b3d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "97a54ac0-587b-4520-9296-cbf2bf8cae0c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95617703-9e6e-4719-96b2-bf7791a8a9ab"
                    }
                  }
                ]
              },
              {
                "id": "ac37c604-de6b-4552-80ea-477db99a0b73",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e195ceca-e08e-4720-8761-7a6fd326bfd4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f1781116-9615-4f64-acd0-78af40134e21"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d99043c-c247-4cb3-9245-e1eabe0d954c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cfad5b79-dba6-4f06-b435-39cb889c91f0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6b5ab1dc-181f-4202-9ac4-752b2df551fe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "103c014d-bfcd-40e3-bb7a-7cd759c4d797"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6e478d47-2a8f-43e8-9892-9ad25807fc1c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "99e401f2-25dc-49ef-ac50-d8b78594b4aa"
            }
          }
        ]
      },
      {
        "id": "183d390a-ff96-4f9b-8076-3c986804ec17",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "68c596db-00eb-42e7-a4c1-c2395575bbb3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2ab43f09-d380-4f9d-9114-42e8c3ad4790",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "75841389-2002-46a2-a762-565d746c7f2c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a472d026-8eca-4bb5-8c48-60b2a2ba5396",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "77db096c-6dba-4c04-bfff-5574b6e69166"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b31ce28-a65d-449a-a73b-02a4290fab7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d4391d21-7ca3-4d6a-a99e-6bbb84457335"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7af31115-92d8-49d4-94de-bbcd6fdc9d30",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a9c6e178-3bb4-4578-867e-76cf5e6c3a7e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "303b1f8e-c22e-4ffe-9b00-db52c5a3be36",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1f94dd04-6fcc-4059-adfd-52227d9cab0f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ecbd6ff-506f-4582-bf5f-f7d0767922c1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "142734c3-315c-49b4-afa3-d09cf32462d1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "106d3001-15fa-4cbd-877f-6c99b668d03e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "585a7593-890e-477a-87f9-245f91a03c92"
            }
          }
        ]
      },
      {
        "id": "f9681bf8-6397-4e70-8579-3650208e0131",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "1749fc1b-8f04-4988-95d7-fa65c6fb6b6b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0c5a530c-7238-4ee7-80c5-01c22b24e8e7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5056cd1c-1da7-426b-9416-265d7d9d4c68",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca81fbf-ed18-48e3-b361-b0b3adb01864",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f4b7c8e-7f7a-42f3-8650-b49c818cef04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f362c3e-7c47-41a9-96a7-704141f32a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "84507b34-01e6-4d21-9954-4d2935181c20"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6d3d5016-fea5-4d76-855f-2205efe65592",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "016d7e96-8d2c-4c5c-9740-a2519fea88a1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "879fdff8-f6fa-4fb9-ba53-020543171688",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "56afed1e-7219-4098-8c04-6f7008f8384a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "abc68ea9-6d74-44e2-a13b-faeac17c37fd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "17a19852-827e-4136-b70f-a0658a024478"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eb9cf5d8-41e0-43b1-a761-3379cf39370d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a632164b-a1a7-43dc-b7ee-38885cf61826"
            }
          }
        ]
      },
      {
        "id": "cb8f2986-a448-4c49-b0f4-0231fcb69bce",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b58a2395-839a-46ba-8a87-884428243ce5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4b367046-9f6c-4900-b3bd-e1ea50991209",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0a1a1f3e-c956-4bb3-aafd-3658c754c702",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "801661f2-d676-4771-a974-dbb0e2491941",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa4b7f51-23c6-4221-8429-b14406f787c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b717658-81cd-4d76-bb5b-73fff9c17dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "723c1bac-ba83-4c39-9d21-79453a181b9a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "933b41f5-e31e-4a08-b18b-62d42f540a8d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c90606e3-f4b9-41fd-b184-63f0ace53544"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1091299b-4ef9-42b8-ba71-dbbc099f4ab7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6dfb4e28-6317-48b5-9c42-4222bc446d39"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6d06e116-df92-4bc2-96f7-d30c2667f900",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9f66befc-12cd-4def-9bad-0ad6a6d3eb53"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4ed4cb56-e171-4e50-b742-d305de83f109",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "13d64342-90d4-478a-8c0a-6ede8396a2c2"
            }
          }
        ]
      },
      {
        "id": "4bb92d6a-b94d-4b13-bb55-dddb4825643e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "221f428d-ea6c-48bc-83f2-fa39d9450aeb",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "91986d99-ca58-4d99-b19f-17bd14c2d214",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "194ab110-3832-4ae0-81ff-4eed869e9ffb",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9fe76eb7-bf6a-40f0-a053-84baca2307f6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "25c2155b-fd27-4013-8e91-641a882d17d5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 108.15079365079367,
      "responseMin": 19,
      "responseMax": 10673,
      "responseSd": 698.8538640467126,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1722300005014,
      "completed": 1722300040973
    },
    "executions": [
      {
        "id": "239147b4-6225-45e8-a8b8-f711b383ed5a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "21aea1cd-fa74-4e21-8de8-9e4b5eaf60cc",
          "httpRequestId": "30c42d10-99d0-4e10-bbc5-6a0f0ec4ac87"
        },
        "item": {
          "id": "239147b4-6225-45e8-a8b8-f711b383ed5a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "661f8d18-359c-4df5-b298-ed004b08c13a",
          "status": "OK",
          "code": 200,
          "responseTime": 57,
          "responseSize": 0
        }
      },
      {
        "id": "f9bbe31e-10fb-4334-b4c0-02cd2297eb6e",
        "cursor": {
          "ref": "edd8478c-69a2-4407-8129-3db80e012d3e",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "fba4b670-4e00-493c-bfa5-0700732fb4f9"
        },
        "item": {
          "id": "f9bbe31e-10fb-4334-b4c0-02cd2297eb6e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "65e30b2f-d153-4166-b6cd-a0f403712dec",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 0
        }
      },
      {
        "id": "8ce57d09-3037-4715-b6dc-152241baf606",
        "cursor": {
          "ref": "c2a5892c-6d00-4f8d-852b-42bad250301b",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "485cfaf9-2a83-40c2-ad71-377a482710fa"
        },
        "item": {
          "id": "8ce57d09-3037-4715-b6dc-152241baf606",
          "name": "did_json"
        },
        "response": {
          "id": "e183d913-a007-4e05-b488-9036e2b2af44",
          "status": "OK",
          "code": 200,
          "responseTime": 190,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a4164c-9243-4655-a92a-c70ff9e97fb7",
        "cursor": {
          "ref": "c3b25b6b-fafc-46bd-9bd0-70eb3c18ea47",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "81259b15-9b35-440b-974c-8905a2025917"
        },
        "item": {
          "id": "c3a4164c-9243-4655-a92a-c70ff9e97fb7",
          "name": "did:invalid"
        },
        "response": {
          "id": "b2861079-4139-493c-9362-a9c6c38cd1fa",
          "status": "Not Found",
          "code": 404,
          "responseTime": 499,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a4164c-9243-4655-a92a-c70ff9e97fb7",
        "cursor": {
          "ref": "c3b25b6b-fafc-46bd-9bd0-70eb3c18ea47",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "81259b15-9b35-440b-974c-8905a2025917"
        },
        "item": {
          "id": "c3a4164c-9243-4655-a92a-c70ff9e97fb7",
          "name": "did:invalid"
        },
        "response": {
          "id": "b2861079-4139-493c-9362-a9c6c38cd1fa",
          "status": "Not Found",
          "code": 404,
          "responseTime": 499,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "076adcee-e6d0-4a2e-a9f5-e8870655f59a",
        "cursor": {
          "ref": "f8585ca7-1298-45a9-9b00-6607c03a21c5",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "66b9e19e-419f-445a-ae0a-1bb451417e8d"
        },
        "item": {
          "id": "076adcee-e6d0-4a2e-a9f5-e8870655f59a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "e2f205c3-34e7-4a0b-94c8-cda1b3d79769",
          "status": "Not Found",
          "code": 404,
          "responseTime": 40,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc59747b-24a2-4987-ae7b-67c76a3f6f01",
        "cursor": {
          "ref": "7d09390e-9d15-41ff-bf09-617fd1d9d998",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b9bbae6d-5a40-4d03-99fc-c328c5ad09fd"
        },
        "item": {
          "id": "fc59747b-24a2-4987-ae7b-67c76a3f6f01",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "de9959b3-d1f3-4daf-a0de-ed0c51dae148",
          "status": "Not Found",
          "code": 404,
          "responseTime": 41,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0087daa7-ab02-40a8-bfb9-3ec697bfccb9",
        "cursor": {
          "ref": "8ce24e06-8dae-43ed-80de-f9fe2c4f2f6f",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8df751a6-61cf-4cbb-ad59-921bce16f3f0"
        },
        "item": {
          "id": "0087daa7-ab02-40a8-bfb9-3ec697bfccb9",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "9936ec7a-7b48-40ba-9ea7-4788d57b333a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a93628-0ea4-4a3d-8d8a-9bbaea3fae69",
        "cursor": {
          "ref": "699aae52-ac26-432e-a5a5-e5234ca47260",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "96c04063-c1f5-4b9e-8cc1-76a1181965c9"
        },
        "item": {
          "id": "49a93628-0ea4-4a3d-8d8a-9bbaea3fae69",
          "name": "identifiers"
        },
        "response": {
          "id": "710bbdac-618e-4df9-9441-2c225e0084e0",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f0c809-4b68-45ba-9ebc-39284534e4c4",
        "cursor": {
          "ref": "f9898960-4651-4a55-a08b-d42f7410b0a7",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b00366e5-836e-437c-ac9b-2531323a49fa"
        },
        "item": {
          "id": "79f0c809-4b68-45ba-9ebc-39284534e4c4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "18695321-75bd-4391-8104-093c1e4b311e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45fc6113-5755-475f-9007-f299842b484f",
        "cursor": {
          "ref": "edb0ed5a-6bd7-4b58-9742-a4f856c6ead3",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "007b6ca2-21ff-41ec-b536-c39e8222fc63"
        },
        "item": {
          "id": "45fc6113-5755-475f-9007-f299842b484f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "282c2034-4d15-4bee-8b76-9542c3fce7fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bdec36d-25da-4bbe-b09d-00ed7c39dec8",
        "cursor": {
          "ref": "b107a5db-b4e6-4268-aa50-dd27953bc26a",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "93bd42b6-3841-45de-9c99-315e30e51ec2"
        },
        "item": {
          "id": "6bdec36d-25da-4bbe-b09d-00ed7c39dec8",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c2fb9e6d-20ea-4fdd-a4be-0e96e83a3850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b6ad10-2e71-4f55-8bc0-fc41b2c548c7",
        "cursor": {
          "ref": "76126757-a6fc-4911-9720-ea054cefcac2",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e7169da9-8d31-4716-a13d-7b6d6529bf1d"
        },
        "item": {
          "id": "25b6ad10-2e71-4f55-8bc0-fc41b2c548c7",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d55f58d9-d34b-4c1c-b41e-8560afacaaa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c91b9d-ef92-43f7-aa1a-fc0ce8058304",
        "cursor": {
          "ref": "34ca8269-394c-4130-b262-0b3cc4fd0d69",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "4047a6d3-e642-42b6-b149-0720cb1acf98"
        },
        "item": {
          "id": "e8c91b9d-ef92-43f7-aa1a-fc0ce8058304",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "11b4d082-26a2-460f-959a-8f1f7ffc97a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074cf730-58d8-46b2-a53e-e6edaa3f60a9",
        "cursor": {
          "ref": "b4450acc-f400-4634-b078-fa7229755ce5",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "caf2ea7a-c738-447a-91f8-071ebc4311f5"
        },
        "item": {
          "id": "074cf730-58d8-46b2-a53e-e6edaa3f60a9",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "14a046f5-e38c-4214-85ba-6d067dcbbb8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08cad339-b368-4a32-99d2-96a5e8c8bb97",
        "cursor": {
          "ref": "60ff3275-4e3e-4f10-ba70-7b085b8deb97",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "74638431-a690-448c-adb1-000f8d3d8e0e"
        },
        "item": {
          "id": "08cad339-b368-4a32-99d2-96a5e8c8bb97",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "aa3cb394-eaf2-4f18-b605-edf62730b546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66357ad8-7243-4094-8920-961c1dcdd691",
        "cursor": {
          "ref": "91b1605f-d02b-4466-986d-2da2b90b8f13",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "83ae877f-9932-4083-a210-ef90bf854429"
        },
        "item": {
          "id": "66357ad8-7243-4094-8920-961c1dcdd691",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f61687e1-aa6e-4de7-a60b-7540b109fa52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a1ad5d-fee0-428a-927d-fe6bca3fca02",
        "cursor": {
          "ref": "003442a8-4448-4dab-8aee-f79ceb1b1042",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "bc9d9ce0-2bb5-428c-b79f-333367b01f18"
        },
        "item": {
          "id": "08a1ad5d-fee0-428a-927d-fe6bca3fca02",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "d1a840e9-adc7-4786-84c8-82d65e8e171a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a9648ce-6b94-467a-b591-29bf6cd5eca4",
        "cursor": {
          "ref": "f47b7da5-95d3-4566-9255-2c727b6fea04",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "7cd65edd-cd32-477d-bd39-40cccdcff5ed"
        },
        "item": {
          "id": "2a9648ce-6b94-467a-b591-29bf6cd5eca4",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "89daa42d-9635-43c3-945f-ac88fed90d9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1053d0b-edb9-420b-9280-da44908da462",
        "cursor": {
          "ref": "74b2645f-44c8-4e0b-ab21-7e2d6d8d4d59",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "dea3b4f6-d343-42aa-a75a-e856b7b4ebcd"
        },
        "item": {
          "id": "e1053d0b-edb9-420b-9280-da44908da462",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "fed4125b-2241-4551-8eee-67f085048007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5395a17c-aede-4103-a8d4-992847ee4a10",
        "cursor": {
          "ref": "0d6ef380-a69a-452d-9f28-fe4ebc706d67",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "30d7631d-1217-4833-a783-11da287a1904"
        },
        "item": {
          "id": "5395a17c-aede-4103-a8d4-992847ee4a10",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "1bd3ddc2-0313-4688-a205-02012575591a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d7c1fd5-c1c7-4227-9686-a9ea52563b26",
        "cursor": {
          "ref": "121de265-368f-4cb7-83f1-87e2eed0b2b7",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "fdcca14a-0aa6-4100-a335-b67e09de174f"
        },
        "item": {
          "id": "2d7c1fd5-c1c7-4227-9686-a9ea52563b26",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "68e1b3b1-af00-414b-be03-0e264676806b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb08ca8-b07b-478f-871a-7f741821b408",
        "cursor": {
          "ref": "f1b684b4-57e8-4ae3-b867-de927bc90fb1",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a4659ba4-4bf4-4e8d-aed4-8965737c3660"
        },
        "item": {
          "id": "3eb08ca8-b07b-478f-871a-7f741821b408",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "9addc06c-b65b-4b21-ab96-4bdfaa47ed4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8d4cb7-667a-4ed4-b60b-e2824e0cd380",
        "cursor": {
          "ref": "e2b60437-973e-4e49-b721-7df93ed907c9",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "c594693d-251c-4234-8ad8-ba988ffe0083"
        },
        "item": {
          "id": "5b8d4cb7-667a-4ed4-b60b-e2824e0cd380",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "0c695252-0ced-470d-83a8-8c0b50bc998e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da77aec-4347-4b65-9b30-9b74bd6d5342",
        "cursor": {
          "ref": "5f319a60-d8cb-46a4-8024-5131c3425f09",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "668cda8d-9ba5-492c-8d59-56adebf7d2ad"
        },
        "item": {
          "id": "0da77aec-4347-4b65-9b30-9b74bd6d5342",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "2d3b5220-ea41-406e-922e-b7cecc5b7d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95c44581-ccf3-4a9a-b45c-65bd5c4cb672",
        "cursor": {
          "ref": "064cb90d-26df-41ab-b4ef-139114d5ea45",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ae9b810a-141a-4053-8e5e-12a8c765ce02"
        },
        "item": {
          "id": "95c44581-ccf3-4a9a-b45c-65bd5c4cb672",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d07f74e1-bfe5-4f09-b756-1a96c0f7cd6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbe400d8-5c08-4335-a657-7b6a76a146c5",
        "cursor": {
          "ref": "4f46fbb8-2ff2-4e6b-8d62-f55301bb62dc",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "1a158189-19b2-41ac-a692-cc0b6e14ea9d"
        },
        "item": {
          "id": "bbe400d8-5c08-4335-a657-7b6a76a146c5",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "4600fa13-693b-465d-a946-514678fa2b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cad8158c-28cc-419f-ac39-cb6a6003bb0e",
        "cursor": {
          "ref": "6ba4e622-5f72-47e7-b63d-34ab02bf0a7e",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "4df2f947-7d70-4e7a-86fb-955c58c2b2ca"
        },
        "item": {
          "id": "cad8158c-28cc-419f-ac39-cb6a6003bb0e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a2bd7844-9bfd-4305-890f-ff8e43cf9c02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57f320e9-d787-4508-8f28-bd0e456cef50",
        "cursor": {
          "ref": "e9f255b2-dbf9-4f50-bf05-7b203464a3ec",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e5112e3e-4598-4068-aeb5-99fde187b975"
        },
        "item": {
          "id": "57f320e9-d787-4508-8f28-bd0e456cef50",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "19deb5b6-463a-4f23-b3a4-7515d1c44dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adafb604-7491-4bea-bc3f-e4af0398a0d0",
        "cursor": {
          "ref": "9cc12335-2b37-43e3-9aa5-fff956258bf1",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "bc27559b-b858-418a-a01d-a6afc490dce4"
        },
        "item": {
          "id": "adafb604-7491-4bea-bc3f-e4af0398a0d0",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "163beff7-ae91-4a9f-b562-d73ecce66140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79c1fe23-2f38-4a3b-b490-8cbad4ab3875",
        "cursor": {
          "ref": "c5bd4dc4-58c1-4503-957a-fd5b76143c46",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "391f9568-8679-4b19-a24c-89d5c47711f5"
        },
        "item": {
          "id": "79c1fe23-2f38-4a3b-b490-8cbad4ab3875",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "83423e5c-d968-4ac8-ab2f-a14ef1f2dad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80dbf81a-9a34-47db-8325-0dcd49d4b15d",
        "cursor": {
          "ref": "baee9495-1fff-4c43-806f-e1f6b1b859d8",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "5d08654c-5cea-4e57-944a-fc296d06288a"
        },
        "item": {
          "id": "80dbf81a-9a34-47db-8325-0dcd49d4b15d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0278e92e-7ed0-4c2d-a386-88658ebd31e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "558f430b-ed71-4975-92b5-ab3b3ba24802",
        "cursor": {
          "ref": "32d612d6-e03d-4c1f-b33b-7da98cb224a8",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "2915a4ac-0a25-472d-a67c-bb05318d9cc0"
        },
        "item": {
          "id": "558f430b-ed71-4975-92b5-ab3b3ba24802",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "8ca8446f-a49d-48f5-aeb1-08c8a3ba87b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea60858-53bb-4d5c-89cf-777f60991fc2",
        "cursor": {
          "ref": "93d84abc-7497-4c68-a358-1a69050ce3c4",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "b8d46e02-1f03-4fc0-9092-dc2f2fc636b6"
        },
        "item": {
          "id": "4ea60858-53bb-4d5c-89cf-777f60991fc2",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "4304e1cb-5a12-4efa-80fd-928fedb4808b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4013afc-cce2-4b67-ac15-ffc26a5990bf",
        "cursor": {
          "ref": "aa6b1296-9e3b-43e7-a0c2-b25ca3cf6a7a",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "32780746-687d-4d0b-b428-7a27fe26ed13"
        },
        "item": {
          "id": "c4013afc-cce2-4b67-ac15-ffc26a5990bf",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "d1d6a635-3c4a-4f55-aef2-8ea9109cf3e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3f295cc-437c-42a5-8b6a-03a6c9f00d88",
        "cursor": {
          "ref": "1a42e69d-0841-4ac6-a791-5e2d11d0791d",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4f840851-ec96-4ef7-aa8b-8006c608012b"
        },
        "item": {
          "id": "e3f295cc-437c-42a5-8b6a-03a6c9f00d88",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6d11e5eb-b0ae-4703-b4a8-a94c6e371437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad6af32-ea4e-4af8-9a3a-7bebcba509a4",
        "cursor": {
          "ref": "f18016df-6372-49f8-afdc-3385a7c3dd95",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "056ff6e3-6b66-4774-a077-4f39e013ef74"
        },
        "item": {
          "id": "1ad6af32-ea4e-4af8-9a3a-7bebcba509a4",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f334781d-04e2-4259-81be-bb8ac2e14966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68cde414-a8e2-4833-8d26-7567e1c1240a",
        "cursor": {
          "ref": "f2205d82-7f9d-4663-98d9-a06f3356008b",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "4e05dba4-e568-4b51-bf26-58506663ad60"
        },
        "item": {
          "id": "68cde414-a8e2-4833-8d26-7567e1c1240a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "5293c70c-0ae1-4160-ae07-a3fb3ff0dc05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f060231c-ca5d-404e-8847-d7f37aa1ab9d",
        "cursor": {
          "ref": "befdf961-28cc-4789-a89e-df5e6a46472d",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "074a21f6-8b66-4177-ace0-24a6a28e34c5"
        },
        "item": {
          "id": "f060231c-ca5d-404e-8847-d7f37aa1ab9d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "aada1e80-e8ce-4e53-841c-f594b68c5457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5464f92-d0c2-4b89-be8b-eceaa5fdb512",
        "cursor": {
          "ref": "ed250e39-e736-4b91-8e87-24ce4e56781d",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "9371294e-9adf-4e41-82e1-3647ab5e0825"
        },
        "item": {
          "id": "c5464f92-d0c2-4b89-be8b-eceaa5fdb512",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "65342582-7eaa-4139-bb0e-cb19e886af4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dad51e0-28b6-4ac6-8d3c-b9cd9eaa2714",
        "cursor": {
          "ref": "9e72aa77-86c3-4aa7-b48c-350d1e6dc708",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "60892995-c5b6-4d86-ba4c-d91cb54e58b5"
        },
        "item": {
          "id": "3dad51e0-28b6-4ac6-8d3c-b9cd9eaa2714",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d3ad190b-7d3d-4bc8-a90c-b8cc081f747b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e6b788-f886-4ed9-88f0-8a3e780e0e44",
        "cursor": {
          "ref": "204b4753-7045-4d2a-9aa1-907930be74f9",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "2473d011-8a65-409b-8caf-2cd7302db845"
        },
        "item": {
          "id": "e1e6b788-f886-4ed9-88f0-8a3e780e0e44",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "3e9969b0-fe8f-4252-803b-314c71114d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a72f00-588f-44a2-8ec0-b15fff40c9a1",
        "cursor": {
          "ref": "cded1aea-c0dc-49ab-8e8f-962f7ff3efef",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e3e6f542-5f77-420b-a3e6-bf69c91c878e"
        },
        "item": {
          "id": "d7a72f00-588f-44a2-8ec0-b15fff40c9a1",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "42c5e69a-3857-4cd3-ad2f-d974cdbb70d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60dfee3c-b7cb-4235-ba77-69bc38e1a431",
        "cursor": {
          "ref": "15f5af0d-71a4-4be5-8feb-46e6cedb9314",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b274b401-23e8-46ea-ba6e-b63a23cf884f"
        },
        "item": {
          "id": "60dfee3c-b7cb-4235-ba77-69bc38e1a431",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "15688c6c-b6b9-4b59-9447-6b8c2c45aaba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c103c00-4125-49d0-9e39-3e8ea0d00c88",
        "cursor": {
          "ref": "7d1fa696-69cc-46b7-8422-8fec1db5b5d1",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ca9cde12-ce3c-4f45-95e9-7e668445722e"
        },
        "item": {
          "id": "9c103c00-4125-49d0-9e39-3e8ea0d00c88",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "be19931c-0fca-4442-90e8-babd9fc41b67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "242fb8cf-f9f7-4ab9-b815-ba87c8b6cb2e",
        "cursor": {
          "ref": "c402c4a1-c510-4885-bb69-39708f4bf0c8",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "9d3bda46-b972-4e28-ad93-8608c391e480"
        },
        "item": {
          "id": "242fb8cf-f9f7-4ab9-b815-ba87c8b6cb2e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "abf86463-d8ce-43a7-a004-5da22a2599a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca35bfcf-cc59-45dc-b52e-18210f322026",
        "cursor": {
          "ref": "ac7432fd-4adb-4d5a-8b12-756d17d08964",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "5384a615-c922-4b3f-ad0a-dca55755d41d"
        },
        "item": {
          "id": "ca35bfcf-cc59-45dc-b52e-18210f322026",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b1c69e75-eee8-4835-9ed1-45410770222b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed35335-74f1-4d60-b562-a87867e3b3ad",
        "cursor": {
          "ref": "a0134a63-4892-43cc-a8bf-b65e7b4f555f",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "822c0f73-3ada-4cb7-94e0-c68246a4bcc3"
        },
        "item": {
          "id": "6ed35335-74f1-4d60-b562-a87867e3b3ad",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d39af5bb-6b7b-4f7e-968c-79943326c7ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce9b436-80e6-40c3-b419-0895e18d6140",
        "cursor": {
          "ref": "bfddce5a-26d8-41ff-9eeb-f7f85800a3d8",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4cac2a19-ccd5-44ee-aa95-7423a9b10f99"
        },
        "item": {
          "id": "dce9b436-80e6-40c3-b419-0895e18d6140",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "773fcb68-778d-440c-b63d-5769043da17b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5609ee-667b-4040-a6d4-16f050d1525c",
        "cursor": {
          "ref": "778b3297-a2ca-41ba-837b-8bcd652e187b",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3828588c-0559-45a1-bf17-4ab1d58db969"
        },
        "item": {
          "id": "3f5609ee-667b-4040-a6d4-16f050d1525c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "4c92d71b-ac3f-43d5-8e61-4231306048c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c68e8486-77d3-48e9-872e-dd83c64c807a",
        "cursor": {
          "ref": "e45cb15b-f5c6-4ebe-b321-1b629e8c5386",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ef029142-d400-447c-b881-53781183fa7a"
        },
        "item": {
          "id": "c68e8486-77d3-48e9-872e-dd83c64c807a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "2580e5ff-645d-4ac4-9b78-cb0392020dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0805694e-8779-48b2-9034-1ae98ff7e03a",
        "cursor": {
          "ref": "bf7d4ba9-89bf-4eb6-9ad2-5a2907328264",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e1be7343-279a-48c8-a4a3-2690958a9b42"
        },
        "item": {
          "id": "0805694e-8779-48b2-9034-1ae98ff7e03a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "bbec0735-4a13-41e8-aeed-53c1a8af7b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "529b0412-8f80-4414-aa19-118f16508803",
        "cursor": {
          "ref": "b0ce71ac-64d1-49d1-b316-ecb843b34d4c",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "bd62cc22-4813-4105-95b8-df6655950bc2"
        },
        "item": {
          "id": "529b0412-8f80-4414-aa19-118f16508803",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "800f197b-d9f9-4fb9-af9f-f7058d20fe61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2309f8be-01c2-4f2a-b600-f2d59aa12db1",
        "cursor": {
          "ref": "20deb56b-092d-4ce0-bbe4-6f103d731177",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "1874f871-b12d-4bbe-85fe-ef2516f572f4"
        },
        "item": {
          "id": "2309f8be-01c2-4f2a-b600-f2d59aa12db1",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c15a841d-f8c2-4df4-870c-65c927651d38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bd3fcf2-cfd9-46de-9506-c91f8114406e",
        "cursor": {
          "ref": "8aad8878-d2c4-429e-8bd0-83e1c3702428",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "458488ba-c6fc-45cf-ba78-5719c849703a"
        },
        "item": {
          "id": "9bd3fcf2-cfd9-46de-9506-c91f8114406e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "5cfdb893-f71a-4f9d-a158-114b856d34aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e0e28d1-bfdc-4d8d-bbfd-cfeca76a205f",
        "cursor": {
          "ref": "b9f92e84-4fce-4378-a907-5ee0b054f0c6",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "6e3a0546-db56-4717-b0d3-a3251ad2b9cf"
        },
        "item": {
          "id": "8e0e28d1-bfdc-4d8d-bbfd-cfeca76a205f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "3a5b0506-0ed0-42f2-8b56-5f8b9d9e3bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf71acdf-44a2-4773-ae6c-a20a9835d492",
        "cursor": {
          "ref": "368c0add-e42d-4092-b5ce-b3014cee9ff5",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "36ababa3-564d-4b97-b620-70d352538348"
        },
        "item": {
          "id": "bf71acdf-44a2-4773-ae6c-a20a9835d492",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "1c31a164-f94e-49a5-ae03-020a0055f747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b02e99d-c03b-4932-9ca2-6092da2df10b",
        "cursor": {
          "ref": "41b52a7d-1e2e-4d59-8b72-8635c6000f19",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "cb99ffb4-73aa-48e9-b466-ccd7e3c593a9"
        },
        "item": {
          "id": "8b02e99d-c03b-4932-9ca2-6092da2df10b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d0843fe6-1b12-46f6-906a-b22ad2910b61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec5416f-955b-4331-afaa-18530fc22a50",
        "cursor": {
          "ref": "89c2821c-4025-4fa4-a7a8-401535364ea5",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "d1378a7f-3aca-44a1-b5ff-1e1410fd5aeb"
        },
        "item": {
          "id": "2ec5416f-955b-4331-afaa-18530fc22a50",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "aa559ae0-df6e-41ec-97ab-6bd217d40318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1db1d523-1e8e-4720-8e31-8ed34a078dd7",
        "cursor": {
          "ref": "91c88749-c9a5-48a9-a3b4-4f2a82a45b47",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "be0f51a8-292f-4ad6-a8fe-4a00dffd2079"
        },
        "item": {
          "id": "1db1d523-1e8e-4720-8e31-8ed34a078dd7",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f051c609-3538-4254-9a32-1326dc5fff33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4404772-0d54-45c8-9045-b7261eaba1dd",
        "cursor": {
          "ref": "9ec33d22-9e60-4166-952d-0ef75e586f4f",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "1ac547f6-e2b3-4fb2-b5ab-ae5b7a94e86b"
        },
        "item": {
          "id": "d4404772-0d54-45c8-9045-b7261eaba1dd",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9bb59d4c-1d78-46b6-988b-4224fdb2b070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b1ea392-1516-42f7-a3dc-b693f807232b",
        "cursor": {
          "ref": "6dfab12c-a006-48c3-80ee-67ed179f5e4c",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "82c2ea37-0800-45d2-9353-3df8b9914ec1"
        },
        "item": {
          "id": "0b1ea392-1516-42f7-a3dc-b693f807232b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "61036432-60a8-45ad-8df8-6c20c4eef8d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff6b917-9491-4ddf-ae89-9c5a6da9a1b2",
        "cursor": {
          "ref": "2dd00ed9-9c69-4a3e-b649-d5506034750e",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "868e7002-24f8-4506-a171-7ed4eb8ded64"
        },
        "item": {
          "id": "cff6b917-9491-4ddf-ae89-9c5a6da9a1b2",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e1a96fb3-5f6c-4510-b54d-8f782efef1eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c72a2ba6-a561-43b8-b7d6-8fe4d7e517fa",
        "cursor": {
          "ref": "74cb6400-888a-4c50-bc15-2b9827d753bd",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "4a360466-a2c6-4f60-b78c-2ea66169b233"
        },
        "item": {
          "id": "c72a2ba6-a561-43b8-b7d6-8fe4d7e517fa",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "0252116d-a774-4dbe-b6ee-a08b14be56f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38188008-8460-43e5-ab08-bb29250532b9",
        "cursor": {
          "ref": "716cb695-17f1-4ba4-9150-d6217f15b7c9",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8727de91-1cc2-4b6b-ad48-7fee8b1efed9"
        },
        "item": {
          "id": "38188008-8460-43e5-ab08-bb29250532b9",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "725aebda-163b-405b-bd40-bb8b2d4425cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f3717bb-6c88-4d0f-99e4-b42ce5e4a664",
        "cursor": {
          "ref": "5965c137-ef8b-4b74-8bd2-e218214cadef",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b275edd5-e362-4d91-bc31-8a99e9002252"
        },
        "item": {
          "id": "3f3717bb-6c88-4d0f-99e4-b42ce5e4a664",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "86c043b4-6725-42fc-bef3-b7ef76c26522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fabdbf64-60b1-4948-872b-6eb33e721567",
        "cursor": {
          "ref": "a84e2613-e728-485b-91b4-077f7dc32c94",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "821db639-63fb-40f8-a997-b5499ddf94be"
        },
        "item": {
          "id": "fabdbf64-60b1-4948-872b-6eb33e721567",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "cbe15421-1a4f-4bde-b436-63c68ab80a76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed983a36-f081-44ef-8ba3-8958b96ff8cd",
        "cursor": {
          "ref": "4ea27308-adb4-4aa3-8e16-e42e0e94dd67",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "3807acef-f704-409c-a000-eb9b4ed5da52"
        },
        "item": {
          "id": "ed983a36-f081-44ef-8ba3-8958b96ff8cd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "7fe55e03-cf18-4e50-aefa-a3eaeca51a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1fc1c35-81b0-4b5f-a584-2017a5297644",
        "cursor": {
          "ref": "61989037-12b2-429d-bd62-a2cb09f27e69",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c845c165-468b-4902-bbda-28d65e8abce5"
        },
        "item": {
          "id": "e1fc1c35-81b0-4b5f-a584-2017a5297644",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "2d2ff5e7-c70e-47d2-a245-a60452deba9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd2fe66c-bab0-4827-bfaf-b871659841fa",
        "cursor": {
          "ref": "bce14f6b-2e02-4beb-ab76-1513d0f3f72c",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d4f34fbd-8781-4a3d-a517-97b549c63d6e"
        },
        "item": {
          "id": "dd2fe66c-bab0-4827-bfaf-b871659841fa",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "5a0a53aa-df50-4ba6-806c-179adb1c4cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6286b571-184d-4287-bf21-cff15322e83d",
        "cursor": {
          "ref": "e67a9a02-f668-4418-a154-c81da04adbbc",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "44d586c2-301d-420f-b928-475175b58f8c"
        },
        "item": {
          "id": "6286b571-184d-4287-bf21-cff15322e83d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c3e597e4-1591-4fe0-bcd1-8a77cfbe57c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3beb9fec-47c7-4e44-a604-6df4309a5da4",
        "cursor": {
          "ref": "c7a2925d-bedc-428a-8f2a-8db8bbc666cf",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "3f26a403-c4a3-4aec-9c23-33f48287eebe"
        },
        "item": {
          "id": "3beb9fec-47c7-4e44-a604-6df4309a5da4",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "83276d7b-62bf-4bf4-850c-98e2478b271e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b7b144-50cb-431d-bd22-ab09d563e697",
        "cursor": {
          "ref": "81d0cbf7-0062-44a7-b8cb-2ea13f17b0a7",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b5087b05-86d8-4b1b-afdd-f1faaefb9d52"
        },
        "item": {
          "id": "69b7b144-50cb-431d-bd22-ab09d563e697",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "7a99cc8b-d7aa-42ad-a42c-8e6f64d5681a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "918c6635-83e5-4659-b270-b45556bb0286",
        "cursor": {
          "ref": "ac4bc98c-b5f4-44fc-9b69-b5e59d6d961b",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "8bb0c118-a30b-4bf4-b8e6-430fa056ddff"
        },
        "item": {
          "id": "918c6635-83e5-4659-b270-b45556bb0286",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "3fe00134-913f-4f1c-9519-a12d58d5add9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d82757-665f-4c60-b2ae-28da7f9270bd",
        "cursor": {
          "ref": "60a91950-b2be-468f-89da-7d546ed81ecd",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "5256eaf9-9aed-411d-a484-eda57f1b80c9"
        },
        "item": {
          "id": "e2d82757-665f-4c60-b2ae-28da7f9270bd",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "2cf244fa-6237-44b5-b45e-d0093dbc7802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "089e4a61-3890-48e0-9aa8-b689d37fb3ee",
        "cursor": {
          "ref": "768b4bd3-92dd-4bd8-89a7-69061997a876",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c5a40bb0-91f1-41a1-bfe3-710c57794ba9"
        },
        "item": {
          "id": "089e4a61-3890-48e0-9aa8-b689d37fb3ee",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a7aae0a7-ad33-469e-b8a6-6e4f2ba01190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1e8567-5740-43d7-8136-ff41db6f22c5",
        "cursor": {
          "ref": "ab621e2a-c55c-4c93-90e2-cd5fc9999a24",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "fe38dc47-c35d-4b89-ab75-beea1c9f76db"
        },
        "item": {
          "id": "9e1e8567-5740-43d7-8136-ff41db6f22c5",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d0a95be9-cb7b-4a4a-822b-1ea63fb12e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13cccbf4-7db1-4f42-857a-3051476e30eb",
        "cursor": {
          "ref": "7c4eea65-62ea-4325-97c0-d845b31d603f",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f17c95a3-c0eb-47b2-bcb4-f8cd22cb7726"
        },
        "item": {
          "id": "13cccbf4-7db1-4f42-857a-3051476e30eb",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c85649ef-d401-42fe-b30a-1df62c182c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23cc670-7b00-44ed-b577-197715cb2692",
        "cursor": {
          "ref": "6c6362b5-52e8-4fb2-aa5e-e8f004ffc9e2",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a7a176ac-6b86-4ff1-b38d-c49290d837cb"
        },
        "item": {
          "id": "b23cc670-7b00-44ed-b577-197715cb2692",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "0713d758-936c-4782-bf23-cbcbfed10e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14de430c-f7d7-402d-93df-8958b60002d8",
        "cursor": {
          "ref": "02765c0c-9291-492b-adb5-8735ce29adb7",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "5d05c4d7-1e8e-454b-bdde-2ccf336e6197"
        },
        "item": {
          "id": "14de430c-f7d7-402d-93df-8958b60002d8",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "18091b59-dbb8-4b0a-a84e-37b863a5502b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae307a15-fe28-43ce-8d4e-82b85bc731cf",
        "cursor": {
          "ref": "953fe787-d8dc-4bd3-ae02-5c1836f23bcb",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "31395ca4-a7d1-411b-acca-9b716ec71d9f"
        },
        "item": {
          "id": "ae307a15-fe28-43ce-8d4e-82b85bc731cf",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "75e44869-dd6c-4540-8c32-6d950d0a6037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a5b8a7-b999-4e66-93a2-dcc216080e88",
        "cursor": {
          "ref": "a5ebdbad-5051-4377-a610-0e8552c2b494",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "958b9591-c8a2-49b5-b3fa-a3a509e15893"
        },
        "item": {
          "id": "02a5b8a7-b999-4e66-93a2-dcc216080e88",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "64c4e282-a0ce-4abb-b478-20826a1969d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c70370f1-8592-493d-ad38-f933e6a8af08",
        "cursor": {
          "ref": "ed0fc692-f5c1-4d6f-872d-08f9eaae0d24",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "77f6fae5-a8fa-4e37-a690-26918cb5d4a6"
        },
        "item": {
          "id": "c70370f1-8592-493d-ad38-f933e6a8af08",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "6581f9a9-0580-4d11-a817-48a4e20c7878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "747a645d-e4db-4499-9a7a-040943b339d1",
        "cursor": {
          "ref": "02fcfaaa-ae37-4e85-b9b5-69fda210aed3",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "7e6926ee-f8d6-438b-ade3-209d91f4dc2b"
        },
        "item": {
          "id": "747a645d-e4db-4499-9a7a-040943b339d1",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "68df7a86-b880-4d97-baab-a73c71b01fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a9253b6-ce5d-4cfe-a43b-d3c172c81d9d",
        "cursor": {
          "ref": "d9852835-0485-4832-9321-3579cfcc2a4d",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "fa1d5a2c-480f-434e-9b03-a48025af5948"
        },
        "item": {
          "id": "4a9253b6-ce5d-4cfe-a43b-d3c172c81d9d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "2b2d368f-202a-4bdd-8f62-417b230fd442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8613c445-9764-4c23-b5f5-82bac72be4fc",
        "cursor": {
          "ref": "15d85abf-0b3c-4f43-b55c-4cf7a9bbd09c",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "75a9e0f5-bc3b-4c57-ac0e-f065c89719f0"
        },
        "item": {
          "id": "8613c445-9764-4c23-b5f5-82bac72be4fc",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b3fb873e-2297-4fc5-9733-c6357433be13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 191,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc53bcf7-bae8-4ad3-92e8-9c43c7629007",
        "cursor": {
          "ref": "cf8e0fa5-e0ab-4f95-8d02-0a163ea8483b",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "df31fb14-f482-4cf7-b5ab-b198071424b4"
        },
        "item": {
          "id": "cc53bcf7-bae8-4ad3-92e8-9c43c7629007",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "52eb48f8-b741-41bf-8e3f-fd2cedb5412e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44065700-7676-42a0-b4a9-a9dda0109fb5",
        "cursor": {
          "ref": "612868c0-c028-47ac-8b4a-c9d72ada1077",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "789c0cfc-8ad7-4e0f-9376-b9cbb7a9554e"
        },
        "item": {
          "id": "44065700-7676-42a0-b4a9-a9dda0109fb5",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "112446e1-1134-46a8-8042-7033107fc932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ac9f812-adc0-451a-8e14-4c5d7d794fea",
        "cursor": {
          "ref": "5d5cea00-5cb5-4a17-a371-0c1a313f44a8",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "4c81624b-882a-4d8e-a3f4-a90d8a114662"
        },
        "item": {
          "id": "0ac9f812-adc0-451a-8e14-4c5d7d794fea",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "de6670a4-83fc-40b3-bd07-49546effcd68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30945d01-53ad-4b10-8acd-ddb17b59bf88",
        "cursor": {
          "ref": "e7f6533b-90e0-46e3-a762-1da5caaedee1",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "af6ff0a4-fbde-44da-b7df-e0dea6313894"
        },
        "item": {
          "id": "30945d01-53ad-4b10-8acd-ddb17b59bf88",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d8e48f91-7456-430d-9abd-d1206d9d890f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0651a2ce-2865-45f3-b158-6c3c78121dfb",
        "cursor": {
          "ref": "3c4c9c28-6ed3-4683-80d0-d464ee5c92fe",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "82078b00-a17a-4d62-a823-70b8ffb7dfd2"
        },
        "item": {
          "id": "0651a2ce-2865-45f3-b158-6c3c78121dfb",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "18703ac2-57cb-4c71-a7a0-f93e44a2333c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8858078-b57a-4909-998b-2a6a81637aa0",
        "cursor": {
          "ref": "9f0d518f-280a-48ca-b5f4-3dbf4966a5cc",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a1ba2083-9832-450a-9535-b135e76155e1"
        },
        "item": {
          "id": "e8858078-b57a-4909-998b-2a6a81637aa0",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "c72937f0-9a2f-4fc2-bdd4-392eb15992cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee93fe13-d694-49c4-9de9-411b4bee89c9",
        "cursor": {
          "ref": "c0f1eb2b-1ac7-45fe-a46c-c7cedffbd6c2",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "06333da1-381d-449b-8b7c-a33a9bbbfcb8"
        },
        "item": {
          "id": "ee93fe13-d694-49c4-9de9-411b4bee89c9",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4713e7b3-5218-4485-a4c0-8848bcf184a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f89b86e-fc9a-4236-97a9-39b19cc6e390",
        "cursor": {
          "ref": "475c86ca-0281-45fd-8e58-06bd69627644",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "46eb60ce-8b93-44c4-a8f6-6665084af57d"
        },
        "item": {
          "id": "1f89b86e-fc9a-4236-97a9-39b19cc6e390",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "796a63f3-fdf7-4ea7-aa60-17a4f9da5be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9816a055-f6ac-467a-bc07-57f38d96d285",
        "cursor": {
          "ref": "c2de1da9-ef88-4593-93cb-58d091d95ab8",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e2b671a5-143a-466a-a15a-5186daa163ad"
        },
        "item": {
          "id": "9816a055-f6ac-467a-bc07-57f38d96d285",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "40b06e93-8c82-40a7-bc53-09d15276f080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc086070-b820-42b7-b6dd-e23e70555bbe",
        "cursor": {
          "ref": "d2b2172c-9b04-4350-8d79-b7692d1e2bd0",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7d631162-0cd1-4fec-aa23-cabc550fb50e"
        },
        "item": {
          "id": "fc086070-b820-42b7-b6dd-e23e70555bbe",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "14bac570-0cf3-4664-9244-1b6721bd4208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc08ae15-6bdf-4eb3-8616-b4486935fb4e",
        "cursor": {
          "ref": "095d0d2b-1642-4e51-a24d-acdb2e6e108e",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "12300f39-e8b4-4cd7-a193-75023e98ea73"
        },
        "item": {
          "id": "bc08ae15-6bdf-4eb3-8616-b4486935fb4e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "b4204883-43f1-40ae-9e1b-5fd26bb31751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7495c950-d065-4ebc-a563-ebdd8da321ee",
        "cursor": {
          "ref": "8d69576c-eb18-4fa7-846b-81ea02a0b65b",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1fc1b05c-fe34-48b6-9573-035230f697d1"
        },
        "item": {
          "id": "7495c950-d065-4ebc-a563-ebdd8da321ee",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "87c49fc4-f440-4a1f-ab73-501e9c4ffdf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8a86638-2cc2-4060-bfcb-e83913a8f21a",
        "cursor": {
          "ref": "857f109b-8610-42f1-9bb4-8f83e861957f",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "7613aabf-d72c-4317-87ac-12b1f6e844db"
        },
        "item": {
          "id": "f8a86638-2cc2-4060-bfcb-e83913a8f21a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9b66502a-d0e4-4386-b009-016d4eeec3c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec9b89f-6abe-4cd7-9af1-3b0eb6657dca",
        "cursor": {
          "ref": "cabe7f8f-4c43-4880-ac91-50b75c676f24",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f384ad9a-f409-4cb5-82e0-1fbac5fa06dc"
        },
        "item": {
          "id": "aec9b89f-6abe-4cd7-9af1-3b0eb6657dca",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "f10d57dc-1c10-4b66-949e-0fe27f07d811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a5e9a9-31ed-4177-8ca9-660f0a2004c8",
        "cursor": {
          "ref": "9e1722c1-1e9f-427d-a74f-863fea24fd5a",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "798692db-589c-49d8-8bd1-0f7a2a2cb2bd"
        },
        "item": {
          "id": "66a5e9a9-31ed-4177-8ca9-660f0a2004c8",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "6141cce6-f5c7-4ea0-93bd-65b53821539a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbfa57c7-b6a2-4144-b2f6-5eec96d6c8c9",
        "cursor": {
          "ref": "e9f75681-459c-413f-98d2-80747bf42ec6",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "5c6d7f0b-6136-4c9e-a4cb-7b3f2d0eb80c"
        },
        "item": {
          "id": "cbfa57c7-b6a2-4144-b2f6-5eec96d6c8c9",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b5f18d55-3fa5-440c-825e-2aa3d14bcdcf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5a5356-33ca-44ce-ac23-36379b8ca1ec",
        "cursor": {
          "ref": "8351afd4-2220-4f9f-9656-1a8f1e17b23a",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "60104ea9-462b-4cad-8fa5-a4370c28e2d1"
        },
        "item": {
          "id": "7c5a5356-33ca-44ce-ac23-36379b8ca1ec",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "01dc0f32-368c-4c5f-95e8-cb93e1d37eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 211,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "1c6bd2ff-f8d1-463b-befa-7c4e67c8ac22",
        "cursor": {
          "ref": "b13036eb-b5e0-4b4d-aaa2-36b9b7a20398",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "33a2160d-b656-435d-a769-dd98e61405a4"
        },
        "item": {
          "id": "1c6bd2ff-f8d1-463b-befa-7c4e67c8ac22",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b0de556c-6fca-4d0b-9a24-98e0fb7030fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "21eae4bd-3639-4a71-8e75-6b56191f67ec",
        "cursor": {
          "ref": "c9420617-2e30-4d8f-b57e-c8fbb841fbba",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f9497535-9598-4f7e-817d-91fbbea218be"
        },
        "item": {
          "id": "21eae4bd-3639-4a71-8e75-6b56191f67ec",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "5e76201e-07f8-44cf-8fde-1142a2ccf779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "65d75932-fb74-43d6-bbc1-1c8f3ffe7388",
        "cursor": {
          "ref": "ea87303f-133f-402c-880e-473355a0dfd0",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "3fad1454-fdbb-414e-a4bb-dca88d32ea24"
        },
        "item": {
          "id": "65d75932-fb74-43d6-bbc1-1c8f3ffe7388",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a9c2255c-aeec-48c0-9dcf-6818019787d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "55b5b0b8-44ad-4739-b3a2-bdec1c7779e7",
        "cursor": {
          "ref": "18153470-b5ac-4ac6-91e1-9e66783640ce",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "0eb6b5e2-9cfd-4bf2-8ade-fd35fa5eda13"
        },
        "item": {
          "id": "55b5b0b8-44ad-4739-b3a2-bdec1c7779e7",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "38a56634-04d7-4fe8-a9be-f9aa76ff98d0",
          "status": "Created",
          "code": 201,
          "responseTime": 10673,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd394b0c-1044-4fbe-9442-8ce283d9d105",
        "cursor": {
          "ref": "6004f109-8d55-4341-83fc-0c8dced282dd",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "8fdcdc90-8b27-4566-bba1-2352241a3ddc"
        },
        "item": {
          "id": "fd394b0c-1044-4fbe-9442-8ce283d9d105",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d2962fe4-5497-4e89-9762-7ef47bd18ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "7b474aee-4c60-4289-9e54-eaa41181fed9",
        "cursor": {
          "ref": "2dd9800f-886c-462b-af68-b75ff8dbb8bd",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a6ca688c-868c-4d75-a1a1-b22a5c3634e2"
        },
        "item": {
          "id": "7b474aee-4c60-4289-9e54-eaa41181fed9",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "99e78327-b987-47c5-b2c5-2b79056dbea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "16675dbb-1e5e-4518-8325-a6fc2634e57e",
        "cursor": {
          "ref": "6d5fd504-08f6-410e-9cc6-a33dd60824ec",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "6ad1647e-0738-464d-990a-b9f5d9d953b6"
        },
        "item": {
          "id": "16675dbb-1e5e-4518-8325-a6fc2634e57e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "08cc9526-6784-4095-ad4d-3935e217ba29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c3edae-8e47-4255-91bb-e5b8bfc0d1fa",
        "cursor": {
          "ref": "ed7a9396-44e1-47b2-bd95-c771ef7f49ba",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8e5bcfb8-3d4a-4e63-83a2-3701b6bf367f"
        },
        "item": {
          "id": "19c3edae-8e47-4255-91bb-e5b8bfc0d1fa",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0b4a44b4-0ea9-422b-84fd-17e026d2df05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45391a88-15a0-434b-9320-8e081c5da343",
        "cursor": {
          "ref": "6c363b13-69a9-4211-8720-7d4a3aa8c2d4",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e98cba72-a690-4237-be78-4c95105db8d2"
        },
        "item": {
          "id": "45391a88-15a0-434b-9320-8e081c5da343",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f19f19fa-c44a-47eb-9c1d-5d355e15c3ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a32842c4-8ae7-4243-ade1-6ed70ca6dc1a",
        "cursor": {
          "ref": "45400505-9a4f-4113-b2a3-3d2d9ddb9de8",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e6c2c7a7-360c-4528-be2a-f2919f78243b"
        },
        "item": {
          "id": "a32842c4-8ae7-4243-ade1-6ed70ca6dc1a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a256d962-dcb1-4f01-a02a-bc74360f0409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cefb4e8-f1a4-4dfa-9a8e-e65514dfd4d0",
        "cursor": {
          "ref": "0b8dde28-53fb-47cc-9596-b25301686e0d",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "57b36e09-3e71-4bb0-967f-e75d238d8d54"
        },
        "item": {
          "id": "4cefb4e8-f1a4-4dfa-9a8e-e65514dfd4d0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "48f884a0-44d1-4de9-9887-efa5955e23ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f973243a-afa2-436f-8e2f-dc39354c2c34",
        "cursor": {
          "ref": "cde734e6-c252-43bd-9180-eee681de1c63",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5fb08145-f0be-4540-b719-0bc23889d89e"
        },
        "item": {
          "id": "f973243a-afa2-436f-8e2f-dc39354c2c34",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c56953c5-be22-4bf6-a8dd-1d4be670e99f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b64014-1e6e-4f92-bb5f-32d97cb5fc99",
        "cursor": {
          "ref": "e6dedce6-320b-4a05-8a44-02ea4929223c",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "777c9fac-b32d-4717-9b29-164b8fa8220e"
        },
        "item": {
          "id": "c7b64014-1e6e-4f92-bb5f-32d97cb5fc99",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c2b8a9c9-b272-4880-8124-cda9c5e7ad66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74537489-9e64-4e4c-80f6-a5a2ecf46fbe",
        "cursor": {
          "ref": "298b1c81-e9fa-465b-b17b-a1c6b8639fc7",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "165e0e12-7cfd-4050-b9a9-5082d626beb2"
        },
        "item": {
          "id": "74537489-9e64-4e4c-80f6-a5a2ecf46fbe",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "327f3917-95c3-4d83-bf81-906eb73ccff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "882304a6-9595-4fc4-a832-a9da54ce063c",
        "cursor": {
          "ref": "1d1361c9-840e-4a05-bfed-60198be1008a",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "17e31c6b-a092-49c1-8726-0379c6c2bee5"
        },
        "item": {
          "id": "882304a6-9595-4fc4-a832-a9da54ce063c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "fda9b514-b4da-4edd-ae47-89738a9ff456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "310bad06-6223-46f8-8e50-9b2256e12129",
        "cursor": {
          "ref": "7204525e-537e-42ab-a02d-a21bdcf42cc1",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "5323331d-edc0-4385-9e8a-1be87813e62c"
        },
        "item": {
          "id": "310bad06-6223-46f8-8e50-9b2256e12129",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2ff0cd32-9fd0-41ea-a29b-423cc60606ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c5cd322-1dbc-47bd-bdcd-d73711ae75a2",
        "cursor": {
          "ref": "f95ef419-2699-41d3-a231-1340ae87eae3",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "19579684-f90e-43fe-b218-620d34158293"
        },
        "item": {
          "id": "6c5cd322-1dbc-47bd-bdcd-d73711ae75a2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "289b5dd5-c868-4a6c-aa7c-bddf5957c02f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "527b8e9c-5780-4525-baa4-c5ea4567b3f2",
        "cursor": {
          "ref": "34a1bffa-e996-4166-8c83-d3ca119e4786",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "4893d4cf-adcd-435c-a56c-b004c413d22d"
        },
        "item": {
          "id": "527b8e9c-5780-4525-baa4-c5ea4567b3f2",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "69281a44-9520-41ad-9f62-f22f99abf296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c16b3eb9-37f0-4336-bbca-39ba42338858",
        "cursor": {
          "ref": "be5745eb-3d85-47a3-a80a-2bfe36c9c18f",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "ed0a39ad-7278-465e-a928-1c4c6c9f3d8e"
        },
        "item": {
          "id": "c16b3eb9-37f0-4336-bbca-39ba42338858",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "bad96498-7df3-4414-a6c4-fb3e52ef4bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a03f9318-7024-46d1-bd20-7ead300d95e5",
        "cursor": {
          "ref": "3030e62e-620d-4453-a862-256a8aba6643",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "470f3933-44d2-4efc-83fc-8ad22610b8a2"
        },
        "item": {
          "id": "a03f9318-7024-46d1-bd20-7ead300d95e5",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f2b81af3-b061-4659-a84c-29c01e8b61a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5792dd2a-b0f0-40ea-8364-e12014112d5e",
        "cursor": {
          "ref": "46313f16-31b4-44bc-9ed2-46d1d9873301",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "14f5c741-913d-40c9-9fff-eeb07cdb0c4f"
        },
        "item": {
          "id": "5792dd2a-b0f0-40ea-8364-e12014112d5e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8171de7f-2e57-49db-a30d-03677a9d7697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f56ae0-1a16-4ada-b039-1195b6eb8b09",
        "cursor": {
          "ref": "e167e603-2b8e-4f3e-ad67-42180bb245b6",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "8a12951d-8945-4a9c-8344-041a5ff036ce"
        },
        "item": {
          "id": "32f56ae0-1a16-4ada-b039-1195b6eb8b09",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "37a3f210-9575-4d6b-8db3-829352baf16b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d6037dc-bacc-45d8-9b39-38a0523ee5c0",
        "cursor": {
          "ref": "a00dda1a-b8e7-44ed-8ee1-69a68c0a5103",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a2b110f4-4005-48db-a17f-79ccfe37c5c5"
        },
        "item": {
          "id": "9d6037dc-bacc-45d8-9b39-38a0523ee5c0",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d76d43d7-8189-4279-89ca-f465814d2fcb",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 42,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "6080cd38-fdc4-4678-9135-53127c0602c0",
        "cursor": {
          "ref": "78f6597b-97ab-4f88-8c99-2f0b8aec81e1",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "8e681c6d-579a-4b55-9b5c-ea90271c02f3"
        },
        "item": {
          "id": "6080cd38-fdc4-4678-9135-53127c0602c0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "415e4393-b78a-43a8-9afc-1fa1234deac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82195062-be1c-4776-a6b3-7049eedc1104",
        "cursor": {
          "ref": "93d3db91-b740-4172-befd-4e97f19252d9",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "53a71da1-a315-4909-ab7b-f911b3e6b643"
        },
        "item": {
          "id": "82195062-be1c-4776-a6b3-7049eedc1104",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9a6cc594-9b81-4bd3-afc7-d49d01fa0487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "081ef50a-8db1-480b-888d-fac2a4e4822f",
        "cursor": {
          "ref": "3bc11320-1d0a-4ad1-95de-bded6fd0f5d2",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "fbce1a31-7deb-4056-9282-4340e4a2d58a"
        },
        "item": {
          "id": "081ef50a-8db1-480b-888d-fac2a4e4822f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "73a28e6d-f7d7-4df1-855f-aae94ff8daa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec70dd5-266d-4814-a355-f6c11e64e2cf",
        "cursor": {
          "ref": "7504229e-ee24-4770-8426-a89dfd94740e",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "bdad6ed1-2772-4a47-a04c-ace00ee5b153"
        },
        "item": {
          "id": "3ec70dd5-266d-4814-a355-f6c11e64e2cf",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3484595e-58f7-46fc-b7b3-bf3753152b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7512c208-7571-4b11-85dd-fff5a9ee8040",
        "cursor": {
          "ref": "a45ec130-366c-4ebc-8737-ced26a33e73c",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "089f5324-0e30-4c5e-9d9d-26edf6479c7d"
        },
        "item": {
          "id": "7512c208-7571-4b11-85dd-fff5a9ee8040",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2cc8bfae-9e27-429e-bc5c-0a7066decb21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9482884-6b21-4836-a575-4034f55b301d",
        "cursor": {
          "ref": "13648fdd-2a34-42a4-a26a-3c067f2ed2bd",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e6db35bf-7ca9-4acf-bedb-08240fd456f0"
        },
        "item": {
          "id": "a9482884-6b21-4836-a575-4034f55b301d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "50e8e7d0-d55c-4704-9260-d93c30debbf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19835267-4c26-4c45-8a41-1064e928603a",
        "cursor": {
          "ref": "d1765d82-9f50-4f83-9d81-255ad2eaeaa6",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "96376380-b9c2-436f-9a14-e347ce26b2df"
        },
        "item": {
          "id": "19835267-4c26-4c45-8a41-1064e928603a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "bb60327e-898a-4093-bc88-72e6fe905f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e851e4-2466-4e09-882f-ed8e1896b539",
        "cursor": {
          "ref": "18c612b0-ff47-4f98-9363-2199182e3142",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "fcace010-3475-4220-8149-5c361041566b"
        },
        "item": {
          "id": "a8e851e4-2466-4e09-882f-ed8e1896b539",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b677a464-7679-45fc-91fc-bcafa6d17fe9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 49,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "3c394d2a-e891-4d39-b85c-d1665a944bdd",
        "cursor": {
          "ref": "775bc61d-e07c-4524-892d-c559e79d5437",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "31fec713-bf40-445e-a1c4-41bc0006ed70"
        },
        "item": {
          "id": "3c394d2a-e891-4d39-b85c-d1665a944bdd",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "007822f5-fa6d-4c16-a0cf-062a3a4b3de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf9bd75-eeda-4cd1-bebc-95d9067cbc25",
        "cursor": {
          "ref": "224d33b1-9081-413b-a18c-d336e9bb1909",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "0c707a3a-1429-46a1-ad75-a0f8938c01e1"
        },
        "item": {
          "id": "6cf9bd75-eeda-4cd1-bebc-95d9067cbc25",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e069d3ed-981e-46ad-a06f-b231a7a64a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ccff6c5-9fb9-43e0-b911-0b67f1ab2389",
        "cursor": {
          "ref": "fba827af-2524-4925-a964-dabd1f4d13ac",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "83423f3f-e3aa-481b-988c-0e0ef452109e"
        },
        "item": {
          "id": "2ccff6c5-9fb9-43e0-b911-0b67f1ab2389",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2b60b5fe-b476-430a-892c-bc288bfaa49a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da41c330-1c2f-44a4-b686-40a34e79ec5d",
        "cursor": {
          "ref": "bda2d7cd-8b0e-4388-8264-5e57cb6348de",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "17072741-e7ec-4759-b63c-3fb7d7ed6e35"
        },
        "item": {
          "id": "da41c330-1c2f-44a4-b686-40a34e79ec5d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4795c8dd-8df3-4431-86e3-29b126aa528a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1564eeb-3328-4317-83ca-6eabb34e1066",
        "cursor": {
          "ref": "8b845568-44d6-4603-8dc5-e3a987ab2df9",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "337d4683-9e46-466d-af22-df92e48663b8"
        },
        "item": {
          "id": "c1564eeb-3328-4317-83ca-6eabb34e1066",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "08753ab9-a2eb-4e83-b40b-ca60ddd1bc81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7585dee8-cce4-457c-bc74-3827d5ed8d3f",
        "cursor": {
          "ref": "a7f51f7a-229c-4b3f-8247-dbd90d032097",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "9b4b0977-f6cf-49a0-9994-11bea1b290e8"
        },
        "item": {
          "id": "7585dee8-cce4-457c-bc74-3827d5ed8d3f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c03f281c-f1d1-46fd-8bc9-815f6077a61c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4637c26f-8b77-4cb4-9478-e8735e24eaf2",
        "cursor": {
          "ref": "bd37dba7-e23f-4394-befe-16b096a33894",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "c89b7b91-0067-4102-97e0-ce659fd3d164"
        },
        "item": {
          "id": "4637c26f-8b77-4cb4-9478-e8735e24eaf2",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "ed6d6b88-cca0-4e4a-968a-5c773ef22776",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "ab7a9bbd-573f-4326-9bd1-784ac1ce6320",
        "cursor": {
          "ref": "3477dba0-24ae-4aba-8328-b35d894c930b",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e5c142f3-91fe-43f6-b77c-f739a5e1649e"
        },
        "item": {
          "id": "ab7a9bbd-573f-4326-9bd1-784ac1ce6320",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "90068255-3fd4-48e2-9cdb-fe55553d8e39",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 46,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "42c22bef-9b08-491b-9cf8-52459c05b0d3",
        "cursor": {
          "ref": "c6e01083-d75b-4f15-a9a2-f28667763fce",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "64908029-b1c5-470e-b1ab-f0f9b388687d"
        },
        "item": {
          "id": "42c22bef-9b08-491b-9cf8-52459c05b0d3",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "b8004c38-a664-4c4f-bced-a119a7ea8231",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "81464401-36d2-4d25-9035-13dab2afce5d",
        "cursor": {
          "ref": "d66421cf-1abe-406a-b820-3fc3144aad92",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "24fe3c92-79ca-4308-9b5d-a858fe6b313f"
        },
        "item": {
          "id": "81464401-36d2-4d25-9035-13dab2afce5d",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b26461e8-f04a-4231-baf1-ffa1f5a704da",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "50445d5b-a3b8-4097-a4bb-3eec39e5934e",
        "cursor": {
          "ref": "b4dc116e-d265-468d-83ba-7482d3418443",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "09ba6798-1eb5-4cdd-b09a-50da8309f701"
        },
        "item": {
          "id": "50445d5b-a3b8-4097-a4bb-3eec39e5934e",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "e927d6da-3b6d-4707-8d51-b78793361e0b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "4e04dcd4-0afe-4f77-943b-98b6fa2ff10d",
        "cursor": {
          "ref": "7997dc31-196b-403e-910d-4d387d61876d",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "5ed5176e-299b-4be1-86a5-a69b1247d20c"
        },
        "item": {
          "id": "4e04dcd4-0afe-4f77-943b-98b6fa2ff10d",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "8169a211-b7f7-4f62-886d-e46fc9b1eede",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "974669d6-df50-41cd-a31b-0fef01f8269c",
        "cursor": {
          "ref": "bfea4a02-ca52-4986-b351-ba3294d3c805",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "15b41e26-b7f1-4b2b-a0c9-298e2b018311"
        },
        "item": {
          "id": "974669d6-df50-41cd-a31b-0fef01f8269c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2b21c250-f39d-40ac-854e-737341cad5f0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6776edc0-4e8a-496e-b503-5b422597ec34",
        "cursor": {
          "ref": "ad3f8eea-c898-4afd-8054-c7bb2e0820c1",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "35399cb5-c968-4122-adfb-6baf780c07d5"
        },
        "item": {
          "id": "6776edc0-4e8a-496e-b503-5b422597ec34",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e782ca7a-2964-4b3c-b47b-40129ee5d584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db3148c-f88d-425a-8e26-5bc0d90f2e6e",
        "cursor": {
          "ref": "43ad48af-d7e7-432e-89d5-61bc31c6731b",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "5c32bc00-d05d-49e8-8636-f72c5ffaf13a"
        },
        "item": {
          "id": "8db3148c-f88d-425a-8e26-5bc0d90f2e6e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "1a0dd50f-0fc5-4049-b030-4f2167e75ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7657c999-2600-4dcd-86b5-f518cc107398",
        "cursor": {
          "ref": "c9bfaa89-2e43-4545-9a7a-663735ebff68",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "94702fa1-e25f-4723-9fae-b69ef988c37c"
        },
        "item": {
          "id": "7657c999-2600-4dcd-86b5-f518cc107398",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "bc792bfa-6b63-4de6-b9af-cafd8fed336b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce6b0577-dc20-4d73-98fc-64fe617408b5",
        "cursor": {
          "ref": "3e84c79b-6ef3-44a9-a567-0b887fc22bbe",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "115c0587-2c81-43d6-91ed-310daa64ec4b"
        },
        "item": {
          "id": "ce6b0577-dc20-4d73-98fc-64fe617408b5",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "5026fc66-277d-4734-8573-ce4351018126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f531d014-00c4-4bff-9d4f-b5f6e10acaf6",
        "cursor": {
          "ref": "1b0a084d-a162-4d30-a5e2-1215b4317845",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "07461f21-9d79-431b-9f16-ed8a314e8d6b"
        },
        "item": {
          "id": "f531d014-00c4-4bff-9d4f-b5f6e10acaf6",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "0e5e3d6e-e433-4898-b118-d02b4bdec204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "903d74e1-0a40-41b0-bae6-85907a51ba7b",
        "cursor": {
          "ref": "59471c32-8edd-47e7-8a70-66e0d78caf42",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "83d2c1d2-fce6-4ebc-b8c8-65d99bcf8b5c"
        },
        "item": {
          "id": "903d74e1-0a40-41b0-bae6-85907a51ba7b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "1dcfcf20-51bc-4143-92cc-e198ef7ff9ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e81698b-4337-4524-8786-f1619ebbb2fa",
        "cursor": {
          "ref": "c749eaa3-5151-4812-85e6-b58449d52f81",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "78f7c98c-fc75-4971-8a8f-69b60ceb21e1"
        },
        "item": {
          "id": "4e81698b-4337-4524-8786-f1619ebbb2fa",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "217b57ca-3bd5-4b6e-87ed-bd90442f31d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad8a49e-666a-40d7-9977-b5afe2fef5a9",
        "cursor": {
          "ref": "74f2a1fd-c616-4491-81a4-cb35f1e8e584",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e336ac7f-d12e-42f6-8d94-60eb2b13fdcf"
        },
        "item": {
          "id": "3ad8a49e-666a-40d7-9977-b5afe2fef5a9",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ced7cbe5-d784-4d99-88cd-f52925c63a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a2b499a-7199-489d-a127-a9d01846de3d",
        "cursor": {
          "ref": "9c7dd7af-4cbb-445d-a11e-e1dfef10fc88",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "536b1e0c-e5c0-47c2-b7e9-dd00744ede31"
        },
        "item": {
          "id": "9a2b499a-7199-489d-a127-a9d01846de3d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "94f49b7c-80d6-401f-b9d0-e1c7a46a4b69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c2740ef-b00a-41f9-afeb-912f12d22469",
        "cursor": {
          "ref": "a58e843c-0bff-4f56-8d2e-728a993cd825",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "bff76b24-8b55-4941-9add-b5532bd51413"
        },
        "item": {
          "id": "2c2740ef-b00a-41f9-afeb-912f12d22469",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "5c53ce9b-dd9c-473b-bf57-a4837cd288c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af9996d-54cf-4244-a00a-acb937f58f9f",
        "cursor": {
          "ref": "9df84186-1b1e-4ecf-9e9a-8fe7741cb531",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f4979c66-d4bc-4c99-9b65-c0378a519857"
        },
        "item": {
          "id": "2af9996d-54cf-4244-a00a-acb937f58f9f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "65ad33dd-6dd4-49de-9126-63420527d6dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e8681be-1a51-46f3-aa8d-aa2319bc40f4",
        "cursor": {
          "ref": "adf65215-9dea-48fd-abf6-d51f073bbabd",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "5c1ee05f-bdc7-4fdf-adaf-05d36a0ee3cf"
        },
        "item": {
          "id": "4e8681be-1a51-46f3-aa8d-aa2319bc40f4",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "44704643-ece9-4084-8b7e-9b6338ce781d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06645278-dfd7-4a5d-8b10-a1a3d3daaf38",
        "cursor": {
          "ref": "e72f3aed-9ef5-4069-8e92-fbd1ece8a259",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "bda41e4b-243c-4b6e-844c-5a72632d7814"
        },
        "item": {
          "id": "06645278-dfd7-4a5d-8b10-a1a3d3daaf38",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "8b5a0aea-0af1-48d2-ab89-a0e958e980ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15cb5604-1115-4dff-a97b-431dd2a54879",
        "cursor": {
          "ref": "2a118e44-e2ca-434c-a0cc-dab2893590cc",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b873e1ab-f590-41dc-acf0-f2bc150751d6"
        },
        "item": {
          "id": "15cb5604-1115-4dff-a97b-431dd2a54879",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "278838c5-39c4-4720-a815-35ba079a7a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2873f34-031f-40d5-8db9-19e2edecb947",
        "cursor": {
          "ref": "5324c348-99e6-4421-9d37-5bdcc7c39023",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "675ef3fc-041e-4d86-b6df-dd6f2c51eb98"
        },
        "item": {
          "id": "d2873f34-031f-40d5-8db9-19e2edecb947",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "9be6f27e-565a-47c0-9c60-950665997167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "939ca8d5-6662-4248-8559-ca59dc9e8705",
        "cursor": {
          "ref": "30352e16-2575-466b-b8f3-f56bf834e27a",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "c0c479ad-8e6f-4300-a558-416d7dc824f1"
        },
        "item": {
          "id": "939ca8d5-6662-4248-8559-ca59dc9e8705",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "50f613f6-4e94-4dbc-ab2d-2fa1ed72fe0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1efbb46c-2e39-48ae-a422-693bc83c102f",
        "cursor": {
          "ref": "8c5733f4-c008-4403-ba88-9664dd5c9138",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c8e938f1-ff1c-4487-b552-378b32fd1ffa"
        },
        "item": {
          "id": "1efbb46c-2e39-48ae-a422-693bc83c102f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "2441a0bb-fa56-417a-9ce3-35151673c921",
          "status": "OK",
          "code": 200,
          "responseTime": 72,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "ff0c94a5-0615-4ddc-810e-64f11fb6b92f",
        "cursor": {
          "ref": "4f653223-45cb-4592-8361-229d23fb3b8b",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "935689c1-ea73-4392-82e1-4e7028d690c2"
        },
        "item": {
          "id": "ff0c94a5-0615-4ddc-810e-64f11fb6b92f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "93093a37-808c-4238-a743-dab142af69c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe93457b-4a74-47c7-ab23-b6200883e3c8",
        "cursor": {
          "ref": "c4a4f795-d7db-4403-b437-19bbbd4642bf",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "d073b807-0530-4be0-8556-14c0c69e4a27"
        },
        "item": {
          "id": "fe93457b-4a74-47c7-ab23-b6200883e3c8",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "2b5968b7-984c-4f75-a5cf-fb779fda2b54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb9c787-b89d-4d5b-8fe5-affc9465b2e7",
        "cursor": {
          "ref": "c0ce7e80-60ac-4fff-b12c-fe106ba134b9",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "fb08e5ee-88f9-40e9-87ab-ade3b1b9be23"
        },
        "item": {
          "id": "5eb9c787-b89d-4d5b-8fe5-affc9465b2e7",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "8c21cdaf-bd37-44d1-a0ea-21176ba35225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f2fef1-b2f5-49fb-a4e7-07f487a0e903",
        "cursor": {
          "ref": "6bd1e4bf-2bda-42ca-81b4-1849827036b8",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "bca02438-bc46-4aba-83d4-7e4b7a2e6609"
        },
        "item": {
          "id": "f7f2fef1-b2f5-49fb-a4e7-07f487a0e903",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "79a89940-548e-4f98-9d62-3c65fdcdfc19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ce151e-bf13-4970-849d-88c7261ee369",
        "cursor": {
          "ref": "8d204180-ad3d-45f4-b69f-8a5502f32bd8",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c7162902-5079-4099-995a-4fb20ca7edf9"
        },
        "item": {
          "id": "d3ce151e-bf13-4970-849d-88c7261ee369",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "a454e8b3-ec67-4255-abae-e1c48a76d92c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2719d3f-df1d-478d-95fc-5ae67afc3ecd",
        "cursor": {
          "ref": "146155b6-ca4f-4237-9606-d4a639b05aeb",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "5b2d78a1-36c2-44fc-b548-9fb1da5e6aab"
        },
        "item": {
          "id": "a2719d3f-df1d-478d-95fc-5ae67afc3ecd",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "818f336f-1be8-4f6e-8f01-42a132def53d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe9972c-39e2-4fb1-ba4c-0f65f530cd79",
        "cursor": {
          "ref": "99d2c880-4ac6-4e74-b5c0-99715627d67c",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a6e5eefa-8a72-4e12-9175-4381cf8f08eb"
        },
        "item": {
          "id": "afe9972c-39e2-4fb1-ba4c-0f65f530cd79",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "4be6f8ad-897b-4375-a0b3-40d60edc542d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8fe692f-ed57-4615-97a5-acdfd8709da9",
        "cursor": {
          "ref": "62474d14-a4cb-41ab-a3cc-5817e52a7f76",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "452531c4-6167-42ab-b7e9-08cf82457b45"
        },
        "item": {
          "id": "a8fe692f-ed57-4615-97a5-acdfd8709da9",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "a7f4cd8b-ee44-49db-bc00-2ba2be9d41d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07731996-6f94-41a2-a240-7552a8b3f93b",
        "cursor": {
          "ref": "047bbf8f-ecca-4c26-b708-8afde59cb10b",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "f856580a-7262-430c-93e5-5120139be944"
        },
        "item": {
          "id": "07731996-6f94-41a2-a240-7552a8b3f93b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "dab7f8d0-0b8f-40b1-943a-97c2029437df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d923a334-fb11-4f90-9932-e1a4cdb11992",
        "cursor": {
          "ref": "905cbe5a-d4a5-4a52-aecd-5a6e98c3648a",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c9b26211-a4a3-4ae9-9415-d45087a1001b"
        },
        "item": {
          "id": "d923a334-fb11-4f90-9932-e1a4cdb11992",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "30f2093a-40bd-4999-b1ce-0b6421454655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2418566f-a1e1-45aa-b0d2-a086b40fdfa9",
        "cursor": {
          "ref": "da2ca5ed-cd85-43a2-8f78-6757f6931baa",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "6c13e095-09c2-459c-8e67-3a4a70480017"
        },
        "item": {
          "id": "2418566f-a1e1-45aa-b0d2-a086b40fdfa9",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "88e5449a-0d2a-4de8-aa7a-fa1988e8b538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0c04a5-a110-4d78-b5fb-d76a9c18a88a",
        "cursor": {
          "ref": "30ea06e1-0ee8-459d-bcbb-44938562ff16",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e77a7a2c-b18e-4b61-b297-2b844a3ba16b"
        },
        "item": {
          "id": "6e0c04a5-a110-4d78-b5fb-d76a9c18a88a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d7e1b9e7-192b-4115-9c81-d3785b1d0146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff360585-a0ab-417e-9ac0-e40e966e2c82",
        "cursor": {
          "ref": "1c73f193-52ab-4209-81ae-e3d447b3c598",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "40b6ae0d-f1bc-4bb1-a70b-5117962e135c"
        },
        "item": {
          "id": "ff360585-a0ab-417e-9ac0-e40e966e2c82",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "ab4353de-fb7f-4cef-8342-77df30d9eabc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f455b96-c492-4e53-be84-f4199d56830a",
        "cursor": {
          "ref": "6873cbab-248e-4d79-8f0c-f5eae5938bc7",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "8ec4c7e9-5a9b-454e-9306-76c161e013af"
        },
        "item": {
          "id": "3f455b96-c492-4e53-be84-f4199d56830a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "819a1134-5f54-4bee-b8da-737a09a8e055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b43e80-cda3-43ab-878f-faf36b57ae43",
        "cursor": {
          "ref": "2af47c88-1fbd-4b6a-9174-bf145c5abc57",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "dc80d4c3-00c3-4a42-bc03-625c7396abc4"
        },
        "item": {
          "id": "e8b43e80-cda3-43ab-878f-faf36b57ae43",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b4d2537f-58fc-4a83-a533-6d0da8fada7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec6f3ef-ed84-4630-bba7-c6d6e22ace59",
        "cursor": {
          "ref": "559b5afa-48e4-4950-a106-0661c1c31e8b",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "0e4022b7-c3a9-4269-b81e-57c4b9ba3f35"
        },
        "item": {
          "id": "3ec6f3ef-ed84-4630-bba7-c6d6e22ace59",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "77310535-bd1f-4e70-bb01-adfd366eacf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413fd4a0-0069-44d1-8fff-3b3518fc73d6",
        "cursor": {
          "ref": "5005584e-7da8-4303-943d-869dd20933ac",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "6d3c3f9c-4126-48bb-878c-366400cb5923"
        },
        "item": {
          "id": "413fd4a0-0069-44d1-8fff-3b3518fc73d6",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "bf634223-6f67-40d9-901a-abf82956bcfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9710f387-2456-4edd-94c8-85f7a13c6194",
        "cursor": {
          "ref": "1ef351c6-80d1-4fee-9db0-667b5733ab09",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "42d0d261-0947-4ff4-a4ac-03f139869f67"
        },
        "item": {
          "id": "9710f387-2456-4edd-94c8-85f7a13c6194",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "03d5423f-c8ca-4930-932c-78314e408c6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bef493f-54a2-49e3-aa11-c67f3f5855ef",
        "cursor": {
          "ref": "ea047fc7-0323-4e7c-89c5-3b56267b7034",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "5ec34801-4716-4919-89aa-2345608234c3"
        },
        "item": {
          "id": "7bef493f-54a2-49e3-aa11-c67f3f5855ef",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "13ee0796-2f45-4605-b70b-05fc6e584602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "944a9186-fc01-4207-975a-c445fe45f478",
        "cursor": {
          "ref": "29e3c1ae-4a4a-4dc2-aa1d-fe9f04fda4b2",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c6ea86ca-8bfc-4d3a-8d4e-af98bd4b3a12"
        },
        "item": {
          "id": "944a9186-fc01-4207-975a-c445fe45f478",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "e2ca4433-b7dd-4fcd-9e26-f4676e18abc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58834935-adac-47c7-ac31-a983500ad5c2",
        "cursor": {
          "ref": "c1118627-053d-46e5-b667-75f4fe98aad6",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "5a8ee8e0-beb6-47cc-a748-34a7ddb38c9e"
        },
        "item": {
          "id": "58834935-adac-47c7-ac31-a983500ad5c2",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "ee41ac19-c73c-4a9f-961d-cc5a11503a89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db452f4-f3a0-4aee-b8cf-622e86e9ea79",
        "cursor": {
          "ref": "4618abca-4772-42af-9add-ca4cffcb1385",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "87b528c7-a862-4620-80ad-fec838bcdf04"
        },
        "item": {
          "id": "2db452f4-f3a0-4aee-b8cf-622e86e9ea79",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6a3caf89-5757-43c7-94dc-4a85089c15a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "947e007a-1981-4903-b400-aa5a9544d4ff",
        "cursor": {
          "ref": "aa7739f5-4187-483c-a82b-47c6edc0319f",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "48049a5f-4b05-41b1-903e-6935af1d97a8"
        },
        "item": {
          "id": "947e007a-1981-4903-b400-aa5a9544d4ff",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "4c4e0495-f57c-4c81-9829-ebcf96e040d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1a4709-cc8b-4cc7-95f8-b8d2509fcbb0",
        "cursor": {
          "ref": "69e1b426-89ed-4269-ac5e-4d69a9303eda",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "3cb29a5f-26fa-44f8-bc35-d7c93dea5eb3"
        },
        "item": {
          "id": "cf1a4709-cc8b-4cc7-95f8-b8d2509fcbb0",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "5e12d50c-ab10-46d9-af92-d051665c1e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d2b9a29-02f8-4bfc-a0c8-49eecd596895",
        "cursor": {
          "ref": "1abbcac5-efba-4139-ac55-bb527d2a8773",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "22823c05-b28e-4d26-81b0-9fbb3a80c43f"
        },
        "item": {
          "id": "9d2b9a29-02f8-4bfc-a0c8-49eecd596895",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b7d65ec9-7b05-4c56-83c3-3629b8a244ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "651eda83-f505-4fad-b22d-cb3b7cac008f",
        "cursor": {
          "ref": "47023f78-072b-4f89-b94c-c4402b0c3a5b",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "51472b8f-133d-4063-b1aa-a38a0374a197"
        },
        "item": {
          "id": "651eda83-f505-4fad-b22d-cb3b7cac008f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "001d4847-6b4a-4ee7-8bd5-8bd01eb3e76a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be7067cc-ba87-4f54-aafc-aa27432dfb56",
        "cursor": {
          "ref": "5f379bb1-466e-4694-854e-6d534e2499f1",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e0f6194f-681d-4ed5-b53d-7bd02620eae4"
        },
        "item": {
          "id": "be7067cc-ba87-4f54-aafc-aa27432dfb56",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "7c4912ca-4a8e-47c4-8d09-6ceb7645ea2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "138cbf50-2620-4e8c-b30c-1cab7dce1214",
        "cursor": {
          "ref": "d08cb2fd-5c32-4ab0-9639-461cd04cd43a",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "1a0ed8a3-c95a-4e69-a173-bb1d4de3ec74"
        },
        "item": {
          "id": "138cbf50-2620-4e8c-b30c-1cab7dce1214",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "ee9ea032-8970-4751-82c5-ddc5daa12db9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45f90118-b9d7-49f0-a915-9601d951789f",
        "cursor": {
          "ref": "4dda9138-d6f9-472d-b206-7eacc287bd56",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c1f1ea7b-6212-4a44-8e4b-af5d51b6c7d8"
        },
        "item": {
          "id": "45f90118-b9d7-49f0-a915-9601d951789f",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c92c161e-48e5-4f0c-acff-3cc753c2d506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a85a7421-64d5-4b44-ab01-78e295413364",
        "cursor": {
          "ref": "e26fa48e-c783-46c9-af33-74c95399f7df",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "d6d32537-33ba-4dec-b134-bd1f828b31a4"
        },
        "item": {
          "id": "a85a7421-64d5-4b44-ab01-78e295413364",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ed696cc0-d8df-409a-a7f9-69e902d2ed7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ee0db02-777f-4ce4-a9cf-f2b371889da3",
        "cursor": {
          "ref": "9469dd60-e7e6-4768-9dd0-b6574800fcb4",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "6df797e1-6d46-49ec-9dc9-aea01d28ad9b"
        },
        "item": {
          "id": "2ee0db02-777f-4ce4-a9cf-f2b371889da3",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "66a9d36c-bd2e-46ec-9cb9-bb111b927b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5208a445-90a2-43c3-9fd0-6947c203418b",
        "cursor": {
          "ref": "7b7e4eed-8e79-450f-8cd2-47ee10bd33ca",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "36196d2f-2dee-4fcf-bb58-63ad045d6696"
        },
        "item": {
          "id": "5208a445-90a2-43c3-9fd0-6947c203418b",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a8ec2fbe-8a31-45bd-9608-5a71dce258c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cacbf17-896c-4b46-a3d7-9f66cb845655",
        "cursor": {
          "ref": "26918582-3e22-4ce9-adc1-76c3e0c5462d",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "442e8432-2436-4ddb-8c67-d9351cc9741c"
        },
        "item": {
          "id": "8cacbf17-896c-4b46-a3d7-9f66cb845655",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "aabfa6bc-cad3-4afb-88e6-c3cb96bfe5bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a69fa261-1da0-4720-be65-d5acef286c24",
        "cursor": {
          "ref": "a0ecd931-63b0-480f-adab-5ead4ad0ad97",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "af1e4fbb-60e7-4a24-9b41-ac009539bd56"
        },
        "item": {
          "id": "a69fa261-1da0-4720-be65-d5acef286c24",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "c23c3eb5-1631-4e33-942f-450766d9424e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86290eca-d143-4088-9204-7528cd0813cd",
        "cursor": {
          "ref": "cf7b9654-e2a9-485a-8f1c-9b18643b6305",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c5cf1bdd-c67e-4587-9f03-135b182f6373"
        },
        "item": {
          "id": "86290eca-d143-4088-9204-7528cd0813cd",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "2008ab55-7d82-4857-8ca2-f0adba7b4742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e568939-f12a-4813-9bb4-882870ff9cb6",
        "cursor": {
          "ref": "2013b994-4a40-4c66-8256-a20abadc302c",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e729df25-c2d0-4111-9a13-cab2d330d72c"
        },
        "item": {
          "id": "8e568939-f12a-4813-9bb4-882870ff9cb6",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f187df5d-4db8-49b1-82ef-6b988aa1715a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd4e41f-8352-48ca-92d2-7239b178ac4d",
        "cursor": {
          "ref": "b0580e98-c7ba-4412-8a32-af7d9d81245b",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "56d8c14c-0466-4c0c-a9fa-66bd03aca170"
        },
        "item": {
          "id": "2cd4e41f-8352-48ca-92d2-7239b178ac4d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "4a2d1c71-17d8-49c4-85b3-7bbce0090df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6453ffcb-3b1f-4648-979e-49144cacba5e",
        "cursor": {
          "ref": "d322ecbf-ba3a-4fb0-9ed5-c99cfefeb7c5",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "8bc64d20-56ef-4545-aeb6-81b1706190d8"
        },
        "item": {
          "id": "6453ffcb-3b1f-4648-979e-49144cacba5e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "4fd8b92c-7897-4b14-a950-ff25e91193a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f73983-010d-453e-af89-ee04c2d7712f",
        "cursor": {
          "ref": "56a6d7b9-9dfe-4ebb-a4f8-4a877d0b2d4a",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "eef19a02-529f-4076-b05c-00208f1226d4"
        },
        "item": {
          "id": "e4f73983-010d-453e-af89-ee04c2d7712f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "0d0494c8-cb0a-4542-aa95-e710318a3e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1e3afe-1cd3-4ef8-8a26-b3fffd2d116f",
        "cursor": {
          "ref": "5e91d8f4-7848-488a-9ab9-0f7f755372c6",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "13095e3f-2443-4fc5-9757-2df73e29f3e4"
        },
        "item": {
          "id": "ed1e3afe-1cd3-4ef8-8a26-b3fffd2d116f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "2a1aa60a-a256-4056-8ce8-65a1f05b308c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7999a1b-dfef-41a9-9132-7d3e843994bc",
        "cursor": {
          "ref": "fd26eb20-017e-4ee9-84f0-12a117e1dea6",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "70fd880a-2cd7-4dcd-a6a6-daa55aba575b"
        },
        "item": {
          "id": "d7999a1b-dfef-41a9-9132-7d3e843994bc",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a5d054e2-9d6e-452b-b244-aeadefe59b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b59196-e24e-4924-aa44-fd2b6f37407a",
        "cursor": {
          "ref": "ea1c84ec-3988-4d6f-9fcd-b622089c145b",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "624ed8e4-33f9-4cb9-8eeb-e80df6292c05"
        },
        "item": {
          "id": "60b59196-e24e-4924-aa44-fd2b6f37407a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "0919de12-410c-42fb-981c-a04b02a2789d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44180803-551a-4e38-b27f-99ae20216336",
        "cursor": {
          "ref": "e97be0d0-878a-4fc5-be6c-f5f0958cbb1f",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "3b7ce8e8-f4f8-4916-b326-759076630fd3"
        },
        "item": {
          "id": "44180803-551a-4e38-b27f-99ae20216336",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "497b3a81-0a79-46fb-9680-a1c1d5cd75d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da397fd-0d56-43be-a55a-703e184695db",
        "cursor": {
          "ref": "dfd2827b-b2a1-4ec3-a4f9-706b798538ec",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "03d6b776-b8cd-4f0f-83c6-ded756ad80ec"
        },
        "item": {
          "id": "6da397fd-0d56-43be-a55a-703e184695db",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "10e396e8-108e-44c4-9a0e-681d8fa493c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6806e01c-5452-4233-89bc-170be0fedf90",
        "cursor": {
          "ref": "2ba9d2e2-e32e-4d8c-94e8-aaca3df12c02",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "4df5cfa7-5a42-47d3-bbbc-428357f6dbac"
        },
        "item": {
          "id": "6806e01c-5452-4233-89bc-170be0fedf90",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "16007d10-6205-4bb8-bc85-0ee2b5cab908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84233262-cf42-49e4-bf1a-5d67488da131",
        "cursor": {
          "ref": "c4cb0a54-99b4-4f56-ad2e-68025ed2f887",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "773c0996-fef6-4d5b-a517-6a4db43d5c81"
        },
        "item": {
          "id": "84233262-cf42-49e4-bf1a-5d67488da131",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "76fa8e15-b1b8-481f-8210-8b79e2564a25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45719f26-b7bf-4068-b4b9-a581d0d9df31",
        "cursor": {
          "ref": "4e9f0c93-74ee-469a-937a-db9018e5ccf7",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a079e30c-cb9d-47b0-9c45-66cf63134ce0"
        },
        "item": {
          "id": "45719f26-b7bf-4068-b4b9-a581d0d9df31",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b0f61bac-bd6e-4795-85cd-a7078b7e954b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b03714-45bd-4378-a3d1-741e3180f1f2",
        "cursor": {
          "ref": "e2df3410-06ee-4c1d-ba0b-67977ea28f5e",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d3d09f39-08d8-4bcb-a6af-cf97f4ca4e31"
        },
        "item": {
          "id": "89b03714-45bd-4378-a3d1-741e3180f1f2",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "07057e46-4caf-4992-9558-c0f9ab1da298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "637a3b64-1bff-402c-a7e3-aa0d5c4e202d",
        "cursor": {
          "ref": "2a939364-7f81-4e7e-aac8-c8ab25d11b53",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ec3f1489-9ff0-49e1-b5b6-02f0da867a1b"
        },
        "item": {
          "id": "637a3b64-1bff-402c-a7e3-aa0d5c4e202d",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7eff4e8c-7ba9-484f-951b-036d9c7bd55a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b8646a0-cc73-4b0a-8fee-abf8ed878b52",
        "cursor": {
          "ref": "6e522e03-5bb3-4627-9f74-b1871b898a31",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f03f39bc-bbbe-4c40-b27d-5342d13055bd"
        },
        "item": {
          "id": "4b8646a0-cc73-4b0a-8fee-abf8ed878b52",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "64efd6a2-d810-4564-adb6-c41733e6772b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "369345d3-2963-43dc-a9d0-d2160eecc3a4",
        "cursor": {
          "ref": "bcff8915-d29c-4c64-b173-1d2314baed6f",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "11721c63-3330-4930-85ef-67c04eabfe41"
        },
        "item": {
          "id": "369345d3-2963-43dc-a9d0-d2160eecc3a4",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6771bfad-8a60-431c-9be4-c1423dd66291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c97e82b-285f-4e51-aec8-48c8c8f7ac30",
        "cursor": {
          "ref": "32199ce9-50fb-4ea9-944e-100f44b3a2d6",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "9c4a77fa-6e55-4b4f-a474-308584d95ab5"
        },
        "item": {
          "id": "0c97e82b-285f-4e51-aec8-48c8c8f7ac30",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1d2fdc0a-f414-4562-b7e5-0c1b11af57fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3df9d9a-c9eb-48a5-b827-603f98301515",
        "cursor": {
          "ref": "2d8b8ac2-2497-474b-8189-9aa20d94612c",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "9aea848a-48c3-492f-b293-7465c4eac0bb"
        },
        "item": {
          "id": "e3df9d9a-c9eb-48a5-b827-603f98301515",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "8ecc4e1b-eab6-4ad4-bf5b-80179936477e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c23babf4-134d-4c17-b8d6-f468603cc841",
        "cursor": {
          "ref": "fe048daf-b498-4481-9149-952b128a8ef0",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "cd3e378a-ec96-4baf-948f-e9b836f774fc"
        },
        "item": {
          "id": "c23babf4-134d-4c17-b8d6-f468603cc841",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "5b926271-9c7a-4b0f-aa67-6330c213dfb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81acdd5-3718-430c-b8a7-1341dc160c97",
        "cursor": {
          "ref": "0fb7f102-9504-4d29-8bb4-91e56f217c5d",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "0c95aad1-3826-4efd-a7d3-bb8913b9d05e"
        },
        "item": {
          "id": "a81acdd5-3718-430c-b8a7-1341dc160c97",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3fc2a093-6409-475f-babe-d0d95023eb04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de7a2577-305b-44af-ad58-1b82b8799d87",
        "cursor": {
          "ref": "ab8bf793-75b0-4687-a625-9acc2401abc1",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "5fb7e8c0-ed6f-420f-be94-55e32e411162"
        },
        "item": {
          "id": "de7a2577-305b-44af-ad58-1b82b8799d87",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "675d1e1d-397f-401f-aa5e-cdc3f668e1d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c47b95-5ccb-45f0-9b5d-599e76995362",
        "cursor": {
          "ref": "2f2ffdf4-e107-4d26-ba20-e8447083ea7a",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "8f1ddd14-d1fc-46aa-9364-28860c2f6996"
        },
        "item": {
          "id": "d7c47b95-5ccb-45f0-9b5d-599e76995362",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "20606676-ff2b-40a2-aa68-cc4cc8c7a661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff09661-4f10-4f7d-9888-6b96084800f0",
        "cursor": {
          "ref": "7b86262b-96c0-4920-96ed-4246da3b6e3a",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "49df7a11-51f9-4743-b9fd-28dcb1f74789"
        },
        "item": {
          "id": "5ff09661-4f10-4f7d-9888-6b96084800f0",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "fd1d6694-7a1c-4ece-ae34-59fd202f3e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abaf4a13-0db0-4f2e-8a0b-9b1ab28f11c7",
        "cursor": {
          "ref": "579931e4-ed7a-4f89-81a1-48bf111325cc",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e70f600e-3986-4394-a063-20112f69d67c"
        },
        "item": {
          "id": "abaf4a13-0db0-4f2e-8a0b-9b1ab28f11c7",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a9f00bab-83db-4dd9-ba0f-6b9d462f35b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c782a275-8ff8-4b45-818d-292783fffe17",
        "cursor": {
          "ref": "0fec75c4-7885-4bc4-9d99-d0f7b5081b9d",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ed6ab734-4d48-4e12-bf2f-fc3e5afd940a"
        },
        "item": {
          "id": "c782a275-8ff8-4b45-818d-292783fffe17",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "bcc813c2-5c1d-48fc-bcfb-a9473265343a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe456f2-a93f-48b2-824b-eb725bf7ba73",
        "cursor": {
          "ref": "3cbfe9b6-286d-4889-9090-c04c7bf5f63d",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c83c025e-2242-4e11-90ca-0ac78d49c5cd"
        },
        "item": {
          "id": "7fe456f2-a93f-48b2-824b-eb725bf7ba73",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "84a5ce86-36d5-44ab-b471-da98a3a09af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10cc7af7-92e8-401c-8d10-383de5e75e8a",
        "cursor": {
          "ref": "db7fbc71-02a9-41ef-84e5-1ebd02b7e8af",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b38896fc-6138-494d-a399-88e1331a1b07"
        },
        "item": {
          "id": "10cc7af7-92e8-401c-8d10-383de5e75e8a",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "945dcfc7-3f3d-4d59-85b6-9a24a8c7396a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa6a52e-e030-48fc-b231-6336d4a26a0f",
        "cursor": {
          "ref": "22236153-568c-4a7b-82d3-0a3978a4da33",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "0899f33f-7640-4180-a9c8-3b2c80efeb75"
        },
        "item": {
          "id": "5fa6a52e-e030-48fc-b231-6336d4a26a0f",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e47f2f14-e75f-4d8e-829a-ff4fa80aef75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61d24e61-1d97-41a6-b009-81c00383e0e9",
        "cursor": {
          "ref": "09cd2ecf-833d-4a79-9920-40cc840c2c3c",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "4dda7d76-fa90-4956-98e0-8badeddc0154"
        },
        "item": {
          "id": "61d24e61-1d97-41a6-b009-81c00383e0e9",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5d0202f3-1ac0-4dab-be9d-a85076bf1f55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9581e5ac-7ff7-4ee6-ae17-d4316449b2ac",
        "cursor": {
          "ref": "744f5977-cc02-476f-9e69-f61120ea0e7f",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "2cc1e08f-c415-451d-b10c-a977a4ffdb84"
        },
        "item": {
          "id": "9581e5ac-7ff7-4ee6-ae17-d4316449b2ac",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "5d457af4-31da-4d6d-a5bf-0685c8b25401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "725d76c8-9b78-4108-86ac-d1a4f99fe942",
        "cursor": {
          "ref": "6ad70f34-a88b-443d-9536-1e78b6a8ad8d",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "68bb1f09-9bb0-4fb6-994a-aeb98eaee219"
        },
        "item": {
          "id": "725d76c8-9b78-4108-86ac-d1a4f99fe942",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2f0cfe17-b532-4576-b73a-8891be5d80d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0179997-050d-4a32-817f-919e2048826d",
        "cursor": {
          "ref": "8cae7212-b464-4e8d-9903-2929ae41425d",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b5404b61-13aa-4fe8-847a-6d350c0897eb"
        },
        "item": {
          "id": "c0179997-050d-4a32-817f-919e2048826d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "3da600b3-69ea-428e-a667-ca582970f45e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d29a1e20-f7f1-4904-b1ca-68a8864c212a",
        "cursor": {
          "ref": "b8cac642-08ee-4462-bd0d-ba586ceecc5c",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "1268fcc4-6113-4c00-9f6e-dc647a6c569b"
        },
        "item": {
          "id": "d29a1e20-f7f1-4904-b1ca-68a8864c212a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b752a8da-36da-48b0-badf-154ca376a8a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd37da31-28db-47ac-bbcb-dd683f845228",
        "cursor": {
          "ref": "e1644d5c-d276-4775-aa94-c6cd74453ce0",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "8cd5f9db-6e86-44e8-83b9-1a8ae4d630e0"
        },
        "item": {
          "id": "fd37da31-28db-47ac-bbcb-dd683f845228",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "05dace13-a41f-4925-9e63-4b4b6bc15afe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c15487-62f5-4835-aede-6db18439fecb",
        "cursor": {
          "ref": "01d73594-5ada-47f0-b9e1-da84726db23a",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "dc498c9e-57d7-44ec-9a87-45d8ce8c13cd"
        },
        "item": {
          "id": "a2c15487-62f5-4835-aede-6db18439fecb",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "1a0170ce-469c-4d3f-b568-74a117355c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb1e143-dbd8-4b2c-9f5d-32c55b812d25",
        "cursor": {
          "ref": "f198662c-e032-460d-a28a-bcc0c8bf060a",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "61b628e7-03e4-4962-8eb1-5f15bc171b12"
        },
        "item": {
          "id": "5bb1e143-dbd8-4b2c-9f5d-32c55b812d25",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "02a432a9-cf2a-46a4-a9f2-ba5f7aaec71e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "553ee4a3-4729-4945-989f-2d24c57d90ab",
        "cursor": {
          "ref": "5c0e24bb-becf-46ab-8912-18f629f415c0",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ec927de3-b2f7-45d8-9cab-6e9ca75a2419"
        },
        "item": {
          "id": "553ee4a3-4729-4945-989f-2d24c57d90ab",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a5d2ba86-734f-411b-89af-33af3ec5b90c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2659e496-d4ba-418b-8863-e44d4a12d8d4",
        "cursor": {
          "ref": "470e037a-1d5e-436e-afeb-07a657b83c4b",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "88a32849-4416-488c-876d-308d3269799d"
        },
        "item": {
          "id": "2659e496-d4ba-418b-8863-e44d4a12d8d4",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a3c334e6-c38b-4280-ba16-7ffdf5d619ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fea5ef3-3b4e-4b72-a9fa-78c76eb0d443",
        "cursor": {
          "ref": "07a91429-6dae-42b6-9575-a47190761357",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d9b7c835-520a-44b4-9b01-2a248d1ecdee"
        },
        "item": {
          "id": "0fea5ef3-3b4e-4b72-a9fa-78c76eb0d443",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c8603764-26fa-4492-9853-ac830528c83a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79bec00-5e88-4e74-ac0f-0d63d5989efc",
        "cursor": {
          "ref": "b7ee7de9-1791-4c9c-b5cc-216830dbbfb0",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "38d69dda-eb4a-41cf-ab97-e92925b5774e"
        },
        "item": {
          "id": "d79bec00-5e88-4e74-ac0f-0d63d5989efc",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7432c97a-9c6a-441e-9204-fb2a3c1a5530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e217ad8-0441-4774-b5af-38ebb68137d3",
        "cursor": {
          "ref": "401ad4b3-fa87-47a3-a0d7-db0feaf6f556",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "63776ad6-d881-4803-a240-7ec8ea8a1d06"
        },
        "item": {
          "id": "5e217ad8-0441-4774-b5af-38ebb68137d3",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b501869d-a897-453c-a183-f2311b9f91b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c9b215-cddb-4924-9ed3-7109a8fc25f2",
        "cursor": {
          "ref": "677796ac-ff4b-47b1-9f9b-750cf3c35c4d",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "440a6d37-180b-439b-9cf5-f309d80b309b"
        },
        "item": {
          "id": "59c9b215-cddb-4924-9ed3-7109a8fc25f2",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a4325fdf-9d93-4b63-99c8-a1d4033d95d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5426f8e5-605b-4840-bf57-f87bd5e971be",
        "cursor": {
          "ref": "87a76cf4-ae96-4c09-a34d-7e1ed18abc3b",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "21bcf132-14fe-4e58-8110-f0222024ffc9"
        },
        "item": {
          "id": "5426f8e5-605b-4840-bf57-f87bd5e971be",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "5038680d-4547-49eb-9ce3-58fe2567bc31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4340e9d3-1e1b-4c6c-a9c9-e102c1e90e76",
        "cursor": {
          "ref": "645f8e51-292c-40c4-b5e4-a7857deae1c2",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "8814d0ff-971d-4c8b-8f82-a269d014f42e"
        },
        "item": {
          "id": "4340e9d3-1e1b-4c6c-a9c9-e102c1e90e76",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "6653da2f-9abb-4258-ac3c-609caa3e2ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da84e8d7-6de7-4588-8cf2-5b6a22697e15",
        "cursor": {
          "ref": "a216c4b6-ed48-4e00-8ab0-a1ea95fa57b1",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "9f282b22-b2df-497e-a486-3fdaf06d6091"
        },
        "item": {
          "id": "da84e8d7-6de7-4588-8cf2-5b6a22697e15",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c3f4606f-2b6c-4a62-b972-003cdb1820f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b717d1-e1b0-4d1d-98e7-eecd995203de",
        "cursor": {
          "ref": "89d4b14b-eac2-4c7d-ae48-d0d12211432f",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "43cafd11-ab07-43c7-9b25-716170015477"
        },
        "item": {
          "id": "d8b717d1-e1b0-4d1d-98e7-eecd995203de",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c28eb4f3-9da6-4eab-b800-a7da57902dcd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f387ed08-281a-4c27-bf21-a7ce03023073",
        "cursor": {
          "ref": "de6693ad-4624-4d3c-a40a-3bba8d08315c",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "eafc310e-0522-4648-a69a-45c9c05fd870"
        },
        "item": {
          "id": "f387ed08-281a-4c27-bf21-a7ce03023073",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "377da549-cf69-46e6-b43a-bf2ba7b06786",
          "status": "OK",
          "code": 200,
          "responseTime": 40,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e68df497-aec1-49df-a494-310a1863dea7",
        "cursor": {
          "ref": "edc6bb50-8dec-482f-9e7e-d0e3b7ecdce0",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "32d4fe34-f4ed-4d96-99ae-ac57bd2bf857"
        },
        "item": {
          "id": "e68df497-aec1-49df-a494-310a1863dea7",
          "name": "credentials_verify"
        },
        "response": {
          "id": "39b478b1-cfe9-4721-aeab-dbc11148f059",
          "status": "OK",
          "code": 200,
          "responseTime": 2166,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac37c604-de6b-4552-80ea-477db99a0b73",
        "cursor": {
          "ref": "82d18b1b-d1a4-478c-9e48-9a9bb4fe3857",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b0d2588d-3326-4d9b-99dd-12a47b64e694"
        },
        "item": {
          "id": "ac37c604-de6b-4552-80ea-477db99a0b73",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ef2d2755-197d-41cd-846f-031402a22e9a",
          "status": "OK",
          "code": 200,
          "responseTime": 2446,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "75841389-2002-46a2-a762-565d746c7f2c",
        "cursor": {
          "ref": "2975db15-002d-4567-bc89-09e442cf0f01",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4dd80535-dfbf-4849-b935-5216c9bdd4e6"
        },
        "item": {
          "id": "75841389-2002-46a2-a762-565d746c7f2c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b4a08256-d765-4626-a1bc-df5b29b3d8b2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75841389-2002-46a2-a762-565d746c7f2c",
        "cursor": {
          "ref": "2975db15-002d-4567-bc89-09e442cf0f01",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4dd80535-dfbf-4849-b935-5216c9bdd4e6"
        },
        "item": {
          "id": "75841389-2002-46a2-a762-565d746c7f2c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b4a08256-d765-4626-a1bc-df5b29b3d8b2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5056cd1c-1da7-426b-9416-265d7d9d4c68",
        "cursor": {
          "ref": "a7ccc540-fb69-4895-9461-c67b446832d4",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "87e8fa39-b3c8-4217-a89f-0c7e57c25e2c"
        },
        "item": {
          "id": "5056cd1c-1da7-426b-9416-265d7d9d4c68",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5be2c2d3-d7a5-4ff1-87b3-6ec6470a9497",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a1a1f3e-c956-4bb3-aafd-3658c754c702",
        "cursor": {
          "ref": "1ed1f545-cfab-4386-b685-e497a35c3bc6",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0277ac87-87a6-437c-bcf7-d4b3076e9e1a"
        },
        "item": {
          "id": "0a1a1f3e-c956-4bb3-aafd-3658c754c702",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "6b42aca3-ccc2-4c3c-b79f-82a253503239",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}