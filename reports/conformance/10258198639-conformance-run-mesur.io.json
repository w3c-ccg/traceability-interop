{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "5ab42188-593a-4456-ba45-3ffa8145437f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "0c88733c-9597-4cad-8db7-4b370dea8ddc",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d3b279d4-72de-400e-a110-ce5c8b9f1a03",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6d21ca08-7e81-49c9-95c0-99ff1a839d13"
                }
              }
            ]
          },
          {
            "id": "31c4bdd0-a434-4395-9b0f-4763c78f19c9",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9265f828-3835-4ecd-978d-c77c4926efb6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "490e78e8-0907-480b-9708-b6738330cfdc"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "03677b55-0db8-4305-89a7-02263af533ee",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "15c35251-bf69-44db-a29e-034cb77ee214",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6aa27b34-b534-45b8-a079-65ef3963c0ba",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0711dfbc-4857-41ee-98bd-d71784a9e862",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "37272eec-0158-47ad-9ff1-16868a0bb147"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e8580f45-ca0a-448c-9eab-feb3f33cb609",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "df00a765-9dc3-4ac7-93a9-ee4293cfe5e4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e0223c2e-d473-4d87-9bf4-abaeca9267c0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c6780fd5-befb-40f4-9f18-23f6ca945c20"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "98561640-c6c6-46ea-8a38-135ddb256c2d",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "6d0de749-5bb4-409f-a655-5bb7444967c2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c29a2717-0d68-48a9-927c-c4b9176e48ed",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "af8636ca-299f-4c8c-a3ea-382a9de33da2"
            }
          }
        ]
      },
      {
        "id": "beac2930-f163-4587-b3e5-c5eac28f9768",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "e371c26e-8317-40a0-8649-314d886e95b9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a196a5bc-dd11-45f9-8777-7dbfd2369676",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d77d428f-f536-43e8-8b0b-370d2e149f17",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5906c35-23d6-4873-84ec-3c982f3a3833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "55de6ff9-7c9e-4a25-b979-255492c724ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2770fc8-ed92-489f-a4e7-0e13dd9a7556",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4595eafd-4bb8-4709-a917-7d95ac9e4604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e22df17c-edee-4ff5-9966-989a2a37b385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec39531-281b-4390-8257-771bb739e0f1",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63fb93f5-c5bd-4d2c-8f61-0c0ebe649a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2c60ba72-3461-4467-8692-6cf8fe85877f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "594f8a7c-c335-4dc8-95a8-3cf6b22b2e6c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "76b2d6af-cc79-43df-a1d5-47243c522121",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14020e39-f116-4d58-a09a-87530460b116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6aa9da82-6a53-485e-a599-5ee2a657c17f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30be7133-0596-408a-81ea-daea0fc5650b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f5b69f4-b5a2-4ec7-ae97-57f06884fc61"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "86fdd559-f6d4-4737-93a0-99072e0f4619",
            "name": "Positive Testing",
            "item": [
              {
                "id": "15a883da-5dc9-444a-b4f0-919fde4a94e2",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c76916c-69c5-4074-a589-122c07101747",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "1e87e335-34a0-4c8f-a2c2-17d18b21659e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "606ea847-89d8-44d8-869e-26f486d15859",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "c3d9be8c-43fc-4846-9655-4dbc3d8b8920"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3c30b433-06f8-48af-8e93-4eb7742b245f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c8bdb9af-09cf-48b9-83c4-1775199873ab"
            }
          }
        ]
      },
      {
        "id": "92c6de98-afe6-42d7-972e-403a509867da",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d99d5b14-dcab-4a5a-a594-bd73c4d3211c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1dbeff82-6335-407f-9400-805d4a2f9b37",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "8f4a37d0-4744-4d55-920f-5e229938f025",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8074c68f-91a9-4bd2-b394-5e62a8ab6e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d90001b2-7ff2-4340-947a-c9f03c8bee4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498e1693-f46c-4399-9846-b521d18d8922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c8e6dbc-2825-4e09-854b-d91660f981cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a44e75d9-c960-4aa3-bcd5-733696a8586e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f6c0b1-49c5-4f45-88d0-907df89a340d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c73e7a6c-eb3a-4fe2-98d9-ad69fcb50f08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "589f0b35-9a67-4207-abe7-0dd3dc378867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65860395-07ed-4891-8929-f88ee3223d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c8160ac-ec07-42a5-bcff-9f196d1ef011",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4edc43b-3f76-4924-8d78-58b32b7a2652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8ce6906-7377-4d49-9a66-cd30ec8de39f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e53c4bc-f9d4-47bf-8b7a-30ddcb240a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad0ee47f-d8f7-4f18-ba79-32a4eb518804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35bd3882-9b90-4e28-9fbd-48e52a1f7b33",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c22d369-e101-44fa-a9a6-169befcb0b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2a9c1ff-aa9d-4bfa-bb0a-f0fd58db9b59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d821e59e-c632-43ea-8f1b-4eb31ed109a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d32f1b4-29e3-4233-96b6-f25fe7c8fb22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af6075f-2a28-4ab3-9142-d6806e0a7ab7",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b1f7902-61d7-4ead-a0ce-f6be34096ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddce85e4-5015-4d2c-a017-e60289c020ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd05209d-c873-4993-9ef1-2a39c76cfc05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52f6e591-bde2-46e3-a7a3-33c635ee0c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e743203-c995-4d59-aa6f-570c8cd2ec2e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35c4451-b780-4ca2-bfcb-1a557aea1907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f468625-e332-490b-b108-96057e345f0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a88e5d-dd4e-4606-8287-6a31ff28a12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "58ce87af-e2d0-418a-818c-088284aee7a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f15876b-b964-4b62-b62c-c447c2091556",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0fc0050-de89-4bdb-a59b-9470f9740168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7787405d-e771-4cff-bf7a-41ac09e91214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b4e0b5-80f8-45d8-927a-fad30baff62f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b57692f-a987-4137-a77c-ca393792dbff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89639e0-9be6-4c45-8e05-3813191ad0ff",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a729e768-db9e-41fa-ae6a-5b062dba7123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f954b08-1161-4562-904a-c5921707cc3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3430111-5702-45c0-b895-100b547b76e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a42f8365-b8cd-46b3-a830-ad9358bb1568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd6a423f-03a8-4b2e-85b0-c4a9f1905270",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07067f2e-5be2-49f3-9b63-a3b9dc612241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7445b94-1cba-4015-8a16-1f815d69385f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24601fde-cabc-4662-87fd-b377adcc2efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8f9a050-69cf-41ed-b69b-d8a4c56e9395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b7c7416-16d1-474f-8a6f-1cad5ae1a206",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d57b1424-68e3-4fda-afa0-7fca333ba338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25ed2d13-52b0-4170-94a8-1aa69f47afd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80562286-ff4d-4887-95c8-e8390f2ef5ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24fe76ab-6486-4350-8f1d-97755c8519df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb6df14f-9225-4f89-b94d-e8e80845c9a6",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4fcc8a8-da21-4381-8a5a-97354e3895eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee7c9ca7-c830-4778-bba5-dfa27b032848"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b1dbdb7-fff3-4c7c-9f13-4663d0cca503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c825abee-325c-4f6a-be3b-c2746ed1fa68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f2a93db-170f-485e-a8f2-5e5fe55e9ccf",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b166bb76-de24-47d3-9722-98f30c01fbe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8d6d43b-b361-47f0-bc94-11f9f9e93a8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b75e30d-74de-497d-a12c-494770f81557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29d6d5d8-9a81-4869-b61b-45535159e858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf6c0436-8dbe-4b44-8879-d54a01dac7c0",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8139b1dc-380a-4f3a-9d64-df2800b03bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cf7ab1d-3863-40e3-bf25-10cacd908819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd413bc4-17b9-446b-ba68-c8e9de1b056d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eea0c3cb-c576-4eca-b253-12735a5877a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2a8ef3a-7270-4939-b697-8ffdc227d950",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14fec887-86cb-40ce-b189-d703e1a2eb7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b53bf5d3-b2c5-41fb-8f3f-8a6dcd7546f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fcfafd6-e07e-4d2b-a488-9efebf4102f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30a7a29d-7ac8-444d-ad59-5b472d5d051f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c458df8c-b2c0-49ed-9694-88ff0c2b75fb",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0214605-cc92-43d3-b26d-7f854b217d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd96a7d4-fca0-4db2-9972-c48dd3247fef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d1b89df-1558-47b8-9885-2474abc6cef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8288d1ab-21be-47e9-90bd-c52ceaf129c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c9b882f-5c66-4d17-baf2-857b493a594e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed89dbe-47f7-4e4f-8059-b9b0f964b5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dca8e34-be99-4722-9ae9-ee72d93a5d87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "038ef768-a7f9-4516-8fc3-6116ad2a40be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fee43cc9-1780-475d-b143-f7eb3e9e4f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b739dc10-2d02-42dc-9d5f-e8efdaae9c38",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db00ec52-4d3d-4a1f-8f2b-06c95b89da6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5fb94ee-c47d-4f6f-bfe9-d907befb8c71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0881e655-8921-42ad-9f70-006a27b883fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9505e063-494f-4d42-b648-1533286181ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45e1515b-d341-422b-8edd-b6345d0d5204",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc9c6aa8-9036-4dc9-b318-a816db87410a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5d9c763-ab2a-4bf3-8b8f-acfc970a229c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e26f968-7170-4406-9ad1-4eb7191572f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b817a37a-8bb6-4b92-a134-c52e38afb287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f650400-1a54-494e-93ae-75a07a6f3919",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb426632-3a40-497f-b959-faf59f7b9dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "887a8494-9879-48ff-8150-86d6729a007e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced6f0d3-90db-4a86-8098-69b6d8b413bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "57ca5b23-513c-4022-9b58-d48d291fd759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eafb1bb3-5b8e-4d2a-b896-30dfdc25ceca",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f5e1289-83dd-4aba-9d8f-a7e75811b6e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96bf7eb4-ef12-4b11-b914-c88d4a9d87bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "427a2ff4-db88-4b61-bdd6-f23b9d61b9fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "76407287-2387-4dad-b3be-c3bd8c8bc7e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe3fd048-42af-4f06-ab71-a5dc5dbd0e27",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee99a8cd-d5ae-4ed7-8f6b-a7243db65a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82274db5-febf-486d-953c-88439df43bdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c730d8ea-a69f-442d-80aa-73a947e387e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1649a49-ef79-4289-8902-d31a89385edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "667c89e6-e95e-4422-a9df-9f44e9c74304",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9478124f-ede4-44d7-8b86-a82268e206ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c8908b8-7b68-4e88-b6cc-61decd28e404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def9a0c1-ed26-4cc0-ac66-3a3ea16b4066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d5af50d-ea97-474e-aa49-6bd167950078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "049ce759-33db-49a3-b26b-8c5b7169dbc1",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6002c839-b895-48f6-86c0-487778a32c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "009d3c38-ca35-40f4-99ff-3219f8b2b68c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e3952d9-29de-433e-9fbd-9e272f40c81c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "697eedd4-5cde-40ea-9be4-8a1e7e42cdcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb06447-1ea0-4296-9a30-1313df6fe8ed",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "332cb856-3836-4b67-a1fd-ac485d9a3bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8fcb96e-b38c-4f14-af6a-6f5049a51a67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e83ed06a-659d-4d53-af21-c4be93c8802c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f89885a-1c2a-4e70-9375-4a4677cc4024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6839d54c-bef3-4da6-a025-ad37b227a668",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc4f5451-2298-4a7e-a7db-f588b18171b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ad09938-588b-4b08-8c79-47df2386d424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d00fb9ee-de1c-4b81-b2af-cb1e04171259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "888f022b-7dff-4fe2-a3fc-bfaee16fc14c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b734eee0-0d75-47d7-8688-78969d7b54f0",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab2bfd7-e0d9-4b3e-bf21-86617afbd65a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d878f56e-90a0-4d81-ae0b-94fe5e6b3209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0605774d-898a-4468-9a49-0a3780335493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e756a483-cc7b-4f27-8d29-10e6d642d269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ceb63f1-f329-4227-9762-5197cbe5a264",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e34f58f-43c5-4a3a-acf0-d1dc926487ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20fdff69-99ae-43b5-a838-8e4145c5c4a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "864b22a1-7ff1-4266-a152-f8f81b47d14c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b878858-9acd-45e7-a419-2a90a8b72893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a680239c-2dae-4eea-9ab9-a9c553a5e69b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea1eb013-3c69-4064-87be-17a2788ec55c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce3dd799-c37d-4b24-b384-a158335301a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae178de-2e81-46d5-929f-ae787ddbf013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a081163-8710-468e-aab2-4f8687cd1065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1db1618-4c5a-457f-a0e2-42b1ed805ca6",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64169c43-431a-46a5-8b18-34c95d0e8150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd024240-3429-49ab-b3a7-bf543d0d322e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd045679-89d4-44fc-b528-ddcfec7c21d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f06b502c-459e-4a46-acc9-75c550fe38f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8eaff5-8f03-40aa-8e0e-16298a619158",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4f7677a-4e81-411c-bf36-e96624c414e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b10df714-c6e5-49ab-818f-52596791f304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0bd79b3-8389-4f3d-aa93-d5dc3349cc09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c2e7367-a526-4cb2-a3a2-fa5579252989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf3a19f5-f78d-42e4-8533-fb506a484f48",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92262c13-46a8-4860-800c-e50e79178f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caad712c-e876-4766-aeab-bc7291b7ec5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a8e45c6-ebe1-4c66-92e3-56ddf061535c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "751b6fac-8920-4010-9801-ea2efa53be26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d45a2f1-b86c-42f7-a8a7-c0df48157341",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c857c7-0e5a-49f2-b5d9-5456f7d085d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3c68cb0-49ef-4c3e-bf40-cb4038a9b161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "424f39b4-08ef-4b90-b832-c58f0c310546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "60862d19-bd69-4c7d-b0ed-e049b67d2350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "578337da-6a8f-4cc6-b0e1-28f216a6f4a3",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df86011a-e117-41bb-8b6f-c35142e824c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4393b19b-98f4-4601-8008-39a32aad62fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f57cc2b7-ed88-4132-911c-1bfcf5d8ffca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "59b582de-c734-49c9-ad86-e765f066e76a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe1f6f53-4dd0-4aa4-9a24-e00adf490bda",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7985c5b-b087-4418-91b2-a97bc6a14484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7e2e449-be50-474f-a4fc-9b4663dbc8f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4906a7a-9ac2-4219-8b45-e32983bdcf59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea4a898f-a8f8-4330-832f-86275ff9234b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41e240ff-ac41-40b4-afd5-328dea11ac2f",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ce52e7-6f66-4d6f-9bef-7106d52f1f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8045f088-82c9-4899-8d93-9e05dd8125f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64772c61-28e7-4628-92ca-dde61af3ef12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e8716fbe-1a18-4896-a2b0-4d3a3901b7ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae8b3da-789a-4228-b28d-e0f7ddc6ed5f",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "227fad98-a00c-4472-aa54-f02b95d8450d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "86020c9a-8d65-4f62-a447-367d325b7089"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bff9aef5-137f-4a0e-9f8e-eec3ff57f277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f7230a48-d2c7-4a50-b47e-74928f9752a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60fd2033-ef86-4cb5-8ece-e06518911786",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb93ea07-afe7-466d-9595-5066798368d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c35e7e8-c22d-4dda-894a-c77b7913439a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5661c95-eadd-44ce-a32c-34788dba73ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "80bb01b5-2337-4b8b-a7c0-4e65466cc3d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98ecbf3b-e08b-47d9-a541-efc3d9a3a2b9",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd36e3d-b50f-4a79-84ff-78253baeba80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07a267ca-e6ac-478c-a7e6-a1ec74852e9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e56c8c-228d-4822-813c-bae7001bfaab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7fd2e1e-5598-4736-81ac-40605b6b415a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d894d0-ce4c-46d9-a983-14eddc87f779",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a623c936-be04-4c2d-9e74-5f6fbbd6b10e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f8521b3-92e1-4bed-9a0b-0e961b917bc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c60e615-5943-4a0c-8ec2-c99f292e90a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f659660-f160-4339-a463-08f836c3268a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "336da6b2-c94b-4efa-9690-025c20d7c119",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a448031-6a1d-43b1-8535-0c890f81732f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ef9aacb-17bd-4df5-822f-b1ef22e0b176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f761a3b-9b19-468d-9bbf-05a3e7725311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "11e8c201-6a7c-445a-8474-2a59196d5aeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4d0143c-b502-41ce-b049-2ce2c3cb8937",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9085b475-cfa5-4fea-83cd-03a6491be861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beda9eb5-af92-424f-8ad2-d0b20f546397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2569549e-e48c-46a4-94e2-21d282e9265d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab5bd0df-d1f8-46c0-85e7-3f4b8f5c1f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8818c41c-9a59-4ae1-ac70-40384aa5603f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbaac336-f3d9-415c-931f-2790a0e95415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bd33796-7e7b-4a4e-93e8-2e87fbb3c9bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed58b847-19de-4693-a8e4-245c673df4b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "95fda58a-f7f9-4c73-8ad2-68c0d4139d7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64b824a6-4eb3-4abe-a15f-ff199f610bb3",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d0ea98-f322-400c-9d74-bf5910582a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86cc40b7-ef35-450b-ad64-ad63b5743007"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "214d179d-fe88-4ca7-b211-bca1f63770a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6dbccf6f-c35d-4779-8bd7-0d05d2cde5dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c79caf67-ac3c-4143-b56f-b5ccfe5e7bc7",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed678cdb-05ad-47f7-ace3-6ed1c144e52a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41acd120-bdff-4232-8274-622a7461e894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e17ea2a6-6c9e-4b7d-ae6a-6cdbbc37e4d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a704d189-293b-4fef-a6c3-a9c130519240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d920068d-2e09-42fd-9d1a-6d8051a94e6b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5cf8aa9-d2ef-4bd0-942a-9e2ea0229568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05944716-1f29-4ade-9ee6-db29e0d90b51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8363a1c7-67eb-4843-9ff6-bc5e6c6396a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ba337ca-7bcf-4206-9b77-fb87b4e19fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0b89b37-e2dc-4a6d-8c74-163dbf5dcf6a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcab1df2-b27d-4aef-ac4e-b9970b84e1e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3685bb8f-fddc-4062-aad1-4ec830e40990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad17e070-d827-44be-83b1-40ea18fa73ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "92d7fa9e-0507-45dc-94f5-1f4f93a1a672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f6aeb8-a202-4f2e-ad55-bdb0228b64e7",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a6c4d0-14d0-4f27-b3b2-9fcffde53f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fad1c18-f8c4-4913-b711-2faa20ed2b10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4de9b9a-c853-42a6-83a0-782213b0ef26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "29228281-07ec-4a82-9132-67449f4e1fe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc9d097-2577-4bec-9f4d-a827d9e2fe8c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf6c735-f09e-4e71-8fee-ea5f351b9f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2850d80a-ffed-4c24-aca1-f0e3e1ffa60e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12167ebd-221c-44b4-8d3d-f58964eb7d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "61be4b5c-3177-41d4-9a79-f6d20397c380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e401374-62ba-4724-b615-eb3feab40b99",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d77770e3-9b72-43f6-a55a-7c914ac519a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5ae245c-6863-4c37-9af3-56f9d25a58a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e87d0e-c533-458c-953c-76e41e084711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3198f498-7e38-4310-9e13-1bafa946488f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2b79b8a-f1ce-498b-bd64-675dcf6d5bec",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ebd3d7f-7b6b-489f-8750-b20f40bd7cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "778f1566-ca38-405c-9b5d-1a272d21dbe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b92da59-9548-48d7-91b6-0f4b88f8fc5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9a04b7ce-8670-40bb-9f6a-c24e21426e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25c9e896-f2e3-4e94-8f6e-65353f623b6f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e560e1e-361c-4b8f-844d-8645fbc48478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef7027be-6a05-492f-ae93-134b7dde7395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a31ea0-cef0-49ac-b8d5-867ef2a584c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e3356b0-b9dc-4ba9-9e46-bda4bbf533d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "252442a6-9f58-491e-94bc-d04efce8b6b7",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "695a86a7-6145-4437-a07d-570ce437079e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9da54fa3-1775-48ef-9317-9202e406b0e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a03d72f0-27dc-46d0-b0ae-76f2deaca962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "995bfc92-d905-41fd-a549-df966bde5f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08750400-9c5a-4201-be9e-a79780e2228d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f299155-e5b4-496e-8526-59ab6f7cc6d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6f36db8-5e84-41cc-a1db-c087064f2211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a73401-52bc-4552-817f-9026dac0345d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f79ec7b-e994-4023-9227-bdecfac6ee2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f5f779-3dc5-4102-8a71-571649181ced",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c4549c-f780-41d0-93ec-bf4ced7714b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78372997-d16b-461f-8616-4980295de3fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7a5799f-9c04-447a-bc37-0a6e6f069844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "da1156c8-95d8-4ab0-9e59-ce1da490f239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "954b14ba-d46c-4883-9701-2681c2c764d9",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9808cac-49f0-40a9-ad17-e799d5b39ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65da203e-b0c1-4101-b3b3-7fd643654287"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8982b5d2-8c70-43fb-a076-7d27f02b8eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e63f19b4-60fb-42d4-bd05-05a25355df44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6464445f-2f1c-4ca6-8288-aace15485f74",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ecd9e9-95e3-40c7-b9a8-481c60ebb0c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bae6b5c8-db43-4b04-9fb0-fe86353d5968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "550d4dd1-c94f-48ad-ad18-2920e1e67956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "8279d543-75ad-4182-82b6-8573049322ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c96ee223-7bc6-4a7d-b2f8-6ea4a4e140e8",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da7d5985-43d1-4d82-bb5a-e18ddc219f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30fcbd5f-8bf8-4cd6-91f6-27112a39da1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "136fc2b1-6933-4c2b-a0f7-c1594b05386b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "780b85ac-1b13-4a7c-b104-e6346bc033a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede283f2-3c82-4f6c-9685-6aebd673ff8d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60c1439a-f560-452e-83b9-dd90b07c39c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d355e8c-19da-4a92-a92e-5fad96cbaeb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d59fe821-e138-4157-87ac-69ab311d3d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "03482d31-12d7-4bae-abec-b2be2585aa1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34becaaf-e88f-4400-834f-1c86afdddfc3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc429fb-1e2c-466b-a6a5-6e28005b4183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "076b77be-9e4d-4bd8-b1d9-4262f4460e40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba6ac8b-7c36-4821-8f83-7ca64d6eee04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8adac0f-6ba7-47d9-8641-6c3483d93989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c06cba3b-8d34-45f6-b841-e9c2c79823f5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e8f9fb-34a0-43a2-a3cf-525d893cad69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "849e85cf-6b6c-4c24-9714-4be8a70aae6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3ca5056-bd91-4773-a536-b7551ca7fd7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c7cd8f6-84de-4496-b38a-382192cc3e4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa0f432-8fe0-48ae-9b5c-e01df834c4bd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f4b08f-497e-4e0f-8cf9-9d2f6e2677b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfbb1236-6ac6-4d8d-8349-8dcac5340c7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c380ee09-f4cf-4ec7-a721-afabed69a410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8de4218-b971-4017-8089-058ce818999c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a6a6d9f-f6bd-479e-ad09-e4ed5252b228",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "560ebeaa-df85-4dd9-b6fc-d9a97851abcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9d6ad8f-6f0b-4df2-ab34-41a88b4340bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b0bb70-82c3-46b4-bbb3-5ff28695c975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0b57083-ebd1-4358-a8e6-3e3923d02c03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5b1d6f-6d08-403e-bb5c-e92099c76b1c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97fff775-05f8-4e31-bee2-40b7daa4379c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "463b898f-cd97-43a1-a14d-b80c3842d16e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0b7efa-b7fb-4fa2-aa5d-a2d8b84873b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f86bf19c-31ab-40de-a3a8-21786d2296bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f771c440-8e36-48bc-a610-81189fd1d81d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dee17710-9acf-45f7-9c66-5f324d2a49ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "470b0da0-b391-4eb8-84d0-fb31ce534474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f10e755f-66b0-4a7c-a24d-50bb83154d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "12346388-f5c6-419f-b10b-a83d06bcbdd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb9e2d65-a765-4bee-8334-123fbd460b3e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22246cde-e9da-4a7a-b98f-31bd681c5192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbca804f-4ba5-42c0-bbb3-00bba833c7fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d9d97c-ba92-42ce-af48-e7227b314bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d87e3eec-a2d1-44b3-a23e-454b3a0ad625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2fdef52-db44-479b-973e-7642d02c4f02",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a01ec601-cb01-446f-adce-445f409c417a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "058fa4f8-4697-4d92-a09c-ce27fb97c91a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "092c0d65-8937-448b-9b8f-969e1cf7ee07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cad29bf1-1122-4c1c-b6ac-4c35b325dcdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d47cd741-3ebb-4d4c-9b5f-85ede2f2a43f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0228a66-210b-4e10-8e0b-dcd6c0eff341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31e1f662-43aa-4118-a575-cb3069f837e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ef1024c-87a7-4a88-bf26-348772476ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a61464d5-162a-4cf2-a4e1-9b1f177db423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b244232-7517-46fb-9280-e39db56f6436",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16babeba-9f6e-4344-a425-b6d5d3751476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66aca059-72c6-4652-96c9-da1c19cec98f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d4d7949-133c-4a3b-b953-b4a905a00854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "97377f17-6596-42bf-a997-791613706eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb32ef32-2d1f-462b-bc8a-ab7976c3be07",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea181479-13e9-47c4-8f21-8f8f3eb7b1da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40777a7d-dae3-4e2c-8e69-656fb2d6d6b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "245ba6f7-d5d0-48c9-aa55-78e7e3a65708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc16ed36-7290-46d7-972b-c6aaa95b3316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6daa1edd-26ff-461c-893e-469d4f715ea7",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0116e21-1e02-4f7e-bdcf-fdfdf062a2df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ef5beb9-4106-4a9e-9375-2b797f8242e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "556576cd-6b30-49f7-b651-9f3a3ca5e26b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ccdab60-27ae-450a-88a9-351ac0a9c487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c4c5085-048d-4ba9-bbf2-5bb4acb537b9",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d33b6c96-5551-4450-a1e4-96f45fd734d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcbad783-6dba-4f88-8581-ef960a90aa58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b1d0a23-b607-4325-b44b-f38467e769ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ba3e346-dfa9-49d0-8407-a57bd08ebc9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d579f01e-73cf-46f8-81e0-d95af92adcb2",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e1ac436-6105-4a0f-9a5e-90ce8387794a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0930e8d-491c-412d-ad07-5ef0132a8cb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b57d844-4bdc-412b-b218-4cd26d163791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "765a92e1-198a-4972-b6c8-2c8322224644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "014ae694-876f-4b30-926e-39dff2964f51",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab3e98d5-ed0d-460d-90e6-de6afc33e55a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf8c9cab-20ba-4d5e-8b12-a90f65a02b93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46184718-1408-4701-909e-a02be2e32429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f0b4274-8425-4105-9170-b22d21b3a7ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1afafa67-7d4f-4c75-9027-f31aa71e807b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96fb54e2-9c89-4ae1-95a8-d6eca4e3a7eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbf84c5a-b3c0-4c95-9fc1-3537a84188a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "783eb5ad-d041-4ae4-ad06-0d6c039d66ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fc57c167-5dd4-4bf8-bdf8-13be719403a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56549ac6-5f37-4ade-bc79-20ceac3be6ef",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb2c2986-56f1-4dfe-9df1-1e358fb25e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b6e1ab0-62cd-41c0-a7c9-a8841373d305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06254a37-1f68-4e62-8fcc-82288b845d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "026a8efa-ab25-4bf0-ab80-9c7287a39864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bb86cdc-e7b7-4da1-ad0e-2c99ca091765",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c43fced-91bf-4637-9251-0332b7d6c5b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd04b19a-06f2-43cd-84b6-dc517eb64704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c00340a4-7a3e-46c5-8a69-eab7e49e18aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b143fef7-8ebd-453b-90ca-eb10e6569006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ca3142-c292-45bf-a3a3-ecd522fc32ce",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8aaf913-de1f-4df0-b7d7-27af76e04d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2595218c-f3fd-4803-a160-8fd332b86fb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7cf99c4-01e9-48aa-9b4a-5600051e379b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "42f049ad-5f6c-4a5b-a65f-e163e9267ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d172b6-f2a6-4dfb-a855-fd7eb662330e",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "427e4f16-e0cc-483b-a362-39af5ecef600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cb0a600-b206-4ab7-8a73-fbb99b5a5aee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f39d0f-1755-462c-aad9-d71f58bafc99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e8f977c-16df-4649-927f-ee5db9736aaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d0eef4-5e20-4ed9-9784-46dffedd5b5e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9b721bd-ae01-40b8-b8e1-6820b3f1c824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2619c3e-4e09-4b8e-9d85-8d6857c0824a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf10a3f1-0873-457d-8638-a84626011bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c27f968c-c37e-4705-9a87-0d2c8d31f296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6a8aaf0-9cc0-4cf7-9f26-54f68ab99b9f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c5a5e71-8854-413c-847f-98cd6aa9b90a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "131d12ed-1538-451f-92ca-c791f8225448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01d0da2c-3c74-412f-970b-fe499c79036b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "349a6a79-d6f9-49df-8498-1a74c9d2ba0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cafa98d-9b79-47e5-8867-7b520ceac343",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb75a686-d3d8-4d4e-938f-bc58b0517758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2f58e24-3d6d-46a6-a50f-d25ccc27da5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed504a14-3bc7-44e0-aa22-c5e7c208ab92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a255f7f-3f86-4c86-810d-7b390f8c52ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abcc590a-822c-496f-b36f-b0e50f163508",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc9be159-5d36-4e04-97d2-58afabf3efed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "202dfe7a-a50a-4757-9bb5-de74ca87daee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23bd7830-a891-4f70-b6fa-a4e6c6f7e945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "33739489-5a0e-425d-b2b7-c1442ce58b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "723a3045-078d-4d91-9022-202ec65feb37",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e42f1a74-ada8-4596-a764-ea11cabef8bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f044c22-ae67-4cfe-8dc3-934d38ccb108"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd2cea22-a2f1-4f07-b5c2-663bbc224664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f2f747f-3ad8-4047-b605-d10182f2c276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7580b245-f134-441f-a9bb-cec861556061",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5bcaba2-f090-4f57-bcf3-be5f771924a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4258ac4-9c2d-4bd4-85e7-8a532e36302c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e8976d-2307-4c13-a4b3-6a0d67e8d265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "30ce790e-ccb1-4af3-a4a2-683adadc6bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b87608-68d7-4c5f-abd6-448fe65ba0d6",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f71cb7a1-eb7a-47a1-86a2-d155d3854a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2da9e389-6ae6-4e82-ae89-94a8b6a068dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eca648d-fe1a-44e1-97a9-e0f4ce972d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7b3c90de-e569-4d3f-a7e7-9aeddb78caca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c743a652-76dc-4f1d-9d88-b1a6b1240555",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f92c3fd2-d22f-40d8-80c8-b69bf6a225f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e1f099b-c5dd-46d9-8ae2-c5186a468a99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ae7aba-0313-43ad-abd6-49cef86f3528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ba8872f-ceb3-4d4f-8b34-0e39e2499dcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81fd7738-b235-4f10-8f4e-b54fc3abf792",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b11dbf6b-932d-45b4-b338-18f708903368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25adaccf-a92f-464c-9360-cf5419e23308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ee5b244-341a-460a-8061-6cdfbbe802ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a83c6148-7758-49f3-85e2-92c2297a79e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b68de68-4970-4530-958a-5ee29b19cd13",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b48469-3ed9-4e4b-98ec-2f25de3a1b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86088ef3-48e5-443c-b80b-cbff7fa78235"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f25b472f-3772-493b-9b52-1297532e2dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed015651-0d89-4a59-aaf5-22fd9c69f719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "142f5997-fb07-45cc-9379-570f0342050f",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "324e0765-1f58-4c86-80ea-3d8c9c0650d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c8b6a7e-36ea-4bed-afca-4ddc50e4a030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62ee119-ff11-4c36-a3fc-72d1c7824c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a700f177-ae43-47e2-84f9-edc84cb644dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20259d2a-c261-46c0-ba2b-f2900371b3f1",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da642655-b012-4027-8617-a5cca90b893f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fff555b-932f-4c9d-b77a-21c443d6adc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cf8f974-5cc8-4b5e-baa7-6aa772cc8f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7d5abdd-15c8-4763-9e43-9d1168366e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95cc7270-5d6a-4ff5-94e3-ecd534da1a00",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa8530f-afdf-4f49-a195-397d120b42d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe1c7465-7886-496a-ba19-45f701ac23c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ce03ad-8f77-4d64-b619-2a1e9458b9f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e47b6102-a7b0-4c8d-be99-09ff91f60768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b8023d3-f9db-4e02-9832-833078331446",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b841ff25-3ecf-4d5e-9f01-ac3a826b4f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "78161762-308b-48fc-8919-4e71ecabe63c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "905d1ef2-e53c-4244-bf83-fa11dafe3ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0bd1120e-7532-4acf-8397-0c6734931254"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "87b63db4-8613-4bbc-a2ee-f334555b4876",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2bbafde6-46e2-46c2-8577-9d826002275c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af883f5-f487-40c6-aaa5-38d52934fa9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "490ceecd-6b81-4b0c-b58c-982205f4b0e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "488f91ec-47fc-46de-aa23-a57fa5aa0285",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "875b6edf-77ff-4133-a25b-cdd2b7e60dbd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "990eccb0-48fc-445f-aabf-0de6f552fda1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "47177069-feb3-4e88-9c35-8274f0319258"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1705956c-2a80-4ebe-b690-87bd07a7d0f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9034024e-b10e-4312-a25d-728925a0e212"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4b126352-7d2e-4805-b79c-60ad11bee27c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "55becc9d-0595-42b3-870a-5138e8f0a81a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "82e3ae8e-62ac-401b-b0ae-85f041da6515",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "734298f0-319c-413d-8b3a-88782a36516d"
                }
              }
            ]
          },
          {
            "id": "cd3114f0-ff01-4f78-9ac7-dd3375b563e7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3e32a903-795e-4e94-bf42-7215c72c6289",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "064ce3fd-3a26-454a-b027-76035022a4fc",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6c0b6b2-bc3a-4267-b09b-f545b16b9c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1ce93aca-a164-47b0-8920-e3b0044cf557"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85073db5-ba0a-4628-859b-a60275b79b10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "261a64eb-745c-40cb-97d0-cafc3099471e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1a9cbd4f-ff30-43fb-8996-64a53d29605d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "55acbb27-e464-4628-a04a-6e81605d289b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2aff9a49-004c-44db-b3d3-b2cf2c384347"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f07f24a8-c21c-42b5-9ea6-2ddf14aa7936",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "da24727b-a904-49aa-99ae-5b20fef85e33"
                    }
                  }
                ]
              },
              {
                "id": "6cf02f96-2eaa-400b-b941-0427a6fea638",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7662ce1c-4b1f-4a7e-b669-1a4e579898b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "800b7824-45e1-4d4f-937f-09eea09c734b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "60235e30-fe09-4cb4-ba16-8a4653704ce4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d0e92761-b316-4b7f-b8ed-c51708f8594f"
                    }
                  }
                ]
              },
              {
                "id": "f1b04a27-542d-43e8-ada1-47e6e507016a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b5f68d5-5770-421f-b8b8-a813489f1eaf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2477d858-4f7a-4f1f-9077-7210a8720c79"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c55e6a80-f2da-4080-b2f6-4f7b2b0fe33d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e7bb72f6-76f2-43cd-a82b-12fa196335c0"
                    }
                  }
                ]
              },
              {
                "id": "5e345e26-8921-47e7-a4a5-cd11db3e8c66",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4750b7d0-cd39-4806-a96f-07afb66a1dd6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3396fb18-f9ea-4d2f-9374-ad84222df1ed"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e448f3ad-944e-4060-a613-130badcf61e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a6cfa57b-de8a-430d-8a5f-d2cee8a82e66"
                    }
                  }
                ]
              },
              {
                "id": "4179e1c6-5ed0-4f1e-a456-66555ff58e56",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "93b180fc-9e90-4828-9241-1ab4ba1ca928",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cda1377c-6a9d-48bf-b0aa-e23c68ebd43a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e91e5f51-5276-4d22-81bc-2fce662b9367",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "a4292605-ad3d-431b-a432-ec6dcd5cd920"
                    }
                  }
                ]
              },
              {
                "id": "9974b1c5-1ee4-425a-8bf8-fcc3e7b8fa6a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c78e1dd8-9cfd-4121-bcd5-0a1ca77a369b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ab9111ee-e17a-428f-a110-dcc08d138ccd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "606a1758-bcfc-465a-a647-37a10a0434e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3626877d-341a-460a-8083-dd9f9ffd5b79"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bf5bd565-03a2-42a2-ab8b-d501ee08cec9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "04383b6e-3597-42a2-8a48-d1e76f8f0611"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "23fc5e89-13d5-4292-a2b4-aeee7e19dfb6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2c061df3-d980-4d8a-846a-72dba430c3da"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cc9e069c-20e1-4a53-9a27-4d7cb6942f56",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b1124e87-58b7-4b1c-b166-75e200aac0e3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c051caa6-26b9-4389-b0e8-4a11ccc0d2b9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8d4f2b5c-983f-48ab-8c63-5d657af75a82"
            }
          }
        ]
      },
      {
        "id": "742cef97-399b-4de4-82ab-d57b3a0d1fda",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4f6a7d66-3bf9-472b-b8f6-2e8fc2a99104",
            "name": "Negative Testing",
            "item": [
              {
                "id": "25e26867-b255-4b6d-8d22-4eecf17b5c43",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "74c422c6-66a9-4839-b87f-493a101ea4f0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b3ee52-2638-47d7-8c57-48d7a61b06e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49ab996d-ff60-4e14-93d1-b9d6c2a4d79e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b5a7e1b-2d3f-46b4-ba70-a16c31858829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "61ca4532-878e-46b1-ba8f-7847ae809611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c51ae9-5785-4bd8-8d78-19a939c5f63c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d46ad9-8ae0-4dfd-87e1-59ea7a97c807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25d3c053-2135-4938-923b-aa06b3ce2906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f5dd534-76cd-4f1f-9c24-6968b1cf18b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f50df18-23d5-4341-8834-fa219136ecd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6971254f-e121-4736-bd0a-7857e53f2737",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88128a94-2308-4994-a0d3-8dc5206ea06d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9bdbab2-031a-4a35-9c97-20745b727b2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f855c172-e191-438c-a5f1-c38545bf9d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "564bac9d-6100-4837-8d39-736739c0b3b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2001e7ee-76cb-4412-b05b-c46115254ada",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d8f1a1-4c6e-4ec9-bec6-9d5e98dcad4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52d988ea-0a10-4a20-a761-da263a667941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4989b1c2-d693-448e-b7c3-d1b803ee9c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "632c3a4d-53d2-4f02-b910-be74864eaf0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "620394f4-2e50-4da0-8c8f-3e09d7159197",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea71ea9c-6d42-49f2-9c09-fa8c9f2f7fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9c79d7f-72c9-469e-abee-00317e58a068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcb93bae-0c74-42e1-8116-d0b3f19e3f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bcb1a37-6aea-41a2-b1a8-338a037d7e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2db1be-05dc-43a0-aa27-4d9793993919",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cc4c22e-77a9-4662-b722-9e8dc34e4de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f89aef6e-19b1-4d5b-88bd-b93c9ff88783"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9071916-c197-4a03-b8f0-3a903d5dc929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d1560cf-e23c-46a8-be86-7b4ec0b15787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b50b99b3-e381-49bd-8014-1dcbb0d50bf4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e09b429f-9e9d-4547-9305-128c40fb4f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3c6f721-4abc-4e30-afe7-c9a63306214e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b62534-3089-43cb-9668-351a9ee2466c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc6358e4-83b7-48d7-b396-300bc71237e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a77970-234c-43d9-8ee5-fac20143018b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2814aca0-33f8-4ee3-b316-ca9eaa99f1a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8656dd56-e3b3-45ea-863f-27901a98e7b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9576505-b9b8-4136-97f1-6af734cc954d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b0201f8-4609-4c9e-ae52-9e20909cd3f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0fc7038-3286-460b-b7f0-af92686e91ee",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3909946f-a528-454c-b329-facfdd52a913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d27a72e9-2ae6-47e5-9bfd-9fb8040cddd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8f3ce2-a822-494e-bca6-64a893560c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a299cc9c-c7e0-4bf6-95e1-6d43d54f329e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e4ec3ff-f6bb-4d38-93ea-b82be0faa78a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b9bdbba-9cbe-47b4-abcf-b20663a47bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f9544fb-fc89-41cd-ae11-9585c759a91a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f40a91-929b-4675-ba6d-7635dc7938f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0acf490b-42ad-4706-a9f9-2251d0a3c88b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc081b9d-b7d3-4104-8372-16bf11d63312",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3b7a5e-6b1b-4773-93cd-26bb09fb490e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d3d9a29-ccf5-4ec8-b0a5-83aa320f5ae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a651c5a8-186c-40b7-b31d-f605b768e9bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7fd46ff1-d93a-478e-ac22-0850789fca2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "909119d4-5e4b-4f07-b986-b42e89127ba1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d58f753-a0d6-481b-b473-5f33eb037e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "416c9d05-72b2-4ec6-8e67-62bef8330ec2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7600611f-fe33-490d-ac91-f2d863a3c64e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "69fae6cd-bcce-4adc-a316-586af0e0ddb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e41facf-3ce6-4200-86cc-6cedf3e98624",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4251e0a6-ae51-4236-a4ac-268ebb2c1579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67751315-be51-4381-8912-14bf46e35a84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b958c54-4d00-42b2-8f6e-7709eb8e3156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebd56558-e0fa-4917-8463-3b705b409835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc2c740-0fae-4d0a-89fa-f4b3617e6769",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a05e7a3-96df-4077-8ab3-fa51bf0dc20b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "849c3091-f143-41b2-a0b0-a858470bcfbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c036329e-af08-4235-974a-4a0dec935c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd3a1d7f-2df9-4e7b-ba1d-9b5ee808799e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91f4ab5-f1bc-42a6-baa3-07f4a55b0215",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec04457f-8815-4eb8-841d-15f1a0a047e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b45e9379-6021-4b61-9ceb-f721e4895369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "091d6b76-cd35-4f98-823d-9e984695fb62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a99ca115-8756-465f-98ee-f57ee330f0e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fadda0b-cdf5-4699-95d6-ba433d9b8971",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "636a00b6-9595-4993-ab6c-f54c7c1b2a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b36297e7-b9c3-49f1-a0c2-eb51143098a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d47d8d7-d455-4eb7-9772-0bbb6085455c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "204c32ee-73b2-4281-86e7-3bf0fbb357d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d86e571-2048-492d-b7ab-d901a403e32d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2087c35d-909a-4163-80c4-706db9b7a304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b0b8e5b-de58-4f0c-8fda-606f7b24b85f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad0faa18-40e9-4a6f-a016-c42fa912e025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "fab54af2-cc3f-4d05-ab6d-dc7c34b563a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36ed300a-679f-462e-8ea1-0cc4062db975",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "666cfb96-5fc2-4824-9dd7-0429031cf81c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d696d81-3d93-42a7-aedd-b7c5ebde363f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4d910f9-c690-4812-b5ca-f09803ef6c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a74b454f-1ae8-4d80-a64d-d00d4682d24a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b8e69e0-e9f7-414e-b901-1922d85c6c1c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8fb85a8-1804-46e7-9f03-71c581e15ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79fb6ced-307a-4806-ab3b-fb93c37a261b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd8b2a65-2c50-4e64-a61c-6c063dc643aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3b549d9-3329-4314-8d94-60fe9271d88e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c26439-c4a6-4538-bb1d-51c695c33f47",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "973b05d4-ec39-49bd-a507-17d663fca4fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ec865b2-91d8-4e39-94e9-eca735de0761"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc4a097-1291-482c-a7ff-089d6dcf4a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83aad4e0-ed8b-4c7e-aa14-0f9a3e0afdaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2abc3895-2ee9-4b2a-8d70-215db13084eb",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8332482d-acb8-494a-b321-c324240bd194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fa846f8-3b17-4194-aa33-91bbf5ee4e11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb0cc61b-451c-4b55-aa39-0814b4544145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "661d60ee-a545-43d8-88fe-7f3c1b45e185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a12264-21b3-4338-9c06-3619cbc1aafa",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2685cde0-7012-49a6-9eef-39115e417bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7769ad71-12f4-4c16-9e05-23f06c34779d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ffc9b11-e347-4600-bae5-672860ead982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "047ff00f-f0b8-45dc-94dd-7f33f0951650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d47346ea-4f92-49b4-8fa4-e7266aa88d64",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0483355f-fc28-4058-b807-4f403efd062c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43f3e12f-2a10-4b82-87f3-ee2828dc8d1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9a0ab3c-9633-40a8-ae1c-baf311d667fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef2f5bac-fd6e-49af-8d13-fc01e93a67c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0304caeb-9d50-448c-94bb-85e92891a877",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b94337-2502-456e-b7bf-0f305dd52f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d01aaff-f480-43f6-927f-cd31e7e46551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e340602c-75a7-49d0-9974-2031d43cb593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad9da9cb-b5d6-4798-af5e-84a431c31913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f44e93-b6d8-4412-a3c2-0862200eaca7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0bcdeac-34c7-4504-9bb4-5216f670951b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2edc250-8501-4669-a6cf-8131d96318c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be112f33-bba8-45ca-95cd-e30a454832da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa218162-55a6-49bb-93d2-d92d97415fc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6518c2da-6440-4d8e-9f5e-b6dee9a83cd2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad3b1a6-bca2-41df-b550-4cc12bfca8b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59be5b27-9190-4835-ae7e-bdea76213055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9a83097-3bc1-4252-9f56-8564fc6bfc87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cbb6301-f9ca-4634-8564-6e0e3ef6adc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c171d2e9-17cc-4677-9a48-031602da7a8c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4d35d1b-ec71-43ef-8e97-22f826dd8021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "988bdab9-7388-4e91-8ee6-7f5131e184c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cc0dc92-1dc5-4aea-8eda-edd0ac2fcf6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4060f584-0e2e-43df-a9f6-ef81ae96a326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "360769b0-eb3b-46cb-8b44-c870cc38d260",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "735b6015-2187-474b-9f73-61fe244349ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f1fc9eb-fc45-46dc-b4ec-b021d10b55d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e34d55ab-f31d-478d-8266-f5fb6fa7a4f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f702ce55-4ed0-47c0-8e97-e247d7aca005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e4b6a70-8bf8-4c2d-9e44-3ec664969419",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba75c44-0b8e-44a1-9c2f-37143fd84b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "588ab3c2-f35a-41e7-ad77-a4adf55d8913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29777b76-8a2a-43f6-afd9-3e4f57fe7bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "826ba61b-4da6-498f-8470-373005b6a595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39777dbb-2f2a-4091-b0bd-b0c190598290",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a34c49-77ea-4ed3-83f5-01be302b56e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ccedcea-3adc-4fb1-a078-adffc978c822"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d6ca52-75dd-43b7-aac5-527d5fbdd9cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a92354e-59cf-4aef-938f-3887544e2d96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c9512ea-be45-44eb-b572-1c5f68daf37f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7656c8-69c8-495e-bca4-643c61fc403a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "914540fa-9cea-4a08-ad8e-c33a69d1e4d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17462fcc-ed20-4feb-a77d-d91b3a73d55f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5918b9b-0381-4bc4-ae69-e22c9fd3b75d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b4b5a01-2197-4dfa-945e-629a90f8df49",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af123163-d6d7-4c37-beff-3913343ccbac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "465b00af-0d50-4458-a31b-effe0d1ef074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3d8ff26-e4c0-496e-9660-da26c2d5f19f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "163a95ce-49c4-4ee6-b1e3-3bee5719d3aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b65b62-b97c-4a53-bdf0-8ff1bea7b423",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c1f9d1-2d3c-428d-8bcf-aac273dd8191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "590ab06c-50d6-4a0e-a159-da40c94666bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ffb3ed3-06ca-47e1-9d49-f52638234531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49e8336a-219a-463e-ba88-dd36e63f818b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d207ac-80aa-4ccd-afd0-d1b9794263e1",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48af2f2d-e2fa-491b-a653-fd1e8c5adb40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "152eb29e-8af0-4ed4-b527-6f372b03307e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eee92b3-f6cb-45a2-871f-ef5386af71e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45a59ad4-76b5-4c84-8b0e-5a9076c2cd02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f094ec39-b877-4bec-9909-f991ba8e52e4",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52dbed5c-be26-4bd3-aca0-3d38c1c57a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bd8f8e3-40a3-49c6-b05c-33b28e6bcb79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "431c8e3b-11c2-45fe-a82b-00f37217670d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95c33de5-91c5-43ee-9937-d4dc816772f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f91276-2276-4367-800e-f5a619afb1c3",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2848dd7-f24a-405d-8bdf-5587ca113352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc32ba9d-09ea-4f50-bf8c-cc67d72357b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e5d0a9-e822-4fa7-b57d-2833f58499db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd9e450b-f40a-46e7-a374-6b27e8422658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "335035b4-0642-4429-8659-d86aa25566cb",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "146184f9-0936-4b1f-b66d-28262a4fb4a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ed8886a-e6c2-45a2-9934-60943f8f287e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a9dc24-155d-4f9d-be8b-d80a29f8b25e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8a657a5-446e-41ae-a9cf-5a34e88d1860"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4ddcdac1-ba94-4bea-9f87-a23e332d9750",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bb883fae-bc37-4ae6-9986-f52e97d8604d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1369d58e-7f6e-438d-b41f-7a82b0b9384a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7e32c050-2857-42a5-abef-63f67e8c9a30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac835be4-e99c-47a2-b071-1699796075a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "20deb774-9c51-48af-8b02-583b5819f08b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "465516e3-1be6-4e81-90db-3201f51d8404",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c7f3fdd8-4cc7-4a1a-a24d-fa6e125f5112"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f03d895-ddbc-4924-8981-0deecd030393",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "743991aa-2a7c-4226-bd7d-47a7c2a2da13"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bd64307b-c61b-4bc3-ab00-c5f2f1617b94",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "59be4599-fa75-4a0f-b131-c92af02def26"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b0bffac6-da34-4b87-9581-10d4095f4355",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "28adb799-76ac-46ab-aa94-7d49574ced8e"
            }
          }
        ]
      },
      {
        "id": "ee25e069-95f9-41fd-ab61-8a046ca91892",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ed77240c-ef9d-4ff7-953f-f6f3b4809db0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b9cbe6c4-36b1-4c62-99ca-53552ac315ad",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "524ecb63-2b02-422e-99f2-7ee15fc152fb",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "662ba401-a0fc-494f-a1ef-cbe5daf0fb2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "578037ce-e0a3-45cd-b7c9-7448548829f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ca7528-8e1a-478e-a5b3-279215faf769",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c39841-4749-48e9-b3c9-c792d63e478b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8842f133-6cef-431d-9c2b-93d6da9f4025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8392b455-fe46-4388-aa59-13810a544e0a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c8e99b4-f5f6-4942-bbaf-d882754e614a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c230f8e1-3976-4a60-b016-569a8418ee03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebaae0ae-b519-4fcd-80f6-e5e3907d15fd",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a2087d7-064c-42c8-8be0-8181d8f8ab6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdc083c4-ac79-4ab1-a2b7-9bf80043da23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b3bccf-a03c-4705-ba18-5bff8ffb589d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ac8430-bb10-4f24-b680-772b9d5ae740",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb963e34-4320-4a68-b9d0-d9302ca4c60f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22f87030-48e2-4b95-a756-6d007f963624",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f901266-cf1c-4537-8cd7-8321674c2632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bbe2ad4-d473-4ba5-9ecd-3f612b6180dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f0ba370-16c9-4e67-864f-59969e7325dc",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d9a24c-1e35-4975-9840-55ffa95bb685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d55167ba-5fd3-4262-8234-be12534180d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6382dca0-2dcf-4bd2-aef2-c7d34fa0f638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c53af203-658a-43dc-8ece-55976c45adfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a400a79b-f771-48bb-8a95-0f061406499a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "455403c7-a6e9-413e-a9f0-651c8bbfc17d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "149af698-632f-4c94-b133-384c6d8f5b55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74af5ee6-efe8-4b61-b160-fa2eedaa0a3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ad7f9f4-f569-4b15-bde5-55b850ad5692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9146a88e-bc9e-4581-8e07-5cb24d0bad19",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d68e63a1-8bb9-44cd-935d-682d413c8159",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd90e64d-56e7-4a67-9a57-f6c1d14c26e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed78afa-780f-4fe2-bff5-320b4ecaca9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9e11e7c-05b8-457d-8df6-699046a8b3cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d38c732c-cd71-4106-9bc5-98b7e14f5b89",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "579df2d1-2dc2-4bbc-bf31-93137ce254a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88ca2df3-b168-49d6-9ee5-5f06515610e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d74d634e-e7b2-4747-b49a-52c27b065501",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e2c0f02-8b5c-4139-a54f-f15c140cfc98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06894379-c8a1-4020-9b0c-a895ad513682",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc7cc729-7ee1-4fe9-951b-d5147ca3d45a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23d404c5-61e1-449b-bb6f-25e4b7f27a4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc1651b-e9a6-42f1-8d70-ee2e6c33b49d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "001e927f-7ce3-4346-affb-913ed839c969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09dd3d6c-0056-4019-b568-30de68f07d25",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45592ac5-fa45-4742-a81a-a86b366fa0b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a8e2c8b-271d-4078-a95b-205549ec9838"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24c8f409-b336-4e16-9ddf-7b4593bef03c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3673f40d-5ce1-4472-a992-96057a3e5cc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5600f03f-4de8-4166-aea0-940ddee0f78e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5623083-687f-4e6d-aad2-02590b4d19d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5519bdb-54bf-4844-b944-62b488c74c24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d521e6-e498-4e0d-bb57-54be09dc072e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10f0efe0-8ff8-4dce-b9e4-c7f97d9344b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6495e5c-0202-486c-9680-21a5f64d4bf6",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f904360e-8818-437a-a9e6-3aaa9e5e1ae8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e04c29bf-6db4-4548-8ae2-c60f50f0538b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "520a4908-0d99-4454-9ef0-d102d441c617",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "711e6dab-0957-4f07-9551-ecd5da8d0c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc864d4b-6a2e-4d8d-aa4e-b22afbe991ca",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd17c620-bf61-43a1-8c76-46cba0259782",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d6d7152-05cb-45cc-a903-23180ce78d03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c5b1196-f1ad-480f-9f48-9dce04dd5c10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44518f14-bc1c-4461-98c7-e151f9673ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fb3b52f-51e8-4b8e-be2d-bd8b4177b3ce",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f3267f-cdce-45a3-8f16-5bb22f14ee2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cadb713c-12be-4744-b5b1-67c90332683d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "291f6fbe-4cdd-4b26-826f-6a6cc4a172d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afaa3fe5-c922-4b1c-b8a4-86ebb476387a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f3ead1-d529-4faf-9a3a-a02c44c8f0d0",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e56525-8d4c-47f3-96e7-fcdb4571df85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0beb292e-28d7-43e7-a906-f0703ee47bc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "769d0f66-2847-4c59-9c56-ceb1b7c8f4dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c21ba01-51bd-4ff9-ac11-1229824f5bb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "469761b8-2083-4b6b-8d19-e04c8200b207",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a35556-cd60-40f3-bd16-22b3e9b82ed7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aec0df44-e4cd-4773-a185-1a26f51d2c74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6737f22-1b89-47a4-821d-bf9dbd51a8c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53e4e800-2c2d-4d72-8d64-041f887c31d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ef64cb9-ed62-4198-98d3-8029e06d7ba2",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2d762a2-f39d-467a-bce5-4195fe4bfc27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c42f3517-17e0-4530-9394-3705c1d6cad0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33bd1080-dd2d-4d5f-a60a-46d02f62af74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccc5de14-b2c8-4c2a-afd3-3fabae3cf08f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8289c5b0-f596-4441-ae04-b473bf0522cc",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34243c71-969d-43b9-a4ec-71c229df33db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7fb51b9-c81d-43e4-a5c0-4cf909704bf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8924842-79e4-4a33-a5f2-ce4603933374",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36fe5f70-fe1a-4aba-83c1-f547b6710c43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0543168-1784-4329-b41b-0fbf0489a6b8",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d4316e-426b-4487-a779-169ca61d3782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "827f5950-9aa6-4884-bb3b-f5989e4b2da9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17a45384-1a72-4309-8148-53f2332820a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c828436e-de79-4d3d-bcf7-b71f3a4e08a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b50092a4-1f09-44e8-8089-9213332f2d88",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fac7720-428a-4d7f-a497-0c4d688fb318",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa5114ba-aa8b-4935-b845-97572d0695b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3adf55e-5f2c-412c-a515-832d398fd9e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1ed6232-f441-4fe5-b8dd-a3af0d65985c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb57edd2-c7f7-4b4f-bccd-8d3f595b9fa1",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a972ab-b1a6-43cc-a601-a171cad422a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46b7ff7f-6933-461e-9f6a-0687e609ecbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b19b6e3f-f2ca-46a2-887f-62ecd09befe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "067d9cf7-2669-475e-a4a2-93e2f847ed1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1079b7e3-a67e-413c-8314-d5dc3c35afc9",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be844042-00c6-48fb-b2f3-5b8dd100e45a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4549c3f-0e0a-4193-951e-0089843bed1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a77a9a6-bc6f-4a55-b805-874cf89d317d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43632cb8-0801-44ca-a6ce-69e5af4ff000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0177acb3-a7f7-46c4-8618-5382490ae408",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "032bccad-efb8-45cd-b212-3f78d4b94b8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "324b4e9f-8b92-47bf-b2f5-965635a038db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "381edf65-615e-4580-be29-110a66db1e26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8ff12be-66f1-4c53-83a6-dd8c8c6157c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "066090e4-6110-451d-a74a-8343c91b4bef",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c1f66f-a26b-45a1-9ed0-b07e97ec714c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "456925d3-8a59-4e4f-a838-60b38431cdcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d70fb914-6dbf-4b84-aa23-bec86cc6a308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9a0391b-07c9-4502-84ae-6778c421bfba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5653f4ad-1098-4892-8c2a-014f850a8c63",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7c4c7c9-e362-4c2b-bd1e-fefe7f2bb808",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bc31f3c-9a03-458a-8801-ba572dfb0f8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2adbacab-0964-4c26-9168-01b4c74de53f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99f8600d-cc3c-4808-8771-e60d4b7f55c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba8b25b-82c5-40db-a891-70bb65441d72",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb0c6546-20a9-4171-a358-e1fb2fe68d0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96bc8ee3-d21d-4e5c-940d-5c7f23c70ee0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "803e343b-d107-4fd9-b393-4ca239bd7158",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e3eaf63-32bf-42df-8e49-084c1e799cb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbebb7cc-96f9-4b41-9545-ec3a6700479a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ecb8320-781d-4ce9-b44f-4e1c60ff68b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4736b804-9517-470b-8fd9-0ab7c8b07f16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f505b2-1f51-4d9e-a9ed-96659e1809e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7a1feef-82a0-4bdb-9036-990676f1ba3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "160afea7-e4df-4fbe-8137-98238c2c35e5",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "979d7ef0-55fd-4972-92e2-4a2e4ecacc58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd80d2fa-7289-4da4-82d0-21e2223fbc12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d11aaad-af5c-4927-90be-cefcb5ccf8c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09cee347-d729-4746-ad2f-34e085bcf7da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2549c22b-f345-48d6-b0dd-d25f0f26247a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fac9368-f1e0-48b4-bb85-8dd698d27884",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d590b471-eb2f-45cb-913c-0e50e608d7e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "771691fb-53f4-4a99-a464-fbd03d117104",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83fbe442-3108-4a80-864f-07e620842387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a249e13-26f9-43e9-ab82-ad58eadff04a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34d6289f-7f3f-43df-9def-c0aee99d7680",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89ae29c3-e143-413d-9e81-aa5e8e4db9e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3611b88f-9adb-4bec-8c0c-1f430e248436",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b0a1805-390c-4f9f-8550-545a5366ea04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd55b411-57fc-4305-876c-687ce062c678",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "771a0da9-dfcb-4f6a-9e05-e1112950ec27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72ce4806-4c2d-48b1-8887-edd90a00e252"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78df9b70-c950-4a8b-89e3-4cf995f5c354",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40581c92-e9bf-4bc3-b4e1-f2e93862b499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b87ea14d-9595-48d6-85b0-2ca822b460be",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a38aebc9-9549-406b-8cce-c97cd65a4d87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6176b7f8-755b-4aab-8292-efbf1dec93fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d84e7503-6289-43a4-bd32-ca642a7a8808",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e23f720-fc0e-4588-b083-afe6443807b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d30358-113b-4329-adad-ca493f43c3ab",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "300b538e-006b-4fc3-b929-7ab65552a5f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c243bf91-972f-4af9-9803-0e3a5d55b633"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22954527-2691-448e-afaf-61145c7da903",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e599daa-80b1-4c00-b725-56271cd1f321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56098751-dac2-4388-90b9-d8a3c3eba33c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de21f985-2985-4518-9ece-c5b15a7cfad6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d71980b7-1b35-4c9d-94fe-4716116b4b8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3158edbb-616d-43ab-9063-e1fa399b5a1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a3aee60-390f-4498-a697-c8e007afef17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c4e03e-84fa-4814-bf09-7d17749f1dd4",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7df2fb95-c23b-45a6-a627-7afbe6b9a9a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c34ca7d6-7315-447a-ac22-04bce10098c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "732bbe06-dbb0-4db6-af63-c10cc60ec83c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a557d9aa-12da-4904-b61f-bececaacfc24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204ddf25-9aa1-499c-8de2-2253f75ba6eb",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "723ed55e-bf92-40bc-a2bf-6dba8f853c18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e6a2f5a-401c-43eb-aaf7-03ba5065962e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfee84d9-1080-488e-993c-1bd825e8cd1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eb6b21f-9143-4cc1-bf04-f0a696bf9cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba89228e-b551-409b-9721-bfec865ecac5",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "324eb11c-099f-4660-b992-5f9568039223",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c8ef2f5-8958-4b0a-a95f-e0d4628decfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d93fa9-8cf0-4d36-ad0d-9ba16a64ee37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bac47f40-2db2-4172-b5e2-1a728858d483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa0078eb-740b-49b5-9f54-57569c88bb0d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd735b8-a85e-43e8-8471-36bee25d7c6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f8b3c87-f27a-45c6-b921-fae0cab4c5e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78c10b17-0dd7-4270-95bb-2f767282e655",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9e0c9ba-7925-4c90-b18d-7732cb6faf19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6682ddbe-fc5e-4405-8ff9-1655fc05d8e4",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67722645-f894-4f37-9c36-e13e2fbf74fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d8486c0-de18-40ff-b492-952eb3648d6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ccd972-1275-4772-91b8-5924c3bc78a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "153959de-4b9e-4cb6-bf22-18aa025851a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a8d9424-1a92-4bd8-99c6-ca7c187a6f5f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23cd82ae-f5f0-4ee4-88f2-750dc9cb3a6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c8e93e6-f8a9-435e-a4aa-d3a5a6dc29e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6de2781-5d76-47b9-8e81-1ca9ba22dc58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6947a553-b7eb-4366-a122-5c638b5b2783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf88266a-9160-457b-8e48-972728b61b97",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7422ba55-a39c-405b-8fad-67068d6b2812",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb3884cb-1108-449e-8707-b636a980a656"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "892cf2b0-cdd6-4d84-9007-f084f461be34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09560b4a-1d46-4f5f-b67a-96b851c80399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee227e0-0271-4ff4-885d-09b8e620716b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9260f078-1edd-453f-83ae-ca383eb159bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57a9d031-9e1c-4946-854c-b33cc28d638a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45f885ff-6c42-4b4a-8e95-7280780ae4d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0cb826f-bfda-46da-88df-960bd1a64db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d7ecf8d-62b3-46d9-83b3-e945811282c7",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6db8907-2a75-49a4-93f1-31b7c54a0ec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c98f7e8-a4f6-42c6-ac0c-26aa8e0cd2ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d24575e-d0c3-4de6-b978-45706bfd4f8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d8f7381-42b8-4887-8403-8c81c5bc8d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2426d0fc-cb22-4d68-86df-0592901d16c7",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb008f52-c880-4de9-8980-e565386d442f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e12e7473-794f-4ca6-af3c-91a58e6f7f0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cabc4ffd-6626-4141-b904-de79e29ea4e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "527d0803-2770-44a7-8888-600b2fb0710d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e573a3e-329a-4bd4-97f1-d26ecd91a548",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a7754cc-00d3-4d4a-b7bd-deacf986ee43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be8f177f-0287-479c-aa65-2db34a0289a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "131e6bc2-d7b7-4a4d-bc62-e0214aedc340",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a55e5b0-61fd-4973-8399-614e5c86dce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f55f43-99a4-47cc-939d-b9ed50b5470a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2d0900e-7396-4575-b9ac-2f97a811d697",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90f34000-64bb-4e78-9012-a4339e406c6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17e3bc2d-d586-4de7-b740-8b1eae2ed124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64e20866-625f-4f0e-875c-76f04543bf5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae276344-1bcf-4909-9ff1-d0279e6ecaf7",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1e6f4ca-9ed6-451f-abf4-cee78366971c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fe9282c-88aa-487e-9bab-1bf06288731c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f526623-13f9-4c8c-a9b3-8ca69726f5a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe9d2c62-db01-4c19-9c2c-9dd8bee57a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dc71efa-7f2e-44a9-9fcf-f151f884df69",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9fefe12-ec33-4503-be29-806085729561",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec394b13-7efd-468c-9fb4-0bd032d214cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a85cac3-b68b-4189-9387-a81171b696bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9592a72e-edef-48cb-bb3a-4d1b57eae019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5519769-5bc3-4dff-ba32-eaa598560fce",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0938f6a-7f2d-4304-96b5-1a84a595329a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db27612a-1f2f-46f6-b53d-9fed5dcde4e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d64c11f-c770-4c94-bf9e-dc22316429cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b9a5034-fe26-4e58-8183-64d1e457ff9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f7a903d-863d-4e04-8b03-e70f7a2b5378",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca8ac14d-cad3-4893-a0ef-f8228fd81ca5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc1c470d-d0d6-4e1b-ae5b-b9de32f8ee41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d761442-b3da-4a12-bffd-4f48afc87276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "194f6488-a518-4333-a967-b896420a8be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbb29c1b-ba1a-4bfc-921f-316fe1ae51b6",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93be18d9-642b-476b-825d-02580c3aede2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2c73941-ec98-490e-8811-5994300fdb80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2054d397-ece1-4b4a-8e98-ee4db95c1fc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "071d16cd-b4b3-4148-a570-c71e0731822e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b079682b-7092-47ef-b050-d5a033cf3084",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0065502-2e46-4334-8191-5bc3701e2248",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46c615da-9597-4fba-b86b-268e123f0e29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82b5058-d2d3-40c6-a65c-912566490450",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c85f8133-1e9d-401a-b746-24a0105165fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f756c6d5-06bb-4c7a-acd8-84320c506220",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb8cea4f-d792-4702-8312-19c4c46b1d30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6b1d24f-c2c1-4382-b19c-02c2d9cb2291"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9d2948a-5f58-477f-a89f-3955ec0fb962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c2aedf9-52c4-45bd-b98e-c9193dc57f35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c668216-9f4b-49ca-b95a-bbc875cbf1a7",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ffeb52-8f48-4370-8a22-3237f42092aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2ee02da-af5e-4464-a553-86b6c5d0d286"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bebcddee-595f-4e1a-9e6e-5e8ecaa97549",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08acc38a-e910-449e-85ce-a6a00e9d33ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc95b36b-47d4-4fb8-9f43-18805ca8b9a2",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61942a0a-b39c-4152-a46b-73c11964c9e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cea42d7a-4023-4f22-8314-da3cc80070b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "301ed550-ab9a-4772-82eb-b479d96de386",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47c2ff94-fa75-4ac1-8962-ec7eaf481276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d65ce30a-33f0-48b0-a6cc-b9a858bf5d87",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88b10c1c-43e7-48b1-8188-0501c3f16e9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9e2ee58-b2c3-4e3a-80c5-a8c94cecf002"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd31b723-4aab-4d65-8cd7-9c2580bd2afe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e58f30c1-5eaf-4aaa-90c0-980b5e0fdf5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4e8ab48-9046-4701-a78a-4338a3efd946",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a8974c-e85c-47a9-9d62-41d4e88626ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "740125a0-6068-4eef-ae3a-cef28fdf8664"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41f0687a-5f64-47ff-9d50-69977b7fb473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e75b1f40-a685-429a-93bc-f12b95997853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c18b47-e5bb-4f0d-a836-ab0b1b515fb4",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "265175d2-ce00-45a6-8f2d-3b7c90991524",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4088399e-b657-4028-b75e-6d50ef79e784"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d7bb7d-6cd4-4d41-8be4-0ab6179cec62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c56ee0ed-323c-4a7b-adab-2e7c9b0de94c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d733ea09-732f-45c7-ba61-e69c848cc850",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9545f7a-5793-44c6-ba49-db720929a62a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e37225d-93fc-430b-9869-1cf2d1a6f304"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a9f8361-3186-4971-b06d-4c5769c8620b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcd61de7-20e6-4cd5-a714-194be1b7d5ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4845351-07e2-43e2-be50-6521ce99f7cc",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5abecb4-6605-4c09-90e0-706ca852c736",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab8ef98b-58bc-4ff7-97fe-d92d2dc254f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c97c735-4b2f-4a3d-8a06-99b1186948fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc9bc323-0bc5-4538-8f6e-db09a5324543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3149f6b-e58d-4fb1-907a-c78c11f5bf05",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a7f44c-7640-4ccb-b860-7e1542111547",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0650f01e-5afa-487e-bc19-4551bfb59484"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ec339cb-bbbf-42d2-b102-4d95bbdfe5e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b2a60c6-b791-486e-be48-fb31fe21e517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "607a2388-35c7-4e1e-99cc-47d3f8b4adc2",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeac936b-8dfc-4ba5-b515-431dd00e33f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f11f2b98-07cf-4b93-aca2-a32eb94e8bc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f81981-ecec-4b2a-bff1-15dd03618cf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e9b9082-68ef-465e-9296-5ac83dc75279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3d55bd-69e6-4f06-a4d0-e475694b7812",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa94a24a-ffa2-495d-b638-fea0ea52ba2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8953cd9b-e41a-4525-b0d3-9ed9977fc618"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8577fa6-3881-42f3-9299-f14a91ccb196",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2df63d75-7e4a-4bdc-8904-2bcdbf359ba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b74ef5-961c-4637-8537-0b09204d7ceb",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b266685-849e-41e5-ad61-9de86f110d92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76c53fa8-50a7-48d7-b97c-aa019d9f203d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "585923cb-da42-4121-86ec-96a4256fe331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82555d27-8ba0-4ab5-9b0d-6fb0576c5eea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a11a202-5276-45c5-a266-8f5c2aa73379",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e8d65c8-be28-4a34-a359-8d628c053384",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a486d76-c217-4551-824c-00e832512273"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe66c1c2-60e1-4dd2-aee3-d8b81071ae63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48c4c8f1-d02e-4fa8-a74f-c5284ca67492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf750c92-601c-4d6a-a933-a883a185fb66",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ebb7d24-6673-4257-a7d8-8b2da670b144",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77deaa7b-d59a-495a-b015-18205f64e153"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e692eacd-b1ef-4aaa-b0a7-01433d5bfa76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2044261-12b7-446a-9ad1-232cd679f718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec909a2a-4d21-4068-a49f-db8814952ebc",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1fc1a7e-b498-4417-a762-07ae9d6d2633",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e586b8b2-70aa-4cba-baa7-761185047202"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf9f89c7-fa1f-49f3-a94d-23642ef4a9f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "273c5f5a-59ed-481a-bb6c-fe9384d964e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "895b9f0b-3b5c-42c2-bfb8-7752f4166513",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c925ffae-fa72-46f7-af14-562f86c727b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47f9e08f-2e0e-4479-972f-5a767e288cfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "575c9e90-d03f-4c86-8e60-472e237d1b03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1973eae6-ed76-487a-8c3a-7474a2dd8095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a531fb32-8996-4347-942b-b980b7fa3d92",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90ba1318-3990-4813-8d6c-7e16f83e1095",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1af181fc-d0aa-49c8-b7a8-0683572e9541"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b780a6-5ac0-406a-96ef-d4f16c738635",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2505210-9a9f-43f6-984e-0baa7f1d2d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "253a545d-9475-4649-aa16-48601ac1f666",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d49c6c-e717-44d2-bf19-b20e9595c719",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50bf6259-a020-4d57-94b0-8c417eccd839"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb02945-12cf-4996-8e61-ff84a59423c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74341e6b-3b21-4b5b-b193-696fca62b328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bd0275b-a78f-4a9d-93bc-844d21bb96fb",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a25436-143a-46ac-9a19-4c79e65e28ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98f28a50-176a-4f7d-9a42-5e021cb1e113"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e3f2fd-a515-4985-886a-4f8b22078ea6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74ff1304-45a5-4558-ac2a-8bb8dbb491f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d215f645-e4da-4233-a165-5371a6c28165",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3f2b88f-b6b0-482d-8b73-dc5249d2a9c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99d74c78-1675-4ce8-9f7f-a8086f098d13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c9df9a-e610-4808-b73c-c5daca710873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "072e303b-1bb2-4b97-8fd1-354fb6cde902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d2a80f-8c8f-4948-928a-8d444e5112d9",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743f349f-6c13-417c-9570-21c2373abb93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "054fdc62-424c-48cd-8173-17e084ffd549"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61f7ea5-bace-4a24-a619-05b7335fa43c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4c1959c-3265-4bc7-809a-d344e3cdc6b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e70bb084-1d93-446d-9917-746dc9b03b26",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5406be06-d81e-4290-b679-b9fdf095cab3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc1dffd2-0917-4c74-a613-88d5644218f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd18dd18-d6f0-4fd9-8ebf-9be0f1e6a052",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3678a065-0e09-470a-800e-731e1b2b166b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eab8e69e-45a3-443c-b018-ac1da3888a46",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "872e714c-6ca1-4655-97cf-bd55f9668b7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ab8a8fa-3e4d-4f2a-a586-b577064d6f64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3154de62-708e-4de7-b89f-a9e476523ee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2aa5394-da5e-40a1-b4a9-64e80b075b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46807f05-f2f6-4c38-b1f0-7bf50afd1b69",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f052318-820c-4368-99b1-6b5b914b0378",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea0191c9-c60c-46ab-be89-2a5e65eba39f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "949e8365-fa84-45cc-8ac8-8309e044d55f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f20a964b-044b-4de3-90e4-5c8d6d9d17c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c21eb6-ca77-411f-bb9b-9736e35169aa",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7812e70-f546-441c-b8e9-a90ff8019bb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3691adff-2a01-426f-ad6a-fb4a6637c273"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda1a5f8-b55a-4e89-bbfd-8525eee4d7f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8d9ff12-1ea0-4160-8bba-0d62073070e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55edff8d-4231-4fde-a005-c3be17cd738e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc980fc3-6f6b-459a-88eb-707632737479",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cab99833-8759-492e-86ce-c7dceef4033a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33845dff-4e55-426e-a6e3-1679ae38d98e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8204bc1b-eeea-42df-b952-9869f668dd1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a502d337-f1af-4ad9-a8af-6062106022a4",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d7ef6e0-e00e-451e-841e-4f50ac6c3efb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "340ca904-193f-41c7-b778-4b15cfaadc6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f99ad38-aea8-42b3-802a-ee242adec4e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77c5c62d-34e2-413f-a493-82b106697c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be1e536-efc5-4558-a866-e2374af31b8a",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f1f70b1-cef3-42e6-8d8b-cde70698feb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ddfdad7-70e2-490e-b25f-d823e0ba5cb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d084a4e7-2adf-4fa2-b049-a0ad32698eca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fdaaa72-2192-48a8-832a-4fd8f996d742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac2c2bbf-afa9-40e2-b699-bfae9d8bf03c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "833979b6-f81e-426f-af9d-b3c2c52a3a15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c285d73-564a-44a8-bc15-cff13913cbcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a858aa-15e7-4d85-9650-07ea4b0c9110",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acd6ed6f-f850-4f64-b7c5-1ae538444c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe5c9a8f-e3fa-4f73-a75b-836285453250",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d7a28c-269e-478a-8f7d-ca8abac73ddc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51f1c310-e1ac-4764-aa3f-6c7a462a5056"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6934745-b376-4d83-b6cd-e34f17ff8971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b06c5de-1161-44b0-be20-7ac266a119cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af3cd64a-917e-4beb-bb7a-aece8ba4dff9",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd5419db-c1e6-42b7-820a-5e220c0a6850",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cd8b703-f3c5-49c5-a30f-2b458989511f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1de47a-9a39-481c-adb4-558768b73c30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bb4d8e3-b8e6-4abb-923e-69afa3a5d3d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12eb77b3-a7f3-4ea7-9950-01b54b7bd1b9",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e050cc81-d56c-4669-b8c7-0305bb79d53d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67d8ad0b-1464-4c86-a6d9-cc4793ea71f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc8d585a-e000-4df2-85d7-4d8102208e94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d240db62-3932-497f-97ab-4e199df20f07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56083a38-c484-4c90-9601-28cf0d460a73",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19e19309-8591-4974-9031-566a620101dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1283f524-f749-4b8a-8392-d9fa27ceca5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a437fa30-5ebe-4bc9-8b8c-f3bc6d6ee801",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1b47375-5060-42d6-a23b-e1c4e48ccbe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "664c2a82-5e60-4131-9186-e19093cc92fa",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1b9dc58-d65b-419c-8636-76fb6756862f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc8823d6-7109-4654-ab07-731204568676"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9712e419-d1d7-4d96-bdeb-f9678755f47e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1ff6dc5-62f6-47d4-a265-aa1d741ed722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a36573c1-f472-4fa2-b4ed-cd81a16eee0b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed7e32ed-c6bb-4593-8bb7-aca53c6b56db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b593d43-7449-498b-9195-62287d231579"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11f02eb-344a-42ad-81d0-6dad295830a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6b1bd5d-7f24-4afa-ab36-e86620ca5f72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e58fce6-47d6-4fd4-937b-1fac60dc791c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a8fe503-89fb-48f4-bad2-a7fb4b146538",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30e5c124-8380-4671-99cb-efd9ee8d7021"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "602d457d-3326-4c76-92fc-ca8c59893471",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dab4cecc-a0fb-4a75-885f-f7b0e7fb5d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef88d4b-f8ee-433c-aa46-3bfcc371e664",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78fe8ef5-2cd8-45ad-a9d3-bd724fc439ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "723e61ef-7cca-4810-9535-175ff128f774"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2dd6fcd-28a8-49cf-8c45-4bbd21950ac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1632452-3a5f-41df-b8da-353e30733702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f2c38c1-8ed3-4c34-b4fe-a040df2ee1b4",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b6a1c84-db87-4385-8650-9665619ea4fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "111af804-5c58-4311-a7b3-8b15c2d531db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c06507-d39d-449a-8e03-f95fda3a7bf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e944f0d-e26a-43e2-a8a5-16c67ff89122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e92ac2c-9772-4a1b-9710-e4638cb47063",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81423447-bdc7-45ba-9a59-931b3144f85c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e89786d2-91c3-4ad1-99a9-38d8ca118540"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fbd6979-27d0-4ca6-8ed1-9f79be69aa22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02ee49fb-c156-4598-8573-cb20effeee24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c03e6e87-82bf-422e-817e-8b2ed05e45ea",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a47c087d-3234-4743-a364-9d7ce1d636de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5205f66f-7f13-4e0b-af82-f04d0f5e4988"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d00e34db-9e56-4b62-8461-10aad303cbfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d618436-32fb-4838-b1a8-d3ce127b81e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b576952f-9760-4aa4-b7fc-ff309f39e8d0",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3a52700-a3c6-4d53-bedb-7d1c5067cb0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ec40360-1670-45a3-a104-e0371ec919e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de0ed91-414a-48c0-bd81-990c7b8a543f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92f60742-ee2d-45fd-91ce-2d4728c9e547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f32bb9-18df-468b-a8c8-92adc331c9de",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "729fcfef-e6d6-4e44-8b29-3f6ea9204a58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fab03c17-d537-4a17-8efc-6002738efd7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56166a4d-929c-4bad-ab5c-bbfd29522cd4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95f34c56-f1ff-412b-b44a-0503bd0c012d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14f99a41-8945-49c6-a3b4-6ed2e024cda8",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b6e3e0-b49b-4912-8cea-fb49cfef2d24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abc17f97-5415-431d-bba2-383be2263372"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f1288e-a333-407c-99fd-87cc42ca73c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f08e08b9-d2d7-4b34-893a-ef3833ea4e62"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b9584f9-7412-4c71-b96e-8c9c34a81127",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "62168d2e-1147-487b-a2aa-d015dcb9f4d7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2368bb91-68c6-44b5-8e3b-f1b93a003ab5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "399ded2d-1b0f-4278-baf3-09e73e12c004"
                    }
                  }
                ]
              },
              {
                "id": "28d6b3e5-f688-462c-b213-c974e5f45db6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e663b2b5-d306-41a7-a71d-d4ee2a99c9b7",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "279c2228-ed96-48dc-b742-d45b631cdd68",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ef74b841-cd53-4914-926d-30850f4faf39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e81d3bc4-f870-4145-a6e6-dfcf755263d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0fd10cf-6938-4a6b-a9a8-1266ee6a7a63"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "74e46176-a76d-4acd-b719-269edc39d672",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e1f3f15-dad0-4aea-ae0e-dc0bff748ce9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "980f66dc-23a3-42fc-a73c-f8724bcbca33",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ceb542a1-23eb-4e44-9b7d-9713030c8ddc"
                    }
                  }
                ]
              },
              {
                "id": "8e806890-c90d-479a-b63a-fc2a47181a7a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0f7a538b-0b13-4a8d-b462-91dcd8a57763",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0127d1c-3bbf-464f-8d77-7b6a9f5d49d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4161fcbe-ec3f-4509-9220-f39b8bcc561a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db3f48d-b55a-4c21-a3eb-74d3acc18550",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6660fe4f-8be5-462b-8b2a-9c0154fbf81c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e59084c5-2dbf-48a9-9c29-68936198f536",
            "name": "Positive Testing",
            "item": [
              {
                "id": "727e6777-f7cd-41ce-9b24-16ea822b0ce8",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0586c57a-d414-41a0-95ce-b12c6c1284a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cd0d6b46-b86a-47ca-a9c0-7d4a934d5fe8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4cd0db7-1726-43a8-a3ee-c9fc1ec01e92",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1eb3231f-a154-43ab-ae63-00dbe813da83"
                    }
                  }
                ]
              },
              {
                "id": "bf69cac3-9c65-4909-aad7-6d6f65eb7f86",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d16e22bd-aeef-4ff3-9513-61df8c099927",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c123485f-99ed-42e2-b1d2-989dd236e1b1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "25880ce2-60ef-4a56-953a-d5f3c37c3a35",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0533a6eb-3f2f-458c-bbdd-37d0517434e4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a8e026ad-61b1-4fe6-96eb-13e880f0bd7c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "47e360f2-0329-4fa9-a2f1-e14ebdc5086a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e86e9c86-f46b-4a10-a7db-45f3a267af9a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "317ba579-9aed-4f43-adf7-988106669c63"
            }
          }
        ]
      },
      {
        "id": "a0bd92e1-1590-4aa8-aca6-c58d95ad3833",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "394cd615-ff35-47a5-b5c1-0f20856292c5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b698e518-5f55-4cab-8ab3-668613f160d9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a466f575-8c5e-44d1-b54b-eeb346938d32",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab7444b4-f38c-4fec-9f46-96279851cec3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c82e212d-4d06-4c26-83f6-90bc1056424b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a3d0b98-6938-4237-84d1-78a913505bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4df13569-6adf-403a-b2ab-a125751b00fe"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "19eb6f24-5e7a-410f-8be6-09c765427481",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d3be4240-e247-4f97-b3e8-74942b3c9890"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d085fdc-0993-4a68-9384-a7abcabeff7a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "756fb9fd-2bc2-41b5-8bb0-306551495beb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9a300980-a8fc-4ab5-b0e5-497a7ad667fa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ab9c332a-4700-47bd-be0c-1f847b9b1cd8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "882b80bb-bba5-4802-a126-09148fa278e5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a9674037-dd83-42b1-a37c-2f9bea361bd2"
            }
          }
        ]
      },
      {
        "id": "e3846142-b549-4d7c-b020-ea4776a3f5a3",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "7744240e-9b00-4b35-add7-0a8048d77bc6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5509fcde-bf98-40eb-80ab-68a38195202a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "974a2f51-440f-4171-a689-deab188b1a9f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12054f9b-2836-4e61-a0bc-96b2be122ba6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a307527-16eb-453c-84de-7fb20912d421"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "582bc9fd-9428-43ce-b60c-001f06622b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2e3286d3-8533-48fc-9407-589244ff460d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba64b90e-000c-4272-8a5f-2e38a2a77ad7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6cd2a84-1da1-4faf-aa32-ee6b87094fba"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fbcde020-5d7a-4686-a031-cf814fc75304",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d2b3c37-db7b-4116-a67d-dfe4d3b816c2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c2527efa-c8d2-4edb-a3d7-b11d96b3038b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "98645fba-8ce7-4fa9-afd8-3c2a7834fa82"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "72868fd0-f1c7-49eb-b4fc-f2cbf26dc6d9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "321d3894-7920-4728-9066-164d37a00079"
            }
          }
        ]
      },
      {
        "id": "304bfc1c-0031-4535-8524-86481784984a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "993e535c-3dd1-4cc9-aa56-0cc0ef820008",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8a034fc2-2e72-4732-9c40-12fb971cf25c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "871209be-b68c-4479-87e1-e556eb655d55",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15a21894-a2df-465d-9094-2773889d5437",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f674e49-009c-44a6-9c30-63005eb0d8cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b49995a5-d41a-461a-9860-bf4ce0c5a000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e0663af3-e122-4f96-9d17-8438fa90750b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1385a787-b386-405e-ad2a-e44a0f654a91",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "435a859e-b605-43c4-9b41-295b8099aa00"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "27acfd93-0fd5-4495-8d34-8cc70cbebd1c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b44fecbf-a92a-4625-9eb4-5ae54d7ce96a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f2dd09c2-07a7-4caa-b590-2b5aa7a3c317",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3f9fc5d4-7220-4efb-a49f-c80e42d2f598"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "139bab23-9fb9-4e68-bd6f-b704cb68b1a0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d97f601f-ed62-481e-b320-b830531e2e85"
            }
          }
        ]
      },
      {
        "id": "5eeb4e69-8305-48cf-8826-cb9376a0e405",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cab186b4-f065-4170-b939-111501d0b1ab",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e2176f60-ff43-415c-ac3f-f6e29a5c521a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "886eb965-8eb9-46c0-927f-d8ef42ebb00e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "92bdb697-6cb4-4c17-93b0-9d693f48a16e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a4df2fee-0941-4df8-8f27-9ac158c0a9e0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 71.87301587301582,
      "responseMin": 12,
      "responseMax": 374,
      "responseSd": 25.45880086921142,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1722904818976,
      "completed": 1722904845407
    },
    "executions": [
      {
        "id": "0c88733c-9597-4cad-8db7-4b370dea8ddc",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "49fa9937-2721-4fcf-af42-030ff14b03ab",
          "httpRequestId": "2b19d60a-e01f-428b-ad13-08cf5cc68c9b"
        },
        "item": {
          "id": "0c88733c-9597-4cad-8db7-4b370dea8ddc",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "9ac56422-2c5c-4e98-91d6-1b84fe61e148",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 0
        }
      },
      {
        "id": "31c4bdd0-a434-4395-9b0f-4763c78f19c9",
        "cursor": {
          "ref": "573a045d-f3eb-44f0-88b6-80b7c8e04406",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "225663dc-0534-44f9-b481-e5b0a23714a8"
        },
        "item": {
          "id": "31c4bdd0-a434-4395-9b0f-4763c78f19c9",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "9eaab1c4-9231-478c-806a-c2af776a04ad",
          "status": "OK",
          "code": 200,
          "responseTime": 12,
          "responseSize": 0
        }
      },
      {
        "id": "6aa27b34-b534-45b8-a079-65ef3963c0ba",
        "cursor": {
          "ref": "f93c55bf-7a0e-4d6c-8eb3-61e1ef91624e",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "66c835aa-302e-4243-8e10-ac0a4fbd1723"
        },
        "item": {
          "id": "6aa27b34-b534-45b8-a079-65ef3963c0ba",
          "name": "did_json"
        },
        "response": {
          "id": "0fd0d45c-cd21-4e4e-8510-72998cfc732a",
          "status": "OK",
          "code": 200,
          "responseTime": 374,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d77d428f-f536-43e8-8b0b-370d2e149f17",
        "cursor": {
          "ref": "5b589af8-ac0d-43b4-920b-86d2fed58e2e",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0b996f07-7fe4-4737-bdf8-e584bc22913d"
        },
        "item": {
          "id": "d77d428f-f536-43e8-8b0b-370d2e149f17",
          "name": "did:invalid"
        },
        "response": {
          "id": "90603d88-a811-44db-b14c-759bb6517e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d77d428f-f536-43e8-8b0b-370d2e149f17",
        "cursor": {
          "ref": "5b589af8-ac0d-43b4-920b-86d2fed58e2e",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0b996f07-7fe4-4737-bdf8-e584bc22913d"
        },
        "item": {
          "id": "d77d428f-f536-43e8-8b0b-370d2e149f17",
          "name": "did:invalid"
        },
        "response": {
          "id": "90603d88-a811-44db-b14c-759bb6517e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2770fc8-ed92-489f-a4e7-0e13dd9a7556",
        "cursor": {
          "ref": "16d94b7e-9a9e-49b4-a8ed-ee8c1a5b3291",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "5fb68d6f-a051-4802-99ea-ccca4d665e63"
        },
        "item": {
          "id": "b2770fc8-ed92-489f-a4e7-0e13dd9a7556",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "a345b5a2-989c-40fa-8f0b-af2e8cb6da16",
          "status": "Not Found",
          "code": 404,
          "responseTime": 117,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec39531-281b-4390-8257-771bb739e0f1",
        "cursor": {
          "ref": "9171ef7d-0144-4913-877b-71220bbaedb5",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "cc391eb3-657c-4de5-a2b0-a1ece9b1aa21"
        },
        "item": {
          "id": "dec39531-281b-4390-8257-771bb739e0f1",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "0d70fc32-40fb-4f14-b173-f7454ada086c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 70,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b2d6af-cc79-43df-a1d5-47243c522121",
        "cursor": {
          "ref": "fba7ddd3-bf22-441c-ade2-5dcd6cf53936",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f89243ee-08c3-4297-ac94-824f09141e52"
        },
        "item": {
          "id": "76b2d6af-cc79-43df-a1d5-47243c522121",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "6cb6da51-a09d-4868-bf14-681d1a929bcd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a883da-5dc9-444a-b4f0-919fde4a94e2",
        "cursor": {
          "ref": "eeaa2287-da2d-44c9-8ad1-fa2bfcfb9054",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1c2549ab-6fab-4d31-abfa-49bd9c5a7377"
        },
        "item": {
          "id": "15a883da-5dc9-444a-b4f0-919fde4a94e2",
          "name": "identifiers"
        },
        "response": {
          "id": "98a3e9aa-a165-4d18-87d2-01f83319f68e",
          "status": "OK",
          "code": 200,
          "responseTime": 293,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f4a37d0-4744-4d55-920f-5e229938f025",
        "cursor": {
          "ref": "8431119a-55d2-4b32-adf6-c8602a6e6050",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "dcd57414-5739-4717-b067-3a6de4b9752a"
        },
        "item": {
          "id": "8f4a37d0-4744-4d55-920f-5e229938f025",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "65dfead2-e8ee-4ca4-8f80-d785b0858921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a44e75d9-c960-4aa3-bcd5-733696a8586e",
        "cursor": {
          "ref": "d101d088-f553-4dca-8ef0-7d82f5b87a9f",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3d2804d7-4ffd-4e8b-b7c6-a3210030eda8"
        },
        "item": {
          "id": "a44e75d9-c960-4aa3-bcd5-733696a8586e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "49a3e777-dac6-4840-920b-55bed6fc79dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c8160ac-ec07-42a5-bcff-9f196d1ef011",
        "cursor": {
          "ref": "db199f4b-efe8-466a-9c3e-4d626568c939",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f6ab2854-8e60-4497-bdc2-0d3ee493764d"
        },
        "item": {
          "id": "5c8160ac-ec07-42a5-bcff-9f196d1ef011",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "01ae9d42-a0c3-49a4-8840-9c87ca7f3bb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35bd3882-9b90-4e28-9fbd-48e52a1f7b33",
        "cursor": {
          "ref": "b001fc29-5da9-4119-824b-1554228a0cf1",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "bf2fda23-1817-4d4c-acbc-d9bbbeadcc53"
        },
        "item": {
          "id": "35bd3882-9b90-4e28-9fbd-48e52a1f7b33",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "6228a7ac-80c2-40db-9fd0-17200ae8ad87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af6075f-2a28-4ab3-9142-d6806e0a7ab7",
        "cursor": {
          "ref": "98cabfcd-079a-4e29-b259-925865023220",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "7ff0bf92-ed36-483e-8428-4fac0edee5e8"
        },
        "item": {
          "id": "0af6075f-2a28-4ab3-9142-d6806e0a7ab7",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "61a50f31-7ae7-4a71-a66d-0543c6e1eee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e743203-c995-4d59-aa6f-570c8cd2ec2e",
        "cursor": {
          "ref": "d0ac4c2a-a6b9-4494-926d-c44784b6ca3c",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ab3419bc-ca07-4c5f-b224-267ea632d2e2"
        },
        "item": {
          "id": "2e743203-c995-4d59-aa6f-570c8cd2ec2e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "980a5c16-cb97-4c11-9dde-966ac2fa8456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f15876b-b964-4b62-b62c-c447c2091556",
        "cursor": {
          "ref": "0d74975e-54d9-4148-8753-a38febcda43e",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "094ddf28-53f1-4825-ae53-411792597b08"
        },
        "item": {
          "id": "2f15876b-b964-4b62-b62c-c447c2091556",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "6bf7eb86-5f22-4fd7-8bc3-103540fd0448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89639e0-9be6-4c45-8e05-3813191ad0ff",
        "cursor": {
          "ref": "0996fb9e-1ef9-480c-81a7-6ca41ce83535",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "103ac1f5-1a5b-4d8d-9e6d-f0a229ce9f79"
        },
        "item": {
          "id": "d89639e0-9be6-4c45-8e05-3813191ad0ff",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "96330f80-5ce1-4841-a534-89bd5265d16d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd6a423f-03a8-4b2e-85b0-c4a9f1905270",
        "cursor": {
          "ref": "8179510a-3197-4a32-8093-e2fd6bf8c0fd",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "cdd66037-03cc-4f32-af8c-ba9efca49a50"
        },
        "item": {
          "id": "cd6a423f-03a8-4b2e-85b0-c4a9f1905270",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "6086a61c-6683-48de-a90e-eff75b4d452b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b7c7416-16d1-474f-8a6f-1cad5ae1a206",
        "cursor": {
          "ref": "c211db04-068f-4eae-82ab-b750854e8dc5",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "cd930370-e534-4ff2-81a5-ddc8c37f3df3"
        },
        "item": {
          "id": "7b7c7416-16d1-474f-8a6f-1cad5ae1a206",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "52d435db-576e-42d4-acb1-b792cb765aab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb6df14f-9225-4f89-b94d-e8e80845c9a6",
        "cursor": {
          "ref": "4c4a5a79-3180-4aaa-b89d-613c1b2beb6d",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "489f7411-65e5-4e23-bc99-699b5e025f4f"
        },
        "item": {
          "id": "fb6df14f-9225-4f89-b94d-e8e80845c9a6",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d115f342-4c0a-44ad-b37c-e8d87b4873f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f2a93db-170f-485e-a8f2-5e5fe55e9ccf",
        "cursor": {
          "ref": "78348109-77f6-432f-a8b6-c724b54b3580",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e4413f23-bf4a-4843-b863-3ecc64f704ea"
        },
        "item": {
          "id": "3f2a93db-170f-485e-a8f2-5e5fe55e9ccf",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "6d828778-a2b5-4946-9f89-98b85951f81e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf6c0436-8dbe-4b44-8879-d54a01dac7c0",
        "cursor": {
          "ref": "79e3c052-e860-40bb-939b-5836ba4793c5",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d9d1da31-eb07-43f0-86d0-9fd7a7cff685"
        },
        "item": {
          "id": "bf6c0436-8dbe-4b44-8879-d54a01dac7c0",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ef6e618c-79a2-48d6-9c50-7127aab83f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2a8ef3a-7270-4939-b697-8ffdc227d950",
        "cursor": {
          "ref": "75d918fb-0b1d-494f-b67a-942b2996b893",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d34c41f5-3eae-4208-b865-2adc936ad4a0"
        },
        "item": {
          "id": "e2a8ef3a-7270-4939-b697-8ffdc227d950",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "3d7f0703-5fe2-4421-be4c-14028478b7a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c458df8c-b2c0-49ed-9694-88ff0c2b75fb",
        "cursor": {
          "ref": "39561725-62c4-4eea-983c-788bb99499c8",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "7212d00b-ec2c-41dd-ab1f-d9be4afe9b78"
        },
        "item": {
          "id": "c458df8c-b2c0-49ed-9694-88ff0c2b75fb",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e8c38942-36e3-4c51-8098-ca59c2033533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c9b882f-5c66-4d17-baf2-857b493a594e",
        "cursor": {
          "ref": "b0619d7b-c357-4dbe-b030-df2b4a06abfb",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "021f8250-5ac1-4532-a74a-06fd03446864"
        },
        "item": {
          "id": "7c9b882f-5c66-4d17-baf2-857b493a594e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "80bebe06-0557-41e7-a505-1471f65de5d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b739dc10-2d02-42dc-9d5f-e8efdaae9c38",
        "cursor": {
          "ref": "064e61b1-076c-4a93-b495-be1484c545ea",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "1f2c5eb9-2cd3-4f94-8168-d480f6f0787b"
        },
        "item": {
          "id": "b739dc10-2d02-42dc-9d5f-e8efdaae9c38",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "c2227766-222a-46d0-94b4-5a5b00689259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45e1515b-d341-422b-8edd-b6345d0d5204",
        "cursor": {
          "ref": "c772b46b-6b81-4e8a-9f67-13d90de6e9b5",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "8e294afc-8326-4a70-bd83-91076df3c0af"
        },
        "item": {
          "id": "45e1515b-d341-422b-8edd-b6345d0d5204",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "adbb32db-c9a7-45ac-851a-03b58a7ca20a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f650400-1a54-494e-93ae-75a07a6f3919",
        "cursor": {
          "ref": "e0ec6dfb-a7c6-4b26-9df0-df8967b88a1f",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "da81b97e-6ae3-44b6-9c21-a585a8776202"
        },
        "item": {
          "id": "1f650400-1a54-494e-93ae-75a07a6f3919",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "71dfd262-3655-489a-b315-14bd1062feea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eafb1bb3-5b8e-4d2a-b896-30dfdc25ceca",
        "cursor": {
          "ref": "ad6c1a1a-19c1-4681-bfbc-c4699ac0b6d5",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e408dc59-15a8-4fdc-a9f9-9d8ab391019c"
        },
        "item": {
          "id": "eafb1bb3-5b8e-4d2a-b896-30dfdc25ceca",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "298e4339-ab20-40b2-b21f-d7260b4de929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe3fd048-42af-4f06-ab71-a5dc5dbd0e27",
        "cursor": {
          "ref": "05fd2028-f7ef-4e8d-8f25-c199effb93ba",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b0fe19a5-80c1-4959-ab14-771d91cc039f"
        },
        "item": {
          "id": "fe3fd048-42af-4f06-ab71-a5dc5dbd0e27",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e88a3461-015d-487c-ab7c-14ec9bd06b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "667c89e6-e95e-4422-a9df-9f44e9c74304",
        "cursor": {
          "ref": "70c15ae9-8a44-4be4-98ac-396ff3b98f1a",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "16fe2d6d-d863-45c6-8d30-ac1cb016022d"
        },
        "item": {
          "id": "667c89e6-e95e-4422-a9df-9f44e9c74304",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "64f693f1-da73-4f9e-822f-eb2814a83f7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "049ce759-33db-49a3-b26b-8c5b7169dbc1",
        "cursor": {
          "ref": "f6e7d348-5bb4-4153-83e2-6a35c1ba5dd3",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "df6eac25-d3b2-4626-ba5f-d5ae976cf4fb"
        },
        "item": {
          "id": "049ce759-33db-49a3-b26b-8c5b7169dbc1",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e3139453-4cd2-4ccf-893f-b4492ef0fce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb06447-1ea0-4296-9a30-1313df6fe8ed",
        "cursor": {
          "ref": "3b8a7ad3-d0ad-4628-836d-fd148223aec1",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "16edadba-cce4-4256-aeaf-150289e23103"
        },
        "item": {
          "id": "edb06447-1ea0-4296-9a30-1313df6fe8ed",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "113f5f0c-7d14-416e-a15f-689e90f21219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6839d54c-bef3-4da6-a025-ad37b227a668",
        "cursor": {
          "ref": "8cee57f5-4894-45cc-b66d-31b42b0f39e0",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "31a51b78-a63f-4000-b320-6f46a0a57775"
        },
        "item": {
          "id": "6839d54c-bef3-4da6-a025-ad37b227a668",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f6d458e0-25ff-44ab-bf31-3377af7f7df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b734eee0-0d75-47d7-8688-78969d7b54f0",
        "cursor": {
          "ref": "e49976cc-34c7-40a1-ad22-b680f4680b68",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "eb75ed56-c6ea-48b1-bdfe-85da03c7163c"
        },
        "item": {
          "id": "b734eee0-0d75-47d7-8688-78969d7b54f0",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c85d7694-980d-4e5f-ba31-3724463e6a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ceb63f1-f329-4227-9762-5197cbe5a264",
        "cursor": {
          "ref": "cd4a7549-4ec3-4d2b-9ef9-974d4631014d",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "2167059f-9216-4821-8cc1-c3c17e92f12d"
        },
        "item": {
          "id": "0ceb63f1-f329-4227-9762-5197cbe5a264",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ee94721d-ba3c-4bb7-81da-e89e60006f0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a680239c-2dae-4eea-9ab9-a9c553a5e69b",
        "cursor": {
          "ref": "5a2a8639-0e0b-42f5-bc7b-673c23e85a0e",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "60f76358-ff66-4c56-8aa1-ca95ddd967d4"
        },
        "item": {
          "id": "a680239c-2dae-4eea-9ab9-a9c553a5e69b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "dacff119-b230-47bb-909e-179658235260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1db1618-4c5a-457f-a0e2-42b1ed805ca6",
        "cursor": {
          "ref": "af32939f-3380-4bf1-bd25-84d0bffefede",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "13de927d-733d-4589-ae56-235580fa31b4"
        },
        "item": {
          "id": "c1db1618-4c5a-457f-a0e2-42b1ed805ca6",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "0bdfd27f-74ed-47e4-ad41-595770995a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8eaff5-8f03-40aa-8e0e-16298a619158",
        "cursor": {
          "ref": "75ab9591-bd02-4e45-a4ae-72d5c7cb90d1",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "cb9fbb84-341b-4c7a-92eb-6815b78fe0ba"
        },
        "item": {
          "id": "8c8eaff5-8f03-40aa-8e0e-16298a619158",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "5e794a5e-3e35-4dea-9215-be97caaceedc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf3a19f5-f78d-42e4-8533-fb506a484f48",
        "cursor": {
          "ref": "b93d0d39-4280-42dd-b163-d856f66e1d9e",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3e08389a-59ec-4857-891f-3291359b7de8"
        },
        "item": {
          "id": "cf3a19f5-f78d-42e4-8533-fb506a484f48",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "66c9e21b-e588-41c8-934a-9c0bcf781ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d45a2f1-b86c-42f7-a8a7-c0df48157341",
        "cursor": {
          "ref": "62ea6f95-91cf-470b-bf6a-fc3033c98a05",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c7e2ec15-66c3-497e-991a-8731948879eb"
        },
        "item": {
          "id": "4d45a2f1-b86c-42f7-a8a7-c0df48157341",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "4680c7d5-8e8a-461a-8594-770def6868a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "578337da-6a8f-4cc6-b0e1-28f216a6f4a3",
        "cursor": {
          "ref": "38ab245e-0dfb-4e93-b7a1-f5b4b8c30de6",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ef544060-c1c7-485a-bcd3-f1dfcc1be2a7"
        },
        "item": {
          "id": "578337da-6a8f-4cc6-b0e1-28f216a6f4a3",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "edd0ddb1-fdb1-49d5-ba24-13ac833d160a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe1f6f53-4dd0-4aa4-9a24-e00adf490bda",
        "cursor": {
          "ref": "aa046c4d-e6ab-4dcc-8d32-c7779dcc2188",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "7cab8027-236a-451f-a4e4-acff8e28504e"
        },
        "item": {
          "id": "fe1f6f53-4dd0-4aa4-9a24-e00adf490bda",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e55df2b4-c8ed-460c-a4eb-92680e09f8f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41e240ff-ac41-40b4-afd5-328dea11ac2f",
        "cursor": {
          "ref": "649f65f9-db0b-4066-a0be-3b67749c5c8b",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "47ea4e6b-c6fb-4a11-a437-4c0970c78558"
        },
        "item": {
          "id": "41e240ff-ac41-40b4-afd5-328dea11ac2f",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c6476e90-0c51-4c98-bcd0-858824ce80dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae8b3da-789a-4228-b28d-e0f7ddc6ed5f",
        "cursor": {
          "ref": "3db69301-7f15-42d0-aaca-833d02a9a06c",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "941882b0-3025-49d9-8e1b-8a95842cedfd"
        },
        "item": {
          "id": "2ae8b3da-789a-4228-b28d-e0f7ddc6ed5f",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c04712ce-8e91-4832-89f4-c7550b01667e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60fd2033-ef86-4cb5-8ece-e06518911786",
        "cursor": {
          "ref": "9e178ff1-3d53-4d33-8289-49e2b7612a50",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "56727001-7e17-4f57-a3e5-2d07e2723471"
        },
        "item": {
          "id": "60fd2033-ef86-4cb5-8ece-e06518911786",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "7669d312-c220-4a75-8522-9a6a1006df12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ecbf3b-e08b-47d9-a541-efc3d9a3a2b9",
        "cursor": {
          "ref": "76e346c4-c99b-4b7a-b6cf-8bb0c6d2bbee",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "31d24876-c3c8-45a6-99c4-91ec75094c17"
        },
        "item": {
          "id": "98ecbf3b-e08b-47d9-a541-efc3d9a3a2b9",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f09fb80c-36d7-4283-b0ca-3c190297efed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d894d0-ce4c-46d9-a983-14eddc87f779",
        "cursor": {
          "ref": "f8fb9737-305c-423a-acd6-aa8d5fce49d5",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1b21a9ec-f60b-4879-a093-796ce391de82"
        },
        "item": {
          "id": "19d894d0-ce4c-46d9-a983-14eddc87f779",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ae09e121-d43b-4836-876c-90381522dfcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "336da6b2-c94b-4efa-9690-025c20d7c119",
        "cursor": {
          "ref": "c6fee030-3389-4d68-ad87-0982a84bc37e",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "11a3e72c-0e1f-4fc2-910d-01b4b0b2923d"
        },
        "item": {
          "id": "336da6b2-c94b-4efa-9690-025c20d7c119",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "01fb366b-3855-4ddf-ae5c-0f05ee98e081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4d0143c-b502-41ce-b049-2ce2c3cb8937",
        "cursor": {
          "ref": "b39a0c21-ec0a-4627-8ee5-5c26c2ed2204",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "59ee569d-56d7-48d7-ba69-bbfca8a95fc8"
        },
        "item": {
          "id": "e4d0143c-b502-41ce-b049-2ce2c3cb8937",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "7b5e7ab7-f804-4b4e-bca4-aedb2933130f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8818c41c-9a59-4ae1-ac70-40384aa5603f",
        "cursor": {
          "ref": "2253b469-7cf5-4ce5-99af-73092d97e78c",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "4aa634fd-0db8-419d-8334-e70c02dd5191"
        },
        "item": {
          "id": "8818c41c-9a59-4ae1-ac70-40384aa5603f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "8017d599-cfe3-4f51-b7dd-2ee01408b9ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b824a6-4eb3-4abe-a15f-ff199f610bb3",
        "cursor": {
          "ref": "6d45e7f0-9444-43f5-96d5-f3a84bbf0997",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8a97b6f9-086c-44a5-9073-e8a295897fa1"
        },
        "item": {
          "id": "64b824a6-4eb3-4abe-a15f-ff199f610bb3",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "787c0497-fa3f-4587-96fe-295b990cc29a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c79caf67-ac3c-4143-b56f-b5ccfe5e7bc7",
        "cursor": {
          "ref": "ba6ccf8f-fa4e-428e-9beb-e735838e4770",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d301fb2e-e0e9-437f-a6b2-0af3ee5cbbff"
        },
        "item": {
          "id": "c79caf67-ac3c-4143-b56f-b5ccfe5e7bc7",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "2b8e76e8-3560-4afc-9ef4-e8f51ca6a9b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d920068d-2e09-42fd-9d1a-6d8051a94e6b",
        "cursor": {
          "ref": "a9621ced-0641-45c6-981d-faa912ea3cc0",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "cabfcf04-1a1a-46c7-a0f2-58d0f09894d0"
        },
        "item": {
          "id": "d920068d-2e09-42fd-9d1a-6d8051a94e6b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "74b4560d-eadd-4d16-a414-f0a19c7e27cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b89b37-e2dc-4a6d-8c74-163dbf5dcf6a",
        "cursor": {
          "ref": "4cd0c5b4-e3f0-4a4a-9a2a-34d168bca7b4",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "494fca4b-1db3-4411-b897-6054c0b1d9be"
        },
        "item": {
          "id": "f0b89b37-e2dc-4a6d-8c74-163dbf5dcf6a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "7f2b81cf-218b-457d-bb92-0bb2437c9506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f6aeb8-a202-4f2e-ad55-bdb0228b64e7",
        "cursor": {
          "ref": "c7db32a2-7c63-4e40-91d3-9f1ce24f870f",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "8bab2531-4b01-41df-ab7b-fcc211e3c983"
        },
        "item": {
          "id": "79f6aeb8-a202-4f2e-ad55-bdb0228b64e7",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "2aa3695f-21ce-46ca-8cfe-c590e8ac1675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc9d097-2577-4bec-9f4d-a827d9e2fe8c",
        "cursor": {
          "ref": "6d847cfa-01b4-4dfa-bb39-912a3b888f2a",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "aba060b4-c313-4baa-97e4-7546727c0124"
        },
        "item": {
          "id": "5fc9d097-2577-4bec-9f4d-a827d9e2fe8c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ed2beea9-ed66-4f86-aa45-bd0d8ca66fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e401374-62ba-4724-b615-eb3feab40b99",
        "cursor": {
          "ref": "a3df9904-21ce-4d75-861d-9177a27559c2",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "e2c2244e-1e6f-420f-bae5-bcbeb98de060"
        },
        "item": {
          "id": "6e401374-62ba-4724-b615-eb3feab40b99",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "e1bb6a00-0257-4e5f-8ed6-b81b07ab7585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2b79b8a-f1ce-498b-bd64-675dcf6d5bec",
        "cursor": {
          "ref": "a66331a3-48f2-453f-8f33-35f1411cb96a",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "d0fc3b9a-245f-4be0-bb63-ee8686175070"
        },
        "item": {
          "id": "d2b79b8a-f1ce-498b-bd64-675dcf6d5bec",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b8ceb557-3dae-4785-8a42-b7d620347446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c9e896-f2e3-4e94-8f6e-65353f623b6f",
        "cursor": {
          "ref": "f52f90c2-21d3-4f18-9c53-d0817f437f62",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "6f052afa-4282-4d90-9147-56b4be573bb8"
        },
        "item": {
          "id": "25c9e896-f2e3-4e94-8f6e-65353f623b6f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f3c42748-b051-476f-9d24-45c17d28847c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "252442a6-9f58-491e-94bc-d04efce8b6b7",
        "cursor": {
          "ref": "655d7288-0dd9-49e1-9a3d-769c65dce421",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a39b712e-93c6-4018-a1ae-e016d9ce5962"
        },
        "item": {
          "id": "252442a6-9f58-491e-94bc-d04efce8b6b7",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8113a121-194a-4481-898c-f0f66e82224e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08750400-9c5a-4201-be9e-a79780e2228d",
        "cursor": {
          "ref": "97921002-f93e-4dac-82c6-4bb8c29a40f3",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "924ab30d-c2aa-4d2f-9326-b85cde4c5dc8"
        },
        "item": {
          "id": "08750400-9c5a-4201-be9e-a79780e2228d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c01821cf-fdb4-46e4-8413-18dde3579623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f5f779-3dc5-4102-8a71-571649181ced",
        "cursor": {
          "ref": "9ef45e01-bb1d-4447-95c3-f996fa91778c",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "90adcd86-678e-44b0-ad1a-428a92949c2d"
        },
        "item": {
          "id": "d9f5f779-3dc5-4102-8a71-571649181ced",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "19f2e08c-8149-4ab0-9701-d88edfbf24d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "954b14ba-d46c-4883-9701-2681c2c764d9",
        "cursor": {
          "ref": "fa68aefe-d773-4eb1-8efe-51b977be42ca",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f960fa5f-a4c5-4110-b1d1-035dbcd6dcfd"
        },
        "item": {
          "id": "954b14ba-d46c-4883-9701-2681c2c764d9",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "dae7806b-63c1-4b72-a785-26d2da7b2f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6464445f-2f1c-4ca6-8288-aace15485f74",
        "cursor": {
          "ref": "845db9a3-9e5e-4647-9291-90decdbbf52c",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "044b19a1-201d-427d-9b42-8a9d655b44ac"
        },
        "item": {
          "id": "6464445f-2f1c-4ca6-8288-aace15485f74",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "f05d8a35-653a-44de-8b14-b9e3d7c1b7e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c96ee223-7bc6-4a7d-b2f8-6ea4a4e140e8",
        "cursor": {
          "ref": "f8ee658a-1d9a-4a5f-b43f-142d8ff11c0f",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e41fb614-c170-4b6d-a9c8-a438bf373d1b"
        },
        "item": {
          "id": "c96ee223-7bc6-4a7d-b2f8-6ea4a4e140e8",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "6e722481-cfe5-49a5-9908-cec8c731fa83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede283f2-3c82-4f6c-9685-6aebd673ff8d",
        "cursor": {
          "ref": "04e4af6b-3cf3-41ac-9b81-c6de55de6476",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "50ec483c-c24f-456c-83cd-43d5cb785ff2"
        },
        "item": {
          "id": "ede283f2-3c82-4f6c-9685-6aebd673ff8d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b650ce40-8fb4-449c-bc4c-43e6322e9168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34becaaf-e88f-4400-834f-1c86afdddfc3",
        "cursor": {
          "ref": "a6a4d0ce-87ba-4968-8540-dd6cb8cfe277",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d740ecb3-09e0-443e-8430-8208952ae3ca"
        },
        "item": {
          "id": "34becaaf-e88f-4400-834f-1c86afdddfc3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "abfcd58d-6331-4cfe-ad21-294f5b22cad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c06cba3b-8d34-45f6-b841-e9c2c79823f5",
        "cursor": {
          "ref": "f455cfd9-8e40-47e1-9695-c753c30f0487",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "aa0908aa-f5e0-4aed-9b9b-22f988b316cf"
        },
        "item": {
          "id": "c06cba3b-8d34-45f6-b841-e9c2c79823f5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "af6ab105-b383-4c8c-98f7-8edc87a53e24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa0f432-8fe0-48ae-9b5c-e01df834c4bd",
        "cursor": {
          "ref": "4283397c-7bb6-465c-8f96-adefe4cba9b9",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4f94850f-613b-4680-b619-2c304fff0436"
        },
        "item": {
          "id": "faa0f432-8fe0-48ae-9b5c-e01df834c4bd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "02b9a36d-aa18-420c-a6d2-172a799ec46c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a6a6d9f-f6bd-479e-ad09-e4ed5252b228",
        "cursor": {
          "ref": "e26ad3ce-352a-4c34-b6b3-f6527690f8c3",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "26ec78c0-96d4-4b7c-9600-4f43d67bb9e0"
        },
        "item": {
          "id": "2a6a6d9f-f6bd-479e-ad09-e4ed5252b228",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "968e00fc-9a41-4750-89e5-5181fb1d3635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5b1d6f-6d08-403e-bb5c-e92099c76b1c",
        "cursor": {
          "ref": "fe495d84-7522-4a7f-85ac-8c4e3488608a",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "aeea2934-b825-497f-a24b-3da52aed9900"
        },
        "item": {
          "id": "9e5b1d6f-6d08-403e-bb5c-e92099c76b1c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "75f7f6ec-ef6b-4598-af0f-bc8dbbade4f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f771c440-8e36-48bc-a610-81189fd1d81d",
        "cursor": {
          "ref": "a459c01c-b2c1-4d9d-af2b-d422478f092a",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "4465d13d-a7b2-41f2-a301-b9cd5476513c"
        },
        "item": {
          "id": "f771c440-8e36-48bc-a610-81189fd1d81d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "7e63ce0b-0181-4856-a1a1-db1ec90c9297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb9e2d65-a765-4bee-8334-123fbd460b3e",
        "cursor": {
          "ref": "42f6fb05-8f55-49c6-a761-217345a8bcf9",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "03b28942-d447-4719-bc8b-b8cee37d787a"
        },
        "item": {
          "id": "eb9e2d65-a765-4bee-8334-123fbd460b3e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "4effc87e-229e-420a-8c2b-f64cbe2a6961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2fdef52-db44-479b-973e-7642d02c4f02",
        "cursor": {
          "ref": "df3ef955-dadc-4d27-8387-8dc893585e2e",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e22be396-07bd-46de-8da5-6a0c6c5e6f6b"
        },
        "item": {
          "id": "c2fdef52-db44-479b-973e-7642d02c4f02",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "892c971d-7918-4f54-b8b4-f8f0c29701fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d47cd741-3ebb-4d4c-9b5f-85ede2f2a43f",
        "cursor": {
          "ref": "9ade7106-b35d-4837-af8c-615853d6b5df",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "531b76e6-df4d-4a95-8b22-dec3871475f3"
        },
        "item": {
          "id": "d47cd741-3ebb-4d4c-9b5f-85ede2f2a43f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e918b64d-94e2-42a6-a439-3e6fd7475468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b244232-7517-46fb-9280-e39db56f6436",
        "cursor": {
          "ref": "443cb136-508e-4171-8890-3f5a0356842a",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "fe388fc7-554d-487e-8951-3a0862e675ca"
        },
        "item": {
          "id": "7b244232-7517-46fb-9280-e39db56f6436",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "999dbde5-0784-4e77-b36e-3c4ef0ae9d84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb32ef32-2d1f-462b-bc8a-ab7976c3be07",
        "cursor": {
          "ref": "eeff6f3c-ce3c-4bfd-92ad-45158bf03dbb",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e79878fd-a513-4595-81d4-d37b3b93c1d6"
        },
        "item": {
          "id": "cb32ef32-2d1f-462b-bc8a-ab7976c3be07",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "9201c640-bf90-491c-94b4-3623e37748a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6daa1edd-26ff-461c-893e-469d4f715ea7",
        "cursor": {
          "ref": "87b64f0f-c57d-45ba-8dd0-a18b31ff68b4",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d9bc5c45-8559-44c5-be14-61dc82e585f0"
        },
        "item": {
          "id": "6daa1edd-26ff-461c-893e-469d4f715ea7",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "7a438b6f-b2aa-45b5-940a-c30d0f16714b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c4c5085-048d-4ba9-bbf2-5bb4acb537b9",
        "cursor": {
          "ref": "aa87fcf8-d35c-43f8-9820-59a059aed367",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "dea6a59f-5c27-4848-bf49-517177de8611"
        },
        "item": {
          "id": "5c4c5085-048d-4ba9-bbf2-5bb4acb537b9",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d52fd50e-ea30-4378-8aa7-00684d45cbef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d579f01e-73cf-46f8-81e0-d95af92adcb2",
        "cursor": {
          "ref": "954a8b7b-883a-47eb-b39a-c3c35031e29e",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "0f464486-1475-4525-a56a-2d8ed6ffbd95"
        },
        "item": {
          "id": "d579f01e-73cf-46f8-81e0-d95af92adcb2",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "bac0a798-c902-4ef6-8e93-27445a4cda80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "014ae694-876f-4b30-926e-39dff2964f51",
        "cursor": {
          "ref": "37790ca5-dfca-49c8-b72a-8ef6810f527e",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "245dc95d-5c5b-4d4a-a141-72747c7bb605"
        },
        "item": {
          "id": "014ae694-876f-4b30-926e-39dff2964f51",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c95cb479-c557-4c29-9545-50ae1b8caa5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1afafa67-7d4f-4c75-9027-f31aa71e807b",
        "cursor": {
          "ref": "aa83a689-a5b2-42e7-be42-08e6e2f5704b",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b5ff3122-88c1-4fa8-8c1b-771110c3802b"
        },
        "item": {
          "id": "1afafa67-7d4f-4c75-9027-f31aa71e807b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a702ba07-6b93-457c-85f6-0e4b74038815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56549ac6-5f37-4ade-bc79-20ceac3be6ef",
        "cursor": {
          "ref": "95cc0311-aaa0-4d7b-91fa-a6e4de73622b",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "717dfa4a-f0c0-4cbf-bdaf-add59546d567"
        },
        "item": {
          "id": "56549ac6-5f37-4ade-bc79-20ceac3be6ef",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "cd2f975c-61dc-42d5-88cc-eb38d649047b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb86cdc-e7b7-4da1-ad0e-2c99ca091765",
        "cursor": {
          "ref": "d43aca0f-c06e-4512-9257-ed77bf10e85a",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "593ba92c-13bd-45fd-94d8-d202580c656e"
        },
        "item": {
          "id": "5bb86cdc-e7b7-4da1-ad0e-2c99ca091765",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b064b623-fd74-41cd-ad4b-9d8efd911d48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ca3142-c292-45bf-a3a3-ecd522fc32ce",
        "cursor": {
          "ref": "17959a39-2164-4676-aa76-582630d0002f",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "23b87911-8a5f-45c5-b3f2-615f027cb614"
        },
        "item": {
          "id": "b8ca3142-c292-45bf-a3a3-ecd522fc32ce",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "4bc3410d-62fc-4dd1-93bc-f6e4ea658046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d172b6-f2a6-4dfb-a855-fd7eb662330e",
        "cursor": {
          "ref": "d4dca02f-58ff-433d-8ef2-c13bc1bc2671",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4c312ea5-2b26-466a-98cd-c6426b7a3b18"
        },
        "item": {
          "id": "b3d172b6-f2a6-4dfb-a855-fd7eb662330e",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "5563bb7d-e535-4766-a09a-15b0f2f54bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d0eef4-5e20-4ed9-9784-46dffedd5b5e",
        "cursor": {
          "ref": "9000749d-e7b3-408a-801c-68570a5d6a69",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "cb4cdd25-4a5e-453a-afe5-9af10cf0663a"
        },
        "item": {
          "id": "36d0eef4-5e20-4ed9-9784-46dffedd5b5e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "815991ed-8480-4da6-ae19-e13be051bbab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a8aaf0-9cc0-4cf7-9f26-54f68ab99b9f",
        "cursor": {
          "ref": "1281ad3c-6ea9-410d-b6b4-d195ea77d54d",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "6f5609b0-039b-4ecc-9e47-1ea9391e48ba"
        },
        "item": {
          "id": "a6a8aaf0-9cc0-4cf7-9f26-54f68ab99b9f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "7b045b88-4ae1-4c35-ba52-4506ba4638d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cafa98d-9b79-47e5-8867-7b520ceac343",
        "cursor": {
          "ref": "41eae48c-afc0-4419-85f0-f632935d379d",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "aa59f7ae-8e8c-484c-9551-af618f95e0a9"
        },
        "item": {
          "id": "1cafa98d-9b79-47e5-8867-7b520ceac343",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "669fd76d-8643-4a97-b002-359f063da7a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abcc590a-822c-496f-b36f-b0e50f163508",
        "cursor": {
          "ref": "2b001dd5-49a6-4109-a604-fc4b8818f3cd",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "4decf816-6951-4e18-b324-77448a8ed89f"
        },
        "item": {
          "id": "abcc590a-822c-496f-b36f-b0e50f163508",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f86652a9-c719-4ff5-aa27-a70d3f7142c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "723a3045-078d-4d91-9022-202ec65feb37",
        "cursor": {
          "ref": "16a4f073-556d-4536-992e-470c78e661a4",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "aa32c307-034a-4b1c-9188-885ecbf7f64a"
        },
        "item": {
          "id": "723a3045-078d-4d91-9022-202ec65feb37",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b4b174ad-40e0-42ac-a086-d16356fd9fa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7580b245-f134-441f-a9bb-cec861556061",
        "cursor": {
          "ref": "ae08ccf2-b96b-4c28-864a-82ceda34d4d3",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "996bc5c2-5981-46c7-a852-a024cf4a56f6"
        },
        "item": {
          "id": "7580b245-f134-441f-a9bb-cec861556061",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "bf35c7f3-49f0-43ca-afcd-e4e9b469d742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b87608-68d7-4c5f-abd6-448fe65ba0d6",
        "cursor": {
          "ref": "678c6084-8e76-4238-881c-7020e3935682",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e7b796a5-4544-4357-bdac-fbdf4aa68121"
        },
        "item": {
          "id": "f3b87608-68d7-4c5f-abd6-448fe65ba0d6",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "415d92c7-2805-4d8f-9e93-7a1fb31b8089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c743a652-76dc-4f1d-9d88-b1a6b1240555",
        "cursor": {
          "ref": "ba24aad5-20f3-443f-a5e2-d88284e15c92",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "fe8af60b-62de-4515-afe7-84988456ac40"
        },
        "item": {
          "id": "c743a652-76dc-4f1d-9d88-b1a6b1240555",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "52f78a7c-a2de-484b-849b-492a1da3884b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81fd7738-b235-4f10-8f4e-b54fc3abf792",
        "cursor": {
          "ref": "9deb936a-8263-4936-8ce9-83bf43e3cb94",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2381655f-2e64-497c-b529-e3285b80e929"
        },
        "item": {
          "id": "81fd7738-b235-4f10-8f4e-b54fc3abf792",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "178caca5-34d9-4fc6-9f02-ff5ed0a4916f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b68de68-4970-4530-958a-5ee29b19cd13",
        "cursor": {
          "ref": "7d0003f5-fb82-41e5-b4cd-1110660f0a78",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "4192fc55-07b2-4339-9cdb-803102d3cfd9"
        },
        "item": {
          "id": "1b68de68-4970-4530-958a-5ee29b19cd13",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1729eb5e-f1ec-4600-a9f1-444f45e98b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "142f5997-fb07-45cc-9379-570f0342050f",
        "cursor": {
          "ref": "b6ebb8a5-1a83-4ea8-a855-21966002ec28",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "6eb9b6e0-1309-4e46-a17a-6f02fa8fd35e"
        },
        "item": {
          "id": "142f5997-fb07-45cc-9379-570f0342050f",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "0dad1a59-c5a2-40a6-a230-4e8f55b06774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20259d2a-c261-46c0-ba2b-f2900371b3f1",
        "cursor": {
          "ref": "df01f1ed-c8dc-400a-87f4-c7d6f0cfe95a",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "8e79ba14-cd5e-4cc8-bb05-a79d3b4247ac"
        },
        "item": {
          "id": "20259d2a-c261-46c0-ba2b-f2900371b3f1",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6de2409f-03a7-4f4d-b88a-914fba17994f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95cc7270-5d6a-4ff5-94e3-ecd534da1a00",
        "cursor": {
          "ref": "56f60f88-0613-4828-a7c0-1c8edf696082",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f6b7ad05-dd55-49fa-9436-6944e6109541"
        },
        "item": {
          "id": "95cc7270-5d6a-4ff5-94e3-ecd534da1a00",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "bb1c6648-b89a-4236-9c94-f3e0aefc4eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b8023d3-f9db-4e02-9832-833078331446",
        "cursor": {
          "ref": "241b3855-4062-4700-86f5-0f511b19e1df",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f48f05fe-cf55-4216-9f92-52fe0cbade62"
        },
        "item": {
          "id": "9b8023d3-f9db-4e02-9832-833078331446",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "ac225f75-fb38-446f-9a58-28ee8ec3e785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bbafde6-46e2-46c2-8577-9d826002275c",
        "cursor": {
          "ref": "6357be8f-1246-498a-b4f2-c16cf02140f4",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "e0ba1122-43ca-4fcd-ab5a-cc3e4de5e94d"
        },
        "item": {
          "id": "2bbafde6-46e2-46c2-8577-9d826002275c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0a2e2105-e317-411b-afcc-b25f5bd64d10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "064ce3fd-3a26-454a-b027-76035022a4fc",
        "cursor": {
          "ref": "4b43e4fc-3cb7-4adf-a914-b817618965cb",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ccae5291-d19e-4b74-8d7a-da1d32923882"
        },
        "item": {
          "id": "064ce3fd-3a26-454a-b027-76035022a4fc",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "21ea3ce7-6b0c-4bda-a0fc-8da8a5dd0d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "1a9cbd4f-ff30-43fb-8996-64a53d29605d",
        "cursor": {
          "ref": "b903a22f-3cc8-4e06-8d63-46e7e8c6c9ef",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "da3efeca-2f7b-40a9-a856-4c82f52ac772"
        },
        "item": {
          "id": "1a9cbd4f-ff30-43fb-8996-64a53d29605d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "2d0935f8-f206-4f53-84f3-aa90a8f8a058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "6cf02f96-2eaa-400b-b941-0427a6fea638",
        "cursor": {
          "ref": "2be93771-cbe1-435e-8c13-eca50f94cd95",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "509f2f45-4fc3-4d10-90c1-6056a3a21f52"
        },
        "item": {
          "id": "6cf02f96-2eaa-400b-b941-0427a6fea638",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e2abd333-a682-4934-8d55-cd62450441bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "f1b04a27-542d-43e8-ada1-47e6e507016a",
        "cursor": {
          "ref": "06aacb48-38c1-4a11-bdf7-3331cc0f6d4f",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "167ec026-2796-4864-aaf0-c2d1b2a8c706"
        },
        "item": {
          "id": "f1b04a27-542d-43e8-ada1-47e6e507016a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "674847f5-f406-4330-88e9-d51e9e66dc97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "5e345e26-8921-47e7-a4a5-cd11db3e8c66",
        "cursor": {
          "ref": "c3d99a0f-7260-4c5b-aadc-035ddc0656c8",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "f8667bdd-2303-4b2c-b897-36b6b4043255"
        },
        "item": {
          "id": "5e345e26-8921-47e7-a4a5-cd11db3e8c66",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "5c60f6cd-1fa9-4b07-931e-f81c7f79ac52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "4179e1c6-5ed0-4f1e-a456-66555ff58e56",
        "cursor": {
          "ref": "9e6cf0a3-94a3-4297-a647-a558b9282e0e",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "4264539f-9e6c-438a-a8f7-fba5efa89a74"
        },
        "item": {
          "id": "4179e1c6-5ed0-4f1e-a456-66555ff58e56",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "69f9a48f-df3d-42dc-bb6f-7790deb33d80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "9974b1c5-1ee4-425a-8bf8-fcc3e7b8fa6a",
        "cursor": {
          "ref": "888c9262-d4f2-4625-b649-fc16d00a96c9",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "64b521ce-9b0e-40f8-8da6-fd645c1eac0e"
        },
        "item": {
          "id": "9974b1c5-1ee4-425a-8bf8-fcc3e7b8fa6a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "bd1ae284-a02d-4a51-846c-7ff55ab765ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "74c422c6-66a9-4839-b87f-493a101ea4f0",
        "cursor": {
          "ref": "0191ff37-8dfc-45f6-9188-8a7035ad85ef",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "63a154dc-a2e6-4a49-accd-16f1c8c43cf1"
        },
        "item": {
          "id": "74c422c6-66a9-4839-b87f-493a101ea4f0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "382dfc55-1309-4bf3-a6b8-d61a296b58dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c51ae9-5785-4bd8-8d78-19a939c5f63c",
        "cursor": {
          "ref": "f9038355-93d1-46b3-94fc-3bc0d151b26a",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "47c43ca7-f7f9-4dda-bb30-379349017128"
        },
        "item": {
          "id": "46c51ae9-5785-4bd8-8d78-19a939c5f63c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "915a6458-2b18-4b0f-b98f-f50b8442bf61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6971254f-e121-4736-bd0a-7857e53f2737",
        "cursor": {
          "ref": "9711904c-b67f-4d25-9faf-58e38da7e464",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "756fa27a-819a-493c-8700-55edac662864"
        },
        "item": {
          "id": "6971254f-e121-4736-bd0a-7857e53f2737",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3d61868f-078d-45c4-acda-35e21de14d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2001e7ee-76cb-4412-b05b-c46115254ada",
        "cursor": {
          "ref": "a4b2a250-a9e1-4388-84c1-08bd541ff696",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "c3ef8b63-be42-4ea5-9ea8-3d3bfb8b84ce"
        },
        "item": {
          "id": "2001e7ee-76cb-4412-b05b-c46115254ada",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f896cd6e-528e-454a-ac57-e4460566c478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "620394f4-2e50-4da0-8c8f-3e09d7159197",
        "cursor": {
          "ref": "c3420def-37cc-4272-a9db-16920bc1ac26",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "5aa2e9f4-801d-44e0-a52c-ae24715b7aec"
        },
        "item": {
          "id": "620394f4-2e50-4da0-8c8f-3e09d7159197",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f034a365-7747-4b94-9c6f-3ad08a6d2abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2db1be-05dc-43a0-aa27-4d9793993919",
        "cursor": {
          "ref": "56950542-2d86-496e-ae5e-a043d282af17",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "76a565f6-19e7-468a-b0a8-3ed0d45b922d"
        },
        "item": {
          "id": "8a2db1be-05dc-43a0-aa27-4d9793993919",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7afd8a99-0339-41e8-9c00-19fa024a148d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b50b99b3-e381-49bd-8014-1dcbb0d50bf4",
        "cursor": {
          "ref": "858b1adb-cf90-4399-917a-74ee4e83dcad",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "83808653-7eb6-4924-ab19-97ab023bb2b1"
        },
        "item": {
          "id": "b50b99b3-e381-49bd-8014-1dcbb0d50bf4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4f08f01c-b8e7-4fd5-9c32-90d58728f07e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a77970-234c-43d9-8ee5-fac20143018b",
        "cursor": {
          "ref": "59ecc5df-907e-4bb5-aeb2-439150c2f82a",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "0898bf52-aa5b-4c7d-ba71-67be7f880de9"
        },
        "item": {
          "id": "41a77970-234c-43d9-8ee5-fac20143018b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "657a9241-8527-44b3-8bee-63d4bb0aa369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0fc7038-3286-460b-b7f0-af92686e91ee",
        "cursor": {
          "ref": "ed90d50c-96f2-4684-950f-f1f62f9c70be",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "bf013ef4-72ca-46b7-8fad-efd81b394ec8"
        },
        "item": {
          "id": "e0fc7038-3286-460b-b7f0-af92686e91ee",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c705738a-9ec1-4600-8847-f6b013610fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e4ec3ff-f6bb-4d38-93ea-b82be0faa78a",
        "cursor": {
          "ref": "878cb8c9-edde-4b98-90f9-ea5a86035329",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "6affc6e3-8563-4e26-8837-cd1e44c0c773"
        },
        "item": {
          "id": "8e4ec3ff-f6bb-4d38-93ea-b82be0faa78a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5477d8c3-c693-4769-ad06-6b0fac07de12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc081b9d-b7d3-4104-8372-16bf11d63312",
        "cursor": {
          "ref": "cf883f9a-8965-4344-860b-7ba065ad3d54",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "9e23b6ec-5a42-435c-bde8-4bcf9158ead8"
        },
        "item": {
          "id": "cc081b9d-b7d3-4104-8372-16bf11d63312",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "cc4b01c9-d883-4ab7-8bf2-eeea512fbecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "909119d4-5e4b-4f07-b986-b42e89127ba1",
        "cursor": {
          "ref": "f6ab8e8e-2d84-4299-83c6-c7870acd088e",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "6d1a2ee5-d526-4f48-9fe6-fddb1ad34262"
        },
        "item": {
          "id": "909119d4-5e4b-4f07-b986-b42e89127ba1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ec618de3-fc7e-4c59-a772-63410756f648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e41facf-3ce6-4200-86cc-6cedf3e98624",
        "cursor": {
          "ref": "16633f51-c844-4347-810f-2fa78a57fe42",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "5ac7aa9c-3f83-4dc2-a5a5-809e4bdbbea6"
        },
        "item": {
          "id": "2e41facf-3ce6-4200-86cc-6cedf3e98624",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "27ce62e3-c403-4b1f-baee-4d1e2435e4fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc2c740-0fae-4d0a-89fa-f4b3617e6769",
        "cursor": {
          "ref": "49766bf2-56c6-40a5-b99b-9b45015240b5",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c97615f2-38c3-4fa6-a6fa-66e34c8867c4"
        },
        "item": {
          "id": "8fc2c740-0fae-4d0a-89fa-f4b3617e6769",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d657549c-2391-47c6-bc9f-3029a9bfe041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91f4ab5-f1bc-42a6-baa3-07f4a55b0215",
        "cursor": {
          "ref": "20d4af92-c05a-405c-87e6-1ad7a782bf41",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "688238d5-cdcf-4ad9-9182-f1d4e4f7e5ba"
        },
        "item": {
          "id": "a91f4ab5-f1bc-42a6-baa3-07f4a55b0215",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "65b30e6b-2d79-4c92-acd4-7ef4da9177dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fadda0b-cdf5-4699-95d6-ba433d9b8971",
        "cursor": {
          "ref": "d3b42f7f-7fa5-44ea-8537-2f95fe18dc83",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "07603368-a041-4dc3-aa51-db8b20251fea"
        },
        "item": {
          "id": "0fadda0b-cdf5-4699-95d6-ba433d9b8971",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "cb956c11-ba59-4a62-be7f-5d0f4136478c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d86e571-2048-492d-b7ab-d901a403e32d",
        "cursor": {
          "ref": "e757fc72-a8c8-4b42-b6b5-237db6660bb2",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "f1a0c1f1-de44-4b7b-a402-a24bb8c42319"
        },
        "item": {
          "id": "1d86e571-2048-492d-b7ab-d901a403e32d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0d27048a-85fc-4a1e-8e59-9060ce58bcd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36ed300a-679f-462e-8ea1-0cc4062db975",
        "cursor": {
          "ref": "be67aff9-7882-47f1-92a1-5105f5c36fbf",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "32af7fc9-f522-42fe-8724-089c80059dbe"
        },
        "item": {
          "id": "36ed300a-679f-462e-8ea1-0cc4062db975",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3e06af7a-ad6c-4c67-852b-43097d218d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b8e69e0-e9f7-414e-b901-1922d85c6c1c",
        "cursor": {
          "ref": "9472fb66-2ab7-47ed-83ed-a98cfbc9ab4d",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "91548a72-556d-46eb-8bd7-6277e3db9fe0"
        },
        "item": {
          "id": "7b8e69e0-e9f7-414e-b901-1922d85c6c1c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "634a8155-16d0-47e0-ae68-2757164b1bf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c26439-c4a6-4538-bb1d-51c695c33f47",
        "cursor": {
          "ref": "2756973c-a998-4832-b443-2b5837e95bcc",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ab53b1be-13f5-4ab3-b03a-3b4460301f08"
        },
        "item": {
          "id": "c7c26439-c4a6-4538-bb1d-51c695c33f47",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ec61e9a5-44eb-4f4c-b999-9cba15b0d452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2abc3895-2ee9-4b2a-8d70-215db13084eb",
        "cursor": {
          "ref": "1e9080d2-a601-4605-a0a3-340f8fb348c7",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "0790af33-0c60-4d05-b651-9d5f56bd217e"
        },
        "item": {
          "id": "2abc3895-2ee9-4b2a-8d70-215db13084eb",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "cbadda02-ae7f-474b-b98d-ee0f2e6dbe94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a12264-21b3-4338-9c06-3619cbc1aafa",
        "cursor": {
          "ref": "d0c5bf8f-9533-497c-b154-170313e92f2e",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "72a3d234-07db-47a0-ad60-c50de093b811"
        },
        "item": {
          "id": "91a12264-21b3-4338-9c06-3619cbc1aafa",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2dd079ac-d3e6-42d2-b316-a23fd92c690b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d47346ea-4f92-49b4-8fa4-e7266aa88d64",
        "cursor": {
          "ref": "adcd46c2-1d09-47df-ba01-16bf93c2e123",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "47b6043f-3a1a-4a2f-833b-820dfca06c06"
        },
        "item": {
          "id": "d47346ea-4f92-49b4-8fa4-e7266aa88d64",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "39edbd5a-2d38-479e-acf0-e410593b3c35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0304caeb-9d50-448c-94bb-85e92891a877",
        "cursor": {
          "ref": "124dbb22-aa06-4a37-89fd-5cd4fbe175fb",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "8a2cee0e-f4d0-4909-aa17-8068bbe94dad"
        },
        "item": {
          "id": "0304caeb-9d50-448c-94bb-85e92891a877",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "54c7b2b4-a68b-4082-aca7-df0a788135f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f44e93-b6d8-4412-a3c2-0862200eaca7",
        "cursor": {
          "ref": "d7c7407d-513d-46a8-8c93-67c67faf1d21",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "7404bc03-b60a-446b-b5c0-0eb1d663ec40"
        },
        "item": {
          "id": "b4f44e93-b6d8-4412-a3c2-0862200eaca7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e476d61c-2b0a-47df-aae8-d68d842c3102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6518c2da-6440-4d8e-9f5e-b6dee9a83cd2",
        "cursor": {
          "ref": "2b4af952-8db6-4640-8d04-affd0e770b57",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "86b3e0cb-7854-4cae-85c2-19074b1d0896"
        },
        "item": {
          "id": "6518c2da-6440-4d8e-9f5e-b6dee9a83cd2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "fb6f0548-8d88-4af4-b730-4d40c0ef2a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c171d2e9-17cc-4677-9a48-031602da7a8c",
        "cursor": {
          "ref": "33b02408-6567-42a9-9f89-4a63e7a31962",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "e2da1fa8-33b0-4318-8bc1-1b06adf9adfc"
        },
        "item": {
          "id": "c171d2e9-17cc-4677-9a48-031602da7a8c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ba8d14c5-c02e-4926-b37e-8bff26a3d81b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "360769b0-eb3b-46cb-8b44-c870cc38d260",
        "cursor": {
          "ref": "5f0e59b7-d199-4b21-b2db-1f04c243147f",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "4e010f9c-7590-44ef-8fab-8a2ee2ad5021"
        },
        "item": {
          "id": "360769b0-eb3b-46cb-8b44-c870cc38d260",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "70fed1d3-8a3a-45b0-8136-a81472b7d1bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e4b6a70-8bf8-4c2d-9e44-3ec664969419",
        "cursor": {
          "ref": "0b3c07d7-9171-406b-a5fc-3e33fbc9542e",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "125686eb-6980-4d26-b0bb-129696070f74"
        },
        "item": {
          "id": "4e4b6a70-8bf8-4c2d-9e44-3ec664969419",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "cdbb1124-3ddc-4a95-b6a0-278ef5e21cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39777dbb-2f2a-4091-b0bd-b0c190598290",
        "cursor": {
          "ref": "1a9990ac-d4d8-4eac-a09e-06bdb75fd67b",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e8b8941d-f48b-4bec-bacf-156f3841f64c"
        },
        "item": {
          "id": "39777dbb-2f2a-4091-b0bd-b0c190598290",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "39c22b98-9fdf-4d89-b3b6-2f3599327ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c9512ea-be45-44eb-b572-1c5f68daf37f",
        "cursor": {
          "ref": "c576e994-08f3-4bb7-b629-f35ccc059610",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "946a5ec3-f7f0-4e8a-981a-46937f264b5e"
        },
        "item": {
          "id": "6c9512ea-be45-44eb-b572-1c5f68daf37f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f8c482bb-cdbe-40fa-b350-536b6b780beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4b5a01-2197-4dfa-945e-629a90f8df49",
        "cursor": {
          "ref": "d8bf6196-e17f-46ab-81ca-933ba850e57a",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "fa700772-08d8-498d-b9ba-0ddb81135468"
        },
        "item": {
          "id": "8b4b5a01-2197-4dfa-945e-629a90f8df49",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "51dea8e3-fc99-40cc-8127-94ba436fdf6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b65b62-b97c-4a53-bdf0-8ff1bea7b423",
        "cursor": {
          "ref": "4c8b294e-4e6f-40c1-90b4-f076baf679c4",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "0e38a6f9-ea21-4931-87cb-008b40da0ae9"
        },
        "item": {
          "id": "e1b65b62-b97c-4a53-bdf0-8ff1bea7b423",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "5f444e43-7a32-4c2a-abca-32a1fd5cdbba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d207ac-80aa-4ccd-afd0-d1b9794263e1",
        "cursor": {
          "ref": "b2313b66-aafc-46ed-ab2a-39f6ce76c30b",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "9324c4bb-8e16-46c8-adf2-9b8c896239b5"
        },
        "item": {
          "id": "e2d207ac-80aa-4ccd-afd0-d1b9794263e1",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "2b65b62b-e001-4c85-921d-021318d1bd8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f094ec39-b877-4bec-9909-f991ba8e52e4",
        "cursor": {
          "ref": "2a289d84-fbd4-4625-86f8-b1d6a14129d6",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "010f64a2-de09-4343-866e-6dc43582008b"
        },
        "item": {
          "id": "f094ec39-b877-4bec-9909-f991ba8e52e4",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "ca8d01fb-084c-48bb-8d24-01bdd07f354d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f91276-2276-4367-800e-f5a619afb1c3",
        "cursor": {
          "ref": "7c3792bc-f73c-4a4f-bf41-4d366c2f1e29",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "6b848135-b65b-411a-8312-479e92e6a3fb"
        },
        "item": {
          "id": "92f91276-2276-4367-800e-f5a619afb1c3",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "32b57420-0fc3-4409-a9c9-98ffff9182dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "335035b4-0642-4429-8659-d86aa25566cb",
        "cursor": {
          "ref": "fe9389b9-d7fe-4f84-9986-399ee5bbb66b",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "38033fff-ac9a-422f-a3d2-bc555374447f"
        },
        "item": {
          "id": "335035b4-0642-4429-8659-d86aa25566cb",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "cca5bdc8-bc37-4d33-bba1-41d90a5eb5c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb883fae-bc37-4ae6-9986-f52e97d8604d",
        "cursor": {
          "ref": "d0049951-144e-4e24-955c-eedc134fe689",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9a346f78-6838-4db2-b8e9-8204556fb8c6"
        },
        "item": {
          "id": "bb883fae-bc37-4ae6-9986-f52e97d8604d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "aed32080-fa83-4c73-8aba-593d9f494eba",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "524ecb63-2b02-422e-99f2-7ee15fc152fb",
        "cursor": {
          "ref": "3c2a5c64-570b-46d7-b386-3257655a0912",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e9a41a85-1bdb-4dd3-a6f7-1354ebf70c0c"
        },
        "item": {
          "id": "524ecb63-2b02-422e-99f2-7ee15fc152fb",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "384fee6e-bb61-41ea-8c93-3ab7effa4bf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ca7528-8e1a-478e-a5b3-279215faf769",
        "cursor": {
          "ref": "b4072061-8135-41a4-8b7c-fa595aff3cbd",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "db076666-6837-4f11-a68b-d9b7ecd3abe5"
        },
        "item": {
          "id": "58ca7528-8e1a-478e-a5b3-279215faf769",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "ed08e8f5-ffad-41f0-920b-5bc859dcc859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8392b455-fe46-4388-aa59-13810a544e0a",
        "cursor": {
          "ref": "f32c6498-bbe7-4cd2-a085-604253b8baed",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "06462200-5ea9-4130-a451-bbfec8086522"
        },
        "item": {
          "id": "8392b455-fe46-4388-aa59-13810a544e0a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "443319db-4a58-426c-8f2d-48b065cc58d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebaae0ae-b519-4fcd-80f6-e5e3907d15fd",
        "cursor": {
          "ref": "401fb693-c2e8-4de0-8856-396dc2e1f1f4",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "9e3c8db1-d231-4d93-a430-4936e4b11c3e"
        },
        "item": {
          "id": "ebaae0ae-b519-4fcd-80f6-e5e3907d15fd",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "1cee63e1-3e69-40dd-809d-def06e2445ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b3bccf-a03c-4705-ba18-5bff8ffb589d",
        "cursor": {
          "ref": "7a8e543b-5ead-417a-9c7a-af101f45e10b",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "1c40eb8b-6c81-40f2-b4fc-29219cf80096"
        },
        "item": {
          "id": "f3b3bccf-a03c-4705-ba18-5bff8ffb589d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "0cb48925-51e9-490d-a82d-2500dbe38619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f87030-48e2-4b95-a756-6d007f963624",
        "cursor": {
          "ref": "f46daef8-96b4-42e9-8d06-8345463e8d13",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "98d65cca-e9df-4583-a67a-3590ed89a4ef"
        },
        "item": {
          "id": "22f87030-48e2-4b95-a756-6d007f963624",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "015db600-d36c-434a-b82c-ab88aade699a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f0ba370-16c9-4e67-864f-59969e7325dc",
        "cursor": {
          "ref": "67345b24-f25d-477f-adee-aa09d18012d8",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "3111ac5a-7ccb-4aa4-b8a3-d89602ae3b72"
        },
        "item": {
          "id": "2f0ba370-16c9-4e67-864f-59969e7325dc",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "8c6d6a61-3670-4a14-a5ea-9988e92bcb32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a400a79b-f771-48bb-8a95-0f061406499a",
        "cursor": {
          "ref": "10de48bc-7732-425d-9938-f19e737572df",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5195be77-ac29-4aa9-93be-d66440b8beb1"
        },
        "item": {
          "id": "a400a79b-f771-48bb-8a95-0f061406499a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "0bb3aa7a-adb1-4c28-87f6-25c007a59ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9146a88e-bc9e-4581-8e07-5cb24d0bad19",
        "cursor": {
          "ref": "bb26d35c-9a2a-4193-b2f2-b160c1516ba2",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "622dd2c6-c58b-49a6-b0dc-c4be1c5c7ac1"
        },
        "item": {
          "id": "9146a88e-bc9e-4581-8e07-5cb24d0bad19",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "aa598939-fd62-48bf-88c4-f93d0d984f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d38c732c-cd71-4106-9bc5-98b7e14f5b89",
        "cursor": {
          "ref": "ea46c626-694e-439a-a282-ef792ed221ef",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e84a5f96-8974-4647-8d61-c8ff015ced8f"
        },
        "item": {
          "id": "d38c732c-cd71-4106-9bc5-98b7e14f5b89",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "662758c9-9e24-41a4-bb74-1086ed5211d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06894379-c8a1-4020-9b0c-a895ad513682",
        "cursor": {
          "ref": "9d1897d5-f034-4f17-bcbc-02b4393f6d74",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "450ae39f-4aa1-4fb2-a3e1-6bf959ca11f3"
        },
        "item": {
          "id": "06894379-c8a1-4020-9b0c-a895ad513682",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d538d7b9-fa27-4c0f-ad1f-66f9d9d5d340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09dd3d6c-0056-4019-b568-30de68f07d25",
        "cursor": {
          "ref": "9ddb00d2-30e4-4cc2-9c4e-f6408bfb8c50",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c0f6497c-944d-4ffd-a1a3-674434b587ba"
        },
        "item": {
          "id": "09dd3d6c-0056-4019-b568-30de68f07d25",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "fd613500-ac18-4af1-8e6f-b02310cd7da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5600f03f-4de8-4166-aea0-940ddee0f78e",
        "cursor": {
          "ref": "d28956ca-1149-4740-9c6f-a53ab72fec15",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d188fba9-bd21-4ae6-99c1-0cf5ecb4b3f0"
        },
        "item": {
          "id": "5600f03f-4de8-4166-aea0-940ddee0f78e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "dea8eec4-ace0-4d20-a515-89f799917a4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6495e5c-0202-486c-9680-21a5f64d4bf6",
        "cursor": {
          "ref": "55ef8cc0-6ab0-4d66-949c-9fba76d6ad07",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "a37edb12-0799-45ef-b84a-86d213db5e5e"
        },
        "item": {
          "id": "c6495e5c-0202-486c-9680-21a5f64d4bf6",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "606897d4-8190-4022-b588-6d51d63458d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc864d4b-6a2e-4d8d-aa4e-b22afbe991ca",
        "cursor": {
          "ref": "f62e99e7-0ab3-4e12-a4a6-c04c216b4952",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "bb03ba2e-6074-4e73-8354-904fa43ee2fc"
        },
        "item": {
          "id": "fc864d4b-6a2e-4d8d-aa4e-b22afbe991ca",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "bb02e260-b66b-4266-99f6-4b9d563f3945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb3b52f-51e8-4b8e-be2d-bd8b4177b3ce",
        "cursor": {
          "ref": "7989b255-38f1-450b-aede-57b0fb3d7d3b",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "db3208e3-c61b-4424-8e7d-2c8afc6db782"
        },
        "item": {
          "id": "1fb3b52f-51e8-4b8e-be2d-bd8b4177b3ce",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "4cb94e01-3254-49ea-b751-7b9b95081f28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f3ead1-d529-4faf-9a3a-a02c44c8f0d0",
        "cursor": {
          "ref": "738e0012-1e0d-46c7-b2f9-ee7dc44d0d38",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "78908a7e-01fe-4f0e-897b-d08f8fd04f10"
        },
        "item": {
          "id": "86f3ead1-d529-4faf-9a3a-a02c44c8f0d0",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "242b97ac-7a3c-4dc4-aeb8-eb6eb1f7dcfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "469761b8-2083-4b6b-8d19-e04c8200b207",
        "cursor": {
          "ref": "3288d922-d95a-4a98-af71-3fec6dd1085c",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "95b8bc56-3ab2-435a-9276-3c7039d4f6d3"
        },
        "item": {
          "id": "469761b8-2083-4b6b-8d19-e04c8200b207",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "0a419a6c-b8a2-4651-860e-b2f68d5c32f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ef64cb9-ed62-4198-98d3-8029e06d7ba2",
        "cursor": {
          "ref": "e629e735-8c86-4b03-8218-c567650c6623",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "8d87e582-a527-48aa-9f99-16da6f4f9172"
        },
        "item": {
          "id": "3ef64cb9-ed62-4198-98d3-8029e06d7ba2",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "6f00665e-e2bd-43df-8724-172b496ee7e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8289c5b0-f596-4441-ae04-b473bf0522cc",
        "cursor": {
          "ref": "c9997686-eda4-466c-b462-b0df5d640727",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "200bd1cd-0a13-4cec-94e4-e40f7ae1ef80"
        },
        "item": {
          "id": "8289c5b0-f596-4441-ae04-b473bf0522cc",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "2cd5c456-83eb-4c34-947f-255c5cd4da60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0543168-1784-4329-b41b-0fbf0489a6b8",
        "cursor": {
          "ref": "772219e1-1bc6-4c56-920d-22c0aa41899a",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "549d73cd-0d23-4b62-9cbe-797610db5eac"
        },
        "item": {
          "id": "c0543168-1784-4329-b41b-0fbf0489a6b8",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "540532d7-daa7-4f09-9869-a620802254c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b50092a4-1f09-44e8-8089-9213332f2d88",
        "cursor": {
          "ref": "d603cb82-cf94-45ff-a3a5-62c7547f9e5c",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "218bde71-84e9-4400-a5b1-ba73559adcc6"
        },
        "item": {
          "id": "b50092a4-1f09-44e8-8089-9213332f2d88",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "c857a330-edb9-4a2e-860f-6109f83f86ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb57edd2-c7f7-4b4f-bccd-8d3f595b9fa1",
        "cursor": {
          "ref": "d53ca194-6305-4273-b043-a9fb3802314b",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "7a580d12-b725-4edd-be6d-c0654526f0cf"
        },
        "item": {
          "id": "fb57edd2-c7f7-4b4f-bccd-8d3f595b9fa1",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a2014eea-faa6-4386-a66a-72bd00baef2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1079b7e3-a67e-413c-8314-d5dc3c35afc9",
        "cursor": {
          "ref": "e9c8e407-64f3-4a13-ae40-d2b9122ed8ae",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "135354aa-c124-49b6-b526-4d75422f2a9e"
        },
        "item": {
          "id": "1079b7e3-a67e-413c-8314-d5dc3c35afc9",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "83af8328-8712-45a2-a80a-8f4799e11031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0177acb3-a7f7-46c4-8618-5382490ae408",
        "cursor": {
          "ref": "c300c801-1a9e-4583-a152-531ce2290d4e",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c90a9e22-d912-4f15-8766-0c00df4dda75"
        },
        "item": {
          "id": "0177acb3-a7f7-46c4-8618-5382490ae408",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "f6474f37-dd76-49b6-abaa-1618a91a9f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "066090e4-6110-451d-a74a-8343c91b4bef",
        "cursor": {
          "ref": "671c3eb2-53bd-4fda-8b90-bf6c3224394b",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "4ae60870-fcb1-469f-a55f-37d8b6945e2c"
        },
        "item": {
          "id": "066090e4-6110-451d-a74a-8343c91b4bef",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "c8502825-3f40-457c-a563-bc7a0a7fc6c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5653f4ad-1098-4892-8c2a-014f850a8c63",
        "cursor": {
          "ref": "305c13a4-c5f4-415f-a669-2c4b46853060",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "5d20f215-e980-4de0-aa24-7c274def2050"
        },
        "item": {
          "id": "5653f4ad-1098-4892-8c2a-014f850a8c63",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d3bfad17-09c0-4495-a212-a52ef7818909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba8b25b-82c5-40db-a891-70bb65441d72",
        "cursor": {
          "ref": "bfcb1628-1380-4f7d-860d-ed3353f3fe06",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "20976dc1-92b5-4200-a19b-8edf947fb384"
        },
        "item": {
          "id": "dba8b25b-82c5-40db-a891-70bb65441d72",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "8ce119d4-669c-4959-adf1-a08945e32ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbebb7cc-96f9-4b41-9545-ec3a6700479a",
        "cursor": {
          "ref": "d2cd891e-b894-4a15-a1c6-502d0963c7ac",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "f2f94935-7da5-4fea-931b-e5f85ea0815e"
        },
        "item": {
          "id": "fbebb7cc-96f9-4b41-9545-ec3a6700479a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "3ff666f2-1e63-4537-bfa9-57a4dd0a1b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "160afea7-e4df-4fbe-8137-98238c2c35e5",
        "cursor": {
          "ref": "24dd3979-d689-4f8e-9241-5e28f2193cf6",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "8b8059ac-1011-4e60-ab7c-7d6e95208b0e"
        },
        "item": {
          "id": "160afea7-e4df-4fbe-8137-98238c2c35e5",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "b2273322-2ba0-4226-adc8-321dbdee5b07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2549c22b-f345-48d6-b0dd-d25f0f26247a",
        "cursor": {
          "ref": "df89f1db-2346-460d-baca-35098a22a170",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "cfae0767-3590-40ba-bfbb-21490086abbe"
        },
        "item": {
          "id": "2549c22b-f345-48d6-b0dd-d25f0f26247a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "5bc63e37-e6d4-4cb1-90dc-0e6fe6d61c92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a249e13-26f9-43e9-ab82-ad58eadff04a",
        "cursor": {
          "ref": "424e4d8d-59ed-4fce-a8ae-ba0a5cae6cbe",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "cca7474f-9e15-4c4a-a20a-b78762f2bfa9"
        },
        "item": {
          "id": "3a249e13-26f9-43e9-ab82-ad58eadff04a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "03e35457-c858-461c-9ef5-b286c73ee072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd55b411-57fc-4305-876c-687ce062c678",
        "cursor": {
          "ref": "44457a68-600a-4933-ad7d-354be5984355",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2a63d1fa-4eed-4221-b55b-2736a70b16d4"
        },
        "item": {
          "id": "cd55b411-57fc-4305-876c-687ce062c678",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "1287a8fa-bb04-4d16-9fbc-efd6533e43a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b87ea14d-9595-48d6-85b0-2ca822b460be",
        "cursor": {
          "ref": "d31639e8-9459-4e7e-870f-9ad6d088dadc",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "2a1c5e8c-bbf8-4361-8336-3bbfaa2ec1fd"
        },
        "item": {
          "id": "b87ea14d-9595-48d6-85b0-2ca822b460be",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "8e2b9893-cfae-4dd2-819c-7f2cc7f1b0fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d30358-113b-4329-adad-ca493f43c3ab",
        "cursor": {
          "ref": "a6ffb01b-9cb8-4a48-8c5a-d2c171a0340c",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "01837113-75f8-46ae-a966-7b28ade6a73a"
        },
        "item": {
          "id": "c8d30358-113b-4329-adad-ca493f43c3ab",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "86a81d07-8b53-4abf-b8ff-0642017262bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56098751-dac2-4388-90b9-d8a3c3eba33c",
        "cursor": {
          "ref": "7abc7e89-a3d4-4148-9e79-d9b72d802fde",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "884c9bc9-1036-40c4-b7ae-6e5dde559fd9"
        },
        "item": {
          "id": "56098751-dac2-4388-90b9-d8a3c3eba33c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e07784cc-c6b6-46d5-9cd4-cb6b4856acf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c4e03e-84fa-4814-bf09-7d17749f1dd4",
        "cursor": {
          "ref": "82017191-3469-42c7-bb17-7e150a43a3dd",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c8ee67ea-8f00-4d8e-b927-c44c7216f4bf"
        },
        "item": {
          "id": "f4c4e03e-84fa-4814-bf09-7d17749f1dd4",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "cdb14a60-c604-4f34-aeb5-7d1b796a9ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204ddf25-9aa1-499c-8de2-2253f75ba6eb",
        "cursor": {
          "ref": "596eff77-38cc-4795-9567-c5d735b7ad37",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "76ab0c6e-3858-46fa-b5fa-23cae89e8b4e"
        },
        "item": {
          "id": "204ddf25-9aa1-499c-8de2-2253f75ba6eb",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "56878032-0f56-41b4-a58b-e122feafceb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba89228e-b551-409b-9721-bfec865ecac5",
        "cursor": {
          "ref": "92f01c6a-9ae5-443c-a5d4-edda739ae69b",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "44cbd079-6b1f-4100-9b2d-d4ed969098da"
        },
        "item": {
          "id": "ba89228e-b551-409b-9721-bfec865ecac5",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "bef46e28-122e-49a9-ae2c-414d2a07afd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa0078eb-740b-49b5-9f54-57569c88bb0d",
        "cursor": {
          "ref": "449ce5b8-c641-45b4-952f-f55f66614cb7",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "164d3c57-06cc-4783-a636-b801abac49cb"
        },
        "item": {
          "id": "aa0078eb-740b-49b5-9f54-57569c88bb0d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "585ffe18-131a-4e45-9c49-43525757fa47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6682ddbe-fc5e-4405-8ff9-1655fc05d8e4",
        "cursor": {
          "ref": "f9010a02-ca4c-4bea-b4a7-277bc38f6720",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e59f606c-ddaf-45be-80e9-debf141e8bec"
        },
        "item": {
          "id": "6682ddbe-fc5e-4405-8ff9-1655fc05d8e4",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "70ef380d-cc8c-41be-9836-cf9ded2b51fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a8d9424-1a92-4bd8-99c6-ca7c187a6f5f",
        "cursor": {
          "ref": "eae2f3be-98ec-4cad-8ed0-e04a844f8342",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "557865d7-7d71-4fea-ae26-3047977b1d07"
        },
        "item": {
          "id": "2a8d9424-1a92-4bd8-99c6-ca7c187a6f5f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "bd3787f4-03a1-4982-b696-98cf9b37e26e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf88266a-9160-457b-8e48-972728b61b97",
        "cursor": {
          "ref": "b1275c40-2ece-41c6-948d-a3de56fbe5dd",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "1210dd49-2b75-47d8-ad36-caeefaf2f663"
        },
        "item": {
          "id": "cf88266a-9160-457b-8e48-972728b61b97",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "2f4b6741-449c-43fa-b4f0-2d5950ddd689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee227e0-0271-4ff4-885d-09b8e620716b",
        "cursor": {
          "ref": "741f64bc-b244-44c5-9c8d-a0500c23fce3",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "0cd32a33-e8b0-4ebf-98aa-cb1c4a945c47"
        },
        "item": {
          "id": "eee227e0-0271-4ff4-885d-09b8e620716b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "fe2c1792-7e7f-45ac-8fed-c75d71609b8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d7ecf8d-62b3-46d9-83b3-e945811282c7",
        "cursor": {
          "ref": "a72717ba-6d1a-4a88-8f9d-11c598a67819",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "29f456f9-49f8-44dc-88b8-0cd44c13e7dd"
        },
        "item": {
          "id": "8d7ecf8d-62b3-46d9-83b3-e945811282c7",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "96306cfb-7ae6-4a0a-aecd-32029da39838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2426d0fc-cb22-4d68-86df-0592901d16c7",
        "cursor": {
          "ref": "f6e53453-8f8f-4a0f-8433-588d01ef09f0",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "29f73506-8873-4dc7-9ae4-23f9e8aea36d"
        },
        "item": {
          "id": "2426d0fc-cb22-4d68-86df-0592901d16c7",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ecec2b36-8eb6-4adb-8fef-b081e20862e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e573a3e-329a-4bd4-97f1-d26ecd91a548",
        "cursor": {
          "ref": "c23a345f-5386-43d6-bb57-58f9f63e1c7d",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "032560d5-ae41-44f4-83bb-8d19f7144ef9"
        },
        "item": {
          "id": "7e573a3e-329a-4bd4-97f1-d26ecd91a548",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c53f7232-6fe9-4493-a306-a094308d9df7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f55f43-99a4-47cc-939d-b9ed50b5470a",
        "cursor": {
          "ref": "d563a363-84d4-4f98-a409-e7313605a33e",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "39d85e93-7366-4dba-a323-5c04c278c038"
        },
        "item": {
          "id": "20f55f43-99a4-47cc-939d-b9ed50b5470a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b283b0af-784a-492e-a71e-5c2e89bc1b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae276344-1bcf-4909-9ff1-d0279e6ecaf7",
        "cursor": {
          "ref": "3f1641bc-be38-4a21-aaea-d1920f755e54",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "fceea602-111b-4ebe-b5d8-285e53178663"
        },
        "item": {
          "id": "ae276344-1bcf-4909-9ff1-d0279e6ecaf7",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "69489f76-0295-419e-ac70-c9beeb1fc763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dc71efa-7f2e-44a9-9fcf-f151f884df69",
        "cursor": {
          "ref": "46918f87-2023-46cb-809c-b3dfea6997db",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "a2482d1b-f2cc-4e74-b8fc-0d48700e46f6"
        },
        "item": {
          "id": "0dc71efa-7f2e-44a9-9fcf-f151f884df69",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "1ce16eb4-b02c-4b68-872a-55b032e297b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5519769-5bc3-4dff-ba32-eaa598560fce",
        "cursor": {
          "ref": "7109498a-7499-4dbb-9737-26d0f8d8d4c6",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "6157c3e6-df0f-483d-960f-b5aad3904ed1"
        },
        "item": {
          "id": "c5519769-5bc3-4dff-ba32-eaa598560fce",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "4573e353-0ab2-421b-8848-210989d3f633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f7a903d-863d-4e04-8b03-e70f7a2b5378",
        "cursor": {
          "ref": "bceb7389-e365-43a0-b833-8529ff09f1a4",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b7cf67ba-adf1-4dcb-82b8-d1d2c5109065"
        },
        "item": {
          "id": "5f7a903d-863d-4e04-8b03-e70f7a2b5378",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ca34e5d5-9e8a-49cf-a107-a51959213924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb29c1b-ba1a-4bfc-921f-316fe1ae51b6",
        "cursor": {
          "ref": "4733466e-7631-46a1-8439-8b11019db1ac",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "babb66c3-b407-4c70-83a2-485df719f11b"
        },
        "item": {
          "id": "fbb29c1b-ba1a-4bfc-921f-316fe1ae51b6",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "a33af444-c13b-4f96-b6a4-6c58ba709178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b079682b-7092-47ef-b050-d5a033cf3084",
        "cursor": {
          "ref": "a6fa7261-c9db-4a15-b5a2-51bd4b64b038",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "23b6849d-340a-422e-b5b1-b37535a951b5"
        },
        "item": {
          "id": "b079682b-7092-47ef-b050-d5a033cf3084",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "6785b979-24fa-4fba-acf2-7c74476d0127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f756c6d5-06bb-4c7a-acd8-84320c506220",
        "cursor": {
          "ref": "6690b273-001c-48cc-bb43-2b496a43c2cc",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "c2b25ce4-b18b-4cba-972c-291424f53cb9"
        },
        "item": {
          "id": "f756c6d5-06bb-4c7a-acd8-84320c506220",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c1e444b6-0ea1-4939-b739-c2e8e9852941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c668216-9f4b-49ca-b95a-bbc875cbf1a7",
        "cursor": {
          "ref": "2f6d2843-dd47-4525-9c7c-5917381cb1de",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "6fb93713-bbc6-47dd-a760-9053d162c77c"
        },
        "item": {
          "id": "7c668216-9f4b-49ca-b95a-bbc875cbf1a7",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "72472a1c-7e94-492a-94cc-82b58b4fbe7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc95b36b-47d4-4fb8-9f43-18805ca8b9a2",
        "cursor": {
          "ref": "5fa4d7df-5888-4cf6-811a-b8e68a6a82b9",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "af6b58f6-625f-4ae5-ade0-2ca64f4c84ef"
        },
        "item": {
          "id": "bc95b36b-47d4-4fb8-9f43-18805ca8b9a2",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a302b5b6-c07a-4ada-9822-c716f0663ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d65ce30a-33f0-48b0-a6cc-b9a858bf5d87",
        "cursor": {
          "ref": "f25ab77f-20ec-4056-8d18-612924fb9557",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d68c2a20-4f85-499b-a4bc-6b53950c869d"
        },
        "item": {
          "id": "d65ce30a-33f0-48b0-a6cc-b9a858bf5d87",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "77b6aa41-39aa-4c13-acc4-cbe3dce8c5a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4e8ab48-9046-4701-a78a-4338a3efd946",
        "cursor": {
          "ref": "3fad3db7-551c-44ef-8a5e-81e4a396fb6e",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "081f6c17-beed-46b2-82f0-67d50782ab72"
        },
        "item": {
          "id": "f4e8ab48-9046-4701-a78a-4338a3efd946",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "8356c768-f63e-4f26-9d52-21add70f52ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c18b47-e5bb-4f0d-a836-ab0b1b515fb4",
        "cursor": {
          "ref": "86ef2704-e8fd-4cb1-a070-3237bc61f728",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "87a3bb37-d857-4973-b4c1-48c2a99eb3a1"
        },
        "item": {
          "id": "16c18b47-e5bb-4f0d-a836-ab0b1b515fb4",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b5e8c224-d5be-4799-91d3-210c0e46d007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d733ea09-732f-45c7-ba61-e69c848cc850",
        "cursor": {
          "ref": "59cf7145-31ed-4932-982f-275fc4831bf6",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "37341f05-9c69-49d7-a0d7-100cd6aecee0"
        },
        "item": {
          "id": "d733ea09-732f-45c7-ba61-e69c848cc850",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b5499e21-1c70-43e5-8881-c9078523b6a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4845351-07e2-43e2-be50-6521ce99f7cc",
        "cursor": {
          "ref": "15123f68-0092-4f8f-b78a-3fd29c41cc4b",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "c2f023cb-72ba-4a71-81c6-0e33237bef0b"
        },
        "item": {
          "id": "a4845351-07e2-43e2-be50-6521ce99f7cc",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "afd54ab7-6181-45d7-8746-725d920dbb7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3149f6b-e58d-4fb1-907a-c78c11f5bf05",
        "cursor": {
          "ref": "2202732a-e2d4-4517-b282-2620e2e5bf34",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e54b5ce6-f177-4280-a2f2-35f6b9734cc9"
        },
        "item": {
          "id": "c3149f6b-e58d-4fb1-907a-c78c11f5bf05",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "143a3a42-dd2d-4dfa-b952-dcf8df8157aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "607a2388-35c7-4e1e-99cc-47d3f8b4adc2",
        "cursor": {
          "ref": "c699c9f9-561a-4d68-bc3c-ea6e28956e36",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b72bcf1e-4c62-48ea-8a76-ba9b46230a49"
        },
        "item": {
          "id": "607a2388-35c7-4e1e-99cc-47d3f8b4adc2",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "801065cf-f7da-4b4b-89a5-d249b12fa92a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3d55bd-69e6-4f06-a4d0-e475694b7812",
        "cursor": {
          "ref": "7151ba88-ead6-48ae-99b0-e2b746e2e9f2",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "667c9e35-e17f-4b0d-8784-91b200ff681e"
        },
        "item": {
          "id": "3e3d55bd-69e6-4f06-a4d0-e475694b7812",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b3297f20-cfe3-4df3-b068-374ecc40b03a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b74ef5-961c-4637-8537-0b09204d7ceb",
        "cursor": {
          "ref": "1ba794d3-a05e-4947-8cfa-2eb6aa3b0c7c",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "05525f35-1ffb-48bf-a68e-4eaae80a4542"
        },
        "item": {
          "id": "01b74ef5-961c-4637-8537-0b09204d7ceb",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "441e4344-3cc2-4f85-ba33-8d2a39e5d1d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a11a202-5276-45c5-a266-8f5c2aa73379",
        "cursor": {
          "ref": "72596312-3e50-4983-b787-4d5dee638e9b",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a32b1923-ff82-4fd1-aced-92d171a2404c"
        },
        "item": {
          "id": "5a11a202-5276-45c5-a266-8f5c2aa73379",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "5850c95c-3a34-44e1-b9b1-94f889181394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf750c92-601c-4d6a-a933-a883a185fb66",
        "cursor": {
          "ref": "9fc7eb4f-6d64-4ae5-bd18-e6a10957a169",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "5b66601d-5a91-47ea-aad9-09ff010c19df"
        },
        "item": {
          "id": "cf750c92-601c-4d6a-a933-a883a185fb66",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "9eb07de8-bbf7-4ac7-86c8-28645aa7977c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec909a2a-4d21-4068-a49f-db8814952ebc",
        "cursor": {
          "ref": "c6737844-4c43-48da-a913-a13835a5c9f0",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6052d9f2-a092-44a3-b7fb-94721c082de9"
        },
        "item": {
          "id": "ec909a2a-4d21-4068-a49f-db8814952ebc",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "156721bc-782d-4aec-ad22-ed0f92562283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "895b9f0b-3b5c-42c2-bfb8-7752f4166513",
        "cursor": {
          "ref": "1ba7b4f7-21e5-4758-9ed5-82b89c67b1f6",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "5887ec1c-effc-41c1-85aa-c2247c3a6077"
        },
        "item": {
          "id": "895b9f0b-3b5c-42c2-bfb8-7752f4166513",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "7279c844-31cb-4196-a8a0-7b52ab488971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a531fb32-8996-4347-942b-b980b7fa3d92",
        "cursor": {
          "ref": "3f6cda80-8958-4a37-abc9-3523e14e184f",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e12f4b69-78ee-4738-a814-2466c38a3ced"
        },
        "item": {
          "id": "a531fb32-8996-4347-942b-b980b7fa3d92",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9c0362cf-59b8-4219-ad8b-0e67cd558b12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "253a545d-9475-4649-aa16-48601ac1f666",
        "cursor": {
          "ref": "d270351e-dd32-4d5a-a6ce-bc5581d1ce30",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "5192373d-0b3e-4ed5-aebc-c650eaa8bbcd"
        },
        "item": {
          "id": "253a545d-9475-4649-aa16-48601ac1f666",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "93ba3e0f-02be-44bf-aa2d-5b2d115a685d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bd0275b-a78f-4a9d-93bc-844d21bb96fb",
        "cursor": {
          "ref": "69659297-6fb2-4c85-97dd-81314edfe836",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "66ea1c85-fab2-4bdc-a94c-7fddeb1a6524"
        },
        "item": {
          "id": "9bd0275b-a78f-4a9d-93bc-844d21bb96fb",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "944cf118-0df0-4f31-a555-e521ae6d0e1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d215f645-e4da-4233-a165-5371a6c28165",
        "cursor": {
          "ref": "87119332-4ccc-45fa-858c-c3dc54e6c10f",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f6274ab5-6436-4b01-8187-136e7075472e"
        },
        "item": {
          "id": "d215f645-e4da-4233-a165-5371a6c28165",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "27ffaf17-11d4-4d8b-a024-f38ad64ebd19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d2a80f-8c8f-4948-928a-8d444e5112d9",
        "cursor": {
          "ref": "fb782876-263a-4d31-9c67-6f60e64cfc15",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7c4426a9-0121-4446-9b3a-8acdea394980"
        },
        "item": {
          "id": "b3d2a80f-8c8f-4948-928a-8d444e5112d9",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "82bab608-bfec-4c26-9f64-45e2939639f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e70bb084-1d93-446d-9917-746dc9b03b26",
        "cursor": {
          "ref": "4cd4aa91-8241-434e-842d-21d9f404910f",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "bdf9b14b-a26e-4ae7-beff-ba0f53420873"
        },
        "item": {
          "id": "e70bb084-1d93-446d-9917-746dc9b03b26",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "9ee616b2-139a-434c-9ca8-cbf3b07c5a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eab8e69e-45a3-443c-b018-ac1da3888a46",
        "cursor": {
          "ref": "8bc5fa61-146c-41f6-bd40-8793d5e90051",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "2b7ff474-94ee-466c-bd09-79cf7f68bd9f"
        },
        "item": {
          "id": "eab8e69e-45a3-443c-b018-ac1da3888a46",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b961b31a-2313-451c-a096-2447099d2a94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46807f05-f2f6-4c38-b1f0-7bf50afd1b69",
        "cursor": {
          "ref": "dc49186a-e8f6-4f39-987c-14ed5fa28c18",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "fe9465ce-9e5f-4775-bf21-fb7d21a38a35"
        },
        "item": {
          "id": "46807f05-f2f6-4c38-b1f0-7bf50afd1b69",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "bf5feeab-c689-4575-9856-519b6881d3b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c21eb6-ca77-411f-bb9b-9736e35169aa",
        "cursor": {
          "ref": "1402ec8d-4ce8-4589-b921-edacaf3477a4",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f0b983c9-fb86-4b8d-934a-546cdb2b9a7d"
        },
        "item": {
          "id": "62c21eb6-ca77-411f-bb9b-9736e35169aa",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "c759fff0-71de-4055-9ce7-d471187bb0e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55edff8d-4231-4fde-a005-c3be17cd738e",
        "cursor": {
          "ref": "e9c02048-6041-4931-b499-678b8b7d7bab",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "a1d4bc85-c25e-4e3a-b2f2-5e1d07badfea"
        },
        "item": {
          "id": "55edff8d-4231-4fde-a005-c3be17cd738e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "2dae50ec-8a87-403c-86c3-b95656d18b23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a502d337-f1af-4ad9-a8af-6062106022a4",
        "cursor": {
          "ref": "c627e92b-197e-479f-a3af-030e0f2261d2",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "d8714930-b966-427c-b8a1-aa459f4fea0f"
        },
        "item": {
          "id": "a502d337-f1af-4ad9-a8af-6062106022a4",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "1b4bc1b4-721a-4c2e-8fee-7f99fa16b4ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be1e536-efc5-4558-a866-e2374af31b8a",
        "cursor": {
          "ref": "953ea0a8-425e-4f56-a322-1c976dc52e44",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "54b272a5-2ecb-468c-b7b9-6398ba5168c3"
        },
        "item": {
          "id": "0be1e536-efc5-4558-a866-e2374af31b8a",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "951e4cd8-52f0-46d3-920c-e1a50db47fed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2c2bbf-afa9-40e2-b699-bfae9d8bf03c",
        "cursor": {
          "ref": "113ff0a6-a8d9-4b8a-b8ea-b6c97d7f0014",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "7d7eb927-b74d-4d01-8b43-e8c825afdd13"
        },
        "item": {
          "id": "ac2c2bbf-afa9-40e2-b699-bfae9d8bf03c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f2987be5-aa92-413b-a859-9dda032a191a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe5c9a8f-e3fa-4f73-a75b-836285453250",
        "cursor": {
          "ref": "81fa57c5-f76a-40c5-a955-16ad67a93db4",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "6e6c4960-b1c8-4cd9-8e92-e32807ed159e"
        },
        "item": {
          "id": "fe5c9a8f-e3fa-4f73-a75b-836285453250",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "8ea2a49f-3440-47f3-9f20-990b5937ee03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af3cd64a-917e-4beb-bb7a-aece8ba4dff9",
        "cursor": {
          "ref": "3a0495ca-46e3-42e9-953a-c9706f6711a8",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "24feded8-ce41-430e-8f12-dd021beae2fc"
        },
        "item": {
          "id": "af3cd64a-917e-4beb-bb7a-aece8ba4dff9",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "059293f2-d988-440b-b7ba-8c3dc1e204ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12eb77b3-a7f3-4ea7-9950-01b54b7bd1b9",
        "cursor": {
          "ref": "138aa2f3-c950-40c0-bf31-7be28a508178",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "cb977a0d-d0a1-494d-9138-452d2fedba17"
        },
        "item": {
          "id": "12eb77b3-a7f3-4ea7-9950-01b54b7bd1b9",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "63176abc-5940-4168-b6e7-078cf924b810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56083a38-c484-4c90-9601-28cf0d460a73",
        "cursor": {
          "ref": "16d2057e-fbe2-4963-a363-48f9526bf72d",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "fd3bbbd7-bdb4-46bc-baa0-d0e0c99c667e"
        },
        "item": {
          "id": "56083a38-c484-4c90-9601-28cf0d460a73",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "18eea499-e2d0-4dc3-92c5-c46ab2f7d7dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "664c2a82-5e60-4131-9186-e19093cc92fa",
        "cursor": {
          "ref": "6d16700b-ee23-4fc4-9ec1-6ff52a4b369e",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "534bc27b-7c0a-4baa-bfc1-7a1c490d9fb6"
        },
        "item": {
          "id": "664c2a82-5e60-4131-9186-e19093cc92fa",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d64c3b20-bbf2-40bb-9de1-277c51703648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a36573c1-f472-4fa2-b4ed-cd81a16eee0b",
        "cursor": {
          "ref": "b032b395-e16b-4759-8556-20fbca595a7d",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "2838b9de-0adb-4d18-87fc-564e2640043e"
        },
        "item": {
          "id": "a36573c1-f472-4fa2-b4ed-cd81a16eee0b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "7d12c62e-6724-4cea-a69f-7313dbb762a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e58fce6-47d6-4fd4-937b-1fac60dc791c",
        "cursor": {
          "ref": "8a34627c-2324-4b0a-88d0-0034b7dfd5f9",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c0c1b37f-dd86-41f8-8a85-3141f3416c4b"
        },
        "item": {
          "id": "7e58fce6-47d6-4fd4-937b-1fac60dc791c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "103c8093-3b26-4303-bdc2-5c473db17d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef88d4b-f8ee-433c-aa46-3bfcc371e664",
        "cursor": {
          "ref": "27c1bb81-092f-4446-a933-8706f7463539",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "0be41dc4-d330-4597-bb2f-b1ccddc49419"
        },
        "item": {
          "id": "6ef88d4b-f8ee-433c-aa46-3bfcc371e664",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "9eccb68f-32fc-49ec-94f9-ff029c4392d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f2c38c1-8ed3-4c34-b4fe-a040df2ee1b4",
        "cursor": {
          "ref": "9ccce06f-0c73-4b48-8008-f23cd43265e2",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "69dc967b-182a-419b-b533-d445ebe31c5d"
        },
        "item": {
          "id": "9f2c38c1-8ed3-4c34-b4fe-a040df2ee1b4",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c0b9820a-19ca-4540-96c3-ffe288db8735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e92ac2c-9772-4a1b-9710-e4638cb47063",
        "cursor": {
          "ref": "470ca204-7fc4-4a66-8fab-77e0c970fb6e",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "20250b1e-be9e-4603-ba3e-bf9150046b0f"
        },
        "item": {
          "id": "1e92ac2c-9772-4a1b-9710-e4638cb47063",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "1a0dff94-f920-4c3a-b99f-7b2c7125f6ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03e6e87-82bf-422e-817e-8b2ed05e45ea",
        "cursor": {
          "ref": "acd7bf25-5f74-473b-a3fb-4aaa6e118dd7",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "49c8ab5f-f6ea-4387-9301-7919ed10dc2b"
        },
        "item": {
          "id": "c03e6e87-82bf-422e-817e-8b2ed05e45ea",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "2b0a7cb1-a1df-4077-a9d9-0623a1104cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b576952f-9760-4aa4-b7fc-ff309f39e8d0",
        "cursor": {
          "ref": "ab862b69-12f9-44ed-a702-0b983f095da6",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "b7f55274-3daf-4ce4-950c-a1bc62c41f23"
        },
        "item": {
          "id": "b576952f-9760-4aa4-b7fc-ff309f39e8d0",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "031f27c4-6340-4945-90db-87aa9919b74e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f32bb9-18df-468b-a8c8-92adc331c9de",
        "cursor": {
          "ref": "24e6fe5e-9750-4078-94e8-69ec5c55c93a",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "9b5caffc-d3c8-490c-83ca-7b451bdb0dc7"
        },
        "item": {
          "id": "08f32bb9-18df-468b-a8c8-92adc331c9de",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ba38e96e-1298-4631-9c75-6918f70e0a5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14f99a41-8945-49c6-a3b4-6ed2e024cda8",
        "cursor": {
          "ref": "f96af3ca-81dd-405f-90e9-19ef47722184",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a0b630e5-8f88-48be-87d4-0d6cd7cd5af4"
        },
        "item": {
          "id": "14f99a41-8945-49c6-a3b4-6ed2e024cda8",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "dde3d4ef-f843-41fd-9166-12b8c21d96dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e663b2b5-d306-41a7-a71d-d4ee2a99c9b7",
        "cursor": {
          "ref": "3521362b-bdda-4860-8b9f-1e41fb1eb85c",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "37390adb-8383-4383-8982-39ddef7ff18b"
        },
        "item": {
          "id": "e663b2b5-d306-41a7-a71d-d4ee2a99c9b7",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ac538c5f-15ef-41fe-b7f3-0e31c4d706e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f7a538b-0b13-4a8d-b462-91dcd8a57763",
        "cursor": {
          "ref": "c12e8b01-9ea1-4e09-a60e-8c6a05f707cd",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "b344d0ff-ef13-4991-9a84-33ae88ddd3a5"
        },
        "item": {
          "id": "0f7a538b-0b13-4a8d-b462-91dcd8a57763",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "6df67361-b20e-4ace-960a-019f5fd59200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "727e6777-f7cd-41ce-9b24-16ea822b0ce8",
        "cursor": {
          "ref": "4d404fbe-47c0-488f-819e-5f34825fc944",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "a5b33c9f-4c15-4d67-829c-a408e323c996"
        },
        "item": {
          "id": "727e6777-f7cd-41ce-9b24-16ea822b0ce8",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3861fcc8-ae62-470f-8255-2266d6bab534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "bf69cac3-9c65-4909-aad7-6d6f65eb7f86",
        "cursor": {
          "ref": "4cac9789-098b-458b-a642-bad2e9027457",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "15925140-24f2-432c-9397-58240ca290bb"
        },
        "item": {
          "id": "bf69cac3-9c65-4909-aad7-6d6f65eb7f86",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "5d909739-60d2-418e-8748-0cab7525afc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "a466f575-8c5e-44d1-b54b-eeb346938d32",
        "cursor": {
          "ref": "0c047142-f55a-4671-89b7-dffa3e3c6285",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f708be74-2e9b-4592-8c4f-25e36ee5f658"
        },
        "item": {
          "id": "a466f575-8c5e-44d1-b54b-eeb346938d32",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a7d56da0-836c-4bb6-9c1b-564b7f7bfe81",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a466f575-8c5e-44d1-b54b-eeb346938d32",
        "cursor": {
          "ref": "0c047142-f55a-4671-89b7-dffa3e3c6285",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f708be74-2e9b-4592-8c4f-25e36ee5f658"
        },
        "item": {
          "id": "a466f575-8c5e-44d1-b54b-eeb346938d32",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a7d56da0-836c-4bb6-9c1b-564b7f7bfe81",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "974a2f51-440f-4171-a689-deab188b1a9f",
        "cursor": {
          "ref": "d30c5e05-3fe4-4038-967e-14585fcc7868",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "16653312-eb48-45d4-a021-011ca803f1e7"
        },
        "item": {
          "id": "974a2f51-440f-4171-a689-deab188b1a9f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e5ccdc8c-9a24-48c5-bb70-29a81fb0d0cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "871209be-b68c-4479-87e1-e556eb655d55",
        "cursor": {
          "ref": "95978bd2-cac6-4695-9e83-264bb83d91fa",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "796b2739-fe4d-463e-99b3-75793ab84232"
        },
        "item": {
          "id": "871209be-b68c-4479-87e1-e556eb655d55",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "0bbae09f-095b-486d-856b-865c541b95cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}