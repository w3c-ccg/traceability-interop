{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "4309c4af-9906-4ea5-bc26-23846721309e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "4e3cd09e-904f-423c-8816-0160178c409f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "abc8376b-7ce5-4259-9e0c-b2af58eb81a5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "359c3227-37e1-4510-9128-5fcf4bfac433"
                }
              }
            ]
          },
          {
            "id": "720db909-d34d-45de-9b5c-567a5e7539cb",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6133a7ee-d966-4a04-ba85-8583e27b102b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "49ebd411-53cb-4c58-84a4-4456ab052105"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c55f296e-3e10-4c66-b85d-5faf5d11eb4f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "634e2d6c-a88f-4161-b393-fc712183072d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "36ecb6eb-b90b-4911-8a93-8a3355b5a742",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c13fad10-a757-4e07-8e6d-3c66638ddb98",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b897717a-04cb-494f-ab20-dda305ae253d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1a42561d-ed20-4115-af5b-2ee1aa535416",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "05964509-d12b-4bd2-b5df-365636d5fd21"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1613cffb-b9e0-4bf2-bd28-bedd7d7dc021",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2fa38751-ed8d-4ce4-b3eb-98f97aca7ec9"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8a03c20a-d253-4a4c-8c80-7849c569441c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "bc47996f-f842-4cf9-b800-1e743eab63c7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "73264e60-bf41-4d4f-b10d-315c3b5d121c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "625964d2-6ccb-40b5-a968-f5f4fb2822ef"
            }
          }
        ]
      },
      {
        "id": "44560db7-7b6a-4426-8ca4-a6c3c09555f3",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "469834e9-0204-4870-8d2a-7d1da9626b94",
            "name": "Negative Testing",
            "item": [
              {
                "id": "99f7c44e-55f1-4e5e-9657-e9e416915700",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a1f7928b-ff23-49ec-b936-6d94b4e02d18",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e82f976-e10e-4610-abad-2526f7a3cd81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a931d651-ff96-43c3-a8a0-5f5fae6a1747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e2e53e-3f89-4e4c-af35-f6dcda127aac",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87bcb4ca-feb9-4524-9317-3803089afadf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1550b23e-5aeb-4263-8f31-5939a5b5ca75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8be4332-7af0-4ce8-9e0d-cf8de448d671",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba49a2ff-d27e-4fc3-ab15-f73d6aa43efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "71030fa0-bb30-46d7-b72d-b371dda83731"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2b1a94e7-72f4-4413-8587-7fdc65522ef4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "660fd13e-279d-4cd6-b0a1-7b5f67c47925",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06e8e849-4eff-4a41-846a-8f7f19fb60ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7096cb6a-f11f-43cb-8851-0cdcbfa61607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "226308fc-db89-49f9-8b5a-6a422e8e3035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b092263-edb1-44f0-8b1d-dd4557585ee2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "daccda54-0c07-4af5-80cf-75f9246e71ae",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6ef23cc0-a9de-432c-bb35-e952a0d816a2",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee0b368d-3275-496f-b872-f738ff626309",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "111482b7-d11d-4c93-bb7c-59172f5b3a50"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e217e4c9-95a4-4e10-8bc8-be4c72fcc855",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "8a2b0338-eaa5-4797-b252-c6d9476cd977"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e8585c3d-058d-47d0-925f-0de983dd41dd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ce25f97c-93f1-4763-be4a-249d15f3c2ce"
            }
          }
        ]
      },
      {
        "id": "f2695493-548f-4646-b0a8-247e8bf895e1",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "6eed58c3-516a-478d-bcec-0556d1babc9c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d9ee1867-abfb-4a54-b163-6e0012beb4bd",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "923f1592-62f2-41f1-8aa5-121def5807c6",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cadf077-8979-446d-9503-13cd753caefc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be0e4237-b6a5-4a2e-b444-d74a8ce1f290"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02a65e81-05c6-48ae-b9f1-824740ad9e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b6934e1-9c12-4ace-8d00-a480451e3350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "904bdc88-eaa0-4f22-bca9-45ac90235885",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbff4aee-9ccd-4722-a2a1-2825d24b4fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddb791d5-50e7-4508-9052-5250aa58422d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba7b487-cc49-4ef9-8993-ad67b16be2bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "867ddfb5-dd2d-4839-a68f-9bdcb20b22d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94978477-6cce-4912-9824-90e33f17b90d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "935a192a-c62f-4e0f-9c4a-ae0c38109689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79ab407d-0583-4327-ab6b-af9f042ada6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d7aa268-5c78-4795-93bb-95bd10a26fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b5239ccc-5ed3-4374-b0f4-2238c99310b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f6d89b1-538a-45af-a0d4-5a62913172b9",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "571a57b2-07bf-4a25-9722-c111364eba88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a3fa6b9-047c-4e6e-9d31-5988c51d6dc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "017c943c-3f53-4b20-b533-45962f13f269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b007309f-903d-4cfe-a810-ef99b28483ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea1cd5e8-596f-4c22-af11-8a07c1e69164",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6578b76b-9940-452e-b25f-e491c8305120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "679c0516-4272-428c-9ea9-d3dc17bd9839"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8f5f1de-f186-4220-8cf2-766129e781b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47d234de-bdf3-4be3-bce9-dc0a59e69887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebcee7ab-b25c-4d30-b3b3-ed1215dde75b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b5780db-63b8-4650-b9c2-108299796e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc7673f7-33f6-425d-bcd3-c98296ecf014"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5008aa1-c215-473b-b7f2-7175bfeab1e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ac23b31-b0f7-497f-988e-afc18516c562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2209a2fd-4d0d-43e2-b203-78d8d478e8ff",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e2a60d2-80dc-4619-9a2a-65f475bc9eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5965809f-0159-403b-9050-03f341454c64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a52f650-8810-417d-bc5a-9596f92628f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f24626a-1035-4ef1-8ffe-3317682bd85a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4034f35b-22aa-44e4-9b47-b4f445f8c086",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf2fd4d6-3e45-4c8c-9255-e599a6cbd455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73ef7784-159e-487a-843c-894a0bed52a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c550baa1-3363-4bc9-b7c9-e830e10bc09a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8b4f15e-963c-4bab-a3b8-1f183438efe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51190360-8f58-4132-8035-96b8f7946b58",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "471d47a3-c753-4b55-a3cb-3b0f048121a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebae5aa0-7245-4ef1-98da-79381e406b65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9821f94-7af5-48d1-b763-c62ca13c5539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e532480-ad18-4ee4-b385-34e682effaf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f30d560-9d5e-4892-8abe-57d65c1ba01c",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ddc6d6-8759-490d-9369-c08ad3768809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beffeddc-3f2c-40b8-a6bc-85d6c4762ed7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cadee1a6-3cd1-4582-9f2a-fa7171f87563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8bdd920-7740-4a82-a8b0-c58416a33a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4478f94-b029-4b56-b1c4-4d7c09965728",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35872560-0c7a-462e-8d37-718ac1d575a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2822b59-138e-47f4-97f1-cd0de5492004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e1c0b6-4d23-45c7-8bea-a48e791eb368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bbf5213f-903a-44ec-bc0f-4c09d95a39a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2431e1ab-09ed-4a57-ac51-815f2c424453",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "867214ac-3a07-4773-ac43-1d0f24e95948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bbef9a6-7f75-4944-a360-244ac6255442"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bdade37-2722-4be0-8f9a-a4590a6c2ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7113db8e-4866-442e-a1fc-63a800fc8ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac60e856-114c-4bdd-b918-f9290c60eabc",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a998170-6fcb-4a57-9b5b-4de05521394e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c947d5ac-8c2f-493a-9230-19de813e37c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47da45e6-1e46-4eb8-841b-671524c2f888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "655dd86c-be27-4602-ae3f-3ad5595b8819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "438a5d96-194d-4749-94e2-4e257920bc87",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c07cbfa-4ccd-4be9-8a94-d58e1a02e73a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46484ac1-d789-4915-87de-214d2646dc3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c5debe0-6140-44bc-82db-d4d3e10d6ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e875692c-4b52-4eb7-a59b-89f902565481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "438775b4-7ce8-4115-bd3a-a072743b38f3",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d694f9cc-62e4-436a-8ed4-1a1d676a4261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2a0c452-a239-4b09-9932-cc6bd766cb4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf0cd5c0-9fde-4b53-b992-98eea2262d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "08b0b362-2652-44f3-87e3-b24e8e2d7ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "065e00c4-7628-4364-b317-84838037c3f2",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de52229-4ad6-49cb-a0c5-e0fdd4e602e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e0f2531-83ed-4919-a0d8-ec071f59717a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a3bde6-4afa-4148-aa72-32deb80e5aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "813bd83e-7cdc-49e4-8487-fbeab3143cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6178da54-9e4b-4bb5-af3d-6cc5255a3572",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "647dfbae-0e28-48d1-b55c-afeac70af70c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc50088d-98ed-4d25-97c8-4bd86dc3c639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc9bb04e-5ad4-449d-8ade-1d9f70a531bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c6149c3-1798-4b68-ba24-1671ca23b6b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "378f5cb6-62cf-4a3c-a6e3-1cce6040238b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b9abc3-68b1-4097-8e41-76992b6f7e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "464d3868-459c-4f4d-ab8b-02e5e05a50bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a8e5fcb-29ce-49de-a3c0-71fc9550e1c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cf9effd-2d92-4e40-9763-ca57290d13a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a13e17ba-747c-4890-9ada-1cb62eb7152a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d6208d3-8676-4063-9723-396d66cc870d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0aa3774-0326-4027-b1b1-f1a4adb93b79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c2bea90-f6c4-4e83-a096-6c2bed181873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a7eb43d-4e4d-4745-b43e-ea7b69eee445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d572f2e0-e42f-42d1-a1c5-2488cb96fafc",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a5e8108-4a5e-437c-8eb1-3b22814aa2c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cadc72da-0364-4811-892b-83d2007f28da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "634a844d-0ac0-429d-9658-69ecfbc82575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "716ae8b5-bc60-42cf-b516-98ec881c5b17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c790045-5983-4df6-8b07-db7dd5538a74",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da52ad9-96b4-49d8-99a6-166b8b4fc4f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41944ca4-9563-4d4e-b3c4-f00629bfabed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f90ceae2-cf17-4933-adf0-c19188e96aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1704f54-7026-47f0-b2ca-4212cccb4e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72bcca2f-9fb5-459a-a2f0-d50fa5da43ef",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed2ddd73-4485-48ed-9b90-85acf3033265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28fc18b5-33cd-4614-9404-24fab31930bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a8d5ab5-ce98-463c-9c74-43ac5ef19b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "99fd3ce9-e0ca-42e0-a6ff-6ceb7255ff78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "787f9503-dc61-4ab7-9927-b3148dd71556",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a3d246-2767-4a9c-afa6-4cbb6f818530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b86327d8-0b31-4788-9d2b-5465dbd77c5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c96c6b66-858c-441e-99ba-6de890fbb82b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "75eacdba-1bde-4f8c-96e4-4a292f5eb8fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b13223ca-9cbf-4e06-bc04-03c65d055f1e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe329df6-cf88-4b40-9197-7a92ba4375a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e2d95dd-03de-4071-bdd7-c0e3e2fc6c8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8172882-e867-4334-8fd9-b03ffccc920e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d002993-d995-4275-8eee-bd6661296095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c97a36a2-0f81-4d08-99a7-4cb8ea69806b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2245490a-32e2-4884-852c-a5d0a9090742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b833c4a8-3599-4c87-a2dd-88b61f45bcc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e393cc8a-1374-4d83-ba92-223e84b4cf45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ee4f827-e33e-49f4-88fd-9e1e6991433e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e90801-84b8-4aee-a3b1-3ef57359d642",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4799447-7908-49dd-a64b-0e016925818f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3511684-3e6c-498e-8713-5338d8303aa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8821d5d8-8eb7-4a33-b990-f810887fdf80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fff9ec2-5c65-4a7d-a888-8667ca349a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "299d6df1-0583-43fc-a0bd-0bef8005e2ef",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e6468ca-9d42-466d-99f7-4b44d62b9108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b13599b8-ec1e-44d8-b30a-58e5ab9c7d31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "075a93d4-1a35-4e57-81d5-3d2e977c8d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ad1172a-c7d7-4f3f-8478-f8b36b85af00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd3f5db5-92db-4581-9250-7e434a69b0bb",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e9246e-e73b-420b-8996-eec2b0bf41bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8303786e-9135-4d42-a298-e9dec3d9d24c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cc33e90-6c68-4182-b90f-aad9b065ebaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d50ae02c-3f79-4656-baa7-f0a43f4f4f41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5f558a-dc91-4b7c-9f0e-d5694b0baae0",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c95536f-dbda-46b3-b0e9-5265f13b0d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc920279-03d0-4d45-89d0-efe3ea973770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "164cf19c-79cf-47f2-bfec-6abdd8a99c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "362cb8ce-5ffd-4a1e-adfa-afa73bfd95fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcdc2c78-bfdf-461b-804b-91754dc9574b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ced825-ba7f-45b5-817d-b473d93850b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48612cd9-b46b-4bd6-bec0-0a03c3ff5e2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f71a8559-acea-4fda-8349-af4640a67fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3b08335-47bf-4b87-859d-ace2b26d792e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae9efa18-c435-4811-82f9-e8820f81e1f2",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8627898a-2ed4-4a07-aa0e-7af8489453d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee8c2731-ca77-47d9-b97a-fc2185e068dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42bff74e-7e46-47c9-87be-d02ad639d41b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "133d001f-6924-443e-8df3-58ee45f94673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c685cb01-f9e9-49e2-94d1-be444f33d702",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2951e0b5-6949-469d-9674-b9754c9f8033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "915e6b74-b961-4c5b-aa6c-0bdd241361b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3899df5b-15da-4dd2-8f56-6beace0ebdf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d428fa99-b511-44d0-bb99-0167a8bcc6ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a107fa6a-5858-4e54-990d-538425e3aef2",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c174c7c3-dc66-4f1c-b864-718773220e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65b5d434-e556-43da-88bb-a57bf79c334b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2fc5f98-6973-4098-94dc-6bed01ecffde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9dc22de8-652b-4356-bb51-df8dd3bf6277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a44161ae-40ce-408f-880f-ae916e02eeb0",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ffb6ea-aafe-4b29-8e5e-72a39775ab47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fab4dd2a-c22c-47fd-84bb-34191cc6c2b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3491d55f-a7f5-498f-b490-7a16d6582bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5506ebf6-2754-4900-84c3-14f62d3f2484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da99bca4-5585-40b7-ab6e-7dd27d0ec565",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f39ab9-7c10-4950-8cfa-2d0300282d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c71dbe0d-4e44-4b06-ab47-1926626263da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c7a0b7f-0594-463a-8e96-76e03b8a44c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "7a1c19ef-9be7-427f-b02e-d759717a4356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6448806e-8031-4ba8-a3fd-26ba9c42c972",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "835782c9-c36a-414a-a6bc-2a6eaa986753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6d3753de-f308-44ed-9b53-80843ce8bed8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11ddf979-5c75-4dd8-bbf8-80a22cf20b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "83c36f02-7a80-4f72-b67d-e3e7a9d6ca94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a5609b-2fc3-4ce4-a8d7-5c82dc881b70",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a4943b0-b7af-471a-82fb-8b96e2434ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3391e61b-155c-420e-9de8-612efa6fedef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bca5234-f5e3-40c3-b208-c3593e20840c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f63779dd-2acf-4ef1-986f-9bcf1596a923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec2af677-15cb-4216-8072-81e6ef0e51e0",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a20ae91-380c-438b-9862-d3bda76a620a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b694f85-48d3-4416-b764-f678a95e5337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a322bf-0065-44ef-a1e5-2a9cd90dd875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6f703d2-4665-4f8a-8eb5-168cd24d1358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a78035c-084c-4a43-8e9b-a0424f6a1a43",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb904a7-72c3-4b4f-b6a1-a5fb0e95b767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "436818f3-c46b-46cb-b0a0-318d3fba01b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69451763-4a76-4477-b9c5-a82ba3fa4700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "89d589f6-f63a-445f-8f14-03ff36b619fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f3d9f9-e278-443d-901d-1226127037c6",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2973030-dd39-4334-b040-3e949c36c3b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1c9e140-168c-4567-8fc0-b3d42256177c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f3d8d0-e513-451e-bd49-6ce898509933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "14e5a589-7469-4f5d-a964-e17ea8461525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed86f9bf-d091-4b54-9efa-0384a844d396",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1706ccb6-fe0a-4cd8-bd8e-acdbe35dec3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43181eb3-bc07-45dc-ab38-f4e191b086e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6397aca5-99b4-4db9-a383-9b0f086fd272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9937086c-a05e-42df-81dd-d6638d6ae91e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7b7e484-6081-4045-87aa-495c037de8b2",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a2a04f-34e2-40ff-8bec-ee7add917390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64907d45-47f1-4d13-98aa-96acfd3d566a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff4fafe-1127-44a9-8093-29513805cd49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "34ac22af-5bc4-49e8-92ec-229d3fdf8050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43562ad6-f6c4-4af0-a951-255c97b746af",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a12dab7-31ba-4271-a3b9-1edf5d03c37d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0970e25-e900-4397-b5e6-3459596afef7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25459a76-9212-477e-86e6-d63f1746a0c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f80cba68-648c-4b47-94ac-718d6e8738dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d4dd39-8700-4153-9615-413f4816419b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa443d75-d9c4-4264-bfa1-661204ea2d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d88e9cdd-a520-431c-8d2c-d14c481f22cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd56e8d-2477-49ec-bab6-9e4b8f25f27f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a250ec2d-96ef-488a-80db-0a7b1c09096e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8821fcea-00a0-431b-8c59-f4ca5f914230",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e2b6af-c97d-4afd-89d3-dee3291b46f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5666749d-9208-4edc-82af-8843b47a93b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bae3cb2-80b9-49ff-ba26-ce63f918e051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d675dcb6-63ee-43a6-8261-12f00e50a5c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c4d1c9b-7091-477e-bd71-dc42274104bb",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f664f1-545e-4d16-869c-fb997296a4ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f02163b3-a3bf-4132-b3fe-2242cfea46a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9768b6b9-b572-42e4-9f2c-1adbe913e646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "41fe559b-af3d-4c19-b950-7b6d46807f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59fe1c1e-c645-4f18-bc4d-fecbdf47d53f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af776620-eadf-45a6-b530-20f2470bd558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd5bfcb3-dfd9-4fdb-9498-197eb2045a79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d559277a-77d2-47d1-a0b8-dca43d201dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "980c1757-096d-4829-8c1e-b16617522f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48d13294-fa5a-4bb1-ac29-07989d589b7b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83cd3c17-22e4-4f49-be63-2b7d331eb723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a4e4bcc-0ce6-4b89-b99b-81251fb808a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba874f2a-5bd0-420f-b38b-c4c00374d37b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0c19615-ee7b-4be3-ab52-fab71dc0f253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abbc4dfd-7bf3-4986-a31b-cff1bd168381",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe8cf3d-b687-4946-9a86-e01020af8645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c39fe288-cdd8-4b96-9043-7b979ed6ec13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2efa1cd-8183-4945-a2ea-9891173ef654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "851cce9b-8384-4cf1-953a-1c26fb0bdade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6cf0d8e-4ebb-467d-b33d-e1bb4ffb6099",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f7ca770-eca1-48a0-abe9-7631fe7872a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36745b0d-3935-44de-bd93-1e63c7462545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d15a757f-cf13-4c0b-9a08-854c1b1f2499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "560bf878-54c6-483b-ad67-7936b13c59e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7122cba4-7202-4576-9126-01b83bc28c2b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f855a62-9185-442c-950c-5a600883f60d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4824d199-3e78-4380-8825-e5feb7f53752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b738e9-f477-49a6-857a-63bc5517f6c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "c47f6146-4857-4766-9e44-9261727b02d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6110412b-fbee-4412-a8b8-a2bb32d4b050",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a07ad7-bd79-4310-a324-62bec65f9523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8945edcc-4209-4bd3-ab31-3fb34a2b471d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ee5080-b38a-4a40-a453-55d24dcbde02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c360b356-7a58-4e8c-b94c-db7d33bce752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef9a8059-2258-45d6-a0e2-412840e82f19",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c155166-6f4c-4cd8-bddd-f7229796ba6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee08f299-bd6b-449a-accb-9a8dbb941796"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6def5cb1-d86e-467a-acc4-797ea3e73b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ec6fe96-52d7-42d7-9e1e-a16aa6046ea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94de6dd9-fd6c-4c9e-99d4-14bdc7e436ac",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd651df-abc9-4425-bb6f-77732b68233a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7548172-a548-485b-b4a5-b80488b52dcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30bf513d-8679-4a4d-a2e3-e69fa5dbfc7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "99ef843f-38a9-45cd-ba23-b4973893512b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a32e56-d5b4-4205-beb3-e708ea4e6196",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db176cd-e301-4643-9133-6abfaabd72d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "981fd9b5-d901-4747-bf73-29fcd1a6adc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc04c159-4699-4589-b41b-a605b0f69571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "807aff72-6722-44ef-bcaf-387a93b6d8ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "975395f8-fdf3-4504-b8b9-752423880e03",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d67e3c-c524-4c34-bc37-eecb7f843c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d610567-0f3b-48ac-83c8-73a34d968c34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c8d30d2-ab75-4ef0-a715-100d0aace5d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "951aebf4-65b8-4f9f-8589-02d274ca91ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c8ca09-0247-4f46-8ddb-d2bb2da41b13",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75427de0-5fc9-41fc-8905-80d1f8bc65fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a8d3cf5-b627-4be3-a912-8eaf287a49eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fabada46-9c89-44f3-ae2d-3c0e1ef468b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca22f80b-d765-4655-bdcc-9bad8a1c662d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c4a856-d868-4ed1-8370-7dc8f2aa15b6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "545d1fc9-5397-42b0-a342-79453d6fba13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eb8c282-280c-4003-bf0e-0f4396b457ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe7f916-f5b1-428f-b5db-a7e10c93d4e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d0d36a8-442b-4c16-9433-cf8ea82ee502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90cbee59-0ea1-4312-8d98-23015cce5a09",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "509a9ab7-2d5b-4c6d-ab0f-d9fbf05d54c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb50603f-75e5-44e6-a0e7-6859366aa9bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d47a40bb-f239-46ca-9151-704ad2bc14ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "55c96712-5310-4118-b1b4-60e111a8071a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62d63beb-a42d-4ec6-8392-f5efc4c73c38",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55648007-9b02-467a-904a-d941f7bf877c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a9fdcd1-4f3c-4c4a-a709-2243c641a560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e07e93c-3301-45ab-8a26-a85bd26b08f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "774da8c5-e2b3-46a7-be0f-9b52bde81631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd41be42-0732-4e70-b680-9ef53dc5d37c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c3565e-1dd2-4ab2-bc6a-1b61f18e148f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29a81ba9-5f21-4ab0-b424-5b84585844b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f55ba8-5c3f-4364-849e-3979ee9c8060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5485f3b6-c3e1-453a-92f7-19b79e013531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f84511-552e-4e7f-b192-1ea187e5e311",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "063e6aff-25c9-4746-b039-498338c04131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d39314f-1fc7-47a0-b622-588ba4e19f0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d311104e-1ad3-4d81-a7f0-73aca24dca8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5238a57-309b-43a5-aba9-7fc27bf2711f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "440ec97c-e673-409b-a200-989852d57f1c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4487aaad-1b3f-4fd8-81c2-ab11fe39e0d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ceb936d-f7ab-4714-95bc-87f30e94dbfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e533f38f-ddb3-42fb-9723-f746057c7480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e6ccc03-422b-4627-b892-5b240a8ac202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72dddc60-20ff-45a0-8fe0-0fa28c12e44f",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18158abb-97ad-4e63-8b15-1f18e2171c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbc75e21-5706-43e8-9dac-d0133e8a737c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2032bb0c-8412-4ddd-8df0-9ed2bc42c5e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "815ce550-a693-48ef-b5f4-e9e19bcac8e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d90208-7842-46b1-8fbf-fe9eb233b794",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22245201-860f-45bc-af1e-bfc7c0f3879c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5f176b3-7ab4-49d6-a1d4-236bb87233d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18cb3aa7-b6f1-4819-96ef-c536e7d1801b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd8b02e4-1569-4883-b560-86af8f2c3a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f72b0749-47f2-4aef-85d0-8833ac60e74d",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d56e2b2f-88f2-4b1d-aa3d-7fbc4767de69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2586970c-b6ee-420f-8e24-2ef11b26ebef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "551df130-440b-44e6-8114-798272837374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a92fa13-1640-405f-9cd7-bb04f06a36b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f5bd3c8-a418-4fe6-af8f-cc01bcc90046",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5484bae-f8fa-41d0-a660-19bffd1074d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34f2df6d-21f1-45be-b9a5-09a14b064c7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "417f821b-de08-4f3d-98b1-4ed85b89adde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b40f7fa2-52c6-471e-86c4-371979236b87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "802b8989-7adf-4070-891f-abf2442cffc2",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6307b308-e1e4-42ca-b8cd-fd0976d78e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7453d9cb-46fa-4f65-bfa9-cb7dd4fd7b3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a35466c-a262-4972-a8b4-3c07fd2b436a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9dd26b36-5f58-40d5-aa1a-54e234ee29f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "461ba803-1071-49e1-94b2-262dbd78d1c3",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91a0dbe7-a42c-49c5-8310-5714ede5c250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc5b621f-f706-4b41-8a33-3302e849b534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b48516b-a5c5-4cc1-a162-908db3f7eac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "662fa559-7975-4e89-ad86-2f97b9a70b13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c4c0b7d-b3c3-491b-940c-6f61b4609c9b",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8e5b958-2d75-40fe-b8ae-4c81d1ca26b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff22624d-094e-4e63-9817-2e01b3eb45c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d2558b9-5699-43f3-9584-64a106af94c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e4a9708-738b-4429-9462-0d449e8c30b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "406aa11a-f910-4fc7-8e07-9aa3d125886a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59678570-aa63-49d7-85d7-8c7485ca2fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f6404a4-b160-4d34-82a7-a0b8b02080c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e7c973-e1e3-41a0-94aa-1d83b9aed376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee1274be-9177-4bf7-a513-871ee3c74232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f616ba-6a01-4961-a4b2-9e9fca435f16",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35fab490-a812-4480-9405-149aadfc7f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2afe056a-5143-406f-aad6-dec7e1fc03c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5955c8b-23ea-4aba-826b-1377d59dbde5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "46709882-d3d7-4e89-a9d3-62131ae4417a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84fea90e-b34c-4372-b00f-63af9d4321c1",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a02a18f1-021c-467c-bebe-21ac991b6130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d27d2a8e-1ed1-4fbf-8b8b-5bbbb76de8b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16705a1c-a6f8-4725-9dfb-010e3a2ca277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "779ebf68-a2df-4c66-8ff8-a30c1ba147fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a20b3c2f-171c-42d5-a815-3845763ec3db",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95882f58-3928-4827-a08a-ee4bb7cef98d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a2ee1f1-f440-4378-9783-1c5a78165827"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59332a73-7c7e-49e0-ba60-7bcd9f9b5865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "07307c8f-90bb-4aea-ac70-f6ddf86f79d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2405d24a-961c-40b0-804b-ad76384e8f71",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f4769e7-04ba-4176-b860-3d6e75a7121c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d78eb79a-9760-4c13-ab9e-3862af09cce3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c397e17b-1af5-40a8-895d-89419efd7b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "45efe2af-c03f-45df-bb32-106dfd6266fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c36b8eec-f683-45cb-ae2e-8fd00ba73fef",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "687b2db4-e657-453a-a39f-3bbc96bb5ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aac2856f-5f1b-4af5-a6d7-0d833367b565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa577b5c-e535-461e-a598-f38ef34ee85f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1741aef-2598-444f-b3fc-b250a10b80a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8423af0-bed4-41f2-9150-c0cb88ce2b92",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb7e764c-41f7-49e2-91b1-674746c7621b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afd9f5d5-a31b-4fc3-9852-a5bf147c373f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6ec6c71-37dc-466a-936d-3f6969d04a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e07f50ec-abe0-4fe8-828d-1b62d50165db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5460606b-83c8-4846-aaaa-2fa6c101b7a5",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c38e49f-9be0-4df0-a7e1-c2a78d0bd19a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90d1e7fa-dbc5-40c3-b0ad-2787eb4e5baf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "773c934f-8a16-4a4e-b0e7-11d8e530404f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cbe45d8-4b71-4164-93c7-bb27fa05278c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f27e5f1f-b1b1-416d-ac53-3caa8ca67eae",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ffdb986-1b02-4223-a969-ed1400f0c780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5923cef4-d206-4032-b63d-e30c2eb91a47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f1b3f94-2a4b-4e42-98aa-44172745c871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae683d0e-cf0b-4818-ab4f-2200bf0314e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33968e8-b8f9-469f-9cf9-cd4f6d99c2de",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "938b528d-8426-4d35-aeea-a2de6807fad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cebcf941-cd97-4b9b-b12b-97ad87fa1873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed9f7d5-a0ed-42bc-90ee-5331131ded50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a1038d7c-aa22-474e-99f2-a17e3cbe9038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "361a48a9-0ca8-4716-8d32-9fe19bd1531f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b531bd4f-7fd4-4193-a810-a3501cb25691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c712fe3-d3c1-43de-a33f-be4c91a7cf20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2208bf39-a5fc-4b9e-8685-3c5900706aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f409a628-67b0-4fd1-8e05-e51781958e60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33448f45-1ebe-4624-89d3-d028b5455990",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce4b771f-2207-49cc-a3cf-42c2149e2551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20f9e67e-7e68-48c3-93e5-e6640cd3683a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52b417ed-7b60-4755-b59b-cd93f15a17ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "89b7bf8c-1483-4551-8f40-491ab8c77a2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a5768b0-9de3-4f98-8703-6a3a1b6948b4",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b8d8130-43ea-4e91-9f90-59a1be84c5f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ab0c006-21d1-4902-a347-ca438fa589b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f064ab2-4fc4-4581-8e02-7aee84c9d7d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9ec20f5-5899-4acc-8ad4-cc91fa1dc232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa699d14-42bb-4acf-9434-f728fcea926b",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dce0282e-af7c-4c66-b2a5-8a6c02169674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd3d79e4-5635-46ee-b597-a001b6dd88d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe0c5354-bc81-4b35-8395-fd7c1c89f23b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fff6f2b9-d5d7-4187-8db4-7da2beca0274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d31b7fbb-b4c8-49f3-a12c-cb1154e1a5a9",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5358e86d-b985-4641-b0be-fcc5811a550a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7e6200e-567f-492e-aa1b-a33d1dce9349"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e5589e8-d955-4cd9-84ca-61eedd09f5d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "10a1ce98-9ad5-4199-8b0b-06d2b0fef0eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a884eb0-5c5c-45d4-a108-4b579ae6c8ea",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11589ad-9cb4-4cf9-b81e-3d57b8973936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d28ac9b7-d4b6-43a7-b5f1-863e44f95456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "997cf3f8-0d5a-44d5-b588-0aaf2ae64775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ed48fbd-c63f-4282-a854-fd3a114d1448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9046c4f2-5425-4b4c-be42-af8e38c36c2f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31af30f4-be42-41c1-b4be-3219304f8763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e2e8c50-8802-4902-beab-edd9b2e05343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c42e3ffc-3b51-4c64-b901-4c7574eccf45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7eaa98a-3d11-4354-a8c8-6705ff222975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1801bb27-d2f9-4c7c-8146-d70ddebd3450",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f58c334-ed73-4280-88ab-9a7dd1e8c2cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c61afe28-cc48-44a3-9a04-e73208f05e1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0c7f1d2-516a-4eba-8f57-edbe48e5d5e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d719db63-8ebc-49dc-b427-1228840e4035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "141cab96-e845-4eac-89aa-aa18768eaf84",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ec9f46-8de5-45ab-9b06-bda5ebd138c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a03091e5-c909-4a2c-ae7e-1ac353c6f72b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae9021bc-0975-4f42-ab82-c31218127a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d707bd27-486d-4da3-b624-ee06c3ae4ced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b114152-360d-4685-b59a-2f698fa60adc",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ec6b34-533c-4d5b-84d7-5eb17892660b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e0d57cd-540e-495f-b53e-180d099c9806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19bdf04a-0061-49b7-9a08-660455b952da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ea5f140-2b13-4a14-8908-356ae42c81aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa9b16ba-d3ca-44dc-8b2d-9f3a264c5e9c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a0ea7f-579c-41a1-9302-2e63e9d785d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "277217fc-b9fc-4377-b72f-cbb0ededa46f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81f88216-d71d-47c7-9f8f-b5f234e4761b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f41c75a-3a4c-4d3b-977f-1ef77181ddd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f5f2fa9-ec22-4ea2-9e16-ff1c8426833e",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3c6766-ccd2-47b8-ad9c-fc38f7d9279c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9a0bf2f9-65d8-4c91-9352-3a97f41937e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f434d623-5598-4320-9404-b16c0cb066ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "958afa56-5432-4ff9-ad54-7028ef4567fe"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e70c0c3a-1c4f-4514-b9a3-740603e06b05",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7dd6ad6a-a0f7-48da-b6f5-83b84a848f17",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b7ab541-cf0c-4fba-956f-27cabde26c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c3d2a01c-3ad6-40f0-bf01-e86e84c9492b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd7bd76-fafe-4395-bcbc-ab02d4de6fd7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9550ee19-9692-44a5-a4a2-73698c8636f9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c255382-a039-40d5-9d6c-28b2a078fbc4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7dc4c79c-742f-46ea-b7fa-317e75482d02"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d15373e3-8075-48b6-9c27-54dd3969c122",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a10bf64c-3b3f-4620-b17d-5631a5c18eb7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d7081da5-3157-43c9-b64f-ed14b7f27bcd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "962464b7-d483-4014-a636-369b39728b56"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "75250bc1-9bf5-4eed-a5af-252ccd7adefc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f6f4fef8-9b30-409c-96cf-d5a535c2d4a6"
                }
              }
            ]
          },
          {
            "id": "12d97b22-7996-4c7a-9613-dec21ada20eb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5e60e304-cf2c-49fc-8f80-b236823f0f42",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "0102ceb6-5262-4705-8e2f-e0ec3fba0524",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7b30b66-49c9-49e1-ba58-50700e254e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "232733d2-3309-4712-8e71-e2083797cfbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "295e2335-c117-4fff-a4de-90c0c42d6ddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "861db4c9-56b1-466a-9d97-77af1077f215"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "84bc281f-be08-4e7e-b147-c659cbe4473d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0866b937-1581-4420-9afb-c9bb0f21ed1d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "202b781d-6bf6-488b-913c-75d7722e5feb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e3674bae-43da-4d33-9834-af86e8e747b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "63e5fdbd-1a1e-4f1e-be2f-f6ce65aa4e48"
                    }
                  }
                ]
              },
              {
                "id": "764275b8-41cd-4e5e-9c1b-70c779ef9f25",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3f4452f-63e8-4d03-b960-a76ae17d394b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9620d870-5418-44b1-b273-b1e3fd7c6f9f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "98fa0650-ec15-43d0-9036-98ce7d623922",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "79abb904-b273-492e-af2f-16253efba50c"
                    }
                  }
                ]
              },
              {
                "id": "9c0f2c82-100d-4841-9c57-16efd6bc94bd",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3606f613-b97d-4f04-a6ab-b3bc03447c73",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8973baed-e5ce-4ecd-89d0-17eed68f965a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "50d96d5f-a4a9-48ce-aff1-db3484f2a578",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dad0b608-ed2e-40c9-a022-31c95b77e5d8"
                    }
                  }
                ]
              },
              {
                "id": "2ae61f7b-3700-419b-abff-06bc4c37f735",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b38128cd-3552-4dfa-a036-e5ea2f0fb428",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0f1f1199-bee0-48b6-b243-215d8efe2a51"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f338aade-d118-4d87-8146-b65e2270a09f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "12fcecc5-bcab-486f-8457-b553e534d15a"
                    }
                  }
                ]
              },
              {
                "id": "727dd0c7-83a1-4a20-96c2-414ff2a36c46",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f59d4a0-1753-4703-9158-873b1f5c7fe7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7cb5a63f-e85e-4c6e-af83-919f20b16ae9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fc1ffc95-8fdc-4b9a-ac74-f2905b6cc2fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c6bc4595-3d32-45f2-991d-d3d54d252657"
                    }
                  }
                ]
              },
              {
                "id": "4038748d-d271-4dfe-8e77-47fe907a6053",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc500f9e-9aeb-430c-9925-6a9160afc605",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2fec10ed-f410-489b-a3b7-af7486ab5734"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b9ccc0bb-948b-432c-bce3-a55822c93121",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2137bfeb-187b-4276-9d7b-9b1c346defdf"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8f6b598b-5c15-44dc-b576-ff46790a46fe",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9c5d4084-764e-4384-8f6c-3eb9ef000a9f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "74491174-cca9-48c5-8e1e-d6646f4c0a43",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f9403c26-76bc-45eb-9fcb-fc7a499801b5"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "558756bc-f2e7-4c51-84dc-917853058cf2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "4a113523-ec26-4774-b850-c05854ebb7c6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "29338a84-b9cf-4e0b-bc89-3899528601ae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6225aa14-482a-4db4-812c-7944e6f22921"
            }
          }
        ]
      },
      {
        "id": "8992f8bf-5602-4aa3-8a4d-198dec3203fe",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5442137b-1949-4446-9951-b72d864d3ae4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7e36cbc3-4949-4fa7-a94d-85ffa30a4f49",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "85eea0e8-45f9-4c72-a92f-076603530b83",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a3be688-7ccf-4cd4-8e79-8a5526af757e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d136b8e-883b-4ea6-9fba-793dc694c1b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328508f8-3f07-4ba5-9f07-8fb24b8a3ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a32a55d-7bfc-49e4-8b7f-3ef2fc4083cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5dbdd97-0ced-4597-a308-e29b69b5b7fe",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac7c6543-25f5-4602-b147-51f68e86e9fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daa559d6-fdd4-4d96-abf0-310389d1c889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65eba727-e4b6-4755-9c03-ec73b980dad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "de82f4bf-5853-4016-92b3-2f55b6312dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a00bd39f-f434-40c4-95e5-31dc8ce1bda4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e1353a-0f55-4d8c-b82b-b645269fddc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96a516dd-b50d-4e2b-9a63-db1883ac8222"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7f76bff-96d3-487f-be3e-e5d31200ffe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a80c866f-744d-4cba-b05b-560625f92088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b0af95d-2a3d-48b7-90d7-1bc32e062d82",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b688a5c-4448-4996-903a-96dde2225a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33b6528c-256f-48b4-8b2e-7c266f9a5c6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46effca0-cf97-4a66-b9b5-88e84feb0e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee28f6a2-75d1-4247-8212-f21104e7ed8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf5c03d-1dc9-4fee-b0cd-7c2fb1006fb3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b6af7bc-6f36-466b-ac62-f178c93b5510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec897dcb-098d-4b86-8b14-7033a45a0e9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a5d14d-8f40-4686-829a-6d8237fb1fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "24296231-9092-4117-b623-4d9b86265090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4c732ef-f95a-4db3-9489-ad539e5b8a27",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22079467-c550-4ba3-aaf2-ab3e713c9e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdfde9d7-19b5-46dd-bdc9-e4712c652549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "874ddf2e-40a6-4c7b-8af0-9b3bfa615eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "96c3be13-26fe-4349-8eb8-148b66297bd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd61cdc-f571-494c-8566-230cc8c05dc7",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe082db6-0c0d-4fea-8edc-8d6e3b647039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14e7021f-0ce7-4003-a7ee-ca418ad54f08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca3a968-d5e4-4ae4-8bae-72d6748cde2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d988f86f-5653-486a-a661-7443f01146ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d666983c-02c7-445d-9e3d-23f4d8d16522",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf0b010-4f47-4f86-bc3c-9ef014cf9837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b50c46bf-1a2d-4f54-b6ce-1e0cc97099ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e958d7-d8a8-4fa2-bb67-095d91c756eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9cc1594-e424-4161-920a-2c5e32cd960c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d27de87a-c891-44a9-a904-8b6e45c9f7a6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ef9872-dafd-4570-a7dd-e7f74cffa473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1187edbd-6979-4198-bedd-6b0d308837d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9309aa55-4b51-46cf-aa7b-c080d9093f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a12f723f-8fc4-4564-be8e-3724ee8bdfe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c708471a-6219-4505-90a3-8d617f23a26f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff14ae1-a180-47c6-97ee-825eb8db3030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b28daca-84f6-44f9-b9c7-1febe5e7ba9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff91d13-83ef-4e30-ac93-4dd878cb6254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e214bb09-7c46-460f-859c-93d26c3409ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "270b13f0-e709-42f1-ba18-e911c849ef6d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbf7049c-1aa6-46d2-bef6-2d2d2a13adbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7f658af-cc3a-49bd-842d-6f1d3ca4a983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd19a8a-1629-497f-99db-184e54a65182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "54fa3699-8690-4d67-a323-b7960fc091bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dccf0e3-a59c-4b2e-849e-919c7dad4d09",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61487c17-882e-4ea2-946a-0201e132438f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbd66558-f3b0-4a91-bd12-3769650720b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7438922-0216-401d-9b86-e15cdf928efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2ce925c8-9b5b-4e05-bb94-bc3daf977e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b410795-3c44-4ecc-8a30-9e72feccb860",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e99fe7-faf3-47c5-82d8-1493d5808113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f721ed60-2d9e-47ca-a336-f401a5bb2556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f91e327-8cfc-4e15-a64e-eb04c910d051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4b9d417-3663-4045-b399-c65032a7d78e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ec7ccd9-7449-4cd5-b3fb-58f23543ea43",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e8e0e3-fb62-4961-bd06-fc994d03cc01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c02a4638-811e-4c34-9a42-b647249e44f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd9d7d3-442e-4381-9212-28e84c22a904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "34b6e424-ebe8-437b-8581-70aa8c98ad18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b548f1-6079-4a86-a164-7f215565bd43",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c95d08-4301-40d6-8974-abf1c683565e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6178e9db-152f-41b4-9ad3-bc9d98aafffb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aef8a0b-e093-4b72-9e8e-0faeacced3cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6f96cfe-7d38-4120-90a0-ca6f0135f8af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de678078-4797-4d6d-bdc1-2b9a716fa7db",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7290393-8952-4133-b04d-160bb94dc33e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4506f0af-6ffa-43bc-8301-16715c21a173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8429a9be-f6fc-4150-ab1d-adf96fa40f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bfb1fb0-7ffc-425c-95a7-e1b1f868d0b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f0ae78-bbf8-451f-8c4d-35a13208058f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ec78fb-e5de-44d8-ae13-c91d8003fd4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd5c8421-81ba-4b0c-8fe7-6c32a76b7f53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d400a771-c4d9-405c-8240-60dad090ee16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "77a69d5e-cc88-41b0-95ab-30c8dfd78cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bec83a5-7670-4252-8766-a5895bec6aa5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68c46955-4e76-4812-80c1-202a5ccdb462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f64f142d-4be7-4378-8188-08c830d40713"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b3eb240-562f-409c-bb38-986a0b678f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "76720fdd-e12c-460c-b0d6-a55b39bc0f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "531a1a07-45ba-4383-a34b-79d0f75dcbd8",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "898e87a9-884d-4c0c-97f3-0ecce8fb2f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6c8f77f-0abb-4a17-9d08-8f8f0a0a69aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e76078bf-8afc-4dea-97ff-7e36719f76db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c0bb58e-9fdf-4914-b5a4-09213037fc2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f722a0-743b-4073-b782-edbae320b154",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e173662-4d3a-4a11-8a73-8e70732c88dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "935260d0-8d05-4d80-afbe-9cd2f1d51bfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "052b594a-df03-44f5-beaa-02c7976f80a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2411e55b-d828-4afb-89da-c8cb9079be01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48fe65ff-831a-4eae-838d-2eeaffcf9ebc",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "059defa3-df3d-49f7-b0aa-991e0854af38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dd58b9d-5e9a-4eca-8a9e-14d5b6fa68fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3537359e-a907-40fe-8e38-9575806d845c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb206091-8a04-43bd-86e0-de66eb19dc66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5d2a4f5-3967-40c7-858e-425188f7fa75",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf7c1e8-35f6-4e49-957d-31a4e21f0972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d44c8ee-1b04-41af-b6f2-3479b2d4c0ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bd8440e-6b42-4bca-9d8f-92ecef093a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21813a0d-6b02-4a7b-9f33-4be78d4c383d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54e85ce5-e733-473f-86bd-900630c27565",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b16bb3a0-4b78-46f5-80e3-3a799f5bf5c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99e0ce1b-a3fb-4eee-b36b-855157ea5235"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1867872a-69f6-4452-8d70-bdc8c80212ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aaf65e21-c3bf-4b83-8e91-d29542877f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a1abc03-209b-4aaf-8256-b5340dd28296",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b92cbe18-e0f5-47b6-adb5-a175798c7745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d29ba30b-681c-4126-adc1-b45ea1891072"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63cc9a66-5370-4cf8-ae19-1e6e145cbd7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07625f75-c7a8-4788-831f-44e8f9851528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d52e5cc-4e32-4527-8589-90681a88b081",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0731692e-9896-4da4-8505-0c5797b447dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1861a10d-fd46-40ab-9f6b-2257263b1f06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b49467e-44ac-4c30-8dc0-7a76ef5e2132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdeb99f9-243a-44a2-afe6-4775f5be78f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb778332-dbb2-4772-8e56-1088423a9703",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8156b0db-a5a5-472e-a990-665adfd256a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abb2e737-6b8b-4c84-8d13-f2c3cfd95d1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e90516ca-1273-4f36-b2f8-956d9edc3978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d83b63a-53ec-4696-b38b-3c3f4c41576e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "564d5e9b-2f78-4633-820b-3916dea4f61f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "660834a6-f710-48a4-a69e-02dd0faa6957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cddba9d-2254-41f7-8bb4-17854d0444a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed85ca5-86a5-4c0f-b044-41579bb6fc12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02e5b955-0072-4834-9e75-079c7198a5ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "215efea8-9b7c-4de2-9588-b5f79d509472",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b15c117-f47a-400a-a566-7907c610e641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "433b4c3c-6bc5-4688-8488-eef69736a0d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f871a680-03d2-4cf5-bca8-0e33245ddea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "facb43b4-7ce6-4685-9773-ab69af08812d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96beecb3-da04-4324-9269-bf9c7ae1a181",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e0992a3-8adb-4e83-93a5-83d53d6854d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41eaa7dc-ffd7-41c0-a13a-d092544e6c6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f28d94bb-3f9c-44aa-9f3a-37e6873dec85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ca20164-a930-4a82-b5f5-5e6e1290db15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e9ec60-5264-4737-a5b2-652e9f68853a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ee4fcd-345f-4e6f-925d-fd5e6d40ed70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ddee1b9-0690-40ff-962c-19297229ca5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9437169-b8ca-4246-8c3b-259b69949319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc816b8c-c43f-4814-b415-63cb9199b221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f328a85-0a4a-4430-9c56-f9a4d559078d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d326380-2134-4b10-b291-7400bcc5b465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "115ec7ce-5609-4bc9-853a-3553693a62fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04afaf92-9d2b-4b88-8c51-47fe2ab0ff91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "975a454d-12c7-4bf1-8f7f-1d4df051eab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "406261bc-f2c4-4d42-b98e-fa3c6f2f1f03",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b5f7fde-4a04-48a6-aafe-5f2368d50b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be11315f-d58e-4022-9bba-d1ccaf1a9928"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3178cc50-2094-47af-afa2-51d74a90f426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "948b6c5f-6389-4189-9174-64a0dde0003d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fa2bcd20-12b0-43b8-b910-0b35320c0933",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "abbe6515-2a51-4cba-b78b-a164e7a702a3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0757559b-4c08-4623-8977-b921cd652a50",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a6aea188-bfce-4875-a2c9-16934bc5a936"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e83c5ed-f3f2-43ae-b479-80dbe46ab842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5e2e610a-b0ca-4b9b-b308-50ebdac4b8ea"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e213bc64-7ad9-4e92-9a2a-f610cba8ab26",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4660d184-fe0f-4e29-8af6-76b28b6e3514"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "45b7c0f4-04f1-412b-a4c3-e9fb0fbc285b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "47ea62a4-7231-4533-8491-f57791ab2f2e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "deef71fe-666b-4d83-b94c-0d64e03ce9e9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "36706ba7-e70e-430c-9907-890c68cf4230"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "781bba9c-49f9-4b74-bd8e-23213509bea1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ef24031a-a524-4894-8a28-5c22a1e7c793"
            }
          }
        ]
      },
      {
        "id": "2002f332-483a-4a29-b429-467250dda31f",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "57a33805-6b34-43d4-9080-0c1011aae2b5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cfe3be48-9314-4fcc-9cd5-9db732f0059e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3be193c5-f252-496e-9207-666ca29f73ad",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5200d5da-c795-41ca-9d71-17ac6a08b752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e5aaa05-a3df-4f44-bb74-c953eb5dc7a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87fd4887-8a26-4a8c-9bb3-209b6db8e5ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8d4de03-4e4f-47ce-bc46-e3a2954df04b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ede13d-9e49-4f0a-af7a-00eb110f7e2d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "121ebc63-40f3-4f06-9bff-60dd36957f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aaf9327-2cfa-48a4-902d-24b4388c1ea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39cd7f5c-d395-4fd2-b8f4-00fc1df53ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b7b86b1-0278-45a9-ae5e-90d1cc0d7b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3f2c355-a19a-4586-9571-6c2363c56d30",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19546e39-99ad-43d5-8a80-f0a817d610c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0ccd296-f91d-4eaf-8b5a-8879f3f7322e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a918c2d-7510-4f37-994a-8f2d1832ab25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7eeea287-3f95-4cbf-90fe-7af77330f235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "212e8e24-2e83-43bf-8805-fa23eda311db",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b86bb13-ee87-4dd3-950d-af1c79f766da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5f23349-4c8f-4bff-b253-ce82b9c66e79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce740319-64b9-46d9-b8ae-5572dc7f1766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "70eafe68-40f0-4829-b2e9-ee13d7b05e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51c3a013-632f-4e9c-b596-b70d9884cbf1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a1fcb4-f744-4a24-ac52-cfad743c4468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5a41af4-deb5-428e-9afc-53918a8470c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "397687e3-9c12-4b4a-81ce-7971ebc1a32a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cff6b99a-4648-47cc-a56e-b1a1a63012d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6322e5b-ad13-41d7-82d4-a2a7667042be",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a627b50-91ba-4568-8487-2bd8b7b35bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "765f1ff4-1927-4b90-9ab8-cfee5eb1d30e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "610dc96d-477b-49c9-ad02-739706ac87bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "09a0fc1f-f829-4b91-878b-318a1de982d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65459e1f-0bf5-4660-9396-e3540123ceaa",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "236257b8-f746-4df0-91b0-218dd0d023b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c56b1b31-390b-4511-922f-ab19660878c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54de54ea-f9e5-4fe5-b880-316e89db54c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6baf930-82f0-44c5-bf12-d9d3e7e8bbb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "474b4eec-c6f5-4589-a92d-32a6df4043e0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e24fb6e-4c69-4a6d-be58-ef3fd1e7738d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c58c775-9690-451a-8602-ddea483e075f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f57a2e8-1111-4d5b-9201-4726eff00468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0250e342-a548-4ae6-b0f1-e6a0a6f1e2a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e85aaee-2a97-4747-9ad8-126fe317532a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba543a2-bc81-4185-8929-422a2996d9fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7cd2a07-8a05-4a54-8e81-64b008062769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab53d50-ecc7-4b30-9859-2455ea262f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "924fa9a8-1799-4d63-805f-420a35a4e9ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7133009-dccd-42a2-83e3-b0fa9006d361",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24193950-b4e1-4385-b9ae-6beb2723d635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cd90c10-8658-4b1e-9663-28fdc4e68881"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "753a9ce7-6b14-4ade-ac06-498989b3fcdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab6a6fd2-2384-42ce-957a-357ed1046ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7794c6a-192b-4d0b-9d86-e48d20fe64e7",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f39d15-3db8-4d1c-ad4f-23ddcf70c6d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1b1865c-719e-420a-be3f-764934039ed3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03be44be-a449-45ea-ac09-4b41592f9c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e3ab93af-8e53-4ae1-b397-59d9e7db1e4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c803e1e4-588a-4b0d-bab0-a9e15ee04f1d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e4864f-1604-4893-b6f0-54df4237c37a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a1ed016-c927-4e0f-ac20-2c3664c354d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac196ce-a8a6-48a7-878d-546ca9b01b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "df73bab4-a778-4f4b-8053-9d0c885b71b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a6bc293-d2a5-490f-9e4c-031a4818b453",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1104df9d-8779-4af8-908e-0084d6ba0e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23442602-6c47-45c5-b18c-029c99f5897b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4faa46-f109-45da-a582-35b6d08c3ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e135f33-2ede-4dd1-93df-5798c8aaa012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7493cf7d-62db-4a22-a352-7cb19bbcfb06",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a64d78e9-d317-4526-aa43-8ed7e7915b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43240e6d-a2d7-41ee-9bde-76546e959760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b64b94-726d-4757-bc4b-039fdca53264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4d4f292-aa1d-4be8-9361-52589e7809bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f86e9fd-00ce-4221-84fc-1c5c787d1bbc",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c35a6a08-2c19-44cd-9de4-f4434d29e884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfc4defa-b323-41fc-b970-19fe1926d4ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f9601dd-fe24-4d96-98e3-6c448c4aaa9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7242f0b-3624-45f7-b51a-5996c95a5af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beec5fe0-c67e-4cf5-9d54-3d527bf2fc97",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28952cc7-e0cb-4a40-9db1-5a48a68edf0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28aa6f09-6af1-43ee-8aa0-b3068117fffa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd5cc49c-95d3-4c2a-aff0-06e68da4dc0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e169466e-2f95-4eb4-91e4-765dbf36e3a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31364353-4a9e-4ee0-91eb-f5f857eb2c93",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb140232-7046-4122-8d84-82ae101140b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "314b3bb8-5540-4e52-8d4d-c190c3e29930"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b1b966-6cfa-41a4-a4dd-8e39eab0bc29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fe0ecc4-2f04-4e83-ac35-c66949f1a0ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55576735-4c4c-4ed2-95a7-2570202199bf",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e010ce18-d8c1-485f-8609-a9c9f0ed7b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abbccc43-441e-4f6e-8a52-39f6ce522028"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "196f9e59-400a-4517-8ccd-226053316db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "99dcd780-3dfb-4bd3-a419-d94e9e9eddee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3f049d8-1971-4647-90a6-7c4b60e74649",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d57009-0224-4904-998d-2cd34f8700a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0437aa22-6974-4132-879b-fa8ed4043e9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "412d2020-7114-4c22-8ac5-73d462eb5ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d212cd9d-29d2-4623-84b2-1e55f2b1b4c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2bddc60-609b-4de2-a4ba-530415aad641",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d9ea90-0ad6-4896-b3a8-d1638af8a699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fb5c956-27ce-4180-a25e-5f4f68fc4eec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5518f135-dc03-4647-a526-75146ed97613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "364ddd34-8c92-4439-af4e-37a4b8867ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c11f7bd0-d376-4a15-93d1-5ff862ee1faf",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c846fefa-2483-45ff-9ad5-d9a00c498cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deb0ede9-ce61-4fcd-b00b-db24f65e3a80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f72f26-fb2f-45d9-be62-0398de627801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9d0260d-5e6e-4f00-a410-0dd16b05b6a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef9f0b36-9ac1-47a3-a4ab-5e84e686441f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8abfb9e2-eab0-4b55-b224-6753e1d68e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "836cc4e4-572f-4f76-8837-486d47c3e18a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a2f982c-7457-4730-a397-9f9946da8128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50cbd61d-33fd-4a1e-8bcf-1c4f0bf974ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a5b42c2-a3c2-419c-b716-5d320c49649a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ae54dc-388e-4b7f-bb5a-60e7085b77a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3e5e9cf-ca02-4e74-9456-9ea87a3e69f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c682e284-03ba-4fb8-8d08-3e64760e29b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0219aa6-b9b6-49ca-8136-5115d02304ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf201d01-78c7-4c5f-b9f0-8829851cf68a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71711945-6fc2-49b8-8951-f23050b965c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a71065e9-25c7-4f0a-b358-cba2ce4d8495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e1085ca-c43e-46a0-8698-045375bfb8d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44d66e06-98be-4b97-9654-6e52724bdd23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d17b7c4b-3ae5-456b-9195-e810243f71dd",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7648f98d-b7c5-4e42-a2d3-8a6c37a8b772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ff41927-60b6-4a88-8168-289143bc4b49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "322cccaf-c3a8-4800-8407-6085ec49584f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2999c205-12ca-4236-aa92-290fab4b4a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74f39bcd-4eba-435f-958a-7d78737865ab",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adfbb76c-ae44-4711-abe2-cfefc2d97b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28855a1f-30d6-43b2-83f0-505b01222712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bec7eb7-3028-4e4e-8eac-d66d09ce76ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a1c70a4-4255-4f6f-940f-bad61f95bcc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9652118-5528-4844-b2ee-3b648d1b3f3a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "746319c0-bcbf-4e74-b82d-d0ac04dc4af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f43f296-2626-4fc5-8db2-7daf596fbf17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed364f8c-9f33-4909-9d04-43b5bd74bb30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf50d025-ce03-4487-92b0-22492c679760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f87ed252-da46-4e92-9b99-d07d95a2c02d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c4754e8-acd4-486f-8206-73af51706a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b85f0210-322e-49c1-ac23-afc58897e914"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ba16a1-6d8f-4668-a8de-b4aa13faf273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8672462b-db40-4e8a-a154-5964c7015349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97b61e09-92b9-4e60-b1d5-d508ee814c6b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11898fb0-1f79-49c7-be3a-da3433e73a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0511ed6-2b81-42ca-9266-3d5326c04b81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b650d7a1-c7d9-471d-a1be-b7fd1af10dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb3f04c4-e052-4b38-88ee-a15c940bd1ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae1314ed-e0c6-4c92-a8c0-6818fbb20b9c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0bf7cfc-bc59-4c8a-a25f-c39ea385be1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aa8cee8-87bc-430a-9482-9485fc6a2436"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "287ee01d-8067-4d17-a20a-aaa9b7fc77e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2bbf0c8-6364-4821-a2d4-fd60721ff889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c092dc1-8550-4380-96d9-5c6e5160aff8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a475ed5-61cf-4b83-bf01-24c090f70bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b1d4c53-8407-436d-b754-5af2470b5bdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab7d2239-8619-4d76-930a-7009381a102b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9343095-f7ec-4de6-aef3-adb8895651b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "331ada91-a2f6-4c01-b728-328b5796a579",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29549b55-e380-4a2e-a566-8c534d45cfe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c789f80e-2663-407a-bf3f-e2feb9ca2e45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5c654f5-79b4-4188-8d7e-13c53ecd19e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8db35aee-50dc-4eed-aebc-344af543a697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2256b23f-cad1-467a-ae43-80a7106507de",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f632ad9-1af4-4a76-9799-98b9a20e2923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d400c50-9438-4f52-80e6-97726721e14a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e11c99-e80d-4963-8b8e-91a737f09490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6df6da79-348a-4e33-a99a-2ad869e1083a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e7f70cd-b943-4111-be1d-996d9cce46a0",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b48456-df30-490a-9efd-166073c556dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77ef29fb-bd02-4587-a8ec-10f02960ce67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a634a7-65fa-4774-b770-988214492114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "091e2a28-84af-4b7d-b385-a7d6db695934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dbfd96d-bb37-4dca-b910-7ea43e65103a",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea7126d7-76a7-4240-8e2d-271ffe5b9145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00b941c1-464a-403a-8c18-e1bad4df4dd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31af78a9-fc82-45c0-9791-3c8d14f0c9d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "288f63ee-c240-48e9-85f3-14e03b692656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "301224fd-8dc6-411a-b328-e474c1ff44c7",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3869fb4-7d77-4ff1-9da7-4ec5a7d12701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c187a53-702f-4c6a-a186-517b19bd27de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd696b4-152a-449b-baea-3bb98aedfec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad9a67c5-7f8f-4894-a200-333a64b08643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecdd8f1b-1a7d-44d2-90e0-8dc188813434",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8aa0120-8f15-4876-b150-e0a3c8e6f14f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7ef9a40-b78e-4389-b61a-17558b5b127a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c36b036a-f628-446b-9a09-f66c72c0bd34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5fc62e8-f654-40ed-ad9d-91d232a0adde"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "11287d85-a8da-4f2d-8a2d-39d3368d98c5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bae6a1dd-3dae-4006-a01e-2d657a1fbce8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b2c9fa-40f2-4d84-9fe6-a5ec3f0aa770",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a0e9a83f-467f-4ef5-a5aa-22c68cb8dcba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b26626d-f523-44db-a4f9-9daac9b34b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a6447203-50fb-460e-ad3f-c2f0258b6ed4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "abb0ed5d-90dc-4d4d-b685-246e389e1821",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ac23fc7-335b-4393-8452-fce923cdafdf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "35b0a633-143e-4288-8131-c747ea9d8b85",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "37077518-ba39-41fa-8fc9-459c68dff884"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8579e285-43b0-4909-998c-08980f0f600f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a41eac5d-fadd-4eba-8817-c1a45e13d2ea"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b1aa9448-7f04-49d0-b8f4-e7c02a1d80ca",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fa472fa0-3ae4-45f7-be15-7f5161c60b52"
            }
          }
        ]
      },
      {
        "id": "8bf75a65-ac3c-4676-9320-3416a774e8ee",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "98118139-8041-4e76-982a-f376066cea9c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3d2d8247-b74c-4f20-9806-161a3d877705",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "facb949b-27a0-4e46-8215-cd1d189d95df",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca482db-39cf-4dab-a58e-ebf799707807",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baa450a4-4945-4a8b-8939-af3675a56c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffee19c0-00d5-4a84-9ae6-c32b6e5f0af2",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39df3bca-469a-4cdf-96d1-b4e7d3acb7c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74b96732-0e03-4b32-a982-e46a22df4d9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "850e44f8-ac89-44fd-b70a-f1a77bb3a4d7",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "007f35a7-e0b6-41ae-a264-f18719762d05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5a900b7-ea9f-4caa-a39b-ce9057ddc1fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c22e8dc9-59ea-46b3-a1b6-c991ecfe47e2",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9d3cacf-e2da-465d-9064-5bf878bce289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baddf537-696f-4328-b2c5-bb9eae7aee4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "538aa973-671f-4aa1-807f-fad991a45882",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8bcb4c5-abec-43c5-be20-3ef4cc9592af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "298ec561-fc07-4386-a6f3-54268bc40836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "243685df-1644-4198-8d45-c59d035db7fa",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c3345f6-92c5-4887-9ce9-68bc7b418169",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fb05c41-09f8-4bbc-a591-94d8a3f5fca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f6a8f04-4ca6-4376-8816-21a274c19893",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19ce1abd-476e-4a8a-bdc9-1ee64faf9614",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdc35c7f-9259-4d33-b397-a24792891965"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f8f244e-2bfc-4e1d-883d-6e10ecb47ec5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae141f4a-4909-4e65-a0c0-8fa876e5dac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a3e5d2-57a6-4816-87d4-29a1664cd451",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a75daca-c822-429b-abf8-d67e0ecab96c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aedc56f3-3617-4ed1-b4d5-c23cd3941477"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9eaae1d-4346-40c9-9431-7f58a133420f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bcd0721-461d-4017-a1fd-fa56ddc73279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b2f0fe-71af-4fe2-9388-ecced1d62ca8",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c2b266d-de2b-4f27-9a7e-c4391e750959",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fab41446-74ee-4fe8-9001-eb01c85a9327"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e709dea7-aeee-445d-ac8a-0b1684d8000c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5156db0-ac42-48b6-bbf5-da4b4d64a7e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "252ed4f4-98f1-4c5d-b14b-bb4c6967bbd7",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60bf0571-c5b1-407d-a07f-d4a1dfec4ccd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3713f806-c8dc-4fb9-8ae2-ab2a391a742d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94e43429-41fe-4576-aa21-10531b8604c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f028ca84-96b3-425e-9e50-250fade6672a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "affc8261-166a-48b4-a3c5-5c57b52f7a80",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaf3f08f-1b09-476b-bb1e-6caf702b3013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daad488f-51d3-41cf-ab2a-4c1e6cf3846d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "957ec88b-724a-466c-91c5-98e86cda41a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b4a5564-d5a8-47bd-b298-104e608e7fef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c4d4606-e408-4c51-bfb1-a6c367de2714",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e510d9d-673d-4617-9486-ab505ff277f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ff939d6-a818-4e2a-b15f-6caf4f02e2d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33feb70-239e-42d5-9d23-6b733b6f1d94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be1b51ff-b6be-4883-9888-1953cd6aabe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f44d3806-4e98-4cb6-b741-5a425b7219ac",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b4a14b-9c5d-4492-9198-134a1971f664",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b02a9934-67e2-41b0-9a6e-32e2a4c45aaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a76142-ad5e-4bfe-b658-17dfb671f9cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d77e38ce-60fe-4491-ad71-3ba3b293ccf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca648a9-d2ce-47bb-87dd-d7650530a181",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a732d8-a7d6-4825-ab3e-04e5405ba05c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d030465-d5c0-4743-9dc3-88258b850c14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e621a57d-cccd-4758-8026-b47dc3a40754",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f105d8b3-c0f5-473e-b03d-aa301a0728f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a00bb26c-1e79-4ae5-9d98-9ba208b17a1e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd34b716-4f08-47fa-affd-1d6fadc9b6b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9cde63d-406c-497c-bc2e-31bd30d6a249"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de702bc-8a73-4216-b8ea-8b02db6ada50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c28e491d-5eda-44ab-913d-9d10036f9004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc138c83-52d0-4190-8415-4e0f17d36368",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f360a9f1-ace3-4e94-80bf-df67821d7d75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4360a08e-d0d6-4437-8d68-3b18c168cf4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea1dc31-3404-447d-88d0-eef2c926f0fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45d5603e-f2fb-4df3-b408-f4d134273ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75e42fae-9ed3-42d9-9871-d184b76a0d1d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6034a82e-7259-4050-9937-4df81bbf3d76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de257439-3bd8-48e8-ad75-21367151e209"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f68943a6-792a-4590-8ca0-6364b4d18534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed395eb8-3f43-4754-b206-0d2cf5854dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c5b727-d2db-4f64-87f9-b0d5ba7f1b4f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55188b07-2489-40c3-9a70-608eedf3bc29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec23e1e3-5ec3-456d-8c68-30f9146d09c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e863fd3-20a2-4623-a4f0-afb352386c09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9c3460e-482b-4b40-9ed0-468e1f586717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ba0d1e1-e247-40c4-a7b2-0fc5c410b0b9",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6af63a9-ed88-49f5-8a1a-4535e92cab5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "353319a7-bd27-4632-9e43-05204923f0d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b283482-540d-4561-9d51-c6dd86f6e905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6790976-20d3-42dc-a0d8-08955f549281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3902d311-001e-43eb-a52c-03446eaa131c",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b4e9f8a-9617-47a8-98d7-02035b206b9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4df80ec1-7852-431a-ab80-77bf6901b829"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfde05ee-aad9-48f3-a79d-33320d502ad9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b4ce020-69e6-43a8-a0c1-9c34a558294f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa6f78ec-92cd-48a3-bc75-48d4e9a6f866",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5f2357-f2b8-453b-9a5d-be7e177af912",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f81ee37c-d911-408c-9c52-8c5afc1a4102"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86939b0c-54fc-4945-bb09-8028d7f935bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b43cade-0d40-4e0f-92af-8a7e61d4c1ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24435eb0-28b4-43df-a0ad-9a39849e984a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc1f5181-136d-43bf-8b97-3610520a18e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a482edd-50c9-4d8d-8540-d68304170bf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "204cf538-4e64-4895-b7bb-234ec67ff9f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b4e1ab7-80e0-44e0-9dda-51edcac27d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc214b1a-060d-4e20-98af-205d526f6da4",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1766cba9-8f1b-4b2a-9bcc-65fd72354fba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c264535c-aec1-4a93-8c9c-f5c3df91ce24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e6df5b2-0249-48f3-a829-ce71156f10b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b57093c0-f025-41e3-a7ea-6440c4b5d8c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1617c0b2-c592-43f0-bedc-32ab8f54ff49",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5296e29-6566-4d40-a145-588488cf433e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6eef5c45-58fe-4a0f-9e22-3423bd7a20d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9458148c-3ace-4d6d-b34e-63dd82adb340",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaa33b63-f31f-4ab0-82aa-6cdc16953784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef9a4dc6-b8c8-424e-bf8d-b889a19f2404",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e68d3bda-4b53-4f05-b3a9-3e83c59f9133",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76d10467-5f53-4974-9775-5c3b8adf5f04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c62b425-2c59-41bd-8e65-92fd6c0af59c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfdd7a3f-a376-4504-940a-add758a9479f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64fe3420-01ba-4f6b-8a88-4e8a7a745529",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dea50ad-5d8c-43d4-adca-aebc0e6d885d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8211e5da-137c-4323-bf8d-0305693e3bcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8864274d-e593-4db2-ab67-124bbb3a14ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "220478e2-0c70-4652-8d0a-ea6a4c0d2485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5086da76-03c1-4068-83b7-79a4cdabfe64",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f12c693f-ef7b-42b7-844c-e7092d456990",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a2a2b57-2894-43af-9bea-491966f73ae0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a64e5b93-225e-4e4f-8dad-abbe16ad40d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e197fdfc-aee2-4c69-891c-9ce159dd61df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f75faf-cce1-4db5-9e16-bdeb1d02a659",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad4fd9bc-248d-4e4b-b926-6dcd33c808e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac3e98f3-dfe5-4b85-bdc7-3440f9de6475"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2b7fa3-1f71-4d6c-8bd2-86c93a0f9d35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faac690f-ba28-4559-b748-e7763bce3661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "861637f8-1498-433e-bab1-622e9f281719",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "362d1d98-93b9-42e9-bf67-7de4f2694d8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5460d19e-8212-4080-96c3-f4d9851b8482"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ef5b48-44b8-48f1-baea-8ee36ef1fc9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a15b4cc5-dcdf-4b4c-a711-50641d060836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263a5f97-44ef-4712-87bf-6e84777b332b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca34ce3c-f85e-41f6-b961-b750bf30c99b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27200936-450a-432b-9291-d63545da131b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfbae078-fa44-4c56-aef1-2191d5addd6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "642212e9-fb49-4d70-a5a8-3c20c0ac2ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7807f84b-935c-4568-896d-4d150d75ca9e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e251158c-6fd8-4819-ad27-90740ec767f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b568cdae-cec4-472b-8a0f-93cd08ff4b57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba7dd18-b362-4f9d-ac7f-32c4e1bced46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4de9b0c6-02a4-45d9-90a7-fb29c4c916d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7195bd19-6f52-46c4-a2d6-45b763507019",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69432e0f-cc92-405e-a4ba-87cb978fef86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "578d78c2-4430-4d40-bd84-86232f306786"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "749cbdef-573c-47da-bfcb-53eb8be292a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c38a2d1-c8d3-46ee-8bbb-385478f7c0cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fdcacea-93a8-4149-a3b1-75c459219e9b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c920a1b2-6d7b-4a26-b00f-b572261668eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49fc4a7a-2faa-4dc8-93f3-c461cdcf7f47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a02b154c-0221-49af-8cdf-7f4b3bac5b23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82fcab43-862b-4fea-ab42-49258b26ca12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09cd787d-2f0e-41e3-a82b-34281808cb16",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "454f4f8c-fc94-4280-b19a-0f3117d695db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93b93da7-2dd9-47a0-adad-419c7a9a9765"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2eebee2-edd4-4881-abb6-82d15d2fb466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff95348d-1fc1-40c1-b7be-834b35b47a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e343c394-f89b-489d-b52b-62e1ceb30103",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d4a5f2-0296-4e3b-9634-52efb0f9b1d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9719915-a8af-4503-86a3-e0b3bf1d109d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3788526-b3e7-43e1-9441-90301c796cfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "999b4e3b-be80-4d7e-af5b-eb7f9cd3890d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a1a8947-fa5c-4ed2-ae1e-ed2f52536a93",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af18ccbc-1848-46e0-b30c-e5da72e9e117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddeab5bd-cc67-4f0a-a76b-0535b8e1fe44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bedfa26-3595-426e-83ca-8b8e3ed65e49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "394b21e0-70eb-4b86-8c59-526009278147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3874803e-894d-426a-93da-9f522dc220e1",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e92a1e2-1da8-4570-a047-2d1be35463f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3033e052-47da-4973-8053-27090aa54054"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20828d33-e478-46b5-a11f-10ded28152c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c0c5927-a92a-4a57-8512-1543185a9aaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba36ceaf-2cc9-40c1-956c-0e1852aa4204",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82308424-b799-4663-8206-0f3d1e549daa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29eec6bd-d863-43f6-b6d3-ae92fadc5148"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f4d3d7-e491-4554-8953-0d862cb8b52f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1556805c-1024-4ce0-9417-c2c56a9ff6b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04cb319e-18e4-47dc-9b3f-a128caa0e01e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba217c92-01e3-4b3a-88bc-b52b3c919049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c2bf2a7-af89-4020-bfc8-2de556784df2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8550d36d-29b7-4eaa-a015-8765df78bf3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7958405-a307-4bc9-b76f-fb7ed8f32109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "614e9f09-2311-487a-a786-6a300fd3caea",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a16fc3-dd6e-4edd-8566-e8a74cb64fd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "875f5023-e4ed-461b-91d7-0a263cfcd3a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ae7d57-446e-498f-b609-3ad8e26c98a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62241da1-94de-4975-a45a-66df16a9b3a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebdf783e-9bbf-4415-82e7-bea36717c296",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b39d73f-e980-4622-a29d-0885dd55077d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "299a4fe3-076b-4218-9917-2706d8d1168d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d44610f-9a32-4301-8ef6-c5dae5cf0ae3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d03d223e-0e89-4e24-b055-efe13c5c2628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eac2b4c-71bb-47e6-adf3-b319f16c278d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c34b2a8-59ef-4736-af43-37a53fa4978e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52b95116-d83a-43ff-b26a-4d1be20d8141"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0770771-2b86-4c3b-8bd4-9bb60229c8ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a5f6651-5da3-4ffc-8ae6-b336a0cf5f73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abcfbf00-a59f-4911-89e2-79fa25962b37",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff307fc-7841-4f3e-8c3e-1af1c1d805d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f07ff11d-acbc-4c2b-bceb-8ced9379f320"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a1e145c-0246-40d1-9070-c9a08ded4777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e834a3ab-f740-4ab1-84b8-278210e5bca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b10bbd9-5f2f-4668-a3de-ed79e73a2cee",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d760955e-32b6-4d16-98b9-6f4cf0191fcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3abcf671-d060-4ea3-be50-065c232d12aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b0081cb-0fb1-4936-a790-37337b4e85f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d93fc93-e021-4003-a46d-cad4002c5f6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b10e4612-ac94-4388-9425-9819996c63b6",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c5413a-3821-45ee-828e-b523ce9982b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "def519a6-c326-46a1-9f77-69f8ec3a7c52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d16d11e-7eea-4f35-a80b-446c0eb832f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0013920-a3e8-4758-a1b1-3c74b25f940a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d83f0d33-8452-4949-99e4-e0ba34babfbc",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "461c5bb0-2dd0-4d83-bb99-4d602c499c0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fbdbc78-fc77-4acb-97d5-900be6375985"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd0efb41-80e4-47df-bb38-b846404f50cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cced24c-a906-4dda-b002-558cdd7df38e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f0849c-62cf-436a-b2d6-85b032e5b1c2",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d29d960-dae4-456d-9431-728cc0c79f1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e115d841-a666-497b-96b6-a9de68f13ec1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c9c7920-a34d-4266-b120-b4bf1f10c14d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9dfea2b-f506-4434-bf4f-52f1c2ae35ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f3a0901-663d-4afd-a0b7-ba13144cd775",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd5caf48-ab3d-4a49-9fa7-1d7c65e7bc68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64df39ed-a8fc-42fd-a9da-d4acd30ce1bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6b67e3-a33d-46c8-82a3-db478c77886a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d29b116e-d24c-4f58-95f4-2398f65f351d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "612243c5-eed3-4a7f-a2c1-4e3a03921d5e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19b86338-d97e-4d57-9673-e2a06cb18171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32f8cf58-884a-4150-a5a6-6eadfe2885ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e568ec24-108f-44fd-aafe-127a8452e8b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cb774d7-8981-4bb9-b038-5c047afbc07b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5252a228-5bc0-4db6-b538-ab1ff50acaea",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aca1e65-0353-4495-b029-f654ed2a285a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9377caf1-d0dd-4e98-87f0-efb92c114be0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f1b8e8-0873-4649-b382-c437673f0bf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06c23fc6-191d-41c3-afe4-ec35451553dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c75cda0-29a8-4b13-aa6c-0ebd7b5737f1",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "defa7964-006a-4739-97d8-f2d5ab8ea2f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "616b06b7-daa9-41c7-a17c-444ec46afb68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97570811-56a6-44d1-8641-cb9599a3e557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a934024c-a442-4e55-bd54-be5fd4005bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1800daf0-14c9-4f52-b129-8a4b0ed70ec6",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20083121-3a51-42a2-80b6-fdb09c3bb8ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc4b452d-a655-4762-a381-9c8fdda4d4a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ac8601-9e46-48af-8dec-578332c6e5f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03ffcbff-135c-4bff-99a2-570e41d208ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae342cd6-d8a1-44a5-add1-df17b1090949",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c50f432-cd50-41a7-ac59-e5a61dbd492e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ebaf828-3ecf-4b18-b28d-26dc5065aede"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c244e4cc-2ce9-4a6c-a859-9fea9758a847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61981f36-aa5e-44dd-8bb4-3248de2e9a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc9c24ed-694d-49e6-9b89-5e8858fd3ab8",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64da6faa-fa86-45f7-a84f-6ceb1c91ad9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39c90873-fe7e-4d01-aaf8-16bb140f7804"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0051eff4-dc58-450e-b8ba-7884006f25c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb8b27c0-59bd-4006-ac40-ceab2c471d74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa1c44ed-bb23-4d99-a028-34fe19f8760b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e34e99-dea6-494d-a2bd-fda8c9ab6e05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef75cfc3-8a0a-4db5-9e6b-9dec930a9aaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7978e4b-4587-41b2-9363-2dc2a1896939",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0c48ef0-f139-4858-8185-a9440fe82a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1529362-768b-49e8-8439-cf348d56503f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2700d010-0792-481d-893e-4f859c1d6aef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bef948df-6564-4439-8354-bb501cdbcad1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb82a2f1-910c-44fd-9315-f83bba9fc41e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02922d8f-6ffc-432e-ad99-ab1b3d63d58b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2236f4e-2622-4c1e-9900-d3fc9c43d96d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ebf18e2-fa68-4f7c-97e0-fd6318bb6cf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1c47aac-d41c-4d1f-850b-bd44ec573554"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f19e78cc-33c3-49c9-8e7f-c838b84c0b2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ff580ee-1225-4450-82a0-b69ad3b272e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2cec92f-3bf9-4867-9460-5dd1303192de",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caaf04e6-c873-4d53-bf2b-bb42f1edaea6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7acffe62-12db-4db6-9f1b-d98963322986"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb7cc20e-a2c0-47ae-b8f0-f1bd58d85e1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb04c46e-c7bb-492b-a4db-01dd020c13b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814463fb-a558-418b-97e9-19e9758eff76",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3bfe63e-6133-4a61-b7dd-ee3118603a3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e052a744-9ad0-4450-b7b4-a161f16e67ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2c3c5e8-6c97-4057-8e27-13fd5fba8e23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f9cde55-93be-43af-9043-dea1cfa39fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5214f604-d41b-469a-b589-82736a1b0d0f",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f75b505-1edc-4707-8ba5-fb6669be2651",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfce0a03-99d0-4976-8ca8-c0acb85aa031"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e0e6b1-c11b-47ca-bcd9-f52514ca85e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b127dce-e96f-4e11-9718-f0e1f6b0e387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fdcdabe-1335-4ea0-a05b-9ae416fe2b1d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ccbc3b-7888-41d0-9589-47c0fb524823",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e69e9bb3-cebc-4ea8-a35f-82ee3baf46ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "343acd96-0899-41b3-abfb-8fd8819d9d93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "733e2c16-7827-4f40-8bcb-9ed893de0a85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2282def-d655-4d4d-9699-4d0b551ccbd5",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daac5a14-72f8-47dd-978d-89e0f306a273",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcf6798f-77a2-4198-b37b-ca75516bdf72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6da855-517c-442e-b00b-12aefd5ed8a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1db7be88-3411-463e-a448-f451b2f72498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52d16ae6-7c1a-4f7a-be3d-7060236167ee",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba3814bf-5c48-484a-92ca-f1863c290091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e56099b0-3919-4f6a-894a-bc0e8ff4aade"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57156f72-2113-4cab-a3a9-e200e2b81a77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9335489c-f2b8-409c-b525-eed20a4c7533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "032252a0-2f8c-4e99-98c9-939ed0e3c5cf",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02ef6b39-457f-4dfd-b392-56557dfc4b3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe7d6dd4-4bc8-4bb2-883f-f986d86e6ea6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "141cb6b9-cba4-4d8b-9be0-1e73a4adc688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd5252dc-4f38-4c4b-9995-e604614582ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4cc454c-79ba-466a-bc66-1dcdf9d551e6",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90ee705c-a06e-48d6-8eca-6ab0c673370d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eee6d856-4dd8-4845-8499-aa93c225592b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5740f8a-c9e8-41f0-bee2-380941b5bad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "616ec74d-82b8-4b6b-a3e5-7931ab35add0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dfcbdde-456b-4942-9c28-4cf01d1e2371",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87cb3017-0c23-4865-b597-f8ce544260ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb31bf36-5e74-421b-8a98-b38927cc1ad7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3d1f16-fa40-4dd7-b44c-932e3e73b87d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb99f83e-0fa3-446f-a98e-91a56c14f860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79a4ff28-7476-46e0-8040-bc7ee5579638",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc55fda-e26b-471b-8155-fce34c653fab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "728b472c-39fe-4c56-bcb1-1e94a95eb6f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a6f80f3-600a-44b2-b683-a69416c45fa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f22dc4cd-a555-4566-9308-bb11d477a1ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b1d7ba4-27d9-447d-bdd7-e2bb209d11c4",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2477eb4-cd8a-4982-8f28-fdf90774be0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bd2ab8a-19b2-42fc-a84a-981288dc724d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "260ef57b-2e8f-47dc-af69-492710a34652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd1d2c68-91ef-4951-be66-2bc74263a399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2173c128-a8af-40a2-be16-fa4065c30c50",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a8b86d4-1f83-4894-8958-ce28e3660b0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a8403ba-c120-4c89-83bd-6184d18c64ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a888168c-4f4f-4390-940a-eb12c928960e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56908df8-c1c2-4e2a-a39f-742f337256e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76aba659-1470-4803-a955-516aebd90d78",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5274e28-df4d-4e50-a3de-73e99cab0955",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dec93151-5498-42ef-8184-b630365c83b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f73feae-ff9b-4871-802a-3100bcad3586",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59878a7e-f9e7-4070-b998-c11760255b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94cfd74a-ca82-43e4-bf20-f7f57ea8f370",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e2e4039-160e-4306-ad1a-08b0fa75a434",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bc26cd9-8823-4659-86d2-cb8a00e1a2f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef51a40b-85b2-4a93-88d9-48c8803bb19e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ea0ca8d-208a-4315-b7b7-c60236a5dcde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ecf3174-450a-4526-afa0-5e601acd4705",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf3f691-3a4f-4038-8a02-2b37b5883500",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1325957e-dfaf-48fe-87bb-1c66c3f84434"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d7ee5ff-2326-4e35-99e9-d67226fa5b7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99cbb37e-2a6a-433f-a455-718dadc2f15f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc2cb86b-6540-4dee-b132-459eb2ee5270",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f10fbf-e476-4834-acfa-5cafb5e1c2e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e1c70fb-076e-4868-8c08-7dfa0142de32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be6f4a9-22ce-4ef4-a9e2-d0afcf8d05cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "800cee09-913e-4aeb-aa06-efe2c70ad99f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14330c56-6a93-4ca8-9861-5699bee807e4",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb087612-6c55-453d-8aba-e53d48eedf1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fe41c5c-c116-404d-81ad-9236277ea5d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf9594a-5e3e-40c7-8e1b-72b2d2f67677",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa86de9d-ecbd-4b45-b965-169fbe6780e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83365ac4-52bd-48fe-a916-1e8ed16eff11",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab2a4bf-c8cb-4a3f-99ff-75b8b41d3e2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47fb254b-f145-448d-a986-a39b0d07541f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b147073-6311-4df9-b1b6-283979c6f7a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc0f3d0a-1e0f-4502-906b-0b09674e9050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d60f1795-02e3-4fd6-b0c2-3a28760d9a1c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de59d7b-9600-4f68-bd75-b63caf7f7f28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ff3c305-0728-41ee-a316-9d8d2f2f3cda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06fffab6-c7c0-459c-97ca-d31afd3e2e76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "388d5ead-c6c5-4070-95fa-603a4efd753c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0335f251-c07a-4c52-84f0-1d6304c27b67",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "526ea0d0-548c-4c08-a6af-5100817b2ea5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "969af5bd-1253-40e0-91b4-f28c495d420b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bec95a44-06e5-4b93-8079-9f3ed3f96072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35bb3bda-5b3d-45ea-b8d9-8ab55953c709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a4b4a9-0e75-4cc4-9cd3-dfc541782b02",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623c2969-52c3-4a20-a8bb-771dbf209fb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb1a5e53-e6d2-4600-bbeb-4b5cacb15071"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c3c5cb-4296-4b06-b77b-6d94a4dbf61c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c06dac0c-5592-4e43-b7ea-b28af82e927b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff8790e-a80d-4119-bf4e-d5983c634f7f",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7919c8ee-124d-42b1-8bf5-5b5e89ae4069",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01be38f4-6637-4fe7-bbc6-681584ccfdac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fbc6b27-32c2-451f-a47a-f686764db908",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96ae6bc0-3c65-475f-9618-388f95858a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbc56ffa-fbcc-4326-8acb-5ff9256a82f0",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63525160-c6aa-4cac-973b-cf136a52c3f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4445f06f-8849-400c-a536-7ae5b915b728"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60963b37-a104-4d9b-b582-fe8b642bd780",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2366ba7b-a6af-4e13-b89b-363862d2c348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "527e9de7-a64b-4db5-95e5-b5613a8388cf",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b90531-02c8-4154-acdb-059ae555272e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6bcc2aa-542e-4d4a-9beb-a01a224b5cf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8dbae4c-0206-4f43-a05b-fd3647013bf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8d4f0bb-0b34-4c14-8483-5ff2a38447f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdbea327-b1ae-4639-95cd-e29ee3711375",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e20ac010-fa36-4e09-b571-40fc910a7943",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "664bcba7-4abb-4c83-a1bc-1186ff84f1d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbcb34a3-cdac-49e5-a9ea-8b985feb9050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e793c1c-1899-430a-b30b-2ca38fa4a2a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a24ac3d-e333-4b58-8e56-dcab8394c1b6",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad6a0af9-4298-4be4-88b0-61a34a50ead0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8768e8f3-fd36-428a-8019-f24aef22d809"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cbc0e5e-807e-456c-8269-9c3caf22c9e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a794a5b-0054-4022-be2d-7600ec0465e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f312a98f-0cc3-4f3d-aad8-b604ee546189",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "809c19f2-058b-4258-81c7-023f552399f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1793ce46-5d68-4f2c-bdfe-c6ffe6eb1fa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40127396-1fdc-41a3-b9f7-2bbd41179b98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7445834-00b4-4e12-96ad-754823d9400c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c3c395-5886-4651-b611-b4210dbf25ae",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28ffb8dc-bb5e-4494-95c0-19e4882c3c15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a4d0a84-2a90-40a5-a4c0-354ea12495ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a429414-01ba-441c-adb8-478664d424bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f72fb8f5-c6b4-4b97-ba54-5d320c7f38cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dfc85c6-2585-4ae9-8fba-34e647275a1c",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ff94ad7-486f-42aa-a77d-9a6c74fd19bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c3acb34-0710-4f8c-8f22-f90d5f224552"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c30846d5-fca4-489a-af64-e9efa46585e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "588d87ae-8037-4cba-8432-a24dd9ed4aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ce46071-9df3-4eb9-b6a4-b1c64e8487c0",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee4f32b-5ec3-4fae-a220-61d5dc7afadf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68f9356c-3f9b-4551-82a1-30f932399445"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb1e175-47f3-4b8d-bf2b-8f589d00b7ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "840fc7ff-bf22-4fc9-b9fe-42d89bc8d289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e852adc5-1643-40a1-b54f-196d31163947",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8aaad6c-fd3b-4f93-8a5b-de3a0adab5d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38288f3e-2a64-4ae9-8088-d5c3b8ab50b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0fde112-e1bc-4909-860f-6933d627ddee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20d102b3-ce6e-4cf7-a20c-fb73788dfdf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fd996de-2d99-4cd7-b7db-3684630e698c",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d59305a1-a049-43c4-9613-a5406795aba6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a18add09-0a9f-49df-952d-3f56c001ef4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a84c487-5e0e-4731-9916-afd670785068",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1240da5-596d-4e53-9921-7a0b68b6a129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bd2736c-74cf-4fc2-ad2b-3d368f05b7e4",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "854c95f0-a9fc-4082-804d-870ee50b78ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "519ad65f-0751-46e9-95d5-de1a5fdd2869"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "736a97e7-153d-4cc9-97ff-7b8a716ba07f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8136148b-5a45-47e8-a446-1792bf43afc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c61db3cd-264f-44f7-abb5-24a409948bde",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf7f02a2-a360-48c9-8416-4fea79a69e9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9c6e0ef-be5e-444b-addc-5b76e1df8ddc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1dc51d1-3a81-45af-99bb-ee4a3c0a0c55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29aace4a-8c03-4a93-89f9-0ce175e99ea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b60e15b-5b57-4e6e-9634-db681599fc1b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b3c655f-5a9d-45d3-8192-6f774c941fa4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "115d24ce-95c4-4649-b0bd-535e69c12a13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da93447-c73b-4cf1-8001-ae17c039179b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b9bacf6-8e2a-40b5-8868-40281bcceffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e833d1ee-4425-4b85-8dfa-3b1eddc3a302",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "980309a4-dbee-4c32-adc0-f2ad05686d9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c57ca6b-ec34-4bf7-9814-a2dacb933a45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc859a1f-c3bc-40c5-89b4-1a9c933db427",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7cee770-2b39-4faf-a60b-29d9ca35e660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc14609-810a-4ed1-8e8c-8a13ad3e3d0c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ed57a0-8685-40ec-b278-b4a076dcc34b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a292fad-91d6-4d88-9346-dc55a017e1ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b640b33d-bbb0-457f-8387-b6a8b76c4240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81ec6fa4-75d4-4a50-b3cd-d1a02023cca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3783f95-b746-4d68-a820-a5983e0c27fe",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f057b487-1dcb-4a5f-a152-233bb18cd438",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e49b001-19fa-4cde-aa25-33d6b9313742"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5402d4d-83ef-43e0-bf91-c4356bdff184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58278466-bbc3-4326-b7e1-9f57fa1c630f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb6f10a6-273c-419d-beaf-1b115338d110",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e78867b6-685d-472b-a67f-d77444a2c7de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e5d754d-60b0-4f24-978a-76db38eb25c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75bb1c4e-9648-4c14-8cb7-f6ffc0295497",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad9ff926-3274-46a1-8a9c-c493337e3635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9921ea-b0c9-43b5-8b88-00fd3213d252",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d31e418b-2d6b-4c3d-a544-e6a85876b833",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea5063a6-ca1c-4a3d-951f-e344a68faef0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2025ce4f-3ea8-4c53-88db-92e08c68487d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32b4c67a-e823-42c8-9078-8c08e437d4db"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dea78511-c2e1-4be1-9ac2-3d5ee219b182",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b9588f39-d973-4d97-ad6f-9f250a58459a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd0df284-afd7-4aa9-a827-5fefe34a9d34",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2fdc0e87-77ac-43d1-a029-2c7b9a451b78"
                    }
                  }
                ]
              },
              {
                "id": "a06e5c35-6e20-4275-99c8-1fd7b5c35954",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "39e57d3a-9e0c-4951-b502-0ec031eb5834",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48df0812-542d-4faf-9359-d31649fed8f1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "5d132795-edbf-4682-a41a-8bf5b5417d1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb11f8d9-222c-4b41-b165-6fbd4b0d0351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c0268ab4-1f42-48fb-9ce8-2bc06687a632"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc873505-86e2-4f24-8d71-6714f8951760",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f678df6b-ce26-4431-9fe1-3b0f48c8bfe1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "47d70f43-f6a7-41a5-8432-b1838f1be956",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b84815e9-4271-4e37-9b4a-0a3ac55326de"
                    }
                  }
                ]
              },
              {
                "id": "40f43e8f-84ee-4fef-9085-3f90cee6d090",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "aeaaad56-02f8-4ba8-9f1e-272873d16399",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e84af2e-d2cf-4d0e-a471-4a7710ad1600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e367c5fb-7f0c-4561-bf99-e860038cbfb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c94aae2-1856-4095-848a-43d72af6652f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c79a3ebf-ade5-43d7-9312-ca8d31b4b738"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8b1433b8-2500-43e7-8bd2-2ece23b11d57",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0a6a43ee-9650-4155-8b4d-70bed528d5f8",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "62821c92-6741-41c5-bc3f-2d4f0ce3a3e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "58a4ed2e-39d7-4873-a40d-0925eb49b340"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e4aba54-dd0a-4ad8-90e4-59ce756c58cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f434ce7e-a1a8-4f02-9048-4cd6432d9267"
                    }
                  }
                ]
              },
              {
                "id": "ddfbb685-a833-4880-888c-da78dde40fbe",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d624407f-ef12-48f2-96c8-08ac75687176",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0fb00058-72f6-4278-ba44-5ad18adce498"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec527acc-d6cf-4003-9334-89c8287cd286",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3202ce9b-948e-42eb-8bf1-d2d9cca69bb3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c613ef07-997e-4412-aa42-d92d4b5d11be",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b68a07a6-c703-4cfa-8c9b-15067f243c6b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1b6ebe40-d260-468e-8049-abae0301a814",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c40f470e-4789-4ef6-991a-7c93c060c546"
            }
          }
        ]
      },
      {
        "id": "69e949b5-1522-418d-adc5-ac825ccf21d7",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f13c4d76-ff7b-422f-8fcb-9874b4fbcfb6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8c43377a-b1dd-42b4-9cf4-9d8e0c719157",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aea39540-a4f3-4f34-b87b-5963efc8328c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d31edae8-35bc-4d1b-9cee-6ecdbedeaa37",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c747084d-ef41-425a-96b8-90401901f6d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3575030a-23b5-41cc-8c8f-c7ef4f226b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ad81eefb-6ee9-4470-acdc-24d64ca3ef10"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee165260-3448-4131-b644-ff3f54abb40e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a2be0cb-af1e-4418-b019-cdc7cd66f1d6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "325eb486-f008-4f06-87b7-393bd2325d12",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8f6f109-9563-4b0b-a546-309a9be744bd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "42c3946d-0ea3-4d86-8c29-db21bbdcf499",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1ae3723a-3e79-4b66-96c2-1fbe7fdd5f5c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a030cd6c-8de6-4d99-8144-4346f142eea1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ef87131f-2b62-4a7b-8264-301edd5cd914"
            }
          }
        ]
      },
      {
        "id": "0ebd97f2-74e3-492b-91cc-49ae1a4d14d5",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "96361f81-e1b4-455d-b125-a0cf06879d83",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c4d5b99f-e135-4dd3-abb0-def07c6fd007",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d5d5dd16-ac63-47b9-9791-71bb922a4117",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeda7abb-ec7f-439f-bd57-a8f1a453dde3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc62e2dc-a535-4ea8-b908-60ed97315cdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc9ed69c-adc9-4e28-9b59-1fe0808344c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9ec3deaa-fadd-40b1-961b-e0c3fc322469"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "44727a9c-4474-4d05-98bc-1af42a5deebf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b542c61d-73a5-49a3-bce6-ed411891b8e7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "22d300cd-94e4-4129-9eed-c543cabbadf3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "680ac067-2dfc-4360-bd8e-028336547259"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e540f61d-5d07-4853-8085-33a21ae0a0e2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f7cbc856-b362-4315-8f20-aafe99f63aba"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bad08603-cb83-4dc7-9150-fdaf667c77d1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a769cced-1b92-427b-9797-a77fdd91304d"
            }
          }
        ]
      },
      {
        "id": "dd7ef009-1182-4170-974a-f0ff299858df",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "695f9803-d5f3-416c-a695-a0cf9f349731",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c1650d77-5653-40d5-ab8e-c43927fb55c4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b576dedf-cb63-44e9-8831-1ba7d600dea5",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f2afb94-f0bf-4b81-b1f5-b212cb494504",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "470d0c15-f6e1-4032-9f24-87915773e8ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d08451b2-bc55-4340-b8b4-c743f72b9964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a8453d9f-e12f-4df6-a1e7-b67886adac3b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b29c59ff-196e-453f-b8e7-52576427ed14",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "756c72f4-adb2-4771-b75b-bc8df4e4e521"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e47d5ad7-3a98-43b4-b222-980c74fc6932",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "51ff271c-6e76-4264-88bb-4583ea5f21e8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5012defb-f9c3-4f02-bd38-f7b1ff3dc5fa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9fcb6c34-99a6-4d63-9deb-3628141787b9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5ea65180-d445-4911-83fa-bcb53798a092",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "29471978-aaeb-4310-9e97-6db6bb6474d8"
            }
          }
        ]
      },
      {
        "id": "2b97d0f4-3f4e-4b00-84f7-2b24ff8b8a7d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c721ad24-99d4-410e-9bdd-834a6d06eadb",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f8cc93ff-9e02-421a-b419-3a3ad20fa2b6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "db51f544-458d-45fa-b6fa-6090c632abf3",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "700c69a5-d554-4787-bf84-ee629241c841",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c0c977fd-5e28-4679-b942-17dafc11cdad",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 6.7298245614035155,
      "responseMin": 2,
      "responseMax": 318,
      "responseSd": 23.02860132349744,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1705538182139,
      "completed": 1705538193088
    },
    "executions": [
      {
        "id": "4e3cd09e-904f-423c-8816-0160178c409f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "115bebc9-2ab6-466d-bbfb-cd9430188623",
          "httpRequestId": "22333a28-3de2-4b60-8f40-8852e3aabe7d"
        },
        "item": {
          "id": "4e3cd09e-904f-423c-8816-0160178c409f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "dee9c9ff-9d10-433e-8406-74b551201ed5",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 0
        }
      },
      {
        "id": "720db909-d34d-45de-9b5c-567a5e7539cb",
        "cursor": {
          "ref": "188bf5c7-965a-48d3-b409-de878b57aa3c",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "0aced924-13ac-49a2-8f52-c115d450ed1e"
        },
        "item": {
          "id": "720db909-d34d-45de-9b5c-567a5e7539cb",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "aa4fdcdc-d402-4d39-8fe5-559e301bb5df",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "36ecb6eb-b90b-4911-8a93-8a3355b5a742",
        "cursor": {
          "ref": "b56a9600-01d2-43ed-b94f-07b59bb8915d",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "491ada12-0480-4cb1-8002-ac4877a7aa6d"
        },
        "item": {
          "id": "36ecb6eb-b90b-4911-8a93-8a3355b5a742",
          "name": "did_json"
        },
        "response": {
          "id": "c10be149-da61-4667-bac2-2a36495391af",
          "status": "OK",
          "code": 200,
          "responseTime": 145,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f7928b-ff23-49ec-b936-6d94b4e02d18",
        "cursor": {
          "ref": "be3b6c60-1519-41f2-a577-31809c17afca",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b3404822-ea17-464e-a856-a00f01c60473"
        },
        "item": {
          "id": "a1f7928b-ff23-49ec-b936-6d94b4e02d18",
          "name": "did:invalid"
        },
        "response": {
          "id": "9de30931-8151-4293-aa8d-1c0c71a768b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f7928b-ff23-49ec-b936-6d94b4e02d18",
        "cursor": {
          "ref": "be3b6c60-1519-41f2-a577-31809c17afca",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b3404822-ea17-464e-a856-a00f01c60473"
        },
        "item": {
          "id": "a1f7928b-ff23-49ec-b936-6d94b4e02d18",
          "name": "did:invalid"
        },
        "response": {
          "id": "9de30931-8151-4293-aa8d-1c0c71a768b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e2e53e-3f89-4e4c-af35-f6dcda127aac",
        "cursor": {
          "ref": "d9488ce9-3f41-4d15-8914-36806ebf93db",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c8620a15-422a-4caa-94bc-877002fb29f5"
        },
        "item": {
          "id": "b1e2e53e-3f89-4e4c-af35-f6dcda127aac",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "520f6628-17ef-429b-ad8a-170a1b73d52d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 46,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8be4332-7af0-4ce8-9e0d-cf8de448d671",
        "cursor": {
          "ref": "858562f1-1230-48fe-95f2-18bb268aa0cf",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e4de12eb-a894-46c8-a9be-96a4381c750c"
        },
        "item": {
          "id": "d8be4332-7af0-4ce8-9e0d-cf8de448d671",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "cf89edab-7cf1-4d07-875f-3f4f6fd55818",
          "status": "Not Found",
          "code": 404,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "660fd13e-279d-4cd6-b0a1-7b5f67c47925",
        "cursor": {
          "ref": "885f649f-09e2-4a47-8e37-12b897f68708",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "84263d82-f149-4336-9ba6-1077dff6f002"
        },
        "item": {
          "id": "660fd13e-279d-4cd6-b0a1-7b5f67c47925",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b5faa50d-9db7-4dc8-b871-114e15bc6af6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef23cc0-a9de-432c-bb35-e952a0d816a2",
        "cursor": {
          "ref": "179c0200-2a9b-4a31-ac7d-36005068fec5",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1048f99d-2734-4b32-ac6d-10a6f24d2981"
        },
        "item": {
          "id": "6ef23cc0-a9de-432c-bb35-e952a0d816a2",
          "name": "identifiers"
        },
        "response": {
          "id": "c6dbabc0-4e84-4205-bcec-9e313c5f2d6b",
          "status": "OK",
          "code": 200,
          "responseTime": 165,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "923f1592-62f2-41f1-8aa5-121def5807c6",
        "cursor": {
          "ref": "8dadd10f-c316-47ee-a576-c7b7b445bbf9",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "900f0566-6987-4e8f-aa77-d06163359b86"
        },
        "item": {
          "id": "923f1592-62f2-41f1-8aa5-121def5807c6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9b217de2-1996-46dd-a3d8-058d4d14f605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "904bdc88-eaa0-4f22-bca9-45ac90235885",
        "cursor": {
          "ref": "323635bd-b43c-4478-9541-1ac4ff292cbc",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e25dd766-22f4-4d23-b38a-879e0a400440"
        },
        "item": {
          "id": "904bdc88-eaa0-4f22-bca9-45ac90235885",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "0dbb7e2d-1f27-4586-90e1-5b2519bf2c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94978477-6cce-4912-9824-90e33f17b90d",
        "cursor": {
          "ref": "83b4b060-8ee4-4fe6-96b0-9fdf4c1b45b3",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "d8b087b8-8f9a-41f7-8960-a0a476225a6f"
        },
        "item": {
          "id": "94978477-6cce-4912-9824-90e33f17b90d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d92ba06c-0ec8-4f4c-9d95-ca06762aaac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f6d89b1-538a-45af-a0d4-5a62913172b9",
        "cursor": {
          "ref": "6c540917-5f9c-4f8c-aecb-9a65378ef334",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "74eb7268-8947-45e7-b187-47b9f45d7113"
        },
        "item": {
          "id": "3f6d89b1-538a-45af-a0d4-5a62913172b9",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "6d7bdcda-1c39-40b3-96fc-7de6b0321bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea1cd5e8-596f-4c22-af11-8a07c1e69164",
        "cursor": {
          "ref": "cea44c3e-646b-4a78-9e4d-9001ac67a8dc",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "03cdf360-ae5e-4b2b-923a-97491a53c0bb"
        },
        "item": {
          "id": "ea1cd5e8-596f-4c22-af11-8a07c1e69164",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "39d9b531-8d9d-4a67-bf3d-fecf6e6a1e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebcee7ab-b25c-4d30-b3b3-ed1215dde75b",
        "cursor": {
          "ref": "1cebf947-479f-413b-81c6-cf0c7d795f9d",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a3c2a326-f698-4cd1-8aae-3bd6472fb598"
        },
        "item": {
          "id": "ebcee7ab-b25c-4d30-b3b3-ed1215dde75b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "2d4300f2-beab-43a3-8c07-8f6d719a5690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2209a2fd-4d0d-43e2-b203-78d8d478e8ff",
        "cursor": {
          "ref": "31cce05f-e376-421e-ac1a-432fe2a2d2ef",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "bbac7cda-de5a-4fa8-a559-54eb8d124b26"
        },
        "item": {
          "id": "2209a2fd-4d0d-43e2-b203-78d8d478e8ff",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b501d83b-fd54-4060-ba80-2a3aa3d52c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4034f35b-22aa-44e4-9b47-b4f445f8c086",
        "cursor": {
          "ref": "6ef81885-8ecb-4368-88b1-c090a56c58b5",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2ae09e3d-a18c-44ce-a8af-9bfa299d3dc6"
        },
        "item": {
          "id": "4034f35b-22aa-44e4-9b47-b4f445f8c086",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "50ef0188-3efa-4ef1-89fb-ce02c1224997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51190360-8f58-4132-8035-96b8f7946b58",
        "cursor": {
          "ref": "c75ef887-155f-4549-94d6-d149bd8f1bac",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b07dc023-de01-4fae-986c-4f33cae5e858"
        },
        "item": {
          "id": "51190360-8f58-4132-8035-96b8f7946b58",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "43e4992b-7342-427f-b6cd-49bd9768bbda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f30d560-9d5e-4892-8abe-57d65c1ba01c",
        "cursor": {
          "ref": "81f2c16d-e6c4-4f5b-9368-2ebe77ece031",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "cc25e0a3-03d5-4e18-8c62-d9a78a992b3b"
        },
        "item": {
          "id": "7f30d560-9d5e-4892-8abe-57d65c1ba01c",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "cf453d57-b88e-4af1-a5fe-72a0737c809a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4478f94-b029-4b56-b1c4-4d7c09965728",
        "cursor": {
          "ref": "f49bc55c-b452-4758-8b54-ee9546133643",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "7f7962ff-a678-46c3-bf5a-60f0e89b77b5"
        },
        "item": {
          "id": "b4478f94-b029-4b56-b1c4-4d7c09965728",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "50f3a72b-13a3-4bad-86f6-f848fe9510ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2431e1ab-09ed-4a57-ac51-815f2c424453",
        "cursor": {
          "ref": "c119c579-ffb6-4e6a-baec-4cd197cc31ab",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "61ad4265-4f6b-4c9b-8ed8-e55633068690"
        },
        "item": {
          "id": "2431e1ab-09ed-4a57-ac51-815f2c424453",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "48b6a241-16b2-467f-8a3b-59ebc0d5d965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac60e856-114c-4bdd-b918-f9290c60eabc",
        "cursor": {
          "ref": "5150164e-b16d-49dc-af3b-c27f49b9cbb3",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9b82e976-0226-4247-aef7-d4d3bdfb7871"
        },
        "item": {
          "id": "ac60e856-114c-4bdd-b918-f9290c60eabc",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "0108d7b5-44c2-4b2a-b7b5-bfed880aeef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "438a5d96-194d-4749-94e2-4e257920bc87",
        "cursor": {
          "ref": "d0f78463-2df4-417f-ae99-8c58090a735c",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "503ba5d9-de56-45b2-9463-e61ab5a28bf0"
        },
        "item": {
          "id": "438a5d96-194d-4749-94e2-4e257920bc87",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "7a132fc1-62d0-43c8-be20-0fae5205caff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "438775b4-7ce8-4115-bd3a-a072743b38f3",
        "cursor": {
          "ref": "f8dcc8a1-c557-4569-ad99-e25fcb25fef3",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a73bb537-e134-4cab-85b3-48bf01f02c39"
        },
        "item": {
          "id": "438775b4-7ce8-4115-bd3a-a072743b38f3",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "608957fe-3606-4083-bf7e-910eb22eacaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "065e00c4-7628-4364-b317-84838037c3f2",
        "cursor": {
          "ref": "3ca10b72-47a0-4b90-8607-81edff233ab5",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "491e2c9f-e38d-453a-9615-a959d26e0d52"
        },
        "item": {
          "id": "065e00c4-7628-4364-b317-84838037c3f2",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c9fc1cc9-2305-4e8f-abdf-d4ffefef2877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6178da54-9e4b-4bb5-af3d-6cc5255a3572",
        "cursor": {
          "ref": "1a12a193-6a13-4609-92de-6767a6bcdf0c",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "93904231-63de-40c0-89e1-e448239468ec"
        },
        "item": {
          "id": "6178da54-9e4b-4bb5-af3d-6cc5255a3572",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f1b54369-36f7-4b33-89a6-90f5362707d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "378f5cb6-62cf-4a3c-a6e3-1cce6040238b",
        "cursor": {
          "ref": "6501225c-79fa-40a0-bfee-9569da72d91c",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "20656069-a628-4b37-81fe-acbfd068e42a"
        },
        "item": {
          "id": "378f5cb6-62cf-4a3c-a6e3-1cce6040238b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3eb8da40-00e8-441c-aa2e-11cb32e82eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a13e17ba-747c-4890-9ada-1cb62eb7152a",
        "cursor": {
          "ref": "4a0b52ef-6565-4447-862b-3034f3bdee4d",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "03521786-3832-4b7f-98c2-734b663dc7da"
        },
        "item": {
          "id": "a13e17ba-747c-4890-9ada-1cb62eb7152a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "2b0663b1-9539-4b71-9487-81c32727aadc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d572f2e0-e42f-42d1-a1c5-2488cb96fafc",
        "cursor": {
          "ref": "b3dad72a-11f1-4c1f-84f7-2ffdb08a1e54",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "bec55ae1-7f99-41e5-9379-d4ce195c5c7f"
        },
        "item": {
          "id": "d572f2e0-e42f-42d1-a1c5-2488cb96fafc",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "866f1e99-6709-47c3-8df7-29d10665494b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c790045-5983-4df6-8b07-db7dd5538a74",
        "cursor": {
          "ref": "9afee18f-8593-437e-a86a-df0aad733159",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "37a28b5b-8f45-4dc4-8e05-447e542a22f4"
        },
        "item": {
          "id": "8c790045-5983-4df6-8b07-db7dd5538a74",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "aceaa35a-255f-4ada-bad7-2ec8f8383da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72bcca2f-9fb5-459a-a2f0-d50fa5da43ef",
        "cursor": {
          "ref": "35953570-cec7-4b42-a803-39b8d53b43cf",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "104110b4-cbdf-4d7a-80ff-fd4c83b4218f"
        },
        "item": {
          "id": "72bcca2f-9fb5-459a-a2f0-d50fa5da43ef",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "2b3bf9e1-2928-4b29-b89c-758c6b840b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "787f9503-dc61-4ab7-9927-b3148dd71556",
        "cursor": {
          "ref": "c3a6d5dd-010e-499a-bc4d-ef8f8ee7510a",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "9668538f-39f2-4364-8c99-1655326c4296"
        },
        "item": {
          "id": "787f9503-dc61-4ab7-9927-b3148dd71556",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "4a913839-b7d5-4607-ab30-1e880d7860f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b13223ca-9cbf-4e06-bc04-03c65d055f1e",
        "cursor": {
          "ref": "b7c288f2-4691-4212-9191-e97e0eb9574d",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "77875725-c823-476b-8b23-e001c9d69259"
        },
        "item": {
          "id": "b13223ca-9cbf-4e06-bc04-03c65d055f1e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "8fc41ef9-0493-4fb4-9fea-659b99d3eac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c97a36a2-0f81-4d08-99a7-4cb8ea69806b",
        "cursor": {
          "ref": "9eeb6028-78db-4be9-b398-501483a05f1b",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f0503871-66ad-4db8-9ad7-2d5947cc7c0a"
        },
        "item": {
          "id": "c97a36a2-0f81-4d08-99a7-4cb8ea69806b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "16bf24fc-fe6a-4b83-a690-a389e00b4bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e90801-84b8-4aee-a3b1-3ef57359d642",
        "cursor": {
          "ref": "2d7d2009-7a27-4051-a35c-b86252e6d146",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "8aad25e7-1340-46e9-b394-6713596d0b71"
        },
        "item": {
          "id": "57e90801-84b8-4aee-a3b1-3ef57359d642",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "29d554aa-c6aa-4948-aa9b-7b221b3406b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "299d6df1-0583-43fc-a0bd-0bef8005e2ef",
        "cursor": {
          "ref": "c9a2eb2d-1068-4f6a-9fe4-293f17d20a74",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "8c8b8e76-5cf4-494a-b06f-d6e98a530b93"
        },
        "item": {
          "id": "299d6df1-0583-43fc-a0bd-0bef8005e2ef",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7c97b2bb-5d64-444a-bb74-9d4a993d19ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd3f5db5-92db-4581-9250-7e434a69b0bb",
        "cursor": {
          "ref": "b32eeeb5-bfb5-49f5-a93d-c2fae30a8c04",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "95091e9c-5ada-4289-b94c-3c54a0e05876"
        },
        "item": {
          "id": "fd3f5db5-92db-4581-9250-7e434a69b0bb",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e1dcd552-1b33-4aa7-b53d-1dc75baa602e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5f558a-dc91-4b7c-9f0e-d5694b0baae0",
        "cursor": {
          "ref": "e2a2d1e4-8bfd-46a2-a88a-be79b13a5b9b",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "2c02426c-717d-401d-b99b-24857b79f0ea"
        },
        "item": {
          "id": "ae5f558a-dc91-4b7c-9f0e-d5694b0baae0",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "392b9e22-5f2f-4478-9c1e-d6a9a0928a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcdc2c78-bfdf-461b-804b-91754dc9574b",
        "cursor": {
          "ref": "b1287bc1-3ce9-46e0-8e53-51c59aa84c14",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a67bcbcf-1a1d-4f00-ab73-26aa55442756"
        },
        "item": {
          "id": "fcdc2c78-bfdf-461b-804b-91754dc9574b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0bd5c37a-fecf-4b14-9cb1-d99db90c66d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae9efa18-c435-4811-82f9-e8820f81e1f2",
        "cursor": {
          "ref": "1bbc0a9a-2849-48e2-81f7-91cb89399384",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "65e5185d-eeb8-4407-86e3-db91e5db8048"
        },
        "item": {
          "id": "ae9efa18-c435-4811-82f9-e8820f81e1f2",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "10560e6c-5ab2-4d76-af28-576ac8887085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c685cb01-f9e9-49e2-94d1-be444f33d702",
        "cursor": {
          "ref": "de00c09a-f14d-41c6-ac39-2292a39054e0",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "7d21ddf8-c8b2-4b26-bf2b-7d698341fc74"
        },
        "item": {
          "id": "c685cb01-f9e9-49e2-94d1-be444f33d702",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "bbbcb35b-d3ae-4df2-8e43-e8f09895d0ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a107fa6a-5858-4e54-990d-538425e3aef2",
        "cursor": {
          "ref": "bda9711f-4ef2-48d8-bfb1-a976f743f2b8",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d0ca7ba8-83cc-4269-a273-379b18035d62"
        },
        "item": {
          "id": "a107fa6a-5858-4e54-990d-538425e3aef2",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "86b1e3ca-405a-4f3b-896c-e7f5b24ac059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a44161ae-40ce-408f-880f-ae916e02eeb0",
        "cursor": {
          "ref": "47b82a68-ad65-488f-9990-cb6531c055f4",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "387e3723-7115-46cb-9053-a71664e231e0"
        },
        "item": {
          "id": "a44161ae-40ce-408f-880f-ae916e02eeb0",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "fbfeeb02-36fd-4645-832f-6d84d7c026c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da99bca4-5585-40b7-ab6e-7dd27d0ec565",
        "cursor": {
          "ref": "69f4dafa-864b-4ee8-b5eb-6ca442b6cca4",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "06e7cca2-b24c-43fa-a24d-7e7a0be7428c"
        },
        "item": {
          "id": "da99bca4-5585-40b7-ab6e-7dd27d0ec565",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "a5a02c05-d9ae-4fc7-97d1-e8cf7bbe05de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6448806e-8031-4ba8-a3fd-26ba9c42c972",
        "cursor": {
          "ref": "005f025f-c9d6-4bb8-8e6a-6fd114ad038d",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d96c74c1-4eb9-4945-8bb6-7dd975406a15"
        },
        "item": {
          "id": "6448806e-8031-4ba8-a3fd-26ba9c42c972",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "847aaf16-392d-4309-be14-7fda238ca163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a5609b-2fc3-4ce4-a8d7-5c82dc881b70",
        "cursor": {
          "ref": "dc3a964b-814f-43d5-868a-ded03090fe38",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c947c7fb-b4ea-48ae-8590-870fc5b74357"
        },
        "item": {
          "id": "f4a5609b-2fc3-4ce4-a8d7-5c82dc881b70",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b7dcbde4-fb32-4711-8e2d-4ad05da2d0cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec2af677-15cb-4216-8072-81e6ef0e51e0",
        "cursor": {
          "ref": "e80d3c3b-b94f-4a98-913d-3b0732e7838d",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ebd42ebb-129c-4b44-8acc-695720bf5ccd"
        },
        "item": {
          "id": "ec2af677-15cb-4216-8072-81e6ef0e51e0",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "2cc22f2a-7cfb-433b-b056-9c31841d1bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a78035c-084c-4a43-8e9b-a0424f6a1a43",
        "cursor": {
          "ref": "3c9b529c-3373-4506-b4e1-38afb3484572",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "0619711c-1f2d-412a-81ea-0ef9fde260b5"
        },
        "item": {
          "id": "7a78035c-084c-4a43-8e9b-a0424f6a1a43",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "07f1b462-e97e-4b4b-b0d8-a031243f06aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f3d9f9-e278-443d-901d-1226127037c6",
        "cursor": {
          "ref": "c5a967f4-5a24-4d91-93fb-2e64887f7f41",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6aac44cb-05ce-4b8a-b7eb-7b6b550fe0c1"
        },
        "item": {
          "id": "97f3d9f9-e278-443d-901d-1226127037c6",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "8b2b85d8-cc16-4c67-ad28-a51211f9abe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed86f9bf-d091-4b54-9efa-0384a844d396",
        "cursor": {
          "ref": "545b1fd8-d74c-4f26-a30a-1c04971986e5",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3cdde0c9-0c1b-42f1-a66f-10edcadb6ff8"
        },
        "item": {
          "id": "ed86f9bf-d091-4b54-9efa-0384a844d396",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "798061b2-f7b9-4d13-ab27-55db5487dd08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b7e484-6081-4045-87aa-495c037de8b2",
        "cursor": {
          "ref": "5eb9b6d2-5bb0-4e62-ab77-8f4c04e9faee",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "82630d0d-9c89-4140-9313-c3b7cf7f93c1"
        },
        "item": {
          "id": "d7b7e484-6081-4045-87aa-495c037de8b2",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "be6315c4-db34-4698-b896-010b361a647b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43562ad6-f6c4-4af0-a951-255c97b746af",
        "cursor": {
          "ref": "f129dc34-022b-499b-b030-7f38198d674f",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "52cd9750-536d-4bbb-8ace-b94243f08064"
        },
        "item": {
          "id": "43562ad6-f6c4-4af0-a951-255c97b746af",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "5ef729fa-9066-4c1a-b02d-5d511f635bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d4dd39-8700-4153-9615-413f4816419b",
        "cursor": {
          "ref": "ca05d4d2-3472-4157-a025-413477a0e9b0",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "6c3b5011-bb96-42c3-b76a-3a10830036fa"
        },
        "item": {
          "id": "26d4dd39-8700-4153-9615-413f4816419b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f336f773-0786-4e26-ba25-58aef87f8478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8821fcea-00a0-431b-8c59-f4ca5f914230",
        "cursor": {
          "ref": "b37a6cfb-e985-458f-9bf6-201793281485",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "1109abc6-1460-4979-9748-f9aa65440c81"
        },
        "item": {
          "id": "8821fcea-00a0-431b-8c59-f4ca5f914230",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "73d00204-71f7-42ed-9219-15da5482f721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c4d1c9b-7091-477e-bd71-dc42274104bb",
        "cursor": {
          "ref": "29c75c83-9310-455d-a87b-45c5bd921ab1",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "542bd122-ff3b-4130-bf3f-8c9c986f6e87"
        },
        "item": {
          "id": "9c4d1c9b-7091-477e-bd71-dc42274104bb",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ae760bd1-4b01-48eb-b384-ce60fadfdfe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59fe1c1e-c645-4f18-bc4d-fecbdf47d53f",
        "cursor": {
          "ref": "dbbec391-eadd-4de9-80c2-e6e1c00c88e5",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f6def75d-eecd-4946-8285-ba6875407e43"
        },
        "item": {
          "id": "59fe1c1e-c645-4f18-bc4d-fecbdf47d53f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "569ac761-066c-44c7-bf0b-c615a0b980d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d13294-fa5a-4bb1-ac29-07989d589b7b",
        "cursor": {
          "ref": "aec69f42-b39f-4cdc-a404-48149296186b",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8568dc1b-cf4e-4eb4-9bbc-f73a7d3887ec"
        },
        "item": {
          "id": "48d13294-fa5a-4bb1-ac29-07989d589b7b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "72521d9a-3737-468b-a987-4794439eee60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abbc4dfd-7bf3-4986-a31b-cff1bd168381",
        "cursor": {
          "ref": "1898f54e-188f-49cd-8feb-7d12346cc8b6",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "f17c10ac-eae5-4da8-889a-d53acb804ee6"
        },
        "item": {
          "id": "abbc4dfd-7bf3-4986-a31b-cff1bd168381",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "4708c5d0-3f75-4b34-9596-163313e0bfec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6cf0d8e-4ebb-467d-b33d-e1bb4ffb6099",
        "cursor": {
          "ref": "3c4cf765-3427-4213-bffd-00a56d780e8b",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a83fddf6-3a54-4ea4-b281-9a2a5ef69bc8"
        },
        "item": {
          "id": "f6cf0d8e-4ebb-467d-b33d-e1bb4ffb6099",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "5d872b47-fa6f-4f76-a94b-0ac56ab5db4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7122cba4-7202-4576-9126-01b83bc28c2b",
        "cursor": {
          "ref": "2891909a-af61-4c2b-b15a-ff39dce4a762",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b323ef6b-ee39-413e-9dc5-d588dd6e9c9f"
        },
        "item": {
          "id": "7122cba4-7202-4576-9126-01b83bc28c2b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "aa7fb32b-f3c9-4cfc-b70b-5b7e9351a9ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6110412b-fbee-4412-a8b8-a2bb32d4b050",
        "cursor": {
          "ref": "4cd0e790-e144-479d-890a-fc3f68e739e3",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "93f11d0b-bd33-4d4e-95da-09514d3aabbb"
        },
        "item": {
          "id": "6110412b-fbee-4412-a8b8-a2bb32d4b050",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "125f6ae4-0afa-4740-b041-816cf522fe51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef9a8059-2258-45d6-a0e2-412840e82f19",
        "cursor": {
          "ref": "0b4ea664-bf4e-49b8-a1db-86b9d2e36507",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ba8d33f0-7441-4247-8232-2d1c5905394a"
        },
        "item": {
          "id": "ef9a8059-2258-45d6-a0e2-412840e82f19",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a5671779-5300-42dc-83c3-5215a56fb21d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94de6dd9-fd6c-4c9e-99d4-14bdc7e436ac",
        "cursor": {
          "ref": "4f2792a7-5818-484b-af65-d41124f32745",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "8cbadbbf-3d7b-41c9-9495-d9ce8c3f4e39"
        },
        "item": {
          "id": "94de6dd9-fd6c-4c9e-99d4-14bdc7e436ac",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "3c67e184-0d10-4d6d-9749-7367a3a43c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a32e56-d5b4-4205-beb3-e708ea4e6196",
        "cursor": {
          "ref": "75bdf1f0-3087-485e-a110-f6cd19614bcf",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f079c4b4-84f5-415a-b33a-6884f1d5e9bd"
        },
        "item": {
          "id": "b8a32e56-d5b4-4205-beb3-e708ea4e6196",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "cae7e45f-2139-4806-9b56-dfcbbbc93e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "975395f8-fdf3-4504-b8b9-752423880e03",
        "cursor": {
          "ref": "2d061d9b-e475-4451-874c-0c741f0aa802",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f477580c-af6c-4d7a-b956-87f2658a53cb"
        },
        "item": {
          "id": "975395f8-fdf3-4504-b8b9-752423880e03",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "7cdf5cdf-e9e1-48a5-8c56-d4840dcf63ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c8ca09-0247-4f46-8ddb-d2bb2da41b13",
        "cursor": {
          "ref": "00e0e8e0-c95a-4fbf-a97d-a4e5065c56b0",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "cb5e2a04-e64c-4e8d-ad30-f774306c3733"
        },
        "item": {
          "id": "39c8ca09-0247-4f46-8ddb-d2bb2da41b13",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e19917a8-f9bb-43fb-8721-96b4aa556bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c4a856-d868-4ed1-8370-7dc8f2aa15b6",
        "cursor": {
          "ref": "94099b9c-6aa6-43a7-b639-d72e68a96cb6",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "775ff260-afba-4de6-87bb-4b563f3ed274"
        },
        "item": {
          "id": "a4c4a856-d868-4ed1-8370-7dc8f2aa15b6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ac0ac395-78d7-409b-bd48-e383d50b7e37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90cbee59-0ea1-4312-8d98-23015cce5a09",
        "cursor": {
          "ref": "a7231862-84ba-4cdc-8fe1-e4e61d7bf692",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "1580638e-6cb9-45cb-ad1b-11cd75caab48"
        },
        "item": {
          "id": "90cbee59-0ea1-4312-8d98-23015cce5a09",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "9698d948-815f-4067-b32e-e1a76b9c214e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d63beb-a42d-4ec6-8392-f5efc4c73c38",
        "cursor": {
          "ref": "d29710bd-1593-473e-9e28-c9d5fc2318fd",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "493698c0-089e-49eb-867b-b9f3b57bb6b9"
        },
        "item": {
          "id": "62d63beb-a42d-4ec6-8392-f5efc4c73c38",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ff46e0e3-36d5-4fbd-b285-c0512ff7ce4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd41be42-0732-4e70-b680-9ef53dc5d37c",
        "cursor": {
          "ref": "26509250-6b4f-44d3-998c-41a84bcf55d8",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ad18f184-0bfd-46b4-81c9-1c21403e9a04"
        },
        "item": {
          "id": "cd41be42-0732-4e70-b680-9ef53dc5d37c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e9e71365-7e32-4822-ac7d-ef5f2617bdd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f84511-552e-4e7f-b192-1ea187e5e311",
        "cursor": {
          "ref": "5a3bfd50-b2a6-4e43-bb8a-7d08da343629",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "61780d8d-a0a8-44ef-9d7c-d2cb9dc13333"
        },
        "item": {
          "id": "79f84511-552e-4e7f-b192-1ea187e5e311",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "28fbdf7c-86e7-4139-bb5d-554fbffafd6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "440ec97c-e673-409b-a200-989852d57f1c",
        "cursor": {
          "ref": "bfdc6936-56d8-476f-bffb-c054a8944c52",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "3cbd660c-bf58-4d92-937d-249f83da7bf6"
        },
        "item": {
          "id": "440ec97c-e673-409b-a200-989852d57f1c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d1f55345-0313-41c3-9d07-eec7ea1d380c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72dddc60-20ff-45a0-8fe0-0fa28c12e44f",
        "cursor": {
          "ref": "079623be-09fe-4268-8965-7adf48a07f01",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ee28c912-dad1-43c3-97ca-fb7035eafa68"
        },
        "item": {
          "id": "72dddc60-20ff-45a0-8fe0-0fa28c12e44f",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "49191a9a-72eb-4b02-8788-d330c9c60a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d90208-7842-46b1-8fbf-fe9eb233b794",
        "cursor": {
          "ref": "0ef7b406-209a-457a-9e83-ea3b2910dc45",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "6d8ecee6-fa84-4e5f-b519-37ac3f5f097c"
        },
        "item": {
          "id": "e0d90208-7842-46b1-8fbf-fe9eb233b794",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a6a0d415-b746-4a4c-96a0-8ad8c95acaeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f72b0749-47f2-4aef-85d0-8833ac60e74d",
        "cursor": {
          "ref": "e6352a6a-4b23-4873-a0bf-5281d7bc6e04",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "86be6402-dbc0-4788-bc65-05ce3b6e559e"
        },
        "item": {
          "id": "f72b0749-47f2-4aef-85d0-8833ac60e74d",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "f561c712-6881-41b9-b3c3-d3a7ededf333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f5bd3c8-a418-4fe6-af8f-cc01bcc90046",
        "cursor": {
          "ref": "332e21a8-8e3d-47a5-b1df-baa06269b021",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "bc6e1374-a5f6-4925-83f6-570fd4f4bce9"
        },
        "item": {
          "id": "7f5bd3c8-a418-4fe6-af8f-cc01bcc90046",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "95b4735b-ab85-4298-8b3a-ba2cd6472b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "802b8989-7adf-4070-891f-abf2442cffc2",
        "cursor": {
          "ref": "14e059ea-c75f-4bb0-8aff-f31d731918ca",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c0ce486f-238d-4bb6-a7cd-be191fdcc9b2"
        },
        "item": {
          "id": "802b8989-7adf-4070-891f-abf2442cffc2",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "222ddf92-0744-4aa7-83a0-4250f0e8da5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "461ba803-1071-49e1-94b2-262dbd78d1c3",
        "cursor": {
          "ref": "5224755b-0efa-4b70-ae0f-f8f5e436609a",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "111aa9ab-3f73-4ff1-b828-fed6d8bb8e58"
        },
        "item": {
          "id": "461ba803-1071-49e1-94b2-262dbd78d1c3",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "fe3b4b48-b2ad-43fb-81ca-389d88b1bca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c4c0b7d-b3c3-491b-940c-6f61b4609c9b",
        "cursor": {
          "ref": "135ac3af-ce07-417b-9c04-a3939984323e",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "68a46610-e6b1-4044-9845-761ea5ec0b59"
        },
        "item": {
          "id": "6c4c0b7d-b3c3-491b-940c-6f61b4609c9b",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "192b8f88-a27f-4372-9f3d-838bb396cbd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "406aa11a-f910-4fc7-8e07-9aa3d125886a",
        "cursor": {
          "ref": "c8b49a20-82f3-48fa-bf36-5c750feaf99d",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "25c6309a-2d5c-42ab-8f67-9a54247785cc"
        },
        "item": {
          "id": "406aa11a-f910-4fc7-8e07-9aa3d125886a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b6b7c892-d2df-474f-9d8f-4d4d32a53781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f616ba-6a01-4961-a4b2-9e9fca435f16",
        "cursor": {
          "ref": "b88262e1-9c75-48e3-b5c1-c690865126a1",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "3e5668bb-aab7-4cf8-9168-f11de43fd0c5"
        },
        "item": {
          "id": "e6f616ba-6a01-4961-a4b2-9e9fca435f16",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "bad8908f-99a8-4c55-9599-d5ecd1fcaa3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84fea90e-b34c-4372-b00f-63af9d4321c1",
        "cursor": {
          "ref": "5592cbc7-df4b-44a3-a87c-f274981a9cf2",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "cb08108e-e1fe-4207-b084-881a231045c0"
        },
        "item": {
          "id": "84fea90e-b34c-4372-b00f-63af9d4321c1",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "de099608-5337-4dc2-9dd3-f41732493dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a20b3c2f-171c-42d5-a815-3845763ec3db",
        "cursor": {
          "ref": "d89be194-8f67-49c7-93b0-0df5899113df",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3ec51075-5fd2-42f2-ae0e-f58924c464c0"
        },
        "item": {
          "id": "a20b3c2f-171c-42d5-a815-3845763ec3db",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "9d7c8650-4c8c-4823-b74c-bacd7d3b390d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2405d24a-961c-40b0-804b-ad76384e8f71",
        "cursor": {
          "ref": "f2984bdb-130c-405b-9e7f-df622db90cee",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "8ab341ea-160d-430c-b621-a46931baeffb"
        },
        "item": {
          "id": "2405d24a-961c-40b0-804b-ad76384e8f71",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "caf714ff-a05c-4306-b803-87740cfa37ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c36b8eec-f683-45cb-ae2e-8fd00ba73fef",
        "cursor": {
          "ref": "823b9c8a-6cf1-4cea-b18e-8c97442a6e4f",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "06f5a1c7-0ad6-4c38-afc1-30f30587dc3e"
        },
        "item": {
          "id": "c36b8eec-f683-45cb-ae2e-8fd00ba73fef",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "41d17d87-013b-4164-a262-99aa06b33b65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8423af0-bed4-41f2-9150-c0cb88ce2b92",
        "cursor": {
          "ref": "3b186137-6b13-4118-842d-d05765ab78cd",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a279f47f-508f-46b2-979a-d368dddd2a40"
        },
        "item": {
          "id": "b8423af0-bed4-41f2-9150-c0cb88ce2b92",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "ba334523-d417-4ced-8402-55928425f975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5460606b-83c8-4846-aaaa-2fa6c101b7a5",
        "cursor": {
          "ref": "954fada1-1bf8-4243-af68-e095585b3229",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "41dab167-d501-4e01-8af9-68e3ed1ea97c"
        },
        "item": {
          "id": "5460606b-83c8-4846-aaaa-2fa6c101b7a5",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "4277620d-fd9d-4d72-86c6-b3c5106a3e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f27e5f1f-b1b1-416d-ac53-3caa8ca67eae",
        "cursor": {
          "ref": "269633b7-bd8c-482c-ac1b-af207d0d8922",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e9fbad92-c7c1-47af-ab97-4668edb76ad7"
        },
        "item": {
          "id": "f27e5f1f-b1b1-416d-ac53-3caa8ca67eae",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "04698871-f3f5-469f-998d-3f7d76fc5b3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33968e8-b8f9-469f-9cf9-cd4f6d99c2de",
        "cursor": {
          "ref": "9ccb927e-71f4-41c1-8bf2-267c6418af55",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "d2cfc2a8-fd65-408c-b350-472b403084f8"
        },
        "item": {
          "id": "c33968e8-b8f9-469f-9cf9-cd4f6d99c2de",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "46f02f10-4a10-499b-91e2-ded597e6b50f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361a48a9-0ca8-4716-8d32-9fe19bd1531f",
        "cursor": {
          "ref": "b14ff3b4-527e-449c-94ce-b6cbf410d080",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4004d367-925f-4d8c-8ca2-385618bcdc45"
        },
        "item": {
          "id": "361a48a9-0ca8-4716-8d32-9fe19bd1531f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "26c0d9c4-030a-43eb-a771-4a831e620afe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33448f45-1ebe-4624-89d3-d028b5455990",
        "cursor": {
          "ref": "80924b4d-99f0-4053-be43-f7841de0832f",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "09895dd0-6521-4c72-a4f2-b444d3cf4caa"
        },
        "item": {
          "id": "33448f45-1ebe-4624-89d3-d028b5455990",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "5fc48f37-1651-4e71-82b5-e8a72936b112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a5768b0-9de3-4f98-8703-6a3a1b6948b4",
        "cursor": {
          "ref": "5887df77-ea4e-4b71-8ccd-af11f04b99aa",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "12ebfe06-a069-4e98-84e5-dc8c9e390c0a"
        },
        "item": {
          "id": "0a5768b0-9de3-4f98-8703-6a3a1b6948b4",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "872b0c3a-ca87-4de5-b1ac-d54d69da1957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa699d14-42bb-4acf-9434-f728fcea926b",
        "cursor": {
          "ref": "c528bfe9-5425-4c06-81a6-bc21511de484",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "90764f36-36b9-4b05-b2ce-9f0724f91a13"
        },
        "item": {
          "id": "aa699d14-42bb-4acf-9434-f728fcea926b",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "5397c6aa-e75b-43f5-b854-5305d4528be1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d31b7fbb-b4c8-49f3-a12c-cb1154e1a5a9",
        "cursor": {
          "ref": "565e997b-1cc8-40f3-9b24-0fc887dd6201",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0c1200ce-faa1-43c3-89aa-85c0663b720e"
        },
        "item": {
          "id": "d31b7fbb-b4c8-49f3-a12c-cb1154e1a5a9",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "d2fadfa2-d68f-48d2-8d1f-6e795df173a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a884eb0-5c5c-45d4-a108-4b579ae6c8ea",
        "cursor": {
          "ref": "e5cf3666-d978-4327-a34c-50345da1e0a4",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "f4deb1b7-f23d-4b5a-a2b3-3533560fe97a"
        },
        "item": {
          "id": "2a884eb0-5c5c-45d4-a108-4b579ae6c8ea",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "9b788a84-50fe-4aaa-950c-bfca2307f01c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9046c4f2-5425-4b4c-be42-af8e38c36c2f",
        "cursor": {
          "ref": "d480c34d-fa09-47e8-a908-e3b6e9c2ccee",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a8e02859-56f6-4326-9bcd-5a4885bf1ebd"
        },
        "item": {
          "id": "9046c4f2-5425-4b4c-be42-af8e38c36c2f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "eea74322-bd2d-4e5e-9330-11ad9bb3ef00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1801bb27-d2f9-4c7c-8146-d70ddebd3450",
        "cursor": {
          "ref": "5ace62af-3c9d-4c23-bf16-69f72a078d9c",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "2175c0f0-c2b7-4016-8124-38964d339156"
        },
        "item": {
          "id": "1801bb27-d2f9-4c7c-8146-d70ddebd3450",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1bada67c-3ae6-4f3e-89d9-c6711a53994c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141cab96-e845-4eac-89aa-aa18768eaf84",
        "cursor": {
          "ref": "4512ae47-c81e-4075-99e2-18b54a59de1e",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c337708e-7b85-465a-b76a-b40406c1fac7"
        },
        "item": {
          "id": "141cab96-e845-4eac-89aa-aa18768eaf84",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "a6fc1987-7940-4dec-ab40-8791d771a010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b114152-360d-4685-b59a-2f698fa60adc",
        "cursor": {
          "ref": "f6924c68-0625-40cc-bc33-246289afadb7",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "0231f486-595d-4591-8163-92243a22fd85"
        },
        "item": {
          "id": "4b114152-360d-4685-b59a-2f698fa60adc",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f9c81c0d-e094-4d21-ae75-016be1fedcb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9b16ba-d3ca-44dc-8b2d-9f3a264c5e9c",
        "cursor": {
          "ref": "0772b99c-9dae-4c2a-bc6a-985c69cd0a11",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "1a205c8e-4995-4c6a-a2a7-78f6df4ecbff"
        },
        "item": {
          "id": "fa9b16ba-d3ca-44dc-8b2d-9f3a264c5e9c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "8bc0fd3e-de78-444d-9982-cfd2c20795db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f5f2fa9-ec22-4ea2-9e16-ff1c8426833e",
        "cursor": {
          "ref": "f38d976a-305c-400a-8d9a-89ad49b3f767",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "9cc52b48-a76d-4fe3-bb99-02a95c20b6df"
        },
        "item": {
          "id": "9f5f2fa9-ec22-4ea2-9e16-ff1c8426833e",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d595f236-371d-4421-b7ee-9fd797b97764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd6ad6a-a0f7-48da-b6f5-83b84a848f17",
        "cursor": {
          "ref": "6b10fc0f-b1af-44c8-9ade-3702ef7f49e4",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "671f7005-8ff0-4d5d-8236-dc761d41ec8e"
        },
        "item": {
          "id": "7dd6ad6a-a0f7-48da-b6f5-83b84a848f17",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f49a7672-b786-45a6-86fb-a35b665dffb0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0102ceb6-5262-4705-8e2f-e0ec3fba0524",
        "cursor": {
          "ref": "8018dbfd-ee52-420c-9c55-8a31fc8101db",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "557d0c87-8cb9-42e4-a169-10181034fd27"
        },
        "item": {
          "id": "0102ceb6-5262-4705-8e2f-e0ec3fba0524",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "18cc5e92-9cea-4874-8f44-9ec0b13a4e28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "84bc281f-be08-4e7e-b147-c659cbe4473d",
        "cursor": {
          "ref": "4e7a22af-0f98-4a1b-9564-f9e533a587b2",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "c78382fa-f3c1-4b8b-9780-383478255ae4"
        },
        "item": {
          "id": "84bc281f-be08-4e7e-b147-c659cbe4473d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b8513828-7fc1-4dfc-a14c-e0ba05bc7396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "764275b8-41cd-4e5e-9c1b-70c779ef9f25",
        "cursor": {
          "ref": "8e272446-feca-4384-aacf-ca342471cd67",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "78c38272-c628-41e4-86ec-45be026b247f"
        },
        "item": {
          "id": "764275b8-41cd-4e5e-9c1b-70c779ef9f25",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "eaa3d26c-05ba-497f-8c35-389e25a38421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "9c0f2c82-100d-4841-9c57-16efd6bc94bd",
        "cursor": {
          "ref": "f295dec6-00dd-4045-81d9-70f51887b48b",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "4dd1074a-e683-4a35-81e6-e1483884ce36"
        },
        "item": {
          "id": "9c0f2c82-100d-4841-9c57-16efd6bc94bd",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b7f46c55-3d6d-45ef-9e83-7b6aad0e05ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "2ae61f7b-3700-419b-abff-06bc4c37f735",
        "cursor": {
          "ref": "a8143852-83da-4c43-ad68-09bbae9af4fc",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "5f3f3c71-5a23-4257-adeb-e521433fbd81"
        },
        "item": {
          "id": "2ae61f7b-3700-419b-abff-06bc4c37f735",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0610ead9-d889-4cc3-bb7e-a4670950a5d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "727dd0c7-83a1-4a20-96c2-414ff2a36c46",
        "cursor": {
          "ref": "d0dcf11d-756f-45e0-92f9-b9d08f77114f",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "832a05ab-c1b3-485c-a7d4-72a9f835880e"
        },
        "item": {
          "id": "727dd0c7-83a1-4a20-96c2-414ff2a36c46",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "16daa8a0-84df-4f5f-8d7d-880992acca89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "4038748d-d271-4dfe-8e77-47fe907a6053",
        "cursor": {
          "ref": "7aed4a7c-d2c7-4ef6-ab6e-900b50913eac",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c57b39fb-9fe0-4013-abee-055b83c2b9b0"
        },
        "item": {
          "id": "4038748d-d271-4dfe-8e77-47fe907a6053",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "0cb09ba2-c77e-4d85-ae27-86454d9baf53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "85eea0e8-45f9-4c72-a92f-076603530b83",
        "cursor": {
          "ref": "71f76219-3d63-4464-84d8-da03f381cead",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "5d6943f5-74f6-45e0-aca3-62cff77cf474"
        },
        "item": {
          "id": "85eea0e8-45f9-4c72-a92f-076603530b83",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "917a3083-360b-4569-913f-0fbd620c5ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5dbdd97-0ced-4597-a308-e29b69b5b7fe",
        "cursor": {
          "ref": "a970754c-2040-4e15-8f64-62385a28bda2",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "2aaeb170-450f-417f-8fe2-30a1de5c0fb8"
        },
        "item": {
          "id": "b5dbdd97-0ced-4597-a308-e29b69b5b7fe",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6896061a-5b13-4bd7-a19e-3a1bbfa8dc99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a00bd39f-f434-40c4-95e5-31dc8ce1bda4",
        "cursor": {
          "ref": "9097c49e-cca6-482f-97e3-e2b2c1f2bda4",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c5f871ae-8864-4b28-a38c-7bc838915e75"
        },
        "item": {
          "id": "a00bd39f-f434-40c4-95e5-31dc8ce1bda4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "502c29a5-18ae-49fa-88ae-d5e7a945f93f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b0af95d-2a3d-48b7-90d7-1bc32e062d82",
        "cursor": {
          "ref": "c4747e4e-c0e9-4b0a-9995-1c76d3edd758",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "2f47646c-54c6-4175-a48e-70cc854f5783"
        },
        "item": {
          "id": "4b0af95d-2a3d-48b7-90d7-1bc32e062d82",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f7920722-29da-4c43-aa84-df9c27f9b56a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf5c03d-1dc9-4fee-b0cd-7c2fb1006fb3",
        "cursor": {
          "ref": "3e0b25c3-19aa-4a36-a99f-8e1066647481",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b25763a9-1a3a-4621-a1a2-92ca1c02689b"
        },
        "item": {
          "id": "bbf5c03d-1dc9-4fee-b0cd-7c2fb1006fb3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "81be0d11-8eae-4763-8bf7-d7cad9b2e63b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c732ef-f95a-4db3-9489-ad539e5b8a27",
        "cursor": {
          "ref": "40ba8d30-ed1f-4c88-a52f-b98b039f64c1",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a2f4a874-34fb-4a96-8699-6543389ea1e4"
        },
        "item": {
          "id": "b4c732ef-f95a-4db3-9489-ad539e5b8a27",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a463569d-a185-4ac2-8b6a-6bab315fa835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd61cdc-f571-494c-8566-230cc8c05dc7",
        "cursor": {
          "ref": "b2510266-f81a-4f2f-8533-04ef21081098",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "49db0701-e6d2-42f5-a002-3eabb76281ce"
        },
        "item": {
          "id": "edd61cdc-f571-494c-8566-230cc8c05dc7",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "88e6637b-d8d0-4600-864a-c0f29b6d72d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d666983c-02c7-445d-9e3d-23f4d8d16522",
        "cursor": {
          "ref": "00381585-f560-4eb8-b473-34f21078dedd",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "1d27577c-e5fe-4226-94ec-5c01823c5708"
        },
        "item": {
          "id": "d666983c-02c7-445d-9e3d-23f4d8d16522",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "dcb8dec9-c85b-494f-9195-aca7c66ac18e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d27de87a-c891-44a9-a904-8b6e45c9f7a6",
        "cursor": {
          "ref": "cc11483d-4e43-4ee7-a441-557b9c2aea96",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "64bc3a41-748b-41ab-a2f2-db2d6f725d4a"
        },
        "item": {
          "id": "d27de87a-c891-44a9-a904-8b6e45c9f7a6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "bdb5a933-e028-45fa-8ccb-d07c734c65b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c708471a-6219-4505-90a3-8d617f23a26f",
        "cursor": {
          "ref": "ec3bacd4-d8cd-45e1-8bf6-3d0861a8fa21",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "6916a0a4-59f1-49db-82c9-01dac5ce9e22"
        },
        "item": {
          "id": "c708471a-6219-4505-90a3-8d617f23a26f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "60f8263e-4516-4548-a6b9-f997b5ad789d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "270b13f0-e709-42f1-ba18-e911c849ef6d",
        "cursor": {
          "ref": "e2d32ca2-a39e-4cd2-852c-a2d9e63b84e9",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "0299fde0-6440-419b-b10b-a280121a5479"
        },
        "item": {
          "id": "270b13f0-e709-42f1-ba18-e911c849ef6d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "819b5b24-74f6-475d-9005-218d6bc2395d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dccf0e3-a59c-4b2e-849e-919c7dad4d09",
        "cursor": {
          "ref": "652bc7f4-535f-45df-913c-ce39d72c132f",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "31932514-fabd-41e8-ad5b-fd0bc7479338"
        },
        "item": {
          "id": "3dccf0e3-a59c-4b2e-849e-919c7dad4d09",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "597b7557-f117-4861-8d5e-13df33bc3cdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b410795-3c44-4ecc-8a30-9e72feccb860",
        "cursor": {
          "ref": "5e9a0e59-9782-4dfb-ad4d-04d61410c2df",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a4a4926c-f384-4055-ae91-7b59dc4ad02c"
        },
        "item": {
          "id": "2b410795-3c44-4ecc-8a30-9e72feccb860",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "bfb3511a-ce52-4796-ae23-dd0f7581a708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ec7ccd9-7449-4cd5-b3fb-58f23543ea43",
        "cursor": {
          "ref": "8c96fa56-fdba-4a6c-85a2-0fa2f86ff5d3",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d6177341-2740-4453-8273-653c732c3134"
        },
        "item": {
          "id": "9ec7ccd9-7449-4cd5-b3fb-58f23543ea43",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b10f29b3-ef45-4efa-aac1-d87212018468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b548f1-6079-4a86-a164-7f215565bd43",
        "cursor": {
          "ref": "784e33a9-3c7e-4ed9-b048-34a0e3f12c67",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "d97fc08b-4323-43cd-bd3d-028e45789e97"
        },
        "item": {
          "id": "01b548f1-6079-4a86-a164-7f215565bd43",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8a12e094-7d02-4be2-a086-a9a8750ff023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de678078-4797-4d6d-bdc1-2b9a716fa7db",
        "cursor": {
          "ref": "1c5a057e-1241-4781-86d8-917563d5ab40",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b70e43b3-4fd1-426a-9c28-e3560a20c337"
        },
        "item": {
          "id": "de678078-4797-4d6d-bdc1-2b9a716fa7db",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9e0a5f08-0bef-4e80-acb0-7e76867dc44b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f0ae78-bbf8-451f-8c4d-35a13208058f",
        "cursor": {
          "ref": "1ce5a793-3434-4d89-b490-4dffeb47668b",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "87dd0eda-554a-42df-8a19-545c98e62d16"
        },
        "item": {
          "id": "02f0ae78-bbf8-451f-8c4d-35a13208058f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "469ac022-f74c-4563-a81a-b44527a9aae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bec83a5-7670-4252-8766-a5895bec6aa5",
        "cursor": {
          "ref": "bbc179f6-14fd-457f-80fe-41c03abedd88",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b94935da-0a71-4c58-8cf6-9628938db608"
        },
        "item": {
          "id": "9bec83a5-7670-4252-8766-a5895bec6aa5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f1ff0a8d-c431-4723-85e0-92f807f5cf14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "531a1a07-45ba-4383-a34b-79d0f75dcbd8",
        "cursor": {
          "ref": "ff2f8e0a-7cc4-46db-9315-8ff11dfc1284",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a4c96d71-73d3-4647-8258-d427d9b54a25"
        },
        "item": {
          "id": "531a1a07-45ba-4383-a34b-79d0f75dcbd8",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "fb8f68b0-6b48-4382-872f-02b59c79adb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f722a0-743b-4073-b782-edbae320b154",
        "cursor": {
          "ref": "03606c8f-2ba1-4aa6-b7a3-b81108bacf05",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2f7041b9-b2a2-46d6-b783-b12a9f86c789"
        },
        "item": {
          "id": "49f722a0-743b-4073-b782-edbae320b154",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0ffaff54-ce76-40ae-bd06-36ba9ecc9ec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48fe65ff-831a-4eae-838d-2eeaffcf9ebc",
        "cursor": {
          "ref": "92db0c1a-ddab-4760-9813-cec7aa9602f4",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e133f098-e3dc-4de8-bb85-7e5de69786a8"
        },
        "item": {
          "id": "48fe65ff-831a-4eae-838d-2eeaffcf9ebc",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "14d023bf-4b1e-4742-8188-5e84b550d768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d2a4f5-3967-40c7-858e-425188f7fa75",
        "cursor": {
          "ref": "c79d2987-3aa6-4e41-923b-00d69271d8a9",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e9b7243c-86e7-427c-962b-4c8e36e0e70a"
        },
        "item": {
          "id": "e5d2a4f5-3967-40c7-858e-425188f7fa75",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d64140c3-c527-4d77-88a5-246dc9aee252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e85ce5-e733-473f-86bd-900630c27565",
        "cursor": {
          "ref": "695b11d0-26c4-490e-afdb-e63da5eb6964",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "d01d5412-ab2f-4829-b6fc-90560ad28279"
        },
        "item": {
          "id": "54e85ce5-e733-473f-86bd-900630c27565",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "624217ae-cb71-4a7c-83f9-ed4e0f70263d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a1abc03-209b-4aaf-8256-b5340dd28296",
        "cursor": {
          "ref": "89a3ba03-577e-4760-a4b0-0ac45fb6f52e",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "fe25947b-7f07-4d5f-9519-64dbc0cf1c02"
        },
        "item": {
          "id": "0a1abc03-209b-4aaf-8256-b5340dd28296",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "70370134-a1bd-4257-8956-d35df2002f36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d52e5cc-4e32-4527-8589-90681a88b081",
        "cursor": {
          "ref": "abd3cf88-f9e4-49e6-8e45-43e543f17328",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "037bd6fd-b607-445b-8696-74eb1b71927a"
        },
        "item": {
          "id": "1d52e5cc-4e32-4527-8589-90681a88b081",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2ac0b179-d32c-4613-bd63-5cfb691d5b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb778332-dbb2-4772-8e56-1088423a9703",
        "cursor": {
          "ref": "c650713a-18d8-4be0-b80a-d733a4e70b45",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "867c6e0c-eac7-4fd0-aa29-0e6ba61f42bc"
        },
        "item": {
          "id": "fb778332-dbb2-4772-8e56-1088423a9703",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2356549f-dc39-434d-a977-29c64b0125ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "564d5e9b-2f78-4633-820b-3916dea4f61f",
        "cursor": {
          "ref": "49df3744-da25-45a4-af85-75fb455b5bb3",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "bd9f2a4a-f87b-4a59-9dc7-b3da9287c206"
        },
        "item": {
          "id": "564d5e9b-2f78-4633-820b-3916dea4f61f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "98d57b06-8c8d-451f-bf20-86052ccbd900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "215efea8-9b7c-4de2-9588-b5f79d509472",
        "cursor": {
          "ref": "411352e3-8f24-4997-b0d8-3492b60bf41a",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "5229cb1f-8762-41ee-ac99-f799b55e40fb"
        },
        "item": {
          "id": "215efea8-9b7c-4de2-9588-b5f79d509472",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9f3d6b31-f546-414d-b634-129e266f7b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96beecb3-da04-4324-9269-bf9c7ae1a181",
        "cursor": {
          "ref": "4b275d21-3115-4d24-9069-84a8912f43be",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d42bc705-f028-4252-aa7e-cbb4994f25c2"
        },
        "item": {
          "id": "96beecb3-da04-4324-9269-bf9c7ae1a181",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9cd6ab6f-0617-4a20-88d1-a1ee14a583bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e9ec60-5264-4737-a5b2-652e9f68853a",
        "cursor": {
          "ref": "68f635c6-772c-409c-bc44-2bf77b5860b3",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "8e734922-9083-403f-8365-cd578c166f78"
        },
        "item": {
          "id": "c6e9ec60-5264-4737-a5b2-652e9f68853a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c76fba6e-5e08-4081-8cc5-ad0c243e5430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f328a85-0a4a-4430-9c56-f9a4d559078d",
        "cursor": {
          "ref": "4a7111cd-a618-4e50-84b9-ee07de0c6375",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e0a3f223-fa83-4327-8cc5-130af470e59e"
        },
        "item": {
          "id": "9f328a85-0a4a-4430-9c56-f9a4d559078d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ae2d743a-ca65-4e02-83fa-d869210b35cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "406261bc-f2c4-4d42-b98e-fa3c6f2f1f03",
        "cursor": {
          "ref": "a148cfad-6114-4d1f-a938-f2802c666347",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3f15bb8b-6053-4f68-925e-f66a4b6e3c91"
        },
        "item": {
          "id": "406261bc-f2c4-4d42-b98e-fa3c6f2f1f03",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "1dd0c74a-0513-4df9-bc88-2000cdb96498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abbe6515-2a51-4cba-b78b-a164e7a702a3",
        "cursor": {
          "ref": "b25ad73b-d772-43a7-8416-4516ad56d252",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "95836217-0873-48a6-925f-d3866b4ee873"
        },
        "item": {
          "id": "abbe6515-2a51-4cba-b78b-a164e7a702a3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8fcf76b8-3e0d-4dfe-8e55-f4253287c87c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be193c5-f252-496e-9207-666ca29f73ad",
        "cursor": {
          "ref": "bdfcb112-0864-416b-bc4f-4e2b2e7ccf05",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b25c301e-2286-4985-9bbc-875331dd20db"
        },
        "item": {
          "id": "3be193c5-f252-496e-9207-666ca29f73ad",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0ea46341-4816-4f6f-bd7d-04934543bcc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ede13d-9e49-4f0a-af7a-00eb110f7e2d",
        "cursor": {
          "ref": "607bc425-70ce-4cfb-8c5e-1c33b192798d",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "4e879c6a-fa30-4ca0-8c63-939f023bd1c3"
        },
        "item": {
          "id": "a8ede13d-9e49-4f0a-af7a-00eb110f7e2d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c1276c4a-e0b6-4abf-8333-081a74d36af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f2c355-a19a-4586-9571-6c2363c56d30",
        "cursor": {
          "ref": "5b57d04d-fa32-4c96-b402-83ef774a1b5e",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d7275d90-a1b7-4c27-bea3-ada754c72188"
        },
        "item": {
          "id": "c3f2c355-a19a-4586-9571-6c2363c56d30",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "8332edf8-44d5-4208-aab8-057ec042780a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "212e8e24-2e83-43bf-8805-fa23eda311db",
        "cursor": {
          "ref": "6ccf02d3-0c6d-490d-a15e-5ec84431533f",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "58ebbfab-b802-49cf-85ef-1bfc5c01928f"
        },
        "item": {
          "id": "212e8e24-2e83-43bf-8805-fa23eda311db",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "38c0609b-1515-452e-98f8-e3b82f03a1be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c3a013-632f-4e9c-b596-b70d9884cbf1",
        "cursor": {
          "ref": "0503f090-ff78-4667-9789-75eb21fd97a8",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f8b60db0-e832-45a0-a937-ff73b09a2194"
        },
        "item": {
          "id": "51c3a013-632f-4e9c-b596-b70d9884cbf1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "abb54584-466a-48d1-8699-076fcd261b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6322e5b-ad13-41d7-82d4-a2a7667042be",
        "cursor": {
          "ref": "11a55d60-7603-40e7-8d2d-f2263fc38685",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "5b4a1892-6e00-4842-8056-17da5b997d39"
        },
        "item": {
          "id": "c6322e5b-ad13-41d7-82d4-a2a7667042be",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "176ab9fb-126a-4515-8aa7-82a1d3edd6f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65459e1f-0bf5-4660-9396-e3540123ceaa",
        "cursor": {
          "ref": "b244ab14-9ad1-4986-83eb-58412221fe4f",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "28b984ef-c45f-484b-a796-e983c4d3e217"
        },
        "item": {
          "id": "65459e1f-0bf5-4660-9396-e3540123ceaa",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1a9e0e21-d5f0-47c9-a4b5-370ad782bab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "474b4eec-c6f5-4589-a92d-32a6df4043e0",
        "cursor": {
          "ref": "a61e8326-6266-4e41-a5b6-9a17e951e93f",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "62ff1a11-18fc-461d-84e3-c376ebe55f3b"
        },
        "item": {
          "id": "474b4eec-c6f5-4589-a92d-32a6df4043e0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "fdd3812a-cc36-42b4-bb89-7f2750e89c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e85aaee-2a97-4747-9ad8-126fe317532a",
        "cursor": {
          "ref": "d1789331-7398-49dd-a91d-64927cb7bab2",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "cb4ca97e-c294-4c1d-91e1-449ad82fd2fe"
        },
        "item": {
          "id": "7e85aaee-2a97-4747-9ad8-126fe317532a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c82173fc-74a5-45c7-ae98-e0b872cd2291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7133009-dccd-42a2-83e3-b0fa9006d361",
        "cursor": {
          "ref": "a548e81b-0096-4aad-86d3-e2fb0d39195f",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "8403b496-344e-4e2a-9b35-4f8e7dd1c85c"
        },
        "item": {
          "id": "b7133009-dccd-42a2-83e3-b0fa9006d361",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "778ba41e-a833-48c0-ac83-760a1207929a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7794c6a-192b-4d0b-9d86-e48d20fe64e7",
        "cursor": {
          "ref": "80fb05a7-d059-4561-944d-e46b70899d42",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e9d16ce2-3ddd-42ba-ba03-a33929a20275"
        },
        "item": {
          "id": "c7794c6a-192b-4d0b-9d86-e48d20fe64e7",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3061ff8e-4bce-4ab3-ad30-f980cbb4f84a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c803e1e4-588a-4b0d-bab0-a9e15ee04f1d",
        "cursor": {
          "ref": "74d956db-e0db-4378-bea4-112d681f3cf9",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "db6113be-41ef-40e7-8d59-04282f10f281"
        },
        "item": {
          "id": "c803e1e4-588a-4b0d-bab0-a9e15ee04f1d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "287578a5-987d-496d-99c2-51a27d1034b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a6bc293-d2a5-490f-9e4c-031a4818b453",
        "cursor": {
          "ref": "7933ace7-99bf-4b08-ab20-e81f618ea7e8",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "0bf08347-87c7-4abb-a632-70aed6952e7e"
        },
        "item": {
          "id": "8a6bc293-d2a5-490f-9e4c-031a4818b453",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8646f6b4-fce6-46be-ac87-e11d659ce5bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7493cf7d-62db-4a22-a352-7cb19bbcfb06",
        "cursor": {
          "ref": "bf992be4-70d6-4e20-99ac-cecad33dcd81",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "af0de8b3-e2b5-478f-9911-dcb9e3236119"
        },
        "item": {
          "id": "7493cf7d-62db-4a22-a352-7cb19bbcfb06",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6cd393a5-32f9-4ea6-aa4f-8588757da9be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f86e9fd-00ce-4221-84fc-1c5c787d1bbc",
        "cursor": {
          "ref": "219603eb-0585-4792-9a5b-28c7179fa599",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "8454fb8c-8cd0-4d82-ba42-a31d1f457e90"
        },
        "item": {
          "id": "5f86e9fd-00ce-4221-84fc-1c5c787d1bbc",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "68e15077-0c44-4403-b3aa-65a1282f1472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beec5fe0-c67e-4cf5-9d54-3d527bf2fc97",
        "cursor": {
          "ref": "358c0f43-8033-46f9-965d-85c246e37846",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "91df95e3-bc28-4837-bbf7-a9ecada5eb5f"
        },
        "item": {
          "id": "beec5fe0-c67e-4cf5-9d54-3d527bf2fc97",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ff232eca-2471-4653-8a58-26842ff2c5f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31364353-4a9e-4ee0-91eb-f5f857eb2c93",
        "cursor": {
          "ref": "fcce4342-3a34-47d5-b7f2-2677e0c0193a",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b237b0bb-f422-4ffc-ab41-df07d59f8671"
        },
        "item": {
          "id": "31364353-4a9e-4ee0-91eb-f5f857eb2c93",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e617d54d-2558-4065-8bdd-f2cb1f84a40d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55576735-4c4c-4ed2-95a7-2570202199bf",
        "cursor": {
          "ref": "e33a25bb-ac56-4439-a20f-7a8eb77a30f4",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "5817e37b-b462-41f1-b506-977bdba53c78"
        },
        "item": {
          "id": "55576735-4c4c-4ed2-95a7-2570202199bf",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c4201137-43a2-401d-86bb-34e33ca758e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f049d8-1971-4647-90a6-7c4b60e74649",
        "cursor": {
          "ref": "88c90eca-bf32-46fc-a027-fff2319cf9e2",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e7ab5fd1-00e8-4344-a7ba-3fb2ceebeb10"
        },
        "item": {
          "id": "c3f049d8-1971-4647-90a6-7c4b60e74649",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2dcce87f-d2d0-4de1-9546-be437c4de6fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2bddc60-609b-4de2-a4ba-530415aad641",
        "cursor": {
          "ref": "94748f4c-287c-4483-b967-feff1daef4be",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "9772504f-b7a8-424c-a4df-0265802b092e"
        },
        "item": {
          "id": "e2bddc60-609b-4de2-a4ba-530415aad641",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c9d41155-1f4a-411c-abd2-0e95d80ba4c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c11f7bd0-d376-4a15-93d1-5ff862ee1faf",
        "cursor": {
          "ref": "dfd3a9f9-0a6d-4642-a9be-6f90a9778452",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "2a78ad26-b8db-40ff-ae74-205a777e6213"
        },
        "item": {
          "id": "c11f7bd0-d376-4a15-93d1-5ff862ee1faf",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "557cb71e-be73-46d9-8ec5-5a163504ca6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef9f0b36-9ac1-47a3-a4ab-5e84e686441f",
        "cursor": {
          "ref": "895ce266-706a-4bb4-924c-ef35247ae4de",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a5922fb4-c847-4522-adcc-7c6baca764eb"
        },
        "item": {
          "id": "ef9f0b36-9ac1-47a3-a4ab-5e84e686441f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d44900df-f957-46d1-8a10-7f5863ad78cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a5b42c2-a3c2-419c-b716-5d320c49649a",
        "cursor": {
          "ref": "c9da8b10-cbb1-4d52-b050-983dcd6eacb9",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ab3f5a4d-a2a6-4843-aea8-7e2b7ab15911"
        },
        "item": {
          "id": "8a5b42c2-a3c2-419c-b716-5d320c49649a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "dc15c7ca-44ce-45a3-b4bc-456e4b55c5e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf201d01-78c7-4c5f-b9f0-8829851cf68a",
        "cursor": {
          "ref": "0945d296-6dee-4fcf-84c1-72cb3e583be5",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "5c957990-8818-4f84-8247-c85203379478"
        },
        "item": {
          "id": "bf201d01-78c7-4c5f-b9f0-8829851cf68a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d9ed57bc-d9ac-417d-b302-3007e4570ab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d17b7c4b-3ae5-456b-9195-e810243f71dd",
        "cursor": {
          "ref": "6739321a-d305-488f-962c-26149df28dfc",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "3de3cd00-7c47-4984-ac85-cf35067cbb14"
        },
        "item": {
          "id": "d17b7c4b-3ae5-456b-9195-e810243f71dd",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "11c80229-b042-48dc-8ef2-f44b29fedf55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f39bcd-4eba-435f-958a-7d78737865ab",
        "cursor": {
          "ref": "19cae001-698f-4342-a30a-4a1d15229001",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "0a133685-23e0-4ed1-922a-2e7788037a13"
        },
        "item": {
          "id": "74f39bcd-4eba-435f-958a-7d78737865ab",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8c0c4fce-270a-4c06-920b-50b3fb335d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9652118-5528-4844-b2ee-3b648d1b3f3a",
        "cursor": {
          "ref": "2e9ab977-606b-48d1-bb66-8b87d2468b13",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "5c13541d-4576-48d3-8125-fe35bfe6d62f"
        },
        "item": {
          "id": "a9652118-5528-4844-b2ee-3b648d1b3f3a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a2faf552-b74e-4e16-a4cf-75c3b1d1befe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f87ed252-da46-4e92-9b99-d07d95a2c02d",
        "cursor": {
          "ref": "39ccbcfa-5cb4-49af-84ea-c57210fa2e09",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "6b5bdb5f-7119-4ad5-a4fd-f1e3c742b194"
        },
        "item": {
          "id": "f87ed252-da46-4e92-9b99-d07d95a2c02d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "708b0890-7eab-4146-9876-2a48b2db8f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b61e09-92b9-4e60-b1d5-d508ee814c6b",
        "cursor": {
          "ref": "3c40c4d0-8819-45bf-90ce-c48f0fd55a92",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "3e1b5cab-1239-4005-ae39-b5a6b83b64ac"
        },
        "item": {
          "id": "97b61e09-92b9-4e60-b1d5-d508ee814c6b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "627493fa-5fe7-4386-bcc5-0329d18a11ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae1314ed-e0c6-4c92-a8c0-6818fbb20b9c",
        "cursor": {
          "ref": "1bd2dc73-8ee9-4482-a875-85261a53bc82",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "5b0d92ed-38c0-40b8-8298-d5bb544ded6b"
        },
        "item": {
          "id": "ae1314ed-e0c6-4c92-a8c0-6818fbb20b9c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "fa623b62-7e03-4595-925b-c546d0109ffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c092dc1-8550-4380-96d9-5c6e5160aff8",
        "cursor": {
          "ref": "70d028a9-b784-42ae-abf7-e610a1a289e4",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "f5397a8a-91e4-4b72-8d27-52aa4aec0fa9"
        },
        "item": {
          "id": "1c092dc1-8550-4380-96d9-5c6e5160aff8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8e22011a-d913-4940-9394-2489db48049a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "331ada91-a2f6-4c01-b728-328b5796a579",
        "cursor": {
          "ref": "f04e98d2-eb1c-4ff8-87a7-b281cea7737b",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "2b067ec7-1f2c-4af2-9f4d-b4a46a1a99c9"
        },
        "item": {
          "id": "331ada91-a2f6-4c01-b728-328b5796a579",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "11fb9d71-34f0-40dd-87be-d375521b110c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2256b23f-cad1-467a-ae43-80a7106507de",
        "cursor": {
          "ref": "b7322592-84d7-4e48-8c1d-250bc8d9319b",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "29e0a580-fe6c-4ddf-8cba-ad362f75d3d0"
        },
        "item": {
          "id": "2256b23f-cad1-467a-ae43-80a7106507de",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "afc8cf28-802f-49eb-9d09-d0ea7930a46f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7f70cd-b943-4111-be1d-996d9cce46a0",
        "cursor": {
          "ref": "7ad0af81-ac98-4b40-a347-f705f5886984",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "bd8643d9-3d0c-4e02-8a1f-7cad0f79e851"
        },
        "item": {
          "id": "8e7f70cd-b943-4111-be1d-996d9cce46a0",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "0cf6e1b5-f306-4ab9-b545-9071c71886d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dbfd96d-bb37-4dca-b910-7ea43e65103a",
        "cursor": {
          "ref": "03d32806-5066-40fb-824c-591b665b3136",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "556f8f48-21bc-466f-a58d-2ee9c7c7a534"
        },
        "item": {
          "id": "0dbfd96d-bb37-4dca-b910-7ea43e65103a",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "c5cc6b74-6751-43c0-954b-a511826ca92a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301224fd-8dc6-411a-b328-e474c1ff44c7",
        "cursor": {
          "ref": "2180fbe4-13c0-49b0-b8b7-f3bfb2f92673",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "5c8b6bbe-ef22-44df-bf34-f7eeb33f65bb"
        },
        "item": {
          "id": "301224fd-8dc6-411a-b328-e474c1ff44c7",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "57400bbe-b3f5-426d-bea9-08571baebe08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecdd8f1b-1a7d-44d2-90e0-8dc188813434",
        "cursor": {
          "ref": "2d4a13a2-19c0-4ff6-ae23-bc404973f4a0",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "3c0f8556-7dc6-4921-9114-00fdb969d667"
        },
        "item": {
          "id": "ecdd8f1b-1a7d-44d2-90e0-8dc188813434",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "eaebbdff-d8f8-4cef-98dd-8131de4ae88e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae6a1dd-3dae-4006-a01e-2d657a1fbce8",
        "cursor": {
          "ref": "e34f9ad9-51da-43c7-abb5-2105ca78bfd6",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "7343b4f2-a9d8-4731-8374-4e110ad2f17b"
        },
        "item": {
          "id": "bae6a1dd-3dae-4006-a01e-2d657a1fbce8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "cb22a6f4-51b6-4818-bfd0-24e2ae7dc3da",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "facb949b-27a0-4e46-8215-cd1d189d95df",
        "cursor": {
          "ref": "79e2e9a4-9dd7-4228-bc4b-c1ee1272c032",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b20ee96c-1767-4b28-8965-145b9c5adb22"
        },
        "item": {
          "id": "facb949b-27a0-4e46-8215-cd1d189d95df",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "cc872a79-3d27-44b3-9062-bc1faf9ab6c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffee19c0-00d5-4a84-9ae6-c32b6e5f0af2",
        "cursor": {
          "ref": "21a10159-4190-47af-b594-4a1f006ad308",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "86c78528-3359-4fbc-b885-8f503cf014be"
        },
        "item": {
          "id": "ffee19c0-00d5-4a84-9ae6-c32b6e5f0af2",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "75ffa4be-469f-4cb8-8bf6-db1f10e9ad51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "850e44f8-ac89-44fd-b70a-f1a77bb3a4d7",
        "cursor": {
          "ref": "3fcac8e1-3bc5-40ca-af75-56dd66f0734f",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "de29e9f7-e93c-46bc-8c6c-7cbd10e81227"
        },
        "item": {
          "id": "850e44f8-ac89-44fd-b70a-f1a77bb3a4d7",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "6da8e894-9d27-4dad-8eeb-795e46db2df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c22e8dc9-59ea-46b3-a1b6-c991ecfe47e2",
        "cursor": {
          "ref": "6da755d1-a9dc-4364-88e3-a168cd5f5881",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "93b4faf6-618d-411e-b2e3-7d62598d9772"
        },
        "item": {
          "id": "c22e8dc9-59ea-46b3-a1b6-c991ecfe47e2",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "95e9892e-73f0-4fd5-b412-185f14d6191e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "538aa973-671f-4aa1-807f-fad991a45882",
        "cursor": {
          "ref": "fd3e7292-b783-4680-895f-46146c4e6f34",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "708ac6fd-b79d-436a-b245-1ad30b81bfc9"
        },
        "item": {
          "id": "538aa973-671f-4aa1-807f-fad991a45882",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "626c7036-d487-4e88-b12e-2dd8bf2b436c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "243685df-1644-4198-8d45-c59d035db7fa",
        "cursor": {
          "ref": "c1061bcc-1d68-4547-a95e-5b1911141d31",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "904d6c51-d88a-45cf-9ad8-154df10f646e"
        },
        "item": {
          "id": "243685df-1644-4198-8d45-c59d035db7fa",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b826f4a2-60fd-4e8d-8ab9-a0e3a9126e0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f6a8f04-4ca6-4376-8816-21a274c19893",
        "cursor": {
          "ref": "ccf89a92-2706-42a4-b1cc-740c6c6afa06",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "aa35ee45-8316-4030-895f-9d1f44a6763c"
        },
        "item": {
          "id": "0f6a8f04-4ca6-4376-8816-21a274c19893",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "8fdf50e0-4954-46b0-b240-2147f627cfb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a3e5d2-57a6-4816-87d4-29a1664cd451",
        "cursor": {
          "ref": "f572001d-03cc-47fb-8906-77b525c40047",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "dbf50eef-cc51-448c-9720-db722c1d9722"
        },
        "item": {
          "id": "c7a3e5d2-57a6-4816-87d4-29a1664cd451",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "99420f21-0fdd-4119-a4e5-6d720c8b00bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b2f0fe-71af-4fe2-9388-ecced1d62ca8",
        "cursor": {
          "ref": "01437943-874b-47d7-8028-cd031ee8861c",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "944bceb2-c1f4-4839-9aed-3b6ed7ee7f8e"
        },
        "item": {
          "id": "99b2f0fe-71af-4fe2-9388-ecced1d62ca8",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "4309e507-de66-486f-b9ab-43f685aeaaae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "252ed4f4-98f1-4c5d-b14b-bb4c6967bbd7",
        "cursor": {
          "ref": "f9e934de-0007-42a8-9298-900f35f48e8c",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ec7b84b0-0f37-4b88-b71e-eed7c6519c24"
        },
        "item": {
          "id": "252ed4f4-98f1-4c5d-b14b-bb4c6967bbd7",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "cfaa992f-34b1-42f0-81ce-b6d44091fc93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "affc8261-166a-48b4-a3c5-5c57b52f7a80",
        "cursor": {
          "ref": "6c5c1f0c-f8a9-4ff2-a773-aa4d70034007",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "2d134c76-17e6-4d7b-ae6b-879ef04d4540"
        },
        "item": {
          "id": "affc8261-166a-48b4-a3c5-5c57b52f7a80",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ea2fb269-0f81-44b9-8412-593e6af80cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4d4606-e408-4c51-bfb1-a6c367de2714",
        "cursor": {
          "ref": "365ad309-4dd5-4b5d-ae9c-6368f82b336a",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "257e6490-3df5-40cc-acde-199e2d05901e"
        },
        "item": {
          "id": "3c4d4606-e408-4c51-bfb1-a6c367de2714",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "bc73e023-0360-4c6d-8da7-4e67462ff933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f44d3806-4e98-4cb6-b741-5a425b7219ac",
        "cursor": {
          "ref": "7a3893a2-fa7e-4174-9f59-e420c356dd7b",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "20a19b8c-80a1-46c9-984b-e5c9414251fb"
        },
        "item": {
          "id": "f44d3806-4e98-4cb6-b741-5a425b7219ac",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b2de4075-f1dc-4052-9990-f23f6fd714b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca648a9-d2ce-47bb-87dd-d7650530a181",
        "cursor": {
          "ref": "f64fe0a0-983a-4b26-8d68-296980006eae",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "2f1311d3-26c4-4da5-b026-40387d30f6a6"
        },
        "item": {
          "id": "3ca648a9-d2ce-47bb-87dd-d7650530a181",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "8aae79a1-9567-4a48-958b-f185bd7c71a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a00bb26c-1e79-4ae5-9d98-9ba208b17a1e",
        "cursor": {
          "ref": "48d70b84-5d0a-4a3c-95ef-80dc8234be3c",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "2dd2bede-4488-4d70-be2c-5b30f171c8a3"
        },
        "item": {
          "id": "a00bb26c-1e79-4ae5-9d98-9ba208b17a1e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "3c2ddb68-9185-4bd9-9bb5-69d446035dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc138c83-52d0-4190-8415-4e0f17d36368",
        "cursor": {
          "ref": "1de97214-5c12-4541-8aee-6dcf51667622",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e68286e8-30c7-49f8-b1ea-fb9973014703"
        },
        "item": {
          "id": "cc138c83-52d0-4190-8415-4e0f17d36368",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "45eac5cc-cce8-48ac-a312-7c6652b15129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e42fae-9ed3-42d9-9871-d184b76a0d1d",
        "cursor": {
          "ref": "1efb4ea9-0d36-4a1c-a880-580f96cba20b",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c2e3faa6-3001-4464-b506-ea90b97e7eba"
        },
        "item": {
          "id": "75e42fae-9ed3-42d9-9871-d184b76a0d1d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "c4d60347-3e7e-4458-94ee-e8c93bb818d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c5b727-d2db-4f64-87f9-b0d5ba7f1b4f",
        "cursor": {
          "ref": "876a5f57-de65-49e8-aecb-54f4e565c46c",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "21e50ad5-ea32-442a-9fc0-9e00797ec43d"
        },
        "item": {
          "id": "35c5b727-d2db-4f64-87f9-b0d5ba7f1b4f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "3f92350d-681d-4be8-b54a-5da558ff85b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ba0d1e1-e247-40c4-a7b2-0fc5c410b0b9",
        "cursor": {
          "ref": "a28ed7f9-ce1f-4c93-b9d0-59a486140b71",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "bf3d5a9c-45b5-4166-a832-1706e8d996be"
        },
        "item": {
          "id": "1ba0d1e1-e247-40c4-a7b2-0fc5c410b0b9",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a291aff5-6973-4299-9b6a-4b030e2018af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3902d311-001e-43eb-a52c-03446eaa131c",
        "cursor": {
          "ref": "22054f8e-d160-4a58-b7dd-0fcf3bcc6508",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "67332a5e-7eb2-497f-aed6-c6c31797957c"
        },
        "item": {
          "id": "3902d311-001e-43eb-a52c-03446eaa131c",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "023436f4-d5d6-48ca-b486-f2f0b0575567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6f78ec-92cd-48a3-bc75-48d4e9a6f866",
        "cursor": {
          "ref": "e6f71c4b-a8a4-463e-b57e-99712a5cb9d8",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "96453ce2-7a6b-437f-ab03-06460046c703"
        },
        "item": {
          "id": "fa6f78ec-92cd-48a3-bc75-48d4e9a6f866",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e143590c-3f19-4414-a356-4dd96f40b903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24435eb0-28b4-43df-a0ad-9a39849e984a",
        "cursor": {
          "ref": "7567fc37-1ebe-4a93-b5c5-2922e13143c9",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "9b2f6fa5-62e1-45b2-83ca-8c87b42692e1"
        },
        "item": {
          "id": "24435eb0-28b4-43df-a0ad-9a39849e984a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "8625a627-432a-4b6a-9f2b-86475f3ca2e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc214b1a-060d-4e20-98af-205d526f6da4",
        "cursor": {
          "ref": "3f2470f8-866e-4edb-bf16-0a8c145168e8",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "7c9842f0-a1b2-4f21-aaf1-11007dfffc95"
        },
        "item": {
          "id": "dc214b1a-060d-4e20-98af-205d526f6da4",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "dc606c68-5c51-4cc6-84ea-e436302cd85f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1617c0b2-c592-43f0-bedc-32ab8f54ff49",
        "cursor": {
          "ref": "4ddc7761-455b-4892-a1e2-e3857050fbf0",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5465df68-dc58-491d-8931-5fa71e8550a4"
        },
        "item": {
          "id": "1617c0b2-c592-43f0-bedc-32ab8f54ff49",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e76cfe32-4d22-4883-9b64-f072b18c6925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef9a4dc6-b8c8-424e-bf8d-b889a19f2404",
        "cursor": {
          "ref": "39e0765c-f307-4a52-8f4a-44d44806991a",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e61872e1-c817-4c92-a56b-a7adaee085f1"
        },
        "item": {
          "id": "ef9a4dc6-b8c8-424e-bf8d-b889a19f2404",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "b27b9713-70a7-4cac-a12d-68fd7b4dc19d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64fe3420-01ba-4f6b-8a88-4e8a7a745529",
        "cursor": {
          "ref": "8d9a5e1d-233f-4238-9203-0e1985057671",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "1b6e35cc-b6fa-480f-ae24-7869be76dbb4"
        },
        "item": {
          "id": "64fe3420-01ba-4f6b-8a88-4e8a7a745529",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e0993afe-01d6-4149-b4e4-3e22a830b232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5086da76-03c1-4068-83b7-79a4cdabfe64",
        "cursor": {
          "ref": "1ec7a5b6-a8c4-4ac5-a4b3-92460cad7c98",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "863fae75-40c3-41dc-85ce-304a02e8d68b"
        },
        "item": {
          "id": "5086da76-03c1-4068-83b7-79a4cdabfe64",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "eebebe8a-bfdb-45e0-92c4-8ba52e8e1aa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f75faf-cce1-4db5-9e16-bdeb1d02a659",
        "cursor": {
          "ref": "90d5fed4-a3dd-4d92-a718-c819e4f85754",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "ebca6f41-ce35-430f-8952-a3fc783590a9"
        },
        "item": {
          "id": "72f75faf-cce1-4db5-9e16-bdeb1d02a659",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "cf37c46b-125a-400f-bda8-fa8e9fa0a7cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "861637f8-1498-433e-bab1-622e9f281719",
        "cursor": {
          "ref": "fd149f86-1030-4b3c-a1bd-76ef9e7cfdbf",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "36f56b58-a22c-437e-b9c2-3fc0c6fdb98d"
        },
        "item": {
          "id": "861637f8-1498-433e-bab1-622e9f281719",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8fbf3728-3019-4aee-8fa1-a9b8bb518055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263a5f97-44ef-4712-87bf-6e84777b332b",
        "cursor": {
          "ref": "8b987aca-9d98-404d-b310-13ab295a0c0b",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "962bb15d-8a9a-4589-bece-491b483c0fd8"
        },
        "item": {
          "id": "263a5f97-44ef-4712-87bf-6e84777b332b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "7433e693-5c25-4e83-b040-d7655282f13f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7807f84b-935c-4568-896d-4d150d75ca9e",
        "cursor": {
          "ref": "95622364-db90-4df5-8e87-1c8a58560da0",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "725979b1-e23b-41f6-a312-9db96d494a71"
        },
        "item": {
          "id": "7807f84b-935c-4568-896d-4d150d75ca9e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "dabea8ae-eacb-4dcb-ab31-e99a0bfe4373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7195bd19-6f52-46c4-a2d6-45b763507019",
        "cursor": {
          "ref": "ab81752d-0651-45ec-9deb-ed4993299307",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "bd51e975-9d78-4ae0-b337-6e1c25b06204"
        },
        "item": {
          "id": "7195bd19-6f52-46c4-a2d6-45b763507019",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8d79ac19-f23f-4772-a288-e0b5f864ad0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fdcacea-93a8-4149-a3b1-75c459219e9b",
        "cursor": {
          "ref": "874f1b3e-66ea-4c21-94f1-3f1bbbdf899c",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "48b53259-8e82-4220-ac26-e161eb74007f"
        },
        "item": {
          "id": "3fdcacea-93a8-4149-a3b1-75c459219e9b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "0e6d65da-a122-4f77-a9fe-b743f86137f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09cd787d-2f0e-41e3-a82b-34281808cb16",
        "cursor": {
          "ref": "91dce6e4-ad73-45ff-af41-f64dc2be3409",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "4a1492b7-146a-4466-b2fa-6a9f96fe877a"
        },
        "item": {
          "id": "09cd787d-2f0e-41e3-a82b-34281808cb16",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e26adb30-db0e-4b32-93ef-d3fb54acfb3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e343c394-f89b-489d-b52b-62e1ceb30103",
        "cursor": {
          "ref": "622eaa1b-6ffa-44f8-b66e-b02cc103e092",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "08e8e711-7bef-44c7-8a6c-a526b2c6125f"
        },
        "item": {
          "id": "e343c394-f89b-489d-b52b-62e1ceb30103",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c9816c29-16c7-4fd0-99d0-30562d65b881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a1a8947-fa5c-4ed2-ae1e-ed2f52536a93",
        "cursor": {
          "ref": "6578bfaa-ddeb-43cf-ab3b-8fd5273f05f8",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ba8c85f1-943c-4207-87f6-8d912c5a05e1"
        },
        "item": {
          "id": "0a1a8947-fa5c-4ed2-ae1e-ed2f52536a93",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d45ae143-684d-432b-bc97-7fe771c8fdea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3874803e-894d-426a-93da-9f522dc220e1",
        "cursor": {
          "ref": "992e6bb9-a648-4f52-9754-69f5c6709c5e",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "29f025b4-2573-4c3d-b40b-a75cd2c46c1c"
        },
        "item": {
          "id": "3874803e-894d-426a-93da-9f522dc220e1",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "1880cf27-622c-417a-8461-5545e70658cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba36ceaf-2cc9-40c1-956c-0e1852aa4204",
        "cursor": {
          "ref": "545b106d-6bc7-4c83-bae9-37403eee9b6e",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "9db99ae9-a578-481d-8e29-7368327f2f9e"
        },
        "item": {
          "id": "ba36ceaf-2cc9-40c1-956c-0e1852aa4204",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "5923c360-bc6b-43ab-9884-5c41d818e8f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04cb319e-18e4-47dc-9b3f-a128caa0e01e",
        "cursor": {
          "ref": "b8f21834-626f-4293-ba3f-4ea6ec3774f5",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "bb31c18c-336e-444d-95b1-4929c66985b1"
        },
        "item": {
          "id": "04cb319e-18e4-47dc-9b3f-a128caa0e01e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "4799f650-91c2-4aca-8e78-0efb5574dff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "614e9f09-2311-487a-a786-6a300fd3caea",
        "cursor": {
          "ref": "e87275d8-a07a-4c7d-977c-dbb6aeb1b9de",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "dbd2a2fe-0935-4754-8dee-f20d0207380e"
        },
        "item": {
          "id": "614e9f09-2311-487a-a786-6a300fd3caea",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "13b7dc9c-757f-42de-bbbf-68ccf5306528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebdf783e-9bbf-4415-82e7-bea36717c296",
        "cursor": {
          "ref": "8db19286-e6d2-4473-8c96-a1f6fe58146f",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "11bda370-f615-4253-80af-0f3362b2aedd"
        },
        "item": {
          "id": "ebdf783e-9bbf-4415-82e7-bea36717c296",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d8075318-9a24-4240-99a1-b1cbbd56af39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eac2b4c-71bb-47e6-adf3-b319f16c278d",
        "cursor": {
          "ref": "1e89f342-72cd-498d-8a6a-ad5c09723050",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "77b3e356-5deb-449e-b3eb-a81da26f2755"
        },
        "item": {
          "id": "0eac2b4c-71bb-47e6-adf3-b319f16c278d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "46307594-c0c7-41b6-b5f5-255f145f0ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abcfbf00-a59f-4911-89e2-79fa25962b37",
        "cursor": {
          "ref": "31e599cc-4a61-41e2-b7f0-d7ac888fff3c",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a6f76ff9-bb8c-48c4-8e3f-552af365d2b3"
        },
        "item": {
          "id": "abcfbf00-a59f-4911-89e2-79fa25962b37",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "26a6d1f8-b102-467f-a7ed-e30a742cf69d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b10bbd9-5f2f-4668-a3de-ed79e73a2cee",
        "cursor": {
          "ref": "35bc8a26-d253-4fa7-9db2-e32f3f8913b3",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "cd325081-6fc0-493f-bd8c-3aa486dedd26"
        },
        "item": {
          "id": "2b10bbd9-5f2f-4668-a3de-ed79e73a2cee",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f300d4d7-751c-4cf5-a9b1-aa221d3bbde9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b10e4612-ac94-4388-9425-9819996c63b6",
        "cursor": {
          "ref": "2b664bc0-fe70-40b3-9a80-8b3362e4df11",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "badbcda9-971e-4518-a5e7-4d25e6b55162"
        },
        "item": {
          "id": "b10e4612-ac94-4388-9425-9819996c63b6",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "ae95a573-26b6-4020-a65c-d8b0a3140643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d83f0d33-8452-4949-99e4-e0ba34babfbc",
        "cursor": {
          "ref": "983358c0-4b82-4e83-8c7a-05d7095c84c5",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "3f9eee90-4222-402e-be9e-a6710b1e60f4"
        },
        "item": {
          "id": "d83f0d33-8452-4949-99e4-e0ba34babfbc",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "cd0ca15f-2f6d-46ed-a8fe-a0f7aa31b746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f0849c-62cf-436a-b2d6-85b032e5b1c2",
        "cursor": {
          "ref": "9efe9f52-5827-4041-8e6c-ae6ed8362523",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "59a41e42-a0ac-492f-b182-d479dd19a224"
        },
        "item": {
          "id": "23f0849c-62cf-436a-b2d6-85b032e5b1c2",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d74be03e-5ea9-4527-8a60-56f590573438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f3a0901-663d-4afd-a0b7-ba13144cd775",
        "cursor": {
          "ref": "7f018e86-345a-462c-9b74-21c3205886b6",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ebfe0cdf-84af-4004-a5eb-342d4ec18aba"
        },
        "item": {
          "id": "0f3a0901-663d-4afd-a0b7-ba13144cd775",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "04dc683f-138e-426b-9928-e60a105c5d6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "612243c5-eed3-4a7f-a2c1-4e3a03921d5e",
        "cursor": {
          "ref": "b69f432c-4faa-485c-8885-748709712065",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "b6c08334-304c-43ea-bac0-c2828f8447e3"
        },
        "item": {
          "id": "612243c5-eed3-4a7f-a2c1-4e3a03921d5e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "11646a41-cfa7-45f9-b877-dda216adfd0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5252a228-5bc0-4db6-b538-ab1ff50acaea",
        "cursor": {
          "ref": "dab60eae-4936-403e-ae93-86a88b73860c",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8199f52c-ae46-458d-9f76-91212c0bc92e"
        },
        "item": {
          "id": "5252a228-5bc0-4db6-b538-ab1ff50acaea",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "0b2bc648-13b8-4a0f-a662-d18348bae056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c75cda0-29a8-4b13-aa6c-0ebd7b5737f1",
        "cursor": {
          "ref": "d734e079-7af8-47a1-80db-d23a0d3a1124",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "fe163b1b-9d2e-4ef2-bf0e-6b900069f959"
        },
        "item": {
          "id": "5c75cda0-29a8-4b13-aa6c-0ebd7b5737f1",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "564ec5e3-ab40-4ba7-96b5-78b027a2079c",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "1800daf0-14c9-4f52-b129-8a4b0ed70ec6",
        "cursor": {
          "ref": "296750b0-f569-4cf3-82a0-1883e1151204",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "944d1ce4-cbca-4412-874c-6ccd2d846590"
        },
        "item": {
          "id": "1800daf0-14c9-4f52-b129-8a4b0ed70ec6",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "bae40128-dc96-4329-806c-e515ff217480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae342cd6-d8a1-44a5-add1-df17b1090949",
        "cursor": {
          "ref": "e4960f5a-a4b6-4407-b0be-a18459ac0eb0",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c0bd9743-5b40-4de4-9365-4bbb48edff7c"
        },
        "item": {
          "id": "ae342cd6-d8a1-44a5-add1-df17b1090949",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "5d0c7736-7b58-4d1d-b672-a6da2bdbb917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc9c24ed-694d-49e6-9b89-5e8858fd3ab8",
        "cursor": {
          "ref": "cdf56b63-12f0-45b1-a3d6-b6c681151aa2",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "25ff3c47-90c2-413b-8f62-88597d5b0883"
        },
        "item": {
          "id": "dc9c24ed-694d-49e6-9b89-5e8858fd3ab8",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "3766886f-943d-4697-8bc8-e8fa967480b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa1c44ed-bb23-4d99-a028-34fe19f8760b",
        "cursor": {
          "ref": "3ca6b68a-c0b1-4136-9b42-06d16a579e11",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "8d9345ba-3130-49e3-9ba5-23b9350133fa"
        },
        "item": {
          "id": "fa1c44ed-bb23-4d99-a028-34fe19f8760b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "214eada5-6e92-430b-9bc0-79127a6ad8c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1529362-768b-49e8-8439-cf348d56503f",
        "cursor": {
          "ref": "f413a87e-53a1-4c7d-bf01-59c14b97744f",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "047743fa-dbe7-4752-b258-6ad41f29b354"
        },
        "item": {
          "id": "f1529362-768b-49e8-8439-cf348d56503f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "0474c25b-3afa-4878-bfdf-178c983ea40e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2236f4e-2622-4c1e-9900-d3fc9c43d96d",
        "cursor": {
          "ref": "1a5cf11e-3062-4384-bbe3-34f3841d1e7c",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "a3a247ae-77c4-42eb-ac12-0f799d958b87"
        },
        "item": {
          "id": "d2236f4e-2622-4c1e-9900-d3fc9c43d96d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "33ca7e9d-8c91-4d28-928d-09b5f448cf30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2cec92f-3bf9-4867-9460-5dd1303192de",
        "cursor": {
          "ref": "9b003e2c-8426-4d64-8905-fb4dcb728394",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b8717793-69f5-4da5-9eff-d501f986fccd"
        },
        "item": {
          "id": "f2cec92f-3bf9-4867-9460-5dd1303192de",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "240d3561-cb64-471e-8d47-43adc836dff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814463fb-a558-418b-97e9-19e9758eff76",
        "cursor": {
          "ref": "3507391e-abab-455d-bc6b-a73594f858fd",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "06585cfa-09e4-493f-86c8-00910777225d"
        },
        "item": {
          "id": "814463fb-a558-418b-97e9-19e9758eff76",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "0d45c762-d274-42d0-93ff-05f79d961d89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5214f604-d41b-469a-b589-82736a1b0d0f",
        "cursor": {
          "ref": "5e87c9b8-766f-4b16-ba5d-4c0d5625a70b",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "fccc177d-4f36-4655-a344-70dd9ef3ad16"
        },
        "item": {
          "id": "5214f604-d41b-469a-b589-82736a1b0d0f",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "d9d4305f-7f2e-4c96-9cdc-93d84a10200a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fdcdabe-1335-4ea0-a05b-9ae416fe2b1d",
        "cursor": {
          "ref": "c569fdd1-6c65-4944-acea-dbba774176a3",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b05b77fa-ced8-4f16-b432-f59c44251fa9"
        },
        "item": {
          "id": "0fdcdabe-1335-4ea0-a05b-9ae416fe2b1d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d648db7d-dbab-4ad1-a613-866390f71da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2282def-d655-4d4d-9699-4d0b551ccbd5",
        "cursor": {
          "ref": "43dcd5aa-beb6-4bcd-918d-69939595a8c7",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "940c299a-4baf-4852-a40b-50023c09b673"
        },
        "item": {
          "id": "e2282def-d655-4d4d-9699-4d0b551ccbd5",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "47967cf2-f6e0-4f3b-9f84-cdbb7808c17c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d16ae6-7c1a-4f7a-be3d-7060236167ee",
        "cursor": {
          "ref": "2cafe5c7-30b1-41ea-bd4a-2014c503b185",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "ba8f20e8-72d0-4580-9515-39479e52048f"
        },
        "item": {
          "id": "52d16ae6-7c1a-4f7a-be3d-7060236167ee",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9de04333-e351-4329-aa5b-bebd966a2932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "032252a0-2f8c-4e99-98c9-939ed0e3c5cf",
        "cursor": {
          "ref": "84a31b44-2a3c-4c2a-a224-e031ba38a718",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "7a0b7307-de9d-4d93-8d62-99e385c27620"
        },
        "item": {
          "id": "032252a0-2f8c-4e99-98c9-939ed0e3c5cf",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2e607ce2-30ad-4e0d-ba86-a66d9e745577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4cc454c-79ba-466a-bc66-1dcdf9d551e6",
        "cursor": {
          "ref": "19cb0944-be2e-4e72-b9ff-847f6b3cfbe0",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ccf3c499-0495-49f4-8d6b-f5f249c6afbf"
        },
        "item": {
          "id": "b4cc454c-79ba-466a-bc66-1dcdf9d551e6",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a7cbb165-d6a5-4c11-8935-72d0f71c9064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dfcbdde-456b-4942-9c28-4cf01d1e2371",
        "cursor": {
          "ref": "c79a30c7-6096-4ced-885d-989908f1cb36",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "6cc57617-8063-4115-8d60-ed7cf97bcdaa"
        },
        "item": {
          "id": "6dfcbdde-456b-4942-9c28-4cf01d1e2371",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e22a7cc1-091a-4eee-8e3b-093ac4d20733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a4ff28-7476-46e0-8040-bc7ee5579638",
        "cursor": {
          "ref": "ea3651f7-171f-4f16-8526-97291defd510",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b839a1d5-7840-4b4f-8819-c54ad622aa6d"
        },
        "item": {
          "id": "79a4ff28-7476-46e0-8040-bc7ee5579638",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1e2f78cc-2d72-4a2f-942e-b500b34bc565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b1d7ba4-27d9-447d-bdd7-e2bb209d11c4",
        "cursor": {
          "ref": "5a2d0ae0-12d3-4c5c-8a85-4fd747eb57a6",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "fc89465c-4114-4bd3-b861-30d02c6d6afd"
        },
        "item": {
          "id": "3b1d7ba4-27d9-447d-bdd7-e2bb209d11c4",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "7b39490e-5ac0-4e00-873d-8a944e37be6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2173c128-a8af-40a2-be16-fa4065c30c50",
        "cursor": {
          "ref": "ca2e8aa5-2312-47d0-a442-fe952e97913a",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d48edec8-0e15-4cfe-8642-3a9765941acc"
        },
        "item": {
          "id": "2173c128-a8af-40a2-be16-fa4065c30c50",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "bcf3c3b1-a88f-4318-b72a-19503285a7fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76aba659-1470-4803-a955-516aebd90d78",
        "cursor": {
          "ref": "4872fb1b-0a0f-4388-8841-1a647fe4af7f",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "11044530-dbc4-42f2-921a-403b6cbb7a40"
        },
        "item": {
          "id": "76aba659-1470-4803-a955-516aebd90d78",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "182b5332-e26c-4d1d-92d2-8f8525e1b0e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94cfd74a-ca82-43e4-bf20-f7f57ea8f370",
        "cursor": {
          "ref": "f4652f1a-65e1-40fd-86a9-b433a822dbc5",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "30d56f56-674c-4a8f-8229-859fad281949"
        },
        "item": {
          "id": "94cfd74a-ca82-43e4-bf20-f7f57ea8f370",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "678d12b3-8a95-4027-ad90-557f8ef08c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ecf3174-450a-4526-afa0-5e601acd4705",
        "cursor": {
          "ref": "e339ad7d-a0bf-4687-884d-31171d2acb73",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "426db341-0335-42d5-bec5-5b435f854575"
        },
        "item": {
          "id": "7ecf3174-450a-4526-afa0-5e601acd4705",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "68b4de12-9589-40c6-a7a6-e8976f43518d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc2cb86b-6540-4dee-b132-459eb2ee5270",
        "cursor": {
          "ref": "a9d3ce71-4a4b-47e5-9ca9-933758c5b13a",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "a919959b-db58-4ead-9ddb-48ee2faa22cc"
        },
        "item": {
          "id": "cc2cb86b-6540-4dee-b132-459eb2ee5270",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "47961f9d-88de-4a37-9249-09f7820d3e2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14330c56-6a93-4ca8-9861-5699bee807e4",
        "cursor": {
          "ref": "6dcf2dd0-338e-4581-b59d-2a8cedd10b29",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "d2627986-86fd-405c-998c-26920f13599b"
        },
        "item": {
          "id": "14330c56-6a93-4ca8-9861-5699bee807e4",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ecb02569-9f0e-4ed5-bfc2-e770cc71e2a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83365ac4-52bd-48fe-a916-1e8ed16eff11",
        "cursor": {
          "ref": "756d1b4b-1915-4660-b7e0-5ea68cfdc36b",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "ae8ca1a3-c2eb-488c-a9b0-529abe6e347d"
        },
        "item": {
          "id": "83365ac4-52bd-48fe-a916-1e8ed16eff11",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "828dab71-2ec9-41a9-ad2c-50223549331e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60f1795-02e3-4fd6-b0c2-3a28760d9a1c",
        "cursor": {
          "ref": "40ab74b2-929c-4877-b996-2114df643355",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "581fd6b9-9be2-4ca4-be22-f2ba6d323a95"
        },
        "item": {
          "id": "d60f1795-02e3-4fd6-b0c2-3a28760d9a1c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b559fb2a-9dc2-46f6-817b-c111e6240ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0335f251-c07a-4c52-84f0-1d6304c27b67",
        "cursor": {
          "ref": "8ae9d897-1e75-4c03-a347-aa701c30ff85",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "59795d1b-8d0b-46fe-a13f-a41f8f192315"
        },
        "item": {
          "id": "0335f251-c07a-4c52-84f0-1d6304c27b67",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "1a32d354-6926-483e-ae3c-3c80c5b34a9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a4b4a9-0e75-4cc4-9cd3-dfc541782b02",
        "cursor": {
          "ref": "907ee34d-2489-4dd6-8e5b-f9f0d57e039a",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "2a78c1f8-8866-4e7e-9757-da3f7490ec95"
        },
        "item": {
          "id": "47a4b4a9-0e75-4cc4-9cd3-dfc541782b02",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "bd290dbf-0b09-44e7-96ad-51cc10636e0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff8790e-a80d-4119-bf4e-d5983c634f7f",
        "cursor": {
          "ref": "186ea968-02b2-4469-bda5-e489cb8e7052",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "a2bce1ed-1caa-4028-abb0-89ffe76791ab"
        },
        "item": {
          "id": "fff8790e-a80d-4119-bf4e-d5983c634f7f",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "c691499a-0cf5-4c29-bb97-895775fdb40c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbc56ffa-fbcc-4326-8acb-5ff9256a82f0",
        "cursor": {
          "ref": "3cb5f459-6c2c-4268-9821-b51bbbb4b640",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "9ca734f6-b8ac-498a-ba13-92cec9bd720e"
        },
        "item": {
          "id": "dbc56ffa-fbcc-4326-8acb-5ff9256a82f0",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ee5319ae-8a9f-48a7-9a7e-392107815ef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "527e9de7-a64b-4db5-95e5-b5613a8388cf",
        "cursor": {
          "ref": "02104ebb-bb20-438f-bb27-1b9d5b84a90c",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "54919627-9b6c-4296-bd6f-3342f3328bb0"
        },
        "item": {
          "id": "527e9de7-a64b-4db5-95e5-b5613a8388cf",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "8f740886-4785-4566-a86b-204a7a1f4b69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdbea327-b1ae-4639-95cd-e29ee3711375",
        "cursor": {
          "ref": "f76642fe-f7ca-410f-819a-f5b45826a0ae",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "db695fa6-da1f-4091-b9ee-ceb7d474fea6"
        },
        "item": {
          "id": "bdbea327-b1ae-4639-95cd-e29ee3711375",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "37e033bb-31b2-4ee5-9ce2-d5c9dc9c4dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a24ac3d-e333-4b58-8e56-dcab8394c1b6",
        "cursor": {
          "ref": "b2e5e181-1968-4b10-ac68-2c18d6867d4d",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "63d9e402-3c93-4857-8b33-908f465a1471"
        },
        "item": {
          "id": "5a24ac3d-e333-4b58-8e56-dcab8394c1b6",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c002cb23-bcea-44c8-9bc9-a980e7dc54bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f312a98f-0cc3-4f3d-aad8-b604ee546189",
        "cursor": {
          "ref": "14152032-4019-45b0-b4b5-7d2a52d10b83",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "addd35ab-c8e7-4af0-9d0f-87619354bbf2"
        },
        "item": {
          "id": "f312a98f-0cc3-4f3d-aad8-b604ee546189",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2634bc80-1715-4f85-ac79-21f545af0441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c3c395-5886-4651-b611-b4210dbf25ae",
        "cursor": {
          "ref": "a3ed058d-f79b-4330-865c-5c037e286f54",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "a0e518fb-fa0a-4e03-af49-6382c8b84804"
        },
        "item": {
          "id": "86c3c395-5886-4651-b611-b4210dbf25ae",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "da4d0905-bd73-43a3-adf9-aea2fa46e70f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dfc85c6-2585-4ae9-8fba-34e647275a1c",
        "cursor": {
          "ref": "74588ec1-791d-4b6e-ab04-e1c4cdd01f53",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "2d7ef197-aabc-4acf-b556-c2135ecf7ace"
        },
        "item": {
          "id": "2dfc85c6-2585-4ae9-8fba-34e647275a1c",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "08e7a77f-0b4c-4239-be32-4703db56700f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ce46071-9df3-4eb9-b6a4-b1c64e8487c0",
        "cursor": {
          "ref": "4451c969-845a-400a-a1af-c89327138265",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "f95f27d3-7e66-4bc9-a849-16c627361c8f"
        },
        "item": {
          "id": "2ce46071-9df3-4eb9-b6a4-b1c64e8487c0",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "2cb86e4d-218b-4208-8361-ceb47526dbc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e852adc5-1643-40a1-b54f-196d31163947",
        "cursor": {
          "ref": "9a0fabf0-d483-4dc5-b208-94a608b2d8d7",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "56c096c3-83ad-47dd-a806-fb3cec92268e"
        },
        "item": {
          "id": "e852adc5-1643-40a1-b54f-196d31163947",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "0b4201df-466e-48d2-9b99-9e1d7300254b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd996de-2d99-4cd7-b7db-3684630e698c",
        "cursor": {
          "ref": "4ca3edca-77ab-441c-91d7-238ddd387a40",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "af42c92e-b3d4-4711-af75-f599bd6700dd"
        },
        "item": {
          "id": "4fd996de-2d99-4cd7-b7db-3684630e698c",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "990fbb97-9091-4d93-8be2-5e038b7c5b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bd2736c-74cf-4fc2-ad2b-3d368f05b7e4",
        "cursor": {
          "ref": "480862d8-847a-4445-8383-2192ac4711ce",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "b3f0e492-d913-4573-8a0d-f491cea4e833"
        },
        "item": {
          "id": "6bd2736c-74cf-4fc2-ad2b-3d368f05b7e4",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "44936a83-2ca3-49ad-a38e-1fdaf01cb491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c61db3cd-264f-44f7-abb5-24a409948bde",
        "cursor": {
          "ref": "460bc768-12c8-425b-a4ae-705417658725",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "efcfda83-4cf9-4af1-bd6c-a0c9b5f709cf"
        },
        "item": {
          "id": "c61db3cd-264f-44f7-abb5-24a409948bde",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ca0e0e81-4975-4f12-80b7-68fd5a401435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b60e15b-5b57-4e6e-9634-db681599fc1b",
        "cursor": {
          "ref": "64ca7487-33ff-41fc-ba5c-7f3923f2ff03",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "255f70ed-e4e4-49ce-9edd-c056d23e9878"
        },
        "item": {
          "id": "3b60e15b-5b57-4e6e-9634-db681599fc1b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "eca7f665-d8c0-4deb-89aa-99f8d0f74371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e833d1ee-4425-4b85-8dfa-3b1eddc3a302",
        "cursor": {
          "ref": "175f32dd-f7e4-4fe0-99da-fe96c9bc188e",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "c8923d8c-64f4-4f36-9d51-75aa9bb2d794"
        },
        "item": {
          "id": "e833d1ee-4425-4b85-8dfa-3b1eddc3a302",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "54f8a638-92dd-4faf-a52b-f1c11892719e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc14609-810a-4ed1-8e8c-8a13ad3e3d0c",
        "cursor": {
          "ref": "5166c6b3-be09-4646-a6ae-0348496cee83",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "0f4c9d0b-720e-4204-9237-df7c0cca4943"
        },
        "item": {
          "id": "dfc14609-810a-4ed1-8e8c-8a13ad3e3d0c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "bb511f17-e125-4f2b-b84f-c1ea0efa0f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3783f95-b746-4d68-a820-a5983e0c27fe",
        "cursor": {
          "ref": "cef02d39-ea92-440b-b7ac-e6c75854be2d",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "bd982cc9-5760-461a-97ad-82b363c38595"
        },
        "item": {
          "id": "a3783f95-b746-4d68-a820-a5983e0c27fe",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7eb96063-8205-4246-8656-c52c3709d51a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb6f10a6-273c-419d-beaf-1b115338d110",
        "cursor": {
          "ref": "95aaa3c7-6866-49cf-8fa8-04455c6dcaaa",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "237e4385-d8e8-49dd-bbe7-996c74fdca3c"
        },
        "item": {
          "id": "eb6f10a6-273c-419d-beaf-1b115338d110",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "39273bb3-ca58-433b-9593-89ab19b58736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9921ea-b0c9-43b5-8b88-00fd3213d252",
        "cursor": {
          "ref": "54c5da5c-61e9-4daa-83d1-0bcfc5fab01c",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "3eccfe92-b9ba-4767-ada2-85767491e987"
        },
        "item": {
          "id": "be9921ea-b0c9-43b5-8b88-00fd3213d252",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "d2b75f6a-0ffd-4244-b143-311b312cb1a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e57d3a-9e0c-4951-b502-0ec031eb5834",
        "cursor": {
          "ref": "d234ae70-e878-4291-a317-99cccfdc1f58",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "e4407993-16e6-4078-94a2-d9d602f67fc1"
        },
        "item": {
          "id": "39e57d3a-9e0c-4951-b502-0ec031eb5834",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c6d81e14-c86c-46f8-becb-0903fff69bc8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeaaad56-02f8-4ba8-9f1e-272873d16399",
        "cursor": {
          "ref": "11902067-8f8a-477e-a230-e9b3b805d0c1",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "e2b93420-ba56-4001-a01e-79d18629a5ea"
        },
        "item": {
          "id": "aeaaad56-02f8-4ba8-9f1e-272873d16399",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "12d143df-42e5-46c8-afcd-9cb74cb2e763",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a6a43ee-9650-4155-8b4d-70bed528d5f8",
        "cursor": {
          "ref": "4d950442-e212-4245-aebb-641b6ebf6002",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "ce7ba265-5aa5-47b9-b8c2-4de2dfa3d4e4"
        },
        "item": {
          "id": "0a6a43ee-9650-4155-8b4d-70bed528d5f8",
          "name": "credentials_verify"
        },
        "response": {
          "id": "4a1d98df-4edb-4215-8e35-56798990b352",
          "status": "OK",
          "code": 200,
          "responseTime": 17,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddfbb685-a833-4880-888c-da78dde40fbe",
        "cursor": {
          "ref": "5defe6e1-c409-4966-8df9-6bdba2539e94",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "2db71fa7-8c76-4bf2-9b7c-fc854089235e"
        },
        "item": {
          "id": "ddfbb685-a833-4880-888c-da78dde40fbe",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e28e51c7-8b86-4f37-92e1-020188978af5",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea39540-a4f3-4f34-b87b-5963efc8328c",
        "cursor": {
          "ref": "12ca116e-76a8-476e-8812-5d3ddcd4a531",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "099ee86b-1d58-4b0d-9251-5341fbb5ea70"
        },
        "item": {
          "id": "aea39540-a4f3-4f34-b87b-5963efc8328c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6e3ff6d6-cd1c-4921-a9a1-41e4d858ed0e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea39540-a4f3-4f34-b87b-5963efc8328c",
        "cursor": {
          "ref": "12ca116e-76a8-476e-8812-5d3ddcd4a531",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "099ee86b-1d58-4b0d-9251-5341fbb5ea70"
        },
        "item": {
          "id": "aea39540-a4f3-4f34-b87b-5963efc8328c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6e3ff6d6-cd1c-4921-a9a1-41e4d858ed0e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5d5dd16-ac63-47b9-9791-71bb922a4117",
        "cursor": {
          "ref": "329432c2-8169-4849-9527-57bf04816181",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "58558ff8-e862-47b4-83bc-84ba8649eca1"
        },
        "item": {
          "id": "d5d5dd16-ac63-47b9-9791-71bb922a4117",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9d8058a9-a26a-4f2d-bbdc-0db1ae6de9c4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b576dedf-cb63-44e9-8831-1ba7d600dea5",
        "cursor": {
          "ref": "75e242d8-f9a4-4608-811a-c54d2fc57d49",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "04e2ace5-adcb-4d4c-b049-d113b4b73503"
        },
        "item": {
          "id": "b576dedf-cb63-44e9-8831-1ba7d600dea5",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d3f82692-9cee-4366-9483-b7a46d23e31f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}