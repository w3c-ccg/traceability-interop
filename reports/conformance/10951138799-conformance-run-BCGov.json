{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e675c2fb-b64d-48b2-8b42-1de6310978b8",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b417817b-01e3-475d-a3ba-bb143c13fe9d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a355451b-288c-4e83-a145-ea2da7dba7cb",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "43e92563-c95d-4d6f-b3de-8190728706d0"
                }
              }
            ]
          },
          {
            "id": "69a6a1dc-434a-46a3-9854-301b203372a9",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ae9e9de4-b212-462c-be49-0fde24446d12",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5774b6cf-0832-450e-903d-35fb7f4cf50d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "5ae36091-e15d-43e3-8b52-218149ce3cab",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c90ba8fe-a87a-4c38-a3d3-11e4d5d2c569",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f0f77c48-93b6-4e09-8552-59b2f04282c2",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8bf90f1-ed70-4bd7-9588-d82181692e7e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "df99abf9-fad2-4ea0-8bd3-b2f9b912e20b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "99358491-401b-460a-8909-a77f10eb0906",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5557aef3-ff85-4033-9764-2647626635f2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b8a0d62f-c56c-4b3c-85c3-754a2b0895ab",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "769c742a-af04-42a9-9726-4d530f21e753"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d08926f4-524e-4575-b67d-fb6dc913c55f",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "71423fc9-0749-45f2-9a79-4bead83f6e9f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bb990cdc-b232-4328-8f89-95df222dbdc8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "45e10119-4b50-4dd1-a495-55ef2c937847"
            }
          }
        ]
      },
      {
        "id": "83268aab-9066-4fae-87f8-85a3ac7a0f8d",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "bbebcdb3-de9b-4614-96db-c59ed0314c49",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3fa1326d-68e6-4f92-9643-8a66456a0f4f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a6a7f804-56ad-45d3-8f94-dce36130e243",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cfdf840-21db-461b-8dcc-1395fef8e0cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a72f998d-1c23-42c9-9147-003b1bd40335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c35f0db8-3204-4b64-86da-9d9ab0f4b6b5",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af627007-152c-4ce1-96ec-57d30cc1f96e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "10d0c2ee-ba75-4530-96b4-841db3c50b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b73ed0-6ff7-47d2-85b9-4d0372a9de35",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19484cdf-62a7-4827-86ba-a93d2cb7a1fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8dc0a9e4-9c67-46ee-9dbc-b9786a0e4e54"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "eefd525a-aab8-4e67-88f7-60c763e89263",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4464f512-a3ea-446b-8bd8-a8982167a0f9",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18fae818-5b8d-49ad-912f-8fa6b6deb2a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "52bbd49f-013e-4b3f-b754-1389acdfa53f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f2f276-edc0-40e1-9141-ed4539d4f499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "021b9646-de2a-4dc0-bc10-f6791b97bfe0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ba21253d-830e-482a-a896-5fb57125ca87",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8748f2d6-c68a-46ea-97c6-646f20920842",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "48ca3b5f-f83e-4884-b5dd-2d21f0236fb8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "5fe09178-ab11-49ed-847a-09df15d30fcc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1cfcc3e5-5b4e-4be3-bf9c-4898b3261159",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "bca5d937-b525-4733-97d9-a441981c3f52"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fe79b473-8cb0-4d7b-830a-b0b243f22e0b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "49d53074-6fd6-4c6f-a799-d94ceec3a148"
            }
          }
        ]
      },
      {
        "id": "08b6d396-c9ac-48d7-9440-73b9f8f9061e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "5b559513-1041-4b87-b8ed-a902a67bcb17",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c798112e-7918-47e9-8c0b-58c05a0885f8",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "97af8674-c9ca-481b-95b5-5a8dfc396ad8",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e49b96-ba26-4f93-a29a-d1131c314f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6720d9fa-7eb1-45a0-842c-3a83d5841455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a33a4c-6ad7-4896-bb11-1af507d6e389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dac0e951-a0df-4148-b7b2-afcb28d7a894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee4434de-e6d0-4171-b50f-a72e23c03218",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abee4799-f761-43e0-bb2f-0fbf02f9c5c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25b83465-f4fc-415c-82a3-0f3a4d3df929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "778fab0d-7f6f-4c33-90fc-0471c1e1653e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1da0884b-b18c-4b3f-84bb-ad6d310c0c2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9731666e-c2e8-45ed-8a16-5f2fd52efd4e",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a49e638-f7e6-45a9-b2e9-3f9c146c76e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef364d61-5206-4935-a08d-8be95e91ac84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e9d71ba-a1d1-4d3d-b6c2-98d70ece2bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9059937c-d28a-4fb4-821f-403fee8059c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda1c631-8755-4a80-8d97-554c17cb06bf",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c540c6c6-5943-48dc-8713-bc005467e8a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5ee3236-2181-49ef-ac8f-4e485304d6fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e4c16ae-66dc-4d2d-aa7d-83b8fa2638e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8561be1d-6603-4feb-aba3-f630d15f73b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da0da38-5894-4e77-b92b-32829e527157",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd8f414-847c-47ea-9c5a-b768e3f5d82e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8c745d1-766e-4dc9-b79f-3478d41c7a4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59814a76-70de-434e-a710-0567c6839474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0040ea5-6793-4cd3-843e-596e021754bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c328ac-39e8-4e98-8ffe-b3425cda391b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a77893fc-edaf-44c5-8163-89c4962e8bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "199ba9d4-a896-46a8-9872-68c8f3c90018"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7480e70-764c-4093-86b7-820248bc700c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56ed5511-8ed1-498f-9498-0330f61ede65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa8dd236-f9a7-4eb3-bd73-013650e4bdf7",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "797dda2e-ac00-41fe-9624-5daf3a2fa036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a31a7ad7-4f16-4d8e-92ea-ae613ddb6cb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d2a514-dcfc-453e-87cf-2bfb36ff120f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35777f31-a34c-411c-a22e-9c4d3a462917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab895eb-4c1e-45b7-9fb0-c747cec08fab",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5adac06-8baa-4942-a11a-f640e9244a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a23b93d-5bd7-44a7-904f-6f38c422c613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a62e53-75ad-4a72-8599-2a1a033274f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e850c601-a2aa-4c2a-85f7-fcd7b9893d7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c263f8e2-b357-4221-bd15-96dbbd4cfff7",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3a7cf12-85c7-4a19-a819-e2e9dbecd490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e439c3cd-b6b7-49c6-b464-d9dc6fcbbd0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c473917-17c6-45fd-8560-ed77e313d77a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d853803-d28b-4a5d-977c-b94da1cd6c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd2b8528-7cdc-4684-a097-9dbf5230bc7a",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "750962f8-f1fb-4254-af0a-5d305297c5ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19695eb9-d7a3-4e67-a6ab-ce206f84b164"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b4bd92f-571b-46cc-a94c-02fae4f637e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d39734d-80c5-4eb7-8ba6-281313e0bd84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce130b7c-92af-4947-9018-6637c1de9797",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "361955a5-9c55-441e-98ec-62879b4cd5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "639b8328-2ac6-46b6-964c-69a9d46f0c17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a5e517-d0f2-46d3-9bce-9c98baa8105c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6069cdd3-baea-4fd8-8122-a4787d81af0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bae896f-37ab-4dc4-9692-fcb0f6377c05",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2101e08-f9f6-445f-ac86-58d75c622aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f28b3df5-8b94-4f3a-91c3-f28df4f6f86f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f75f8c-7b63-442c-a377-6951fb0b307b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18e660d7-2bbe-42ff-9bd9-ed71c09f7126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf84c082-99be-4369-bfba-6632c290bde1",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f345c87-165e-4fe7-a262-a661e91ad45a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4baa60fe-80e1-48d3-8b3f-77ef9e36ecb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f52be4a5-bfd4-48fa-8e62-4be38cd56d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7edc887f-85cc-4186-aa6c-107ab5d3a07c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a84999f1-7006-494b-915b-e679ac4ea33b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3e8306c-7414-4a47-8736-1fc4c7d0413c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f89ec5a-53a6-4fa2-a990-fb6553132ea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1650f50f-b705-4791-8a01-524d88ec7da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8cd3a7c5-c012-491f-8a45-2f84971a826c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a3642ee-cd5c-4671-8600-42b15b92cc22",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cfbe517-0312-45e7-911e-fd8db4da77b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6f0a83b-ace6-465f-95b2-3b1ab04efaea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0bdc6ed-fdbf-4d45-801e-dad29f0b46d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9169a1ea-ff9a-429f-a5b1-51b8ad6f5c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb04abee-a2fd-4f32-a012-aeb8f64ba579",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa61e9b-2c24-49f9-b297-1d69f38cf35d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23350fd7-c078-4620-95d6-264692304a1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a3c030a-d8e9-4373-91ce-923fa9f5b06c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "43637f77-60ff-4c75-9209-b5484df61c00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e0a8377-a480-4fd2-8dff-f98deb8f2534",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaeb9d5b-ce64-450b-88c6-f9a1f054ab07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ffc7400-3877-459d-b50c-5a54917ea183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d36a5110-14c1-4f7f-b277-8d25e2087f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37a94b68-9864-444a-8ada-7aa6bbeb7240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f6e0eb-94aa-4f80-9e46-7da2c6caa054",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca05a279-8b5e-43a2-ba1e-ef0dd3462c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22951e49-97a1-4f71-b5e5-ec34f5fc47cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f15b640-2b5f-48cd-b2d0-8beb5c1284c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "274a8119-cbee-4b72-b4fb-755cf379f572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab93c702-9e1b-4c6d-b8e5-26412ae9d6b9",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d02b7699-3ade-465d-b97a-8692ac57deda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ce24c09-cfc1-4e4d-a19b-926888881ae0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b8acb35-4cef-4080-876c-d180c70350ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c72700a0-e01c-4261-8126-bfcf4f1905db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e81657de-fb4c-4258-8f1d-a5b757c0611b",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce1a995-f275-4a8d-93e4-7903b961fa8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a464f140-f199-42cf-aca3-7bbd96f3b8b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6233bf3a-5d49-4ad6-ad4b-6876a7d30f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "41f3ecbd-80c1-4354-889f-c937b598b97c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ba84b8-7703-499b-b985-c2217d3bf348",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcb97672-dc5b-44e3-8c54-e23f1184fee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62ec71b7-e7c4-4b61-89bc-9a64a7d4cd37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ebc21f7-e219-4aa0-91d2-c1ca9f16b292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "28aa43d8-490e-4835-943c-a85c1684bd51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4889a3f-3cd4-4905-b874-071504fd1434",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "490373fd-ac95-44af-af12-40549a69cc99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc2b0b87-1961-449d-a497-94efbcf49c24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "374bcb27-236a-44f1-9390-f55ad8ae61c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "20f8e7f3-a7ad-4f7c-bcb7-810e5d334d8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b88575-b5a4-4166-8574-3e131e3caaf4",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f38642db-a64a-4e9e-bab9-e0489546365d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c60755cd-9b3e-4bae-8d3a-4e410e50af6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff26c79-5115-4489-af96-d12aa90fef1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d5dc84af-3c27-4e10-8dc8-1d3d0555e6e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "804292dd-9d13-4e26-ae43-2da05d0fa57a",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eade03d7-a405-41a5-9200-2f535ab7ec65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd6c1e81-c2df-4b3a-a973-75f016524b6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51836b12-db0b-4984-9694-97551863316e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9f53bd6-0773-4910-a74a-e2f0818ce0c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e4ec52-c00f-4181-a930-e450e88de4d4",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "463a3dd4-ad94-4de6-93bf-86a9fb9e98ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11a34e4a-ea83-4c77-867e-a8d89d59732e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a38be3-d787-4a65-a611-344b7fa47de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc448957-a521-4da6-89f2-6a5ae89f59f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e32c7aa8-21da-4dec-83d0-b77f717e030e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da1683b9-2f58-4abb-a155-bce2a225f4fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74cfcaf8-971a-4a6c-b033-64b494f81a14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58396f6f-81ef-4102-93b4-75315c2a71e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1af0cb62-3f32-4833-96d2-821b60eed973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c48dd33c-046f-4972-bcf0-e7c2a83db4e8",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f97eb092-0ce1-4d4e-aa99-19070caa3e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bbdb348-cec5-47b1-b961-f12ef33ac7f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0625fffe-ae5f-4b3c-b720-cbc159efe8aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4de3ad33-949a-427f-92d1-8ba85dacb1c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "909bcf23-9f42-4afb-80d2-0f2e8a0d2355",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a782d5c5-4dc0-4522-bb71-2cff3cd18db3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13ec2b33-2c54-4806-8b74-45be61480905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a32ed17b-6b99-42b3-8572-2842cc9b6e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4b30530-d41a-40ef-ac63-65b58a637ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a95d3b-1cb0-4ab1-8b23-84e578fc1cb2",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01d3bf6c-c429-453b-a8be-7a1071fd83b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c5309ce-bead-429e-a845-0290f75c2799"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6163370c-87df-4003-b8b9-3248a3013170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc959135-7228-47a3-aacb-c1a674340bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea9f207-ae85-474d-8952-6f659d24ad57",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc73a92-d3fc-4402-ad24-6f9b98794675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23dcad34-d257-47a8-a918-32f73d6b454d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4efc5e74-47a8-4766-a4c8-8b7526287e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed0eb9dc-631c-458a-b0bf-897cc9cb0886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67221207-e105-47e6-beae-da41a355df11",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "120fdb5c-6fdc-45f7-80f9-e22df349bc23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3148c182-6ac6-4378-a54b-a6fff180c5b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a31de815-e6f8-49b5-98f5-75942bcc1e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "46bab442-3c13-4297-b1f2-250def1cdb19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f7fdb6d-f177-4dc6-94a9-0a92f436b6ae",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65351412-508c-40d9-9cb2-56e8be739870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b389a5de-faaa-4de6-be35-ba7ce50491e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb194dd-4515-4ac5-9b7d-13afb48b06f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "96dc3359-88c5-432e-8613-dd889449d104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77a9c4c8-59a5-49f1-b2af-c2bdcd577f4b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb850a83-7ac6-4b43-bfd0-b1214047b730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb19e7d5-7395-474f-a7c0-db10a28d1d9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c28e5c11-a893-4c49-9217-048f0672d6e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a31be10d-2b43-4866-8197-3f2374dc7469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "226e86c7-fae8-41d2-911d-cceb5638f61d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c7ca1b-e040-41e9-9043-81d8298123b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd8166c8-9d9c-4a01-acdf-8443b2b6849c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f91c2bc3-72f5-4975-a30b-fb9bbb1d4dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "272f8c27-b4c3-48c4-97d2-1f1a6a0ceebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b991f4a9-8dd9-44cf-8acd-420e39fa553d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec6c5ea-066d-48fb-ae3c-6f61032f8153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a1be81f-2390-4033-a03c-ec9349b5ec81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee6cadfc-7f5f-4d24-aad9-5cebc20ec109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "4b1c25ae-a5d0-4035-989a-890a417c59c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ffda8c-ed8a-44e4-b885-d0a094e508f1",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c103719-6fb4-4349-9fa0-c503ef52664e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9dc5c95d-26b3-4bb9-8624-63663389fa9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee7a32c-20ba-49d4-90df-b82fcd1716be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0d5da44a-7d17-4fdf-b04a-128c39a89198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204fb236-0215-4cd3-8817-ebd647e9af51",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "269917f9-4f2e-446b-8c9f-c67efda6fb21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb3a3984-9927-41b6-92ec-d8047fa939fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06b2d18-a7c0-4964-b57b-a3d8f2936c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "27c40dff-ba22-4071-b49e-04a3dbaf9abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba95ee4-566f-4236-93a9-2139225b0963",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efbcad6a-9fa8-443d-85e4-ebd854d853e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffb30fe7-f6f3-4d0d-809d-852288421cfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b66f67a-4ea2-4d13-8548-b7de74d65e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f22ccd88-57df-4c54-8145-d020a7408c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b444e0c-04ca-46b1-894e-174fc557d361",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cc3d59a-c2d8-4961-9b6e-83a72b40b068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fba579e-3875-4d67-a945-9a344d8eafd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c76b70-5a81-4365-b340-f40a2e68e0be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1909fc70-d7ad-405f-89ad-fcc05a80b122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85cc9165-f89c-425b-8719-e03de54cab2d",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b9773e5-a62e-421d-91d5-3e6b59766579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "661b8b2e-9c63-4de2-a193-357001f3102e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd00d8e-8407-47b9-a4f9-b91e0280da3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8984f20-b48e-4b9d-8d46-7801cd2028b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f4ac74f-61f1-4253-89c7-fd740ff37ee2",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "338f19c1-3d30-4b69-9279-323cad36e7a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "146a23c8-c704-4837-96dc-656e229deaee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92668080-61a6-4ab6-818b-377339281e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "61465a68-7d73-4d59-a9e4-54a97c15ab7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db34b41a-d4d9-40bb-8f8a-5eebfb79545f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3212a883-f307-4ff6-b633-2595581853b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc9473e1-c9f6-4599-b1d0-338dd5c0786e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b944d9cd-93ae-4805-a805-c98a58ea6d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "374f71cc-85f2-421e-beab-d55d668f4a02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "751c5bef-719c-4691-b142-10be7855349a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb838704-4c27-4caf-b73b-15d82b139e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98ad875e-01ed-4c5a-87c8-e2104c3ffd62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19b17baa-8b9b-446b-966c-bc0aa4b0b846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1102628-d50c-4475-8b03-31994d133651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c7f95e7-5e44-4edc-8985-4ca2e6202405",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b5b4bbe-fb16-426a-9dd2-79ba218b421c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2437ce64-e4ab-4a5e-ba5b-d4e2c3b0cc16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39dfd83b-0b5b-4fde-822d-2464cdac32cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad0865ff-8f57-47f5-8fbd-28a652c9b12a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "123c1bcd-5449-45bc-a843-d4a3d8ec8194",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de0e546f-4a12-4961-a839-31bfeaad7571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "308ef896-2092-4b15-872b-4baadd5871f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db1005a-adfd-4cc8-8df3-69f7a5469b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc14ae6f-e3ab-430f-94fa-3d2ca405187d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bde3400-ec85-4293-9d53-f4c261de4297",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "649fc4c2-7397-4552-900c-9d6468a877ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d4f7d3a-9b39-466f-b489-bcaa16d1fbfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d61dee63-863b-4c1b-bad6-9c35e95938b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd7e6bd2-0135-49b9-9735-c21661300ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b6141c-cbb0-4466-8a9f-08899e9be408",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6264d13c-bac5-420b-8003-d4bddfe80247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0588cd59-7f94-41f2-aaee-c2e29b001dc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e03766-bffa-4a2d-a55e-0291c10af54c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "192df63b-5138-4c25-a13e-23b9d727299c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e7083eb-c84b-4b24-96f8-2d70ca35969b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "965664de-6847-4937-8fce-fa83ff6d914c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "855d2f87-e1ea-4964-867a-b05795bc0e30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29602ba-6611-4beb-8f18-c8f36356e0ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "31bff65d-b28e-47d8-a847-fa9c3b0b2f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cabbf80-5f1b-4a93-9d50-3cc32d3854a1",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e4fafb8-6b45-4c54-8b22-1c673181d068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aff8b7a-dbca-428b-a5ae-cf3f7326b73c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d302851-854d-4d99-b3b6-b7e977d532e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "db0c195e-5093-4348-9a82-dfc79440c4ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce06e9b5-82e7-425b-84a4-134e9f52d530",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81be56b6-fb88-4b22-b210-001b759543dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08c75314-92c0-4374-aeaa-653b05af3e22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc10ccd-f9f5-47de-b181-0f741c108ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "542966c6-0cab-4272-afda-c658dfa26c98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe0dbc11-cfb7-4b91-bf75-fe149aa5b44f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d85bb4b-ac76-4e81-a315-bde853c33ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6db1c3ef-fd00-4bbf-87ff-70df1920b0fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ac6024-5dd1-486e-b6c6-cd434cc7deff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "459286a6-2e6d-4b87-896e-80596aaed884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3dc06f8-aa67-40a4-982a-c647eb37bdbd",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a89da1a2-87a0-47fd-b1f8-8d02daa8abe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59903acf-d8a9-42ad-9297-3903ce5d1dd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f6ada4-3152-459d-8e40-2a2109e6dc08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "744ef60d-35f4-4138-a36a-efebccb35f6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "730e09c9-ffff-4504-a8aa-7bde636ac837",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0a45376-b2ec-45f0-a080-ef0259b62f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec071293-43f1-4b41-abbe-21d8779cbaf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7250f29f-c97c-4b0f-868d-f0ff38e7c77c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f90bbd5-c75a-4dc7-80e3-98df113bce12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c867a5-86bb-4483-a748-a4cae19c76cc",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3563f436-b118-4192-9fb7-b5f5df213dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa19dfb0-4179-48e8-b760-4cc5cdb2c648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd3d57c-65b7-4847-870e-6d329346d392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7636918e-1ed2-497b-b7b5-346a49b3445c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5348e1c-aba5-4e2b-8110-74c5b4c090ce",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ed9345-bb7c-424a-ad58-57cb8721dfdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "358f9b9b-65f2-41a8-bdbd-543e709c7f0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c3c150b-4ecd-48ab-813a-0b5719a5458d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c95cc9d-33a6-40b8-ba5f-56f70009c151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0df02a2-c3ad-4cc6-97ba-fdf2e593bb9d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e544e0-d7ca-491f-8543-b710e48409ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9c16cbe-f117-4266-84dc-af7baa23d124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "669046f3-c90c-4b5c-84f7-602d37b30a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "86d7cef4-182c-4318-b3e3-e1a2b6b383f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "557d241a-5854-429c-a5ad-8b2ba98880c4",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b413a57-c7c7-4a44-9921-4c110c4e5476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca08c253-1411-4853-b70b-432c44d91a5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c97278a-edaa-43b2-a984-8b5acb18a2ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7387e94c-c79a-463e-8787-12b18f7c1288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e2ae48-96c6-473a-98a5-d6631b64853f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "626ce9f1-0bd0-4dd5-af39-a26a4cf00ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9457f01e-866e-47a6-971a-5ead31b5f519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8320321-7b22-4e5f-877e-ae11e6edb292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc3d359a-4df7-4a7c-a78b-218bf20b4c46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a35d410-de6b-4af5-9ab9-7f60a38894ca",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a694740d-01f2-4970-97f9-4f000941b560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58e9dbee-0862-437d-b072-05c7ba0b5252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba764f83-05e7-4463-ac66-eefbafa9986b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c7c2ed9-a9cb-44e5-9ffe-f487275ea353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8861ffd-4e03-4eeb-b4cf-38791379f537",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dacdd6af-c39f-4239-a6ef-6c1d231e1418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cab0b53-68d4-49e2-b43c-f449fdf62a4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed52ba85-c54e-4b47-82ef-52a16ad64fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "78920d15-4e1b-4728-91a7-48d420dfdbcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebde6686-f216-43ea-bfa1-da9b469be3cc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df595015-6d9d-4bc5-80e2-3f26a0d247cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aa66b58-e8f5-4418-a9b3-b79f51fd2a00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f56b65c-0797-4004-8899-628b266e6641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7d43305-8c90-4188-96a8-6a15a2db2782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b65e750-09ae-471a-a2a3-65e3dcbfa4b3",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ece77be-6a5a-4261-8347-2474016cc181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9347b7de-99fb-437a-99c2-b36d8d70623d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "954a8ac6-7f5f-462a-831b-f1f4a158019e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "465ad165-986a-4a73-822d-7730ce634b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a854e5d-39ec-413a-90b4-0cceb136bfbc",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94162523-cf8c-4088-a5e5-3a332b059abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3178dc10-3041-46e5-bd28-f0bcb23a33a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7468ed7b-2f2d-492f-bcee-737cb14028ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "97d698b6-99cb-42a0-93b9-5c17e397b509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c0c0b29-4c7e-4ee2-af90-256735d3f623",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f576d3-afdf-40b4-853b-7e3fb09aab4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df610356-b60f-43fd-8a98-af0b6d2d1265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "642d02d9-e9cc-42db-a4ec-ddd85c0c8b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1595a29a-ffa8-4a96-8a59-2ea6817b99e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "207c482d-f10c-4734-9b92-90486a78a3ac",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5bd985d-bb56-438b-b43e-853319f1e3fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64b4dea0-8473-4bcf-ad5c-02ceef71e927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdce54bf-e30e-4c83-9d53-ac4d5b1233e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "52c2ee6e-7def-4295-afa3-30e553f0deab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da44c15-3dc9-4612-9520-59ca3095761e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53fef9c9-9f13-4d28-b64d-b1960158870e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e1ca29b-d209-4ce5-9274-5835dc0b94e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c9f5a76-9398-4331-93e8-fbfb607af415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b554dffc-989b-441f-8cb9-7ef822946317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46fe4670-8442-4b20-948a-310830591725",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ae261c-1aaf-4cb5-b694-e306f5b5c777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4b11c69-563c-4cb9-aa28-cde1817931e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "755dd2a9-d05d-46f9-9938-4ceee98445cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6660f921-6807-413e-8588-b49e100a243e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20728cf4-3325-4ec6-93fc-0db310c9db38",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8752591b-fe6c-4b66-9ab6-68b2b190546f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e66acd1d-4e7f-42d9-89f1-aa5e08aad332"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8bc8f9f-3e01-451e-a9fb-f8776aada47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe00d33f-63f9-4673-b373-33b41fa501de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2afb874-2f9d-4f90-bff3-3f4318cc7a7a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0682b33-cdb1-42af-aa7c-9da1c9475144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a767086c-4337-42ba-b61e-c7a65506af64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dee6d76-f52e-4fba-a9be-10e29d12df34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6134fbc2-0a6c-420c-9b48-ab746e5b1b7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92cbe0de-424e-49a2-b2ef-4f0157b864d7",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77d202e3-4e8a-48a1-ba2b-fe32632e79ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfd633cc-f1fa-41a6-8da1-24df30f67a93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "164a24c7-5429-4459-b50f-37171ac5871d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5340580d-d2c9-4565-9c3c-a63fb8585b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc67730-dbfc-4fa0-bbc6-bd575d6635c2",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db0e8db-d4eb-42e7-8d5a-9e57f90de977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e90cd87-1b05-4b1a-8da7-f455aac87510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f94da1-848e-42d9-b63a-9e73cbfbb999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "97c4635e-c0f7-415f-8ffe-5770e9d652d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "040f3676-f13a-4551-9fb9-436c7f5f0d1a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb245cf1-2e33-412d-be44-0cd6b9f3f7e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f01ed552-5b20-438d-9ab1-d898e55d49e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad0b323f-ed8a-4120-8539-a68a7e2a34f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2da9ea74-da9f-451b-9939-dc59cda58c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7d2b00c-6b82-4af4-885b-e14411cc1b0a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24af47c1-0a71-4c58-a331-d6c090c8bbe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07645c9b-b979-4f1d-b5a9-fdb38a9d133b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9011f8b4-cd91-4190-a627-e248631d6505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5910c85b-af3f-4cd7-9ea4-c1e9abcd7916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "116048de-a5f2-42fe-9d41-cf69455e73a8",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd504822-13da-4c29-9151-57481cc93cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1856326-4687-4e89-a9ae-8aac377dd070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "311cff30-ea47-4277-b395-d273f3a562ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2495701e-b751-486c-9c4e-f6fa9fa2eba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "476faa9d-0d08-4c52-af9d-642451361875",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b4030b9-0814-4b1f-a931-d2bb7c42f1f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f39198d6-ea59-4306-ad0d-d8ac62947f69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "288e5b13-bf97-4e6c-a8b4-8a2c7890c3eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2092a27-c229-44c7-af37-13d6f4d60186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1628fb1d-c9ea-4b3a-a52b-9ce84454e9f7",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80284a01-2eeb-4927-84a3-8545b7b18e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5957449d-fc7a-4a85-bb3a-35251d63e62a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d929b7-9971-41cb-b440-ac8c9800b993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bccebc5-27cd-4732-869c-783248d25f21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b4879d1-06e9-4c02-9a07-a9f24241f1a2",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2459e2d-d808-43d6-9dd7-dfa13bb363d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "752703d5-16cd-46e1-a132-c3855d2e24c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c62577-8550-41c5-80aa-06e5e12aaa88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "df825728-fe5b-4360-8896-ceaf3c731d71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1baf53fd-0941-46cf-af96-b43519f5403d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70dd8b71-35d7-4afd-ac18-4bff8d684a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b6a45c5-35de-40f5-8d1d-e118872a8ceb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "297ef33c-859a-4958-8a77-b4dca126df06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "be90a0ba-c071-40ab-9ac6-b3a96059c5f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73112588-bb54-4ac2-9d27-13138bdbcb47",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4318150f-92f8-425e-8dde-b4c854feecce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9baf7b75-f34d-44f5-a607-93b00bf7390a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d476a8-098e-4db1-b3de-3c242f91360c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f76f7a15-db17-4574-94cb-f41907bcca85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ec6269-d055-40b1-9bd9-ffdfbbf61320",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64962bfe-6f40-4a2e-a40d-ffd31c7b2a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5288960-638c-49be-9b0d-a4c4958776e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba6bb6b0-c0be-4dca-ae6d-9434f3c87ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6422b6ec-1303-400f-a62d-522aa315838e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ef54aa-374b-4c44-8eb0-b20161a891f8",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc911720-7022-4d77-9a80-5671534291aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9ecbf07-8eac-4bdd-a39c-c3a916afe200"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d56b589a-5ded-44aa-b49b-95e50a8a4cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "11d6e196-7afa-4819-afa7-719f3daeb3b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb28bf5-567c-4a11-842f-c65358614938",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1296d417-7d8d-4cf9-a38d-a0031f672006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43066d80-9386-4bd0-bc72-9f574c7b106b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37d6c6c2-c2dd-49be-ba38-10f0353235ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "89636016-9c9a-4605-be06-4010a9e108b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b538410-631a-4695-98cf-6faa7463f6df",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7248473e-5c88-4528-8d3a-d360c1bf871e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3641cdce-33e0-4604-8ab6-99caaa208f75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6acb3d5a-fabb-47ed-b68f-72543632e4da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e6c2b52-6a7e-42d8-b3ef-a19c8abe0c06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "611aba3f-4081-40a6-811d-41755ae80025",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a3ac0b6-ef34-431b-9751-76995b20470f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "227d15f6-7e2a-4e76-8a42-6acbf13c3a3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1428337-43f2-4445-b31c-6a5f39bc549f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8341d4a9-2de1-41c9-95a5-a56c021b3de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a84c79b4-4515-4f37-8e1e-be2821d4d622",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9ed12f2-9003-4ec9-be96-d54d69c7748f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a4c3b47-0a45-47cd-bcf8-0a961c83f999"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e1c2083-c024-48f7-9822-7348618e8e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d7401d01-e670-4097-9070-ceea485f51c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edfcbda2-812f-4cd4-b9c0-cbf168c1ea22",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b51b7dc4-6e98-4a03-94af-d74367705585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49eb72c4-3515-46cf-bcb7-5d1b79ae7fef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4649839-994c-440b-b6cc-e2a4ccc71a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d78ba95-3ea5-4f5e-aa4e-1f1ae3472f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "938265c5-227e-4ffa-92a0-82e6d4e2ddfd",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bfe6c65-b33b-432a-bdca-f00d6b097f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14bf6a66-e0e2-4768-8121-a4775fb6653e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "656c88a6-52a0-4a95-9292-415c505213ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab4361c9-7d88-4509-aa31-d4cc4f50be9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf903b4a-c234-4dc2-8e71-852846c0ccfe",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b67352-8f59-4c24-8e69-6bf535b379d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cc29793-842b-45f5-a18c-28dbe47e7c64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "593cfce9-5142-4a88-acfe-34ffefc14ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "87a74fb9-8c35-4eff-b16f-18c7e218a8c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df40de9-43a4-4e12-9909-ae7eb891638b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e42fad9-7c92-44ac-8575-6ea9a5e9248f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0668fbd-242c-413f-87a6-521149f90820"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e68361d7-5cbd-4838-8e68-5ec1fc52f2ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "55994da3-e237-4ebf-8f44-acc7aee03caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "130141a2-e058-412f-be2c-7e7bfcb69e58",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aac0015-937b-4256-9757-7ce120017dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30498643-91f7-46f3-bc73-89d0a2b0f4c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e82835c-91ab-4060-99cd-f1faa53a181c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b6ff1d2-8cae-44ad-8927-cfba84d7ba54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc9dcf0-0f9b-4b10-8e6a-361eb3ec25c1",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcedf61e-dddf-4835-a3a8-a38313d658f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65dd952e-6d53-4d2e-bc26-9069dfb478d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45da26f7-a48e-4b52-922b-535042098805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0cb54f32-9c56-441f-a7e1-a8c0d5fe6128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34ce4e37-f486-44f9-a498-ec7e93b60cd5",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc9c2349-3b2d-4b58-8837-8519ef9a5231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "92aafd9a-2836-4977-b199-26481fe08866"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0a3f9c-e2e7-4494-86ed-66043fa084b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "74c44965-1095-4ecd-a7a2-b761108fc160"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6cb7422e-1b62-4b48-83d1-5aab7d74344a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d4f43908-145c-46c5-917a-86dea2375a07",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a2cd11e-5be3-4eae-ac2b-f6ff9a68c299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6ac055c5-ae3d-4ea1-b9bc-8c18873afc3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "545a889a-2220-4434-b995-38cac129315a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a22b0a3e-7ea5-4856-af69-44bcffc189bf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fdb906ae-0f05-4a7a-b8f9-e9412906bac5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "abd6ddbd-d5f3-438a-9a5c-daf9fc7dc20f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e93b7d86-b9ca-4b6b-b5bd-4b8779a48821",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b8191749-db14-45c1-9431-e4455cbc0629"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "424cacde-75e2-471a-b472-0aa0215689ad",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "739c44cb-856e-4dc0-b419-3d9ce3c983fe"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cd7f5a22-bec2-4315-9feb-01e7b3279267",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1b58a406-772e-4db0-946d-750823e8851a"
                }
              }
            ]
          },
          {
            "id": "1b4dbd0c-511d-4195-be6f-83c260fee486",
            "name": "Positive Testing",
            "item": [
              {
                "id": "65a4187e-0623-4a6a-8f23-782165a5eb9c",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "dbc11b44-d7a5-49b0-8d56-1edb39b92bee",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65607ef8-513c-4415-997d-c1e6a50a48a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a65d8ce3-ee4e-44cb-b2ea-f6881d6a5c1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1eb6c85-0095-4323-a256-f68493c47e8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdd8c176-d099-4282-ac8e-77506fcbbafb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1f491023-611a-48e9-91eb-094d1a231429",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "724d5fa7-4a4c-4667-aca7-13ddb667ac02",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "46bd59b4-b1bc-4b0a-910f-6542bc188269"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4367506-4a68-4894-a678-292973d3732e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e1190b54-ba9f-44f5-a98a-53185d00892a"
                    }
                  }
                ]
              },
              {
                "id": "ce4982df-1145-4c33-b2e0-a87c08c2f88c",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "33f659e4-7416-4f21-b0c0-8467fddcbec8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1491c38c-9fbc-4884-bfc2-0df37d76212d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "242e2d69-ea25-4858-aadf-2ccb357fda0c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "af015a8d-d21a-41ab-8ccf-dcbcb2a81a99"
                    }
                  }
                ]
              },
              {
                "id": "ec4a9015-b7f6-4b00-b96f-e7559398b4c7",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "152579d5-0b5a-4f78-8df4-56a1320c494a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fd224087-31fc-4c36-b166-eae81e111f17"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ccd54589-233d-4a8d-a38f-389564f8940e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9bf5c687-703e-4569-af2d-ae5a190a656f"
                    }
                  }
                ]
              },
              {
                "id": "5f39a627-dc7f-4c97-82fb-277e4c3e3868",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "adac4386-20b6-42dc-b5c4-5641d603f5b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "04cff0da-091e-430c-bed4-2e2fcf39d292"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "318e2d79-adbb-424d-8588-7aa66f827b18",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a43a0f5d-45f5-4914-9b20-ded151083b57"
                    }
                  }
                ]
              },
              {
                "id": "19f7d7e7-eb83-4424-afe8-3fb053de4c1f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ae76225-902e-4eb5-82a2-3a635c7ec33a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "76ae45b1-b50c-4dfb-aebb-4bc4cf2a5a67"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd2c9d62-bafb-47a3-b257-89372da54c30",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "661910b6-2dd2-4e25-8558-d5db9f0618dd"
                    }
                  }
                ]
              },
              {
                "id": "b94c95b0-514b-4e24-ba00-4a396ead15ec",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8f2fef4-308b-4e19-83a0-01272535f955",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c608226f-c1fa-417a-ae6e-af60381ff3e3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "21786de8-43da-4838-a952-16a88a6b5839",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2ad3b1fc-0016-4bb0-9103-5c9d20b69427"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6ee57b2b-033b-4d3a-aa56-23efcbee474a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6e811dc1-cd73-4b20-8cab-6634368bff42"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "aeb39782-bc2c-4993-9a0c-1cb6d6897dbf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "af642faa-7659-4779-bb20-94445df51313"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d2d03286-5559-4422-a0e2-dcb4528a43df",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "8b520ba3-7c14-45db-ac58-ab627517789e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a9fbd13f-e611-41ca-bd40-84ccfa8f9803",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c44509c5-02d0-4fc5-af7e-95dccea391cd"
            }
          }
        ]
      },
      {
        "id": "39795fdf-6153-45da-981f-27e2e0709de4",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a528f972-4c6e-4f48-8b33-3b04a08c4abb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f6da7a7d-2c04-4c5d-807a-72527e8356d6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5091440a-ce12-44de-b4eb-d6049c28f580",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9824836-2a41-4921-b533-646ec7c5ca43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be88413f-f90e-44df-a5c0-569f17622115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f3e476b-3245-4f73-960e-4877fc075d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "84aec186-12b6-48ec-aecc-35416acdaea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c6647f4-222c-4f0e-a1e9-343b3df3a2b4",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9bbb46d-0406-4b2e-a139-8b06af040e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d880d2a-feef-4c5a-8ffd-f25349dd9841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca526b9-b631-42d9-a99f-cd0824a6d888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6104138-c28f-47dd-a56d-f01510c89255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25bdfab9-99f4-4563-84aa-bd1b493a066a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e168babc-456e-4f21-9610-6067e79ee514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcfd5175-bcca-4c8a-aa2c-183922513cdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa3a7994-0832-41d0-9fe6-1117687b7052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb874100-a354-453c-a09f-05aac0364a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8144b45-56a7-4e83-90f1-4f6ca1cb2b7e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69ac1234-6c9b-4819-b62d-e3083c5e4980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3af7e80d-0eca-4ad5-940f-8c194e14895c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0e15631-bc5e-413d-8011-c6920803a203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa4fe160-98ff-4a7b-89d4-05d30a4cbd7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d56bbabf-4bda-48cb-b6bf-c37ddd243f65",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a716dc89-24ec-4912-919a-e433c20aa389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cee35ba8-fb03-4e65-987f-eedbd315ae7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd26ccf-8e24-4ae3-b493-922f3a03f8d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "435935ba-947a-4e6d-b6a7-616ec2a535e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b79540b2-fb69-4618-80e0-f21f19261a0b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2299cf3a-d4bb-455b-b88b-377f3387ca52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f1a43b4-9931-4112-86c5-e9a3b583ef77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd252820-290b-4c2a-bfd0-862998ddf08a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "24de1f82-056b-45df-b5be-d9eee100da92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24db7217-7bf3-45a2-a4b1-05e4a87dfe93",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de615ba1-ed0e-4043-b352-789160064033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27cd8ce0-ddc2-407a-884f-3306b150cee4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c58b26-f28e-4bcf-bdf2-f51aa3143d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "01e84b74-fd3c-42ff-afbe-4faaf65e0089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d404042-b08a-4009-9167-94153d50721a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65aeacda-aa3f-4c0d-a8ff-374c71e2dcae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bd16807-4d43-471e-a792-a8d9334d8eb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae84a96e-4523-4b09-b037-a1a85351b18d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "84c3723e-b277-42e6-b47a-05b5d05f3a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa4ade6-7dce-4ebc-860b-0ce6e351d028",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed461a0e-03f3-43ab-b6a2-c9cab520743e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "302fd6ce-fb10-41aa-952b-8b6dda799670"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55f00c3b-31d7-4818-a900-0d893444e666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fb826af-4897-4298-b110-7a25decdd4b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04b8a43-bd48-4331-9556-f8754498509c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d274e64-58a1-4bbb-8d93-b194333bdb4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f3f5317-56b0-4ad9-9bc0-0d449c3e5524"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d89c9b7-929b-426c-bf6b-18e584321aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc2d162b-8861-4798-a025-2845436d1dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3bc56da-bb61-46f7-8247-64463a79f45a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca4668ad-546f-410c-aef1-8bc890dfbaad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e6ef32b-154a-4c5b-9209-035e38415450"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4ecd342-403f-40fa-ae29-b4571c0d140a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6bb60495-27ee-4ca1-bf1c-4458ec03760f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf99385b-344a-4735-a345-2b4c5d124f62",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a4e8d2c-b658-4188-9520-2e40a7f5ea70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e607a9a-a326-4b46-95a9-3eff3aa7073b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1fc7c6a-4d20-481c-956e-1125e4699e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "75ec2bb4-5689-48f8-a4e3-897736f30abd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e936626a-3d1f-49e5-9750-2f4c98e090e5",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a881a06a-8ee6-45c2-8747-0c3ef1a3fe55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aedd18ab-180f-43e9-a98f-bcb465bff6a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c15e18a3-0fff-4a59-8e02-a06133910a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b528b3f1-78fb-4ec6-9862-26a29e8b6c08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94aa0259-79de-4a0e-b81a-194e34e3c78b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f326608-1c2a-4696-94ca-c66048dd9ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e96be4a7-cd1d-4bf6-8ccb-2cef8ac14be8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f71868b7-9e6a-43bb-9709-f9d9d5cad8b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cbfce0c-a001-442c-a4c9-caf77838d2f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae0aa046-bd4a-4f8c-b26b-9c1d787356fb",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31dcd895-7a1f-4cf0-8d93-3ac2e60e3ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "415cc40d-8a34-476e-ba90-55ccd7146ece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1412d373-d198-41d7-bec2-668640b0b856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "88397519-4cdc-4ebc-ae44-3be8373ebbee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb9376c8-8b66-444b-a065-38a1d70eac74",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b77a582-1714-41d3-9798-26375e7d5130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a206d223-91d7-420d-bc00-b95da3901157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae852789-0938-4354-863e-4a46136aa41b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0511a47a-0826-40ba-bce7-e2b35821b56b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3734610-8d81-4601-9c70-18a6a66af84a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a7d773-8c2d-4034-a931-463448593896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2e27b3d-9fc7-497a-83de-033c1293014e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e38e1e4c-b927-4b26-ab94-420acd6c68df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "71b57322-91f6-42f8-9b57-61e96fdd409a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91194aaf-44b0-4d91-9038-eccfac2dd765",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb5e4f63-6638-40c5-8392-c66982fd8111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6e0c73b-93fb-49ef-8c7e-7ae16ef8d7e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "827037a7-ece7-426d-b1fd-258012da9eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "655754ae-be85-4079-b966-8778c7d9ad5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dddb23e-759a-41bf-ae41-8678c7d9cf9d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb6c45b-f808-4832-a881-733b6002dda3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6606c6b5-7ee7-429a-8818-2c95ef99aa74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa8cf681-cf29-4a62-9dc2-dfd08f579098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4ed6f02-8132-4592-babc-e12fd7fe5521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b779591d-a0f5-4cf4-b32f-64fa51bde883",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a30c02-3593-4d55-accf-e7869f9f03e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76d25b3a-95fc-4190-9571-2cf7aef0f49e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "565f13e3-4b46-4fc6-b95b-09b8565b366d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0e3bb5a-2afb-468b-8df1-a42d913497a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b6287fb-f022-4d04-8e07-a76475f00be2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a8d3cf-5b88-44a1-8f38-6684556520b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e56f35d3-b18e-4027-aea8-85d8bbc7b733"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e9521b9-153e-4894-b1d8-71c052ca4f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8b1da93-7ffa-4215-80e7-ecb2dd19a795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "680d5f96-aac1-4a27-be75-3e9e5d0f4a77",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c85d9aa8-609f-436b-a55d-b2f8b28aace2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0958df7-d11f-45ec-979e-f561ac0a694c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1b8638b-fcb4-4a34-9cbb-341ea569bf17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cada8a1-43f1-43aa-bccd-f6976d9fb2d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bba72734-c0a0-43a3-b0eb-e3a0782e864c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9afa4426-12ff-4ef7-bbd9-15773cfb04a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fca33e4-f32a-4f17-8d1e-edd67aa448f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e260018d-687b-4cd1-b9ce-546318a14e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "933ece1e-f019-4468-bb68-7470f63c683b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f127b853-4826-4c5e-9c16-6bbc8de983ef",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e4d0577-e7d1-46db-b349-5c46fa283386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f7b8b3a-1016-4a7a-980e-9a0dd04a24dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bfadba4-4e80-4a20-b6fe-b1f55968d2ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "382a0a81-7f62-4cce-9b8c-2d71ffdd7594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54edfdcf-a11e-475c-bcc8-e6cb47f5f825",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41d8107c-5310-4689-ac2c-eae00a8ed923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c33668d2-9dd1-45b9-8976-1aecccdbd8c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "806d7c24-95c6-4399-9cc1-98fbe9d7f2f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb837056-749c-4b7d-9b95-30ffb21f49b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cedb8970-ed1c-4e69-af5b-844b4020fe01",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2d7d29f-7695-4447-9b6a-932180ee8bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69a4e977-2045-4794-b9bc-941373b0eb5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93de37c1-7db4-4cb0-9ea2-29c39cc8b6ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba198ca1-384e-44a8-875f-c21cb40f73c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7921dfe-c68d-4599-834e-18aeeab75d60",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba5ab06-9e3a-41bc-8d21-d6a850d26052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3341280c-0ca3-4ac7-be18-4b7ca749855c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a11b7847-87ad-4a2d-ba39-bddd2d7dd424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20d27819-adaf-46b6-8575-f372cce66067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bccb72a2-0e44-4f7b-98c3-9f11bfbdf450",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb82ebb-4353-43b9-8ee8-cc7ffe419280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abef215f-271b-4278-8fa7-c9d237e856bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52bf0ced-ea49-4186-a7e3-c4b0a9cdc2f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "579f3647-6a62-4b6a-b04b-ecd898e6d12e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "042976fe-209f-4ea5-b7da-b08015a0b344",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55d522e-38ac-4723-a91b-fa812d349c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b01e51ca-264e-47bd-a140-232ec7553222"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b0cad13-8e5e-4cbb-8f4c-d78dfa39b22d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df34c7c8-2ec5-43a7-a122-219aca956f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ac4a0d-6b4a-40bc-ad0a-93699135f93b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e1e3507-4ecd-4dcc-aba3-6781f133619e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bae6773e-8a24-47a1-94d4-6c2487e5a590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c5bbe8a-2976-443e-b42c-aa567b9c8c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "433f1b2a-1088-42a9-a8dd-a489d3d421db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf1c8aa-5eb7-4053-bf6f-17544c137a29",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f62bcb-d7ee-402c-a1fa-51cf8c46bf7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f90132ce-f32a-4847-a159-8649d0b95025"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4831b3-4b02-479a-aea6-6ed9dabdac86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91177cb8-ea78-4933-b588-deaab0abbc85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda1434e-4952-416d-b4be-4f59d615f346",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "335d5d8d-d1d4-4bdd-9c2d-5d4ff6033543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "746ee51a-187d-481c-985f-daba689a29a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b30c82af-1784-495a-9671-31bc906d1042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cab720e-c44d-47c8-b5a2-5e047b373f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e75b90-412e-4d04-a5c1-c39aadb625d7",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ba4f43-abd7-436d-aced-b988481a0eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bde453e6-8921-4b27-a866-04a314405c4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "205ad263-b0d0-45a9-b5fa-4473a6ee072c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2333873a-ba2e-4840-9224-ad51502d1c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb19da2-28ce-4791-a7ec-310913e6030b",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6dabbd1-d7c5-434b-9777-c448013dcf3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf7c84bd-08b3-4efe-9dd7-d3da5d49d752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af330b58-c7a8-407c-8e8f-6d64af18d8c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2681c2c9-7f9a-4d4b-b839-8e525aa75e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f52ddebe-1a8f-4dae-82f5-99cdc1d9f595",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14e67ae9-a1a1-4732-93fa-2efe162aeecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ff9620e-5f6c-4a12-8ba3-4434b5fdceb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df4912a-4d30-404e-8f21-aeac8bac781a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c6650e7-5440-4a59-a77e-e626c9b5968b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f2b867a-b06b-476f-b5d5-bee0ad8f7e2b",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e5311e-33c6-44c5-abf0-442acd37661a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b526e201-c2d5-4d0a-b2d0-3e66bd3c0547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b10cdef-9883-4bce-90d4-05c72656ab54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3eebfb2-9f53-48e4-b16c-9cfa323283e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca085f25-a437-43c4-82d6-d8be97097c6a",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d9ed2b8-d6f1-4a49-b1bf-0ed375a80876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33420e5f-b0ca-4440-ae62-53e84c88f442"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4267e832-18bf-456d-8940-f40eee953d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "521876e6-7859-426c-8ef3-1e6d87f0c067"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ca79b1ff-97b9-4636-ab17-4315cd703936",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "324ae56f-5847-4c41-bb34-6ddabc076399",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "419bd4ec-3986-46db-af30-96d8f46b6e4a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c4da2ae7-88c9-41cf-9ee3-42f3a885212a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4581d0bb-9717-48cf-a95f-dd8f22543d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "630caffc-d6f5-4d86-ad8d-20477e0a8450"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3678fde8-d719-4f54-97a3-d0c61d54dbb8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e474ac9-ba7e-4728-91aa-6f468206f58f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f99fa8c4-f8ad-40a0-8368-a630a6dfafcf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "099380de-47d9-4e58-8735-3d8d0458f1e8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b710c45e-3f03-428f-87fd-e4ad25a9fce7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "695ffd97-19bc-4de4-b3a4-ebd0e1b69471"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "460d0d5b-99b9-4b8a-8fdf-9755a459bda8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8fb7ebf4-48fa-4ed0-86e9-09bdc7fcfc92"
            }
          }
        ]
      },
      {
        "id": "95ff0ef0-b2c7-4577-ac1e-68bb44394d8e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ef5c5181-2b84-4ea0-a64d-0cb575e6e009",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a487e9dd-e42c-4808-a283-01988f7f7d38",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "36188b2f-e6cd-4bc6-9780-c010a5efffee",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd9f651-2c52-4563-980b-1b1058b4ed37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5efa53c0-63e1-4804-8325-bfd7ecd378a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27f78520-a332-462b-94b9-2b62ae488f0f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8382a90d-5522-49bf-a414-441e8d720926",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce8fd3be-e661-4dec-99ba-832e6d387d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "195b42ed-ce35-4425-9b2d-b09a312b8f65",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "416cdd2a-9080-40f4-981f-99d1a738d2a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdd47dd9-a15b-46a6-ac6b-dce5804161ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d20191af-9581-446d-84d0-dbb21cd76d7b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c309876-0667-4019-b749-e75bf774ccb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a33eab9-4643-4fb2-aeff-d3d0847c4212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b92117-b191-4577-a840-ff5d22277255",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05bdbd09-4f50-4d27-a2d4-de3a66a70f15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39cd18fe-a649-4169-9cf7-4036e8b42deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72c072ff-44cb-49f0-81ba-8a2008bdcaba",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84825c9a-e327-4003-9b30-d82f9efb7a0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6129d5a0-da3c-4570-a0dc-de334d6cb747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c94a3436-2f67-4904-ad34-f615ea24d32e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97dd2c65-eb39-4e4a-888c-ed6314a7d045",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f8c2e6b-538d-4666-98c3-9c564daaedc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc91994-1750-41ee-ae67-a1317aaa9b57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38e68e18-6022-4a18-af80-dc339d23980f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf355cc-6793-4f31-84c6-ecc1c72fa762",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a246184-ecc3-4483-b638-129894067379",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19cff2c8-4619-4832-94bb-b9e7f029f027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26bf8f7e-a603-4a27-a4e0-548cf6ddaacc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06de8920-f2b7-4d65-8057-5540e61e2411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "640e79e3-5bbf-48cc-bd31-dfc4d7e8d14d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce423c8-d3fd-493d-adf7-f257f493eb63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b6ab16d-9192-439b-9733-d29ea4974474"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "207453ed-8c7a-4e33-baef-7caa7e1f92de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fa974ee-657f-4001-a301-a9528810613f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ccb23e-5288-48fe-b165-8db341303258",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "237a4c67-4ed6-4d29-b87b-d785c5f8e9ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "287e327e-7342-4e59-80c5-e42354c7aff6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06c4c26b-09c9-4573-ad6c-404abc30a1d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bb1ff5a-f2d2-428a-aa8c-adcbe6f0138d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64750b97-d96a-4968-ac64-38aa54f551ea",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33de109c-a336-47f6-b39e-5fef09970c65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbc7db76-67d7-4305-9b48-4b8ce728cc55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c124d9c8-b1e9-4b6f-ac4f-ae04aee4ad2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e0b852b-e9a0-4e7b-9269-00bfc1974476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4074a06-f056-45a2-b928-be1f43d77eb0",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f162ae7-514a-40e1-9ca5-e01736fe94bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41c20be5-a54c-469c-8b37-4c09049464a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e63d26c-997c-4271-8003-84274ed943e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad2aafce-73c9-48a5-a0a7-889d943b8672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee5f8aa-9d73-458d-a60b-7127b7c166e3",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e13b422f-cb2f-4021-9c38-df74e749f26e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1e109a7-5d2f-4935-ac35-934d253152a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb99242-8fe6-4ee3-845d-081314b8f449",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf306731-ecfb-4f81-8a2c-d87af0c85f78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d4ad9fd-85b5-4f5e-99fe-3178d2ad3665",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccf87332-8db4-412c-a650-695dd2c1f729",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce58b1c3-ca29-4f15-a3e4-e9e166b0031d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cdc6ccf-8c32-4589-af1e-73ef87f7f45b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "956b447d-5940-4ecd-a7a1-4e3f5c66dc6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "047256cf-8a86-4998-aebe-478e6d482723",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4ff9e6-a1a7-44f4-a2f4-3ff329547a29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e527ba8-ba6c-4ffa-ae62-d4227f36495a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c19eeff-7f39-481a-b704-1f899189f8c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f00ff974-e5a2-422d-82eb-897ab6c28620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f3c0f0e-9486-47f7-9c29-2a194ff731db",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac42c4b-53aa-4eb0-bbe4-42b7d355d997",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70c1f8ab-7407-4fe2-ad4f-e925088de676"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d3411a5-697d-4257-bda4-dd02e8fdf058",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "201742af-150e-4027-9e5c-1395f375f049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1717c41-ed7f-453d-8679-9c7a99d57e02",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02e2259c-89e9-4fca-bfb2-56d2ba4aab29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d19b256-3768-4c8a-87bb-84e1389f3518"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee17db97-e59d-4877-8c5c-221b50c8ca00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ab440b1-8df5-496f-807e-d77054d18d19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c9d0e9-7db1-4ec3-a853-854d26710a01",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee2fc1f-de95-478a-9d26-478299907d33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deb37d17-2a1b-4aab-9750-41b778822282"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5beaf9a-8410-4ebc-8f0c-1d8fafcdbe77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62622879-25db-407c-921c-f2f88414041e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39599089-796c-4d6d-82ad-147ecbae7805",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc784a0-90db-4ead-9292-b0984997a394",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7358b76c-d60c-4807-8ecd-b264432500e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d3d0b59-c82c-4ba5-ba9b-a4aba97ea346",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b55951d8-2ca3-46ac-a7de-d69f8c111f2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62943593-12e3-4437-98c7-8a32d1918ff1",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "646a5d5b-85fc-47bc-9743-2bc1d6e287ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfcaa915-049d-4bea-808a-dc9b001f0bb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be883efb-b084-49dd-bd22-e34f9f8b18e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1b60c91-687e-4f74-9140-0f9f6aee676c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea5beef7-9d64-43ac-a364-b74c4fb7a1d4",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e610182-d6a7-4b98-bd17-1bc1952c8f10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5eb1084-c0aa-4509-9bf4-4a225b81bc60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e8a7d2f-51a7-4ffc-91e3-c065bdc82828",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c1fab86-4074-46a3-9958-068764cf3f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd6f69b2-b978-43df-8893-a482f28c52bc",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2658bc5d-aaca-4d6e-99f3-411101360c0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c4b7254-6c17-42b9-999d-c6a9f9803fbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61218dd7-5edb-4481-8b8a-a732dc8d3f9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9707feb9-9844-444f-9577-2e585f580b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea79611d-b742-4cbf-b626-e2eaebd4b403",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23403ada-5faa-4c55-a65b-d0a0274d1645",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a93c7550-efb3-42e4-bf6a-7e2441becf04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca7dcba1-96f4-4e84-a7fc-68725d65e7a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d08b42a-ff2a-4f90-a476-1e7ad55b1ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f2b26e-7593-4e9e-98c6-ba563616bb9d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e622da-c623-4573-9bc6-43371adb8592",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2df81839-3e56-4be1-8afd-04156bf08bab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "067802c8-3261-4d66-b4dd-f778c5054a79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "433234d5-12c1-4d95-ba18-d8542f9fb7ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ca6044-cb7b-4ab8-894f-b2d8c56f288e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f32eda15-f21c-4dcc-bece-f32bb787a1f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5d6b96b-0a41-454b-8b2e-0e0c2973ac94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "178ec08a-efcc-45ec-b61b-7c798ab49425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2fe3047-304b-4985-8654-01a976581c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a1052f-564a-4829-9939-952f223f95f9",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a77e643-c2bf-499e-a701-692ada4c302f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efbfea18-b1f6-482c-bbd2-e0d52c17cea6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04a837f5-7562-457d-b0fc-554a433000f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baca10a1-d162-4219-b8dc-24dd25e748a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e72c23-fa30-4846-8909-3dd9d8eff9c4",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc64ab19-f0b0-450a-9a5f-caf32235c8b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de5e0446-37d5-4c16-a535-84a22979bda0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd5146e-dc84-4a5c-874c-41b94e9c7d88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee36520d-2dac-49de-8668-f1534308f2ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8067fe64-c150-4b7d-8e55-0a1b4ae76b58",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9655f5f-49de-45c3-a940-bad9e2a0e93c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3084032d-6507-43b0-bc82-5da9cd6ff6b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3159156-6200-4bed-bf9a-695d60fa8c6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c568903-93ac-49ce-8ebf-c223b51d7cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f614cd26-828b-4c65-bcbf-5b5fd80bf866",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb40ad6-50fd-41b9-8454-f26f578a8b5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fc8589e-0b71-4a1e-b821-a71d0db52d93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feccac6e-6c33-4479-a8c9-2dda1af82de6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2cd009b-857f-4cec-abe3-3fff7eb8809a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc74acb7-32a9-46bf-8219-03788ae9c33f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f94e917-b3c9-4305-8e92-f788651ff846",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "076d2b60-43c1-4498-9f68-0101df1dd8b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a6bc08-977e-40a6-86fc-878afc72d903",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b117af7-cab6-47cd-9970-ec5475770be1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04b5f2ac-4d58-4957-adfa-bfa993a49593",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a9fe76-b81c-4d19-b030-fbfc3bd93ce6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b88013a-e2aa-446a-9344-0e7a847eab5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c0600e-0554-44bf-a2dd-19e5fb31cb14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "738972f8-8889-48a7-a247-cfd5a684d457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a64b6d5-518f-402f-b842-f3ecb7e125c9",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb47c5e-0659-4a80-b328-bed52b76804b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72a340f4-c3de-4488-a606-f66f8eb7bb24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3cf7601-f8f4-440b-8a6f-6fbc9d46ca6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d622cd14-fbc2-424d-ba09-f5beb2bcd82e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cfec4bf-2c7a-4471-81a5-55419e00b674",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d65813-3f12-41ce-be5a-96997823cd11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f0090ea-1628-406a-8026-6fc25ad7bc13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "820be4ad-efcf-4c98-a18e-41ac00063d78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acab9135-c280-4780-8d79-55a59a086efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa321d08-b239-499b-8c07-7eef0ed62fe1",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8384dfef-0d72-4732-b5a1-83e9a389cb26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42779e95-0e1b-429a-b678-21efdf744d5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89a7e24a-903e-44c1-8fb6-ea85d858d364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d479612-15a1-4fa2-aecb-630da790210e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6c72e9c-c335-4a8c-b0b0-073e55452d74",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45e1af70-6e0d-4ad8-8b7a-0bd9cd56af13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ec206bf-2c89-474f-9d94-2bf3ef686d54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de7e3c9-cace-4fda-8fdb-04eb42692dfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ced63280-95a0-4593-afee-b55666da0e68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d5ccbd-dc67-49ac-9453-72b9bfae15be",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46afbe7b-db6c-4743-8e55-3ac37a5e5dd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03a65ae7-6d46-4d4b-b4c6-ce0f439cf019"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f44985a9-e92f-496b-8799-16453d3dd88a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f62902d-4f4c-4224-afd8-f537040dc783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4332acc-b39d-4927-b0b1-95a50f29f38f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbcd6aea-f8f1-4b7a-b968-c435519a9896",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a8e6deb-7659-49da-8acf-66a1195aa4b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d7dd60f-ded9-448a-98fe-c364210fbb36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6953c4b-c4d4-4f8d-b397-52fa6389c0bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3900c7a-7623-4aa7-b20c-131ff43a3f69",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8807cca1-6b76-4713-8509-2dae8a504d3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "425512a6-e507-4acc-928b-4c9b806a3519"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4629fc0c-fab5-4574-bfeb-c7028af78a17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e18f5a5d-07d0-4ee0-bfa5-5630f8a275f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe4d70ac-c890-45ff-96a9-60e4accc7cf7",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff875de-7099-493c-aef8-22139e728585",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99f03dc3-26d1-4cdf-aa54-4c832b300033"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa7a38f8-9783-49e6-a029-8400e0860ab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "040e71a8-d09b-4037-959f-e3a4afbd769e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f2aca4-ca00-4154-a7c4-d5c064d81e2e",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2233c1ee-3bb9-42be-ba8f-91aa0635a3f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc5f7b2d-723c-4b8d-8543-1aad85656642"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac35b654-63a3-490f-ab1c-74073eff596f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "599b35d1-d8ac-4f2a-9f97-13cfc67f4993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71688171-9c06-4109-bece-bfbc025d4bd9",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b1d4494-a794-49e8-9d26-c78a879e5dd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b28d22e3-df36-4725-a589-0b7bceb8dfcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e92f47d-3322-4bdb-8549-75af30ad7830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e062a3b-eb35-4d59-b209-b5b10eadd554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e2e138-2d7b-4443-8b77-1e5f1c0cba2e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa149611-3d22-41f2-ae9c-cb8730a83aca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13cd725e-598d-4e90-a714-f6f0779225d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a61e59df-1bac-4a63-9663-5273008df94c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e8bd343-0404-4c6a-b242-dd1f5f8358b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1247a73-ba96-4b13-8269-a4f7ce4cec76",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d94b34-c13a-421c-8180-54e62658fc73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af32f463-1cf0-4b40-b95a-fd71efcd3f55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea7b3269-f342-4ada-a9da-b99669588e1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b2858ca-f7fc-44be-b807-cdca1cfafb1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dfcf6a7-40df-4c55-a0cf-68a9e2b859f8",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0adc735a-b130-4916-884e-86bc0b8f7260",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdc7ccbe-287b-4f4f-b143-d01858671d74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bdf2425-9424-4ad6-a675-ecc9de0d17a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5285c37-c873-4a19-a658-ab2aebf0c4e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "290c26cf-8f85-4ee7-95d0-2329e9ddc489",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e66449eb-b8c0-4010-9d94-b99811cf2b43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2efb97c-3d4f-4ef7-8243-c36a27eef7e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1970ba67-2773-4544-af3a-4882f5d44b74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "540f2ee5-137d-4492-a0bf-e2d3b19f8b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab861b0a-7976-47fb-a1fb-8a0101c5eb46",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f3ab38-eaf4-4b13-b9da-d2416acb6c14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61cf470f-9776-4c7e-8c5c-85bd8d58c382"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fdc68c4-30eb-41c3-8eaf-c7a9950c25ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56ba5753-5401-4bfd-b9ec-c56670441854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11c26c56-96e9-4f69-a411-02941c6e15b3",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeddd8ec-260c-49e9-969b-8d9d5a1f6a24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbd20636-6822-45e7-974f-b2e62ddaa785"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d672a209-90db-4840-a138-af0b5718558f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9311a6c8-cef3-466e-b593-adb4fd8383b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "889e3f4c-5466-449c-b78b-1c2fe4cc351f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90ca7e5b-2082-444f-82ba-4e2e2a9de02a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ce6d1e4-831a-42bb-90a4-57b21e4bd994"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b882c66-a414-4401-9899-6a8e91e13b41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "436cca4b-7972-4ce3-970c-006ac7a729ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "927514b6-73b4-441e-9baf-c25f4f8b66f2",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "903bec86-9ab6-4ded-b21b-26c1c6884679",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c2272ab-ae94-4ed5-a19a-3523a2d0e482"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31d6e25f-a8de-47d1-a488-fdf94db99320",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8196c855-37e8-4e27-b47e-0980acd87334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab9da5e-70fb-421d-825f-efc336f86344",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "422fdc9a-d6d8-4e4b-a989-651709fe6f74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a92c3afb-dbe6-46e5-821f-1defa1eaec31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec25aa15-0769-4fa9-ad79-e33ff8c1190b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "268f25ec-fdaa-4d8d-b238-db43dfe5ac83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6233b41a-1fa9-4d2d-b7f6-f6bae6a23429",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dade7e7-f9a0-4dd8-92a3-7aef6b867593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8f562b9-30c7-4d29-b97c-4265ce7ac25c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca62702-4545-48e3-bf55-80ce74f198ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc6983c5-4cb2-4889-bd5b-1cc578182036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d50aa540-c265-49f5-8d68-d66d98c7c34c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9536094e-7e8b-416b-8eea-07cfb3d36b8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaf204f6-1c65-402d-909e-aef87b038a8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed16e2c1-809c-40fd-9684-db45822968b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc809baf-172d-41f1-9c01-0e92afbfa1a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59395f38-60a4-4ea6-8fb6-6af7bf9d09e7",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a81fe479-a296-42d9-a910-d374ffaa3cc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dcd201d-1eb9-48bc-98a9-b723968c7cfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4fba76c-f2f8-4503-b2b2-ac5b3fdccb1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d5194a1-1c04-43c6-ae49-71329f1d9837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e36d49f-6e83-4ac9-a468-b450cb1dc432",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27d211be-249a-462d-a5e0-386d36aeeac1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40c2eff2-4bbe-4e6d-8df3-2d0aa8050379"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a45a07-9c00-4704-a00a-423ce109ab5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d60fd26-1060-4013-aeed-9637bc29632c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e930f1-9d38-4e7d-b193-0ebe50c50f38",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd588fe-6965-4ef7-825c-2d3fef9a331b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbe9b261-476a-4575-b972-4e03ae05530a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01116ff-1349-4362-bbac-939153851e41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89e44777-bd60-4842-9109-4c3a147357aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db0e15f5-3969-4b45-b6e2-a848bd6d265a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcce3bad-0dd9-48bb-9363-7477e7399e6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efabf56a-2c82-42b1-92df-acc50f9b7a7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4cbb9f5-f099-4992-aa8e-efbd07e5cf85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2da9e3b5-75b3-4408-8ec9-7f0d06511440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f6c862-8feb-4201-b4a3-d3930b5ff0c8",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08aa501b-da70-41ec-bf79-fdc067e03c6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b9e1b6a-40a6-46bf-8b7d-d5e9534bca10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "909fd0df-2d8a-4ff9-9a8b-74e367c60d83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b03bdca-fe57-4d1b-846b-7e67ef5cf225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a8f6ed-9102-4aa9-8b0d-2adec2bf7d38",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1101d5e5-e54b-460a-af0d-38c0a7965f9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa29c850-7899-457e-b898-a44b83d12617"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "634d5e70-dd41-4d19-a761-566008a54009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51b97359-d852-4908-a17e-0a29a2e04bdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bba850a-4b62-4d55-9d50-8994e8a62884",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f7ea7e6-e675-47e9-b6df-eb911eb827a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0eb5c05-39d3-4f86-89ae-673c419cab7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbf8a857-dad9-4ab0-afb7-9d0dc4541a42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "995485c8-ec66-43a5-b418-aa17d32ae9a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde0f04f-b64c-4759-be15-08bf7a959be1",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97bf1c4d-1eec-49fa-9a7c-5e89865e3e82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75859b51-98bb-4c09-928d-c110a9f6548c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "644e673c-6b24-4175-a6b0-0a11b33908a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c32ac06-069d-4c0d-b6a2-f51de48cef08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40da31b2-404c-4293-9c36-f21b9c02a789",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0cb7111-2243-49ba-80e4-7bb7b7b2276b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b33a045d-e175-4ba1-b9f6-3bd4acd7ea38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a138cb81-1973-4fbc-bf90-eb142de4716c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cd12dd5-02f5-4938-aded-66f493485d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "351d8798-ef76-4167-838f-ea103857cf6c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4babdb3a-7690-4df0-94a8-4325f75c0d06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6197df81-feec-4cf5-a4f4-683ec212c9fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d91a974-70c6-477d-8c79-b49d75d8d665",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbfd19fd-3e85-4801-ab96-0d642c5efa9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6fb3623-2415-45c2-8411-a4572c637592",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72b0fc0-d195-4894-862f-57effd1c1c4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e848ef48-6deb-49f3-a634-b1f79f18a08b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10225fa6-376b-4fc0-bf62-4b7e04964e7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adc151dc-9f03-4e41-a5fc-a808c8b03b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a576469b-bade-47ac-b8f2-ef43c981dbfe",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b829861f-73d8-40cf-aaa6-36bade249383",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72d31c7e-a171-4f07-a284-26582feee8e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e378c796-9818-4d8d-9cf9-80aa5a65b513",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37e36b6d-7665-40d6-9a50-31824db6efb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2611a6b7-b99d-492e-9a9c-05ea62e3977f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b88cdd2c-125a-4538-86de-1438af3ac5c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0c27ef9-aa8f-48bb-b9f7-9fc79fdcb351"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7318be46-6652-44e7-be8f-1d975603d6ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ff5c2c5-d0a0-4aac-b198-2a7d03b72d22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8652a2a3-4f8f-4aa3-bc7c-d28022850a6f",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b915f59b-7fd6-4bd1-bcef-2eea3c9697e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad382441-1077-4e97-8e47-494450ef14df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "896ad850-29a8-4a9d-9614-953cdf9e870d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac3b6961-5236-45f1-a28e-8ce26775158f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ba04e2-0479-41fe-a09b-f92c4822d99d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c16c34bd-e0e5-44e7-b379-694b64c45330",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af4280d7-d15e-4905-9c37-c0a742273dce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09b79bab-637a-4724-8496-4d4cbe1cca61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b7e9645-02c8-4f8e-9c48-e03703360f61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "584f7887-7082-4e9e-b070-155ebef9eb32",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa811a21-f639-43bb-93c5-485181348f6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0aeb580-3af4-49cd-8480-9bf108d79ea8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b98b54cd-9bbf-4c2e-9ada-5cfe1db24873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0795d7f-e2ba-4e86-a7c1-334ca09c208e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f733bff3-00d1-4f30-8b7c-738a97dd98bf",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b91f6253-0290-4212-af61-f55cc45cac77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2a2ed18-c39f-4da1-a1f3-9cfc4b5ba020"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0365edb-2aba-4997-afea-8eb974ce14a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "811f7d09-b4ad-4604-b3f5-56253a238858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb18dfa9-4777-47b7-93b2-ced7b38da272",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab926820-7769-47eb-9244-ffeb6b6cb7c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3340ee9-56a9-4a09-afdb-971f742de294"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec852765-76f8-4551-b399-92faa6de4987",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6757050a-26d7-4161-a380-6e271c6bfce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b3e20ad-ffb5-44e3-bc76-7d7c9cddc010",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ec7fd7-fce7-4cb6-b65b-4fc7c0e007a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5178d902-d032-4cfa-afd8-31cbd620ef06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e037bce-7920-445e-92bd-b8770cecb6e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b11f3465-395c-40e7-af1e-37b9376c110f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe1dab08-ad24-4475-bdee-cca863a2315b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fbd7c68-e754-4ea6-8edd-732e3469d88e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab48f825-0241-493a-bc16-a3db65966f97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3809eb74-a575-4838-a001-ecfd66300b7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7939e995-d26c-47e0-91d2-d259e87be486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "494c8db1-0bfe-4cc0-98ee-9c8cced7a9d1",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "791b83a3-a210-42b2-8840-eec0a2a08f87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c3df703-4eb1-4016-85bc-172f86399f5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fef1f9b-1d95-42d2-8c76-0c4588251a02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e89673a7-21c3-418f-a0c1-2b3defd44942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72c89d68-be32-488e-b2f4-692fc359fb7b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b600ab4-b4f0-488d-82de-f7fc6e297e57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6596221c-b949-4b04-bfa0-c3183dae999c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc080a2-505e-4040-9199-ad332c30910e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca83205d-ba10-4abc-bd49-ed029ea9c9c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f597b505-bb0a-4f2e-ac82-1195e2d363c0",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b8f990-590a-49e8-9ca3-51558d95a1ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b06fdd1c-f76f-40b6-b85f-4312b0bd5feb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a4d3368-fb73-4c82-9393-779716877ab8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "730d0f39-b87b-4724-929d-28fa5d2acfa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0a0c2d8-7ce1-4750-8aee-d9f18524fef9",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b254be14-f45a-44e0-ab42-8d6c1e33c550",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfda620a-c98d-4a47-93f4-8c51e7ea0e02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b71855ad-27e7-4d13-a302-5c86b9b7a219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b115a1df-aa91-4e8e-9431-995f84548159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea139278-d6ce-4484-a673-abd8020b9312",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81047e76-d47f-46c7-a56b-15a610e04c01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcf9f6a5-7e0e-46d2-99af-08e9bf51ca28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed5df129-36d9-4737-a740-d5d6d09a2448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae09bcd2-eb85-432e-a3f1-14db01a5a961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "977f9037-7a43-41b8-a27b-cc500c02214f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfa1174c-8c84-44f8-80b9-469a2bd7b3d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20468edb-7e01-45b5-a56a-7e3190c853ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2cb56d9-a403-48f5-84ef-952ce9f44d6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbc90c01-177e-40f3-9f2f-9f18cb37eb18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edda64d6-1357-4c7b-b1c8-50d38f83ea1f",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8b6e408-b41b-41fb-b45d-3bc766d3a3cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "333e173b-b5a8-45fb-8e36-c52c20a4088a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76df8756-25d3-4680-846d-90c10b20993c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5470edf-d8dd-4115-a601-75b61d028f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6490757-ff63-4a4e-881b-b3bd3199e638",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c6287c6-951c-44ee-9a9c-1331023c00d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc3efce3-40ed-4e39-970f-05c41f53cab4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b252a1bc-18f3-499e-ada6-0fbf2462f610",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "322c6778-23db-448c-9f31-3735b2fed146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16358a79-f0d4-4bfd-ac7f-a4513fff067b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162014a2-e858-4099-b438-7c1cf8106c12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c63622d-b34e-4a49-b5b5-83a16465cbb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e81badb8-63c9-4253-aea3-638c1e75121b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7edbdaf-54e3-4bb9-86fd-15829ee641ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4987799-1897-4515-8f15-adff2af5ea0b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a4f44bf-7820-4bd2-b485-34e3eac325a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b29c899d-b411-4a01-8571-2274f1b69295"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a043a762-7c2f-4667-9931-6b77bab1561b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61461ace-147d-498b-8703-f16f36c53ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e56b2c72-315b-4c7f-8104-b36135d5aa42",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30551b87-3800-459c-a82e-a8bf19db77d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5e6df08-d056-4415-88fa-e46bdbb39c0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d45685-d1d4-4c1b-9b1f-ee06dde67d16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47ea7779-f1e1-4861-bf1b-99698bb74ce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b00a422-ea68-4b5a-b465-a46a2341cce4",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d5b4a0-ea4e-456d-8879-e5e03c6da4e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83217441-7f02-40a6-a6ac-3581e6ca0d59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9bc762b-0cd9-472d-84cb-c45d3d2b8395",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e266e88e-f8f3-484f-bc39-6096f9349b9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70a5093a-dbc1-4cdf-981c-4e71fa18b451",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f618894d-8e85-42c8-abf1-1aeaaceef542",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed047c67-279a-476e-9792-8dccc73986a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f0ea66-6bf0-4e9d-8740-07af22e90874",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "596ddc96-aabf-478e-bac1-5bca90af1d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc818885-e9eb-418f-a092-797ad01f1f8a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50ab4cb2-b511-4ea5-a758-d85d57120470",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48240f7e-79b3-4588-a2ce-9e0fb4b97fb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6074dcf7-5e3c-4f22-8a78-17372c423614",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d187e38-7d04-4155-92a4-42df487cafdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e5e02f-6b99-4926-aa63-ebc3bb5c5168",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8da8b81-764b-4cef-8516-397dbb07b78e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a606d448-b43d-45c0-ab27-46b7a30ad1fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e3538ac-8211-405b-a4cf-b9793c24ccad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef0280e4-788d-46b4-915f-41fa27745fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df5664c-bcf0-4e67-b5af-aa7f6d8ed3d2",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12e5bf7c-8d04-4de2-ad23-c460921ba353",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ec85fce-e7a1-4df7-821b-cc7584f36324"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f402f1f9-f42c-47dc-b521-cc39052f1a24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa80c6a6-9535-4e3d-8018-0cfc62862646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbba0f16-004d-4f22-8b05-292e19445e31",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd39aba4-116d-4fba-878f-77cb9fff74da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9739199b-d9b8-4d00-b9a8-71443823d813"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed4628ff-f94b-41fb-b408-04c65ebe0cfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d86daad2-043b-4601-885b-125c332d7c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f4f7d9-6eb7-47e9-91b8-e111dfca622c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a7cbc1-fca1-44fb-b2a1-e4fb8448c41d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "176212e6-44e7-473e-9456-3efc1175992b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f601303-7f43-40de-bd5f-16f45977f962",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56c30c04-2dfe-481b-98b0-26cf82617e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7845a95d-b9fe-4a45-a1f6-5d6681f03efd",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "542fda07-0cfe-4959-a8a2-cac2ebb6c80f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "070ca0e4-5580-42bb-a912-aee675e1935e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a7c478d-a8a7-481d-9489-6e77f17f5494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6c98635-ef03-484c-9d37-361599bbc302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9434203-39db-4507-8de6-e47b7170b2af",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c69a3c5-e5f3-4fbc-a8c6-7668f33cea5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7d67170-70db-4c24-85a4-52f0588a3922"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9613b8a2-d793-4fa1-b956-6ccb62aa58e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b84be9e4-325d-471b-9bb8-3c20f08a5b79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a61719-780a-4ea9-a1bd-0f2d9adca9d2",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bc89ab1-6657-4772-8927-1130cf3d2f62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af195730-9951-4757-87cf-0d9a90ccfa75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6188fd32-3317-4cd2-b9e8-547454b82283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28b8c07a-f00e-4d31-b5d1-c9b05f4dda0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f866bbdc-bfcc-4330-847c-7b1de6b8a4f8",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d34689ee-c124-4e71-b55e-018258aca9ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73edc744-0cb2-44d8-911b-26fd7b8dabd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0579df4-0c8c-4c37-89dc-d3fd7fba3575",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e49dc5d1-e9b2-4448-a2db-db4403285238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff1e1cd0-9f4f-403e-b407-e07002dc0ee1",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59ef184b-91a8-4896-a77a-466441addd30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6626d889-b570-4075-8f9a-611d4939b7a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e933a7a1-9bb7-43bc-9c91-705ca216bed5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeb3358f-3cf9-46a9-8280-1055dfd61c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16be8a62-86ac-4685-bffe-3a3418455bab",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e525d9f-fadd-47f1-9f40-b8b9963bee2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40449ca9-28b6-432b-be31-7a4a47f56662"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48890724-63b3-43d3-8a4a-f54a948ce9fd",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37f5f203-81a2-4012-9e9d-00ba6d691383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f05823aa-7bd5-4c29-8d23-f0b106f7c636",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b685421-3231-467b-a99d-a70baabea722",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abdcf656-62f3-4cb1-88b9-ea53063ae854"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0978635b-9499-466f-9266-1b18edf8a47b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "697ef545-4cd6-4c0d-a935-9644d14569e0"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fc750438-592b-4a35-8d09-4c31fc92640a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95201839-4ddf-4d7a-8fa9-241e5ccbb1dd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2b5d587-9787-4684-9373-31d2feabb64b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "49aaf5b6-158b-44f8-a3c9-97ea61dbd1d3"
                    }
                  }
                ]
              },
              {
                "id": "8b403d09-b0da-490c-9046-ae1149e69937",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "11346e1f-4e3d-4a1d-804b-58c82a4e5dc1",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "894657ae-7d8a-4743-82c0-ac260d2505a8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "10e4863c-b379-4701-9738-5c78cede8031"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63bfa24e-59f9-4df3-abcd-b14a94ac3c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f30145fb-d5e9-4bc3-a867-e7b59fe483da"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1d565a88-42c5-4d83-b142-6662b747d964",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4edbd319-9539-47c0-97d2-3115d3b3b0f8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "83a67eab-5d2f-4d9b-ae51-07274b07cee8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "40eb06d6-828b-4a08-b21f-179e932ec6ff"
                    }
                  }
                ]
              },
              {
                "id": "575d1046-333b-4a0b-90c4-7aacb0b649d7",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "8938053e-e594-4f0e-beb7-85bb63b8027e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff4410ae-f9ee-4727-a4ed-f91586c1fe57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "324902bc-1f34-44a5-bde1-2cdf42336042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c11d597-2a22-4706-aae1-84237e7ab1f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fe645d1-91d8-4468-8e44-7cf6e4a3dd5e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "961afd0a-eb02-4473-bdc6-4fdd76f1d96d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e0775ebe-4a5a-4e03-b3a9-8e450131c05b",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "af8e1807-8355-4dc1-8ce3-9fe9ad5be6b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "65455e81-3ca7-4957-af63-20402df6f681"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94cfa492-251d-414c-a62f-23c35249490b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a58b13f6-55a1-4393-85a9-b4eca5bf92b3"
                    }
                  }
                ]
              },
              {
                "id": "d0535c72-29c2-437c-b75c-5616c3b779b4",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f423e91c-26af-4ce2-b540-b62c8b10f271",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "82efe3fe-d028-4cf1-97f5-68dc438d4569"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b1cd43a4-60a4-4e5c-b048-747880cb47f5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a8672f08-66b6-4c59-a905-8bcd63a43e14"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e45bdff9-358f-4f0e-86d7-6674604e1a9c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "5ea29088-fe45-4f10-bf89-7eba67a037b0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c740ba38-ab34-412c-9918-a7882ac515cd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "55e3bb4d-df51-4420-b0e4-5e330af5e5f5"
            }
          }
        ]
      },
      {
        "id": "05b3180e-d7da-4dd1-8af4-aa4a4c389869",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "6feed6bf-7d03-465e-a1d2-6f13e6426085",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a4d04490-c88f-4452-8b48-b29876a4e832",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1f4dafb2-99de-4e1c-ae72-fa0be1c42944",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e79bd6-14ee-44be-8fcb-3b35c22c4024",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ccd84e5a-d60f-4172-8336-02723b51a316"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b98f18-879f-47fd-b741-37f953d1565c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "87abeecc-563c-4c9f-a6b4-6e8f58bdf179"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03c1a695-8c1a-474f-bfe9-7ffbab0c34fe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e1fd9642-f92e-49e5-a60d-a190c80d5b0b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7449aed0-4b30-4709-8351-a0847490b566",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce3f66f6-efc7-463c-b896-b2d4e528a1be"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "325caaf3-fa10-44a8-ac22-47f0fe313c57",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "dee3fd2c-545b-4f81-99f4-dc92f47138c6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5655a174-ca0b-4a76-8e77-41453df15eac",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8346b3a7-9f94-4ba5-8776-94dd6fb441ba"
            }
          }
        ]
      },
      {
        "id": "33f2284f-55ba-43a8-aac3-f58f06be2f13",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "54b1a212-3e48-4f31-bae6-dcaf2b8b5739",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ba85ea71-7804-4b6d-940a-e4bc078e0a42",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1aeb2192-d746-4352-8f86-9ac28631acf0",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e6a750a-4b42-4563-82ba-d9da218e54dd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c69f8b29-7bb6-4d54-ad6b-a1d1c91252b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e6edd3-8463-46ef-9081-fe6814d66bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6c397d5c-b522-41ff-9c2c-c494705f3d11"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9fb67e0b-dda8-47da-b614-73f597837df7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6872133e-a845-420c-9ed0-9557ac30d64c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bab512b8-07cc-4e48-871a-5610daa15f86",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1de3092-a766-40a1-9048-f65fc7a443b2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f14d59b1-3c53-4e94-bd52-07465bd6c492",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "623e3c0f-e2ef-462b-bcb6-9a3bef1e17b2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6901a80b-0a43-4824-b247-f5746b084948",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9b4c6eba-21d8-43e4-a13f-c8736e06f727"
            }
          }
        ]
      },
      {
        "id": "d0218ee9-3164-4f50-8873-7ee21ebfc5f4",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "173f54cd-cfb4-4f69-902e-036a03021ec6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5d147b14-6bed-4ba8-9a81-ee83085a4777",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6a9edce3-517f-428f-bcb5-16d21b6f1c27",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62864ec0-20cf-4bd5-ac1e-c7c771525fdd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "688c1f40-ebf7-4e8d-b76b-90d30eb921e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a4cd2ca-5d5c-498a-8b04-6426fb9a5d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f556aa63-96eb-48f3-947c-65953f97ccb0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f0d8d99a-0d72-4791-adfa-311fa7460807",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c7f674a-7c00-4315-8489-f1f80a4e9d9d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4dac6c6b-dadc-4bc1-8c09-2c6a30635df0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29f869e4-a257-445d-8d13-6805e339dc61"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "be477971-66ca-4ac8-a22e-96fc83040627",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "209d6fd5-ea66-4c4b-bbbb-30d2d8e8b146"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "36f22c1a-3396-4528-b960-624b89f5985f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0930ac0c-6448-43b4-b070-b354c5557031"
            }
          }
        ]
      },
      {
        "id": "cbfb41b1-0a4a-449f-ab23-31cd81d879d3",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "21d23447-fab7-4c63-ac5a-d52d3b331916",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7e8af83f-b1ac-4654-a84a-5e4384de97e7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "2567fb62-b782-4f93-b687-f369958e942e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "affe2b48-df82-4550-8bcc-af9d361c7d6f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "254d5eee-57d8-4b3f-b39a-fe36b7785be5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 672.186507936508,
      "responseMin": 6,
      "responseMax": 23788,
      "responseSd": 3575.576691322989,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1726793030663,
      "completed": 1726793208971
    },
    "executions": [
      {
        "id": "b417817b-01e3-475d-a3ba-bb143c13fe9d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e150f7fe-d1f0-464a-a72a-21daf2ad8296",
          "httpRequestId": "80bdcdda-db4d-45f7-bd28-048292ebd09b"
        },
        "item": {
          "id": "b417817b-01e3-475d-a3ba-bb143c13fe9d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ae232a02-e6a0-4d60-9a07-04430d7e53fe",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 0
        }
      },
      {
        "id": "69a6a1dc-434a-46a3-9854-301b203372a9",
        "cursor": {
          "ref": "54820eaf-0e97-4dda-9406-575f8b66bb16",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "7757a371-4656-48be-b0de-ab1d23177b47"
        },
        "item": {
          "id": "69a6a1dc-434a-46a3-9854-301b203372a9",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "201947fd-a346-4506-9eaf-7377280b55cb",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "f0f77c48-93b6-4e09-8552-59b2f04282c2",
        "cursor": {
          "ref": "ab3195b5-d663-4d15-b046-6e4535dd84d8",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "79204a9c-c77d-485b-9c73-fad66d0364cb"
        },
        "item": {
          "id": "f0f77c48-93b6-4e09-8552-59b2f04282c2",
          "name": "did_json"
        },
        "response": {
          "id": "4bd87f72-8a49-45b9-8fdf-adc3af8a4815",
          "status": "OK",
          "code": 200,
          "responseTime": 500,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a7f804-56ad-45d3-8f94-dce36130e243",
        "cursor": {
          "ref": "58824ce3-2459-4f34-baf6-dbfee083f92d",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b4789c95-be5c-477d-953c-c453dd802cf5"
        },
        "item": {
          "id": "a6a7f804-56ad-45d3-8f94-dce36130e243",
          "name": "did:invalid"
        },
        "response": {
          "id": "672081cb-89e2-4a2d-8b60-269bc2964c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2324,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a7f804-56ad-45d3-8f94-dce36130e243",
        "cursor": {
          "ref": "58824ce3-2459-4f34-baf6-dbfee083f92d",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b4789c95-be5c-477d-953c-c453dd802cf5"
        },
        "item": {
          "id": "a6a7f804-56ad-45d3-8f94-dce36130e243",
          "name": "did:invalid"
        },
        "response": {
          "id": "672081cb-89e2-4a2d-8b60-269bc2964c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2324,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c35f0db8-3204-4b64-86da-9d9ab0f4b6b5",
        "cursor": {
          "ref": "ea675624-1e30-4aa5-b33e-29ebafafd7fc",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "2548fa32-1223-4ff2-877d-1e31ec7d22c2"
        },
        "item": {
          "id": "c35f0db8-3204-4b64-86da-9d9ab0f4b6b5",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "2020bea2-267b-49ff-8abd-ee22008732e5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2680,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b73ed0-6ff7-47d2-85b9-4d0372a9de35",
        "cursor": {
          "ref": "2d10bffa-f6a6-4aaf-8f22-e3d63700ced1",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "beee2405-e977-4c43-bf31-31fe318ea916"
        },
        "item": {
          "id": "99b73ed0-6ff7-47d2-85b9-4d0372a9de35",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "80ad6610-51d8-470b-aba2-06ca66102fda",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2444,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4464f512-a3ea-446b-8bd8-a8982167a0f9",
        "cursor": {
          "ref": "30ec0c23-f57a-425f-acaf-034d1cca4ea2",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "3a3a223f-1e11-422d-807c-f2ef4ae34d0f"
        },
        "item": {
          "id": "4464f512-a3ea-446b-8bd8-a8982167a0f9",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c5c33b58-5d38-4aa8-95ab-5a9d120cc0bd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 110,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8748f2d6-c68a-46ea-97c6-646f20920842",
        "cursor": {
          "ref": "343a322a-aba0-451c-b23a-8e2c74ef4849",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "802b7e93-9b72-4616-9547-21680d1f03ca"
        },
        "item": {
          "id": "8748f2d6-c68a-46ea-97c6-646f20920842",
          "name": "identifiers"
        },
        "response": {
          "id": "bd8fd668-9ad3-410f-970c-501088c86ec1",
          "status": "OK",
          "code": 200,
          "responseTime": 2742,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97af8674-c9ca-481b-95b5-5a8dfc396ad8",
        "cursor": {
          "ref": "acb71912-ee01-4872-9f2a-8ba02b9a0b5e",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ff992a96-cd79-4e44-abb4-5d41ef3713cf"
        },
        "item": {
          "id": "97af8674-c9ca-481b-95b5-5a8dfc396ad8",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "2e513c15-9780-44e9-b494-a025b95f8c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee4434de-e6d0-4171-b50f-a72e23c03218",
        "cursor": {
          "ref": "e9f19e0c-7159-46f8-b2f5-c06818c15714",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c1021537-7f53-4baa-9c9e-ae7853023277"
        },
        "item": {
          "id": "ee4434de-e6d0-4171-b50f-a72e23c03218",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c3d5e0c7-4afc-4740-aa77-6c4b12cb39cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9731666e-c2e8-45ed-8a16-5f2fd52efd4e",
        "cursor": {
          "ref": "140f0b08-9439-42c2-b2b9-fcbbb0b53f15",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "72e791ed-d5d6-45f6-bd61-505f1307581b"
        },
        "item": {
          "id": "9731666e-c2e8-45ed-8a16-5f2fd52efd4e",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "6cfcf810-aa86-41e2-a7c0-faa58226d1ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda1c631-8755-4a80-8d97-554c17cb06bf",
        "cursor": {
          "ref": "3aec04bd-b396-4b2f-8754-ecbd8591866f",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ad4345f0-7e79-40e1-9baf-5c945eb02eaf"
        },
        "item": {
          "id": "bda1c631-8755-4a80-8d97-554c17cb06bf",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "ddde259b-98c3-4660-852b-676c144b51bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da0da38-5894-4e77-b92b-32829e527157",
        "cursor": {
          "ref": "bba7772d-a240-4d43-a0a6-f06a7c17f8fb",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "0afd525a-d860-490e-8c81-9f2503bfe28b"
        },
        "item": {
          "id": "8da0da38-5894-4e77-b92b-32829e527157",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5b09cff5-aea8-42a2-9e43-9aaa186e61d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c328ac-39e8-4e98-8ffe-b3425cda391b",
        "cursor": {
          "ref": "56a7f764-ea35-4340-bee0-946b3a7a3492",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5c937075-4256-4257-bd50-8ca926da3111"
        },
        "item": {
          "id": "c2c328ac-39e8-4e98-8ffe-b3425cda391b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "101f4e9d-c72f-4a7c-a957-b7afa0a226d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa8dd236-f9a7-4eb3-bd73-013650e4bdf7",
        "cursor": {
          "ref": "1ef2931d-0cee-409d-85cb-21d3a7c8041f",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "7e607deb-fdf2-440e-98de-e473cb1b2912"
        },
        "item": {
          "id": "fa8dd236-f9a7-4eb3-bd73-013650e4bdf7",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b7635e91-dee3-4715-bad8-eb89a3a8683b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab895eb-4c1e-45b7-9fb0-c747cec08fab",
        "cursor": {
          "ref": "823d5132-21da-4eac-8c9f-644d7fa6c848",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "8e793857-bb5a-42a5-9d78-e1ac657c5502"
        },
        "item": {
          "id": "7ab895eb-4c1e-45b7-9fb0-c747cec08fab",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "2e142dfe-04a6-477c-aba7-4545b13f8b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c263f8e2-b357-4221-bd15-96dbbd4cfff7",
        "cursor": {
          "ref": "dcedf8fd-23df-4979-b31d-6d177df6842f",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e2936ed6-0ded-4413-9f60-5279a14b66f2"
        },
        "item": {
          "id": "c263f8e2-b357-4221-bd15-96dbbd4cfff7",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f52b4345-5f9a-4604-b633-048e1d4a62e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd2b8528-7cdc-4684-a097-9dbf5230bc7a",
        "cursor": {
          "ref": "b38e8aa0-b065-4720-ac52-42aa9af9e299",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ec2d5384-0306-4c5d-aadc-b67b5bab310d"
        },
        "item": {
          "id": "fd2b8528-7cdc-4684-a097-9dbf5230bc7a",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "87899f31-aa31-46fb-8205-06888d0f5b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce130b7c-92af-4947-9018-6637c1de9797",
        "cursor": {
          "ref": "b5234f38-7f20-42f9-ad4f-078a02e1e191",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "faa12538-c877-444c-b2a5-61250092f994"
        },
        "item": {
          "id": "ce130b7c-92af-4947-9018-6637c1de9797",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "72ffc931-8438-4c84-bfd9-38e5e112c2fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bae896f-37ab-4dc4-9692-fcb0f6377c05",
        "cursor": {
          "ref": "afbdfca1-6c2c-4053-84c5-f0da02ad5b37",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "524b4614-9623-4969-8cb8-c1307e67a388"
        },
        "item": {
          "id": "2bae896f-37ab-4dc4-9692-fcb0f6377c05",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "3973ab57-0c4b-4198-a7cf-10e0b65f7cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf84c082-99be-4369-bfba-6632c290bde1",
        "cursor": {
          "ref": "8133f892-6910-46db-9ca8-4d0c85e0d4c2",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "2cb3b38c-78b0-4938-9ce0-80be796a7a0a"
        },
        "item": {
          "id": "cf84c082-99be-4369-bfba-6632c290bde1",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "156a1bc7-760b-4627-9906-8d0beeec7dd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a84999f1-7006-494b-915b-e679ac4ea33b",
        "cursor": {
          "ref": "2cb9c82d-dd4b-4783-af25-1793a30b2183",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "350a8e07-f734-4a45-b194-9ae9c7a63d2a"
        },
        "item": {
          "id": "a84999f1-7006-494b-915b-e679ac4ea33b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "2aac568b-841d-492c-9073-dcf4989f784c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a3642ee-cd5c-4671-8600-42b15b92cc22",
        "cursor": {
          "ref": "c64dfdc9-773f-4d8b-a5f8-0294baf770a2",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "eac11a5d-46c6-4263-afca-1001be8e98b6"
        },
        "item": {
          "id": "2a3642ee-cd5c-4671-8600-42b15b92cc22",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "62105a9d-b2c7-46f2-bdbc-5a31643d4bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb04abee-a2fd-4f32-a012-aeb8f64ba579",
        "cursor": {
          "ref": "c3e5caa1-1614-4893-9d8e-24538bde6ec9",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "1b9a90b3-7a45-4d6b-91d6-28eeb6d72848"
        },
        "item": {
          "id": "cb04abee-a2fd-4f32-a012-aeb8f64ba579",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "780d6651-179c-4124-82a2-9283714578ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e0a8377-a480-4fd2-8dff-f98deb8f2534",
        "cursor": {
          "ref": "65ec6df9-a705-4def-b4d0-3dd303894266",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "4eb6f781-0454-4630-a085-f41bb08fbe96"
        },
        "item": {
          "id": "7e0a8377-a480-4fd2-8dff-f98deb8f2534",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "0ef219ba-3512-4df7-9924-42bb928b49eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f6e0eb-94aa-4f80-9e46-7da2c6caa054",
        "cursor": {
          "ref": "970e786d-c191-429d-a2ca-c86d707906c6",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6d798217-bac5-48d6-9742-7060db07eda6"
        },
        "item": {
          "id": "07f6e0eb-94aa-4f80-9e46-7da2c6caa054",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "82bb9c44-e8d7-4d91-a601-37982ff22fb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab93c702-9e1b-4c6d-b8e5-26412ae9d6b9",
        "cursor": {
          "ref": "25c17757-1cba-41f1-a3b6-652da7360930",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "bfdc3737-0328-419e-8820-99945afa4418"
        },
        "item": {
          "id": "ab93c702-9e1b-4c6d-b8e5-26412ae9d6b9",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "52247145-2a9a-45d0-af8b-b1e103efe03f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e81657de-fb4c-4258-8f1d-a5b757c0611b",
        "cursor": {
          "ref": "0b278af6-5bb3-4ce4-9d70-f9c68372f063",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c4bef19b-ab73-4f08-a607-63de2792bbbc"
        },
        "item": {
          "id": "e81657de-fb4c-4258-8f1d-a5b757c0611b",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "adc96164-0793-41e2-a0d7-baeeb5ebfc9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ba84b8-7703-499b-b985-c2217d3bf348",
        "cursor": {
          "ref": "49dc4ca8-5474-467a-845e-c59930eef666",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a0cb4e51-0a38-4c8b-83db-8251835a0e66"
        },
        "item": {
          "id": "09ba84b8-7703-499b-b985-c2217d3bf348",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "4699e760-f5c3-4a9d-8cab-85fc0a3dde2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4889a3f-3cd4-4905-b874-071504fd1434",
        "cursor": {
          "ref": "198a7386-c58a-46f7-b387-6c91021a7e21",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "064745bc-dd56-4de5-b9cf-4ea8393a7404"
        },
        "item": {
          "id": "b4889a3f-3cd4-4905-b874-071504fd1434",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "735d229f-9edc-4730-a19e-8f10a4a1b847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b88575-b5a4-4166-8574-3e131e3caaf4",
        "cursor": {
          "ref": "0c0a2c5c-e3f8-40ae-83d2-1ef7db111a83",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "9b77fc5a-77e9-4f24-8110-4d0c4c363b34"
        },
        "item": {
          "id": "d1b88575-b5a4-4166-8574-3e131e3caaf4",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "31047c91-5c52-4522-8970-a0c79b26d98f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "804292dd-9d13-4e26-ae43-2da05d0fa57a",
        "cursor": {
          "ref": "77d0691a-4530-499f-baf8-ce75289fa4f2",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e07844a0-831d-4432-947f-9852ad3c909b"
        },
        "item": {
          "id": "804292dd-9d13-4e26-ae43-2da05d0fa57a",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "480b4e27-7902-4628-9747-190fd9fdf492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e4ec52-c00f-4181-a930-e450e88de4d4",
        "cursor": {
          "ref": "bc610b73-5dae-40fc-b020-c33889e0ac88",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "6ae40f26-6e80-4491-8166-313d9fc126da"
        },
        "item": {
          "id": "d9e4ec52-c00f-4181-a930-e450e88de4d4",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "0ed99ffc-8af2-4de8-b8ae-0500f7aad921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e32c7aa8-21da-4dec-83d0-b77f717e030e",
        "cursor": {
          "ref": "b06e1b97-6f08-4422-8734-634a0beb8c9d",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4c4412f4-e275-4d0e-ad17-25633e511ab7"
        },
        "item": {
          "id": "e32c7aa8-21da-4dec-83d0-b77f717e030e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "38a6406c-8b7a-4aa6-92ea-08b25fe131d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c48dd33c-046f-4972-bcf0-e7c2a83db4e8",
        "cursor": {
          "ref": "2175bd49-d356-4333-8443-772fa95e231f",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "431b33d0-af50-49b6-a89f-7880e49bc92e"
        },
        "item": {
          "id": "c48dd33c-046f-4972-bcf0-e7c2a83db4e8",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "1a480494-ec4b-4cbd-aa20-4538e09b3fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "909bcf23-9f42-4afb-80d2-0f2e8a0d2355",
        "cursor": {
          "ref": "69012beb-5b86-4850-acdd-3bfeedca282a",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "04e5cbaa-7b84-4b7a-b629-b3d4951a045f"
        },
        "item": {
          "id": "909bcf23-9f42-4afb-80d2-0f2e8a0d2355",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "0780cfad-793e-419e-beef-26c3384de43d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a95d3b-1cb0-4ab1-8b23-84e578fc1cb2",
        "cursor": {
          "ref": "0e4de8ab-3b72-4b53-971c-912ef186e03d",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1c68d5be-4294-4b0c-a3ab-981c2e58d0aa"
        },
        "item": {
          "id": "f9a95d3b-1cb0-4ab1-8b23-84e578fc1cb2",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "1687fc34-b10a-450b-a976-15db6264e0bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea9f207-ae85-474d-8952-6f659d24ad57",
        "cursor": {
          "ref": "64780d7c-8178-44da-a3f9-bb99c47bf449",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b1920d92-62b3-46f8-ae6d-cef0f388c900"
        },
        "item": {
          "id": "7ea9f207-ae85-474d-8952-6f659d24ad57",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "aa3e55a4-2d65-4080-a9c6-b5e513e17b80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67221207-e105-47e6-beae-da41a355df11",
        "cursor": {
          "ref": "65b2cd29-544b-4cdd-9634-eb03f15ab90f",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "344c2608-e51d-4aeb-b39b-49aa7b5507c0"
        },
        "item": {
          "id": "67221207-e105-47e6-beae-da41a355df11",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "0280e09b-9abd-439a-8a48-f04e7091241a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f7fdb6d-f177-4dc6-94a9-0a92f436b6ae",
        "cursor": {
          "ref": "decfd8ec-e8d6-4bc2-92e0-464d2aeda29f",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "2fed7bac-77ac-4932-ace5-59587d684674"
        },
        "item": {
          "id": "9f7fdb6d-f177-4dc6-94a9-0a92f436b6ae",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "0f444034-43b8-4bee-a898-560f19379850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77a9c4c8-59a5-49f1-b2af-c2bdcd577f4b",
        "cursor": {
          "ref": "d9d4e3fb-3e9e-4faa-b490-125a065a96bc",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "3bc1f7a1-6341-43cb-b3b4-46f2f07bdc8d"
        },
        "item": {
          "id": "77a9c4c8-59a5-49f1-b2af-c2bdcd577f4b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "1cf03e79-5fe2-4d76-86e7-dc186593e27b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "226e86c7-fae8-41d2-911d-cceb5638f61d",
        "cursor": {
          "ref": "75067a88-9158-4f0b-a246-230e666413f1",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e0777c85-e1c9-42e7-a155-2e0343ff218c"
        },
        "item": {
          "id": "226e86c7-fae8-41d2-911d-cceb5638f61d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "ba25d0b2-6ee6-4ed1-a4e1-3385e51695bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b991f4a9-8dd9-44cf-8acd-420e39fa553d",
        "cursor": {
          "ref": "e6a6e637-372b-4a23-a85b-68a172e2376e",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "2651b2b1-189c-4ae8-9768-633f695ac3ae"
        },
        "item": {
          "id": "b991f4a9-8dd9-44cf-8acd-420e39fa553d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "1cc01158-61c3-4b1e-8e55-786415dc22c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ffda8c-ed8a-44e4-b885-d0a094e508f1",
        "cursor": {
          "ref": "031d5e56-e047-49db-9463-6cbf0e7630e7",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "1caaa3c4-a429-432e-b535-279777679f37"
        },
        "item": {
          "id": "64ffda8c-ed8a-44e4-b885-d0a094e508f1",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "4f653328-e67a-4849-86a6-b7c2a21bf05a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 35,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204fb236-0215-4cd3-8817-ebd647e9af51",
        "cursor": {
          "ref": "f23abcfa-73df-4311-8b3d-c572f3d88131",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "43107386-9499-442a-91c4-da258dfff60e"
        },
        "item": {
          "id": "204fb236-0215-4cd3-8817-ebd647e9af51",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "3c9f19e7-fbd4-431b-a096-08b5a0271b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba95ee4-566f-4236-93a9-2139225b0963",
        "cursor": {
          "ref": "be261920-b22e-4363-8269-ec30c9e34d75",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "70918f17-6985-4812-8eb7-afa2e29b56f4"
        },
        "item": {
          "id": "3ba95ee4-566f-4236-93a9-2139225b0963",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "77973931-c7b9-41cd-bf6a-d9e9340c07ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b444e0c-04ca-46b1-894e-174fc557d361",
        "cursor": {
          "ref": "fdf8755c-0f92-44fd-ba93-a5e43c94a210",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "d96fa42e-07a5-42f2-b39a-aac60e14bf26"
        },
        "item": {
          "id": "4b444e0c-04ca-46b1-894e-174fc557d361",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "76668c26-6682-4b8a-aa50-a9cb2a952638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85cc9165-f89c-425b-8719-e03de54cab2d",
        "cursor": {
          "ref": "ce7c57f4-355f-44ae-bd7e-93543314bdcf",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c745e206-301a-48f6-a217-2b617e38e01f"
        },
        "item": {
          "id": "85cc9165-f89c-425b-8719-e03de54cab2d",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d5f93c1d-7385-44b5-96cc-9ffb3640e212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f4ac74f-61f1-4253-89c7-fd740ff37ee2",
        "cursor": {
          "ref": "1b950e72-2dc0-4873-ad13-50e5bb0e969e",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "8d28639f-ab9b-467c-81cc-4cc15c78f96e"
        },
        "item": {
          "id": "9f4ac74f-61f1-4253-89c7-fd740ff37ee2",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "2d7e12ed-fdf6-4855-b4f9-d4a4b23ca2d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db34b41a-d4d9-40bb-8f8a-5eebfb79545f",
        "cursor": {
          "ref": "8010a9da-83b5-4477-888c-4685c9ef74d0",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "8f447f9b-c564-4841-9704-e0c558f4bed4"
        },
        "item": {
          "id": "db34b41a-d4d9-40bb-8f8a-5eebfb79545f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b25d056e-b1e6-4d91-b4f8-2803bbcf5a1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "751c5bef-719c-4691-b142-10be7855349a",
        "cursor": {
          "ref": "8494804e-2164-4262-af92-8a4727ba3790",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "303c1f40-8333-42d3-b745-7b721069649a"
        },
        "item": {
          "id": "751c5bef-719c-4691-b142-10be7855349a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "7428c8fc-006c-401b-bc6d-7ade63a2f068",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 34,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c7f95e7-5e44-4edc-8985-4ca2e6202405",
        "cursor": {
          "ref": "1dd58889-0460-4f94-8954-be64de8e08e2",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e2dda4c0-b918-49c4-b3e8-86e7fce50f65"
        },
        "item": {
          "id": "3c7f95e7-5e44-4edc-8985-4ca2e6202405",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f4989493-bb9d-48be-b2f0-ccecef7c4d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "123c1bcd-5449-45bc-a843-d4a3d8ec8194",
        "cursor": {
          "ref": "7022814c-a1c7-4216-a9f3-83ccafe44757",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "248684ba-57ce-4920-bafb-a10e7c06e2e2"
        },
        "item": {
          "id": "123c1bcd-5449-45bc-a843-d4a3d8ec8194",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "6f2420c7-cfeb-4225-a8e2-cf765216c9e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bde3400-ec85-4293-9d53-f4c261de4297",
        "cursor": {
          "ref": "6703f731-bea8-4d12-8eb8-0b0442a63281",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "528ea5e2-4881-4fdc-9e64-4a37890092c5"
        },
        "item": {
          "id": "9bde3400-ec85-4293-9d53-f4c261de4297",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a53ad5db-ee38-4d43-ba77-4d41b7f7502a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b6141c-cbb0-4466-8a9f-08899e9be408",
        "cursor": {
          "ref": "f3745954-8acc-4eb2-b0ed-01e9c6bf39c0",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "7b10e6e0-2096-415a-8168-0fd036bf655a"
        },
        "item": {
          "id": "79b6141c-cbb0-4466-8a9f-08899e9be408",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "87531215-06bc-4bca-8de9-fa37da09f733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e7083eb-c84b-4b24-96f8-2d70ca35969b",
        "cursor": {
          "ref": "2ced6570-07a5-443b-a358-4d2029d85a43",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "1438b440-aec3-4f18-b6fd-d905da4278b7"
        },
        "item": {
          "id": "3e7083eb-c84b-4b24-96f8-2d70ca35969b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "30758088-d89b-42da-817f-8e3dad5bec75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cabbf80-5f1b-4a93-9d50-3cc32d3854a1",
        "cursor": {
          "ref": "70fd619e-870e-41e9-8345-9d462179d37e",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "1e1556f1-2274-45a6-a4c6-de3488c33344"
        },
        "item": {
          "id": "8cabbf80-5f1b-4a93-9d50-3cc32d3854a1",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "fe1b0dfe-81fb-4cdb-bff3-8e9981ac90d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce06e9b5-82e7-425b-84a4-134e9f52d530",
        "cursor": {
          "ref": "320ca0c5-9161-4061-8c1e-933f10b6d4fd",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c89a6da1-5819-4ced-b76c-c831598c67c1"
        },
        "item": {
          "id": "ce06e9b5-82e7-425b-84a4-134e9f52d530",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "be67bd4d-17cf-49a1-8332-045cd9d10242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe0dbc11-cfb7-4b91-bf75-fe149aa5b44f",
        "cursor": {
          "ref": "bbad5148-81f5-4125-9a74-1c007e17de5b",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "73df55e7-20ff-4578-812f-14ece380256f"
        },
        "item": {
          "id": "fe0dbc11-cfb7-4b91-bf75-fe149aa5b44f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "1a6cdde3-0f6f-4e17-ba27-3fa40edbf06c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3dc06f8-aa67-40a4-982a-c647eb37bdbd",
        "cursor": {
          "ref": "9eec6a46-f00c-4f72-837c-f7051db1b171",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "6fe3a0b9-14ad-4e30-ab73-84a039c6b1a9"
        },
        "item": {
          "id": "a3dc06f8-aa67-40a4-982a-c647eb37bdbd",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "2200b34f-56b3-4b91-84db-50a86b855386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "730e09c9-ffff-4504-a8aa-7bde636ac837",
        "cursor": {
          "ref": "52538096-c8f6-416e-905b-c948c2067178",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e76509b0-99c6-4b71-9b9a-28d25bfbd4ba"
        },
        "item": {
          "id": "730e09c9-ffff-4504-a8aa-7bde636ac837",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "115950db-6aa8-4f99-8fc3-0124dbd5e78e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c867a5-86bb-4483-a748-a4cae19c76cc",
        "cursor": {
          "ref": "665c0013-06bd-4e8b-a687-25f67d77e912",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "96e8d376-07e3-4b7a-b14c-552944a52220"
        },
        "item": {
          "id": "c3c867a5-86bb-4483-a748-a4cae19c76cc",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e8b1026a-eb52-4c3b-afe3-fe29ebffe1f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5348e1c-aba5-4e2b-8110-74c5b4c090ce",
        "cursor": {
          "ref": "963b3260-9779-4b4b-bd06-5279ec752e17",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "749e964b-c81c-4c8a-9493-7854e8269402"
        },
        "item": {
          "id": "d5348e1c-aba5-4e2b-8110-74c5b4c090ce",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e9775f14-4b9c-44c7-bcc2-aa768eae9bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0df02a2-c3ad-4cc6-97ba-fdf2e593bb9d",
        "cursor": {
          "ref": "454f732d-de67-4fa8-ac32-4d43d6fb7ab2",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "154fb3fc-3619-4931-8ff0-facc771a2ec5"
        },
        "item": {
          "id": "a0df02a2-c3ad-4cc6-97ba-fdf2e593bb9d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "d00bc134-80f8-4753-aebe-4793362156b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "557d241a-5854-429c-a5ad-8b2ba98880c4",
        "cursor": {
          "ref": "854aab25-923d-4b51-a95c-9f1ce9080f09",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d6a05219-cee9-4821-8c9a-75d602915c37"
        },
        "item": {
          "id": "557d241a-5854-429c-a5ad-8b2ba98880c4",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a3e8d1fb-d42a-4476-b01d-02d45376addb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e2ae48-96c6-473a-98a5-d6631b64853f",
        "cursor": {
          "ref": "e3c0adfc-cc04-4301-bbe9-c0e53ee9d503",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7ca06373-c8ce-42f2-b8d1-2c6e3e332f55"
        },
        "item": {
          "id": "57e2ae48-96c6-473a-98a5-d6631b64853f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "bbdd30d8-6951-4309-96a5-be73f6212ef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a35d410-de6b-4af5-9ab9-7f60a38894ca",
        "cursor": {
          "ref": "8c118d31-73c0-43da-8440-5c98df6174de",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "6638a6f2-8cd8-40b8-bfd4-7e53e1f51b15"
        },
        "item": {
          "id": "7a35d410-de6b-4af5-9ab9-7f60a38894ca",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "634ea74a-2c01-4939-a6d2-b823b9357109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8861ffd-4e03-4eeb-b4cf-38791379f537",
        "cursor": {
          "ref": "3bc3e5c3-026d-4b6f-b7b0-486bef626010",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "aefc81a9-3b80-4908-bc9c-e72f50ea9b0b"
        },
        "item": {
          "id": "f8861ffd-4e03-4eeb-b4cf-38791379f537",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c4c1ffa5-0767-44f4-914c-3c5b31dc8604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebde6686-f216-43ea-bfa1-da9b469be3cc",
        "cursor": {
          "ref": "2369f47b-0d3f-44c5-9700-77a18266f2b5",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "bb86459d-b318-4bd1-8a94-a6d2f590bd49"
        },
        "item": {
          "id": "ebde6686-f216-43ea-bfa1-da9b469be3cc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "55666691-a2a5-4450-aa77-4bf4b4ed068e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b65e750-09ae-471a-a2a3-65e3dcbfa4b3",
        "cursor": {
          "ref": "85327bf2-cd60-4110-896e-e62ac20f11d2",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c4123b3d-4818-49d5-9473-933cff4a48ff"
        },
        "item": {
          "id": "9b65e750-09ae-471a-a2a3-65e3dcbfa4b3",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "132ac4ba-29a7-4035-84be-eabf7589524c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a854e5d-39ec-413a-90b4-0cceb136bfbc",
        "cursor": {
          "ref": "58084433-55e4-4be5-ae27-c4e8b7501088",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "006cace7-ddfe-4e64-85d3-92bae4e28439"
        },
        "item": {
          "id": "7a854e5d-39ec-413a-90b4-0cceb136bfbc",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "ebc2f96f-6da6-4751-b1b4-2adcb6d7fc15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c0c0b29-4c7e-4ee2-af90-256735d3f623",
        "cursor": {
          "ref": "5c62c895-53ef-4ca2-a390-5879429a60db",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "53e55cd1-263f-4478-80ac-506ddea7e818"
        },
        "item": {
          "id": "0c0c0b29-4c7e-4ee2-af90-256735d3f623",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "8d009bd4-136a-4b9c-bbda-5b89112e7024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "207c482d-f10c-4734-9b92-90486a78a3ac",
        "cursor": {
          "ref": "8760a8f0-ffe4-4c48-87eb-aac798f99e7e",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "5aad0487-e309-45e4-865e-c160aa207f68"
        },
        "item": {
          "id": "207c482d-f10c-4734-9b92-90486a78a3ac",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "55c443af-717a-4f8c-b734-3fe93b03ca8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da44c15-3dc9-4612-9520-59ca3095761e",
        "cursor": {
          "ref": "1046d8d9-662d-4bf4-b1d2-96573a629dd9",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "0c5db53c-3ec0-4102-817d-49ff0cd8d4bd"
        },
        "item": {
          "id": "8da44c15-3dc9-4612-9520-59ca3095761e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "cf7ca52a-a0cf-4be5-babc-cce75cd77735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46fe4670-8442-4b20-948a-310830591725",
        "cursor": {
          "ref": "0b07ebb8-5ae2-4bd4-8ce5-e3a842fe14a4",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "7d279027-94c4-482e-bc7c-95c770b97f30"
        },
        "item": {
          "id": "46fe4670-8442-4b20-948a-310830591725",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f451ad21-a107-4a68-83cc-160eb4831176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20728cf4-3325-4ec6-93fc-0db310c9db38",
        "cursor": {
          "ref": "4c80aaaa-98ab-4ad6-a259-342794831288",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "095e439f-e9c6-4d33-9faf-a6d0cfee4a21"
        },
        "item": {
          "id": "20728cf4-3325-4ec6-93fc-0db310c9db38",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "cd37d860-1cff-4fca-9f3d-4eec35385894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2afb874-2f9d-4f90-bff3-3f4318cc7a7a",
        "cursor": {
          "ref": "6f724c56-17cc-4fd4-a8de-7b16b4f93015",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "bb795205-fd0b-4005-b73f-185114c96ab8"
        },
        "item": {
          "id": "b2afb874-2f9d-4f90-bff3-3f4318cc7a7a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "37651339-4437-4fe1-ae8c-ee043542d426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92cbe0de-424e-49a2-b2ef-4f0157b864d7",
        "cursor": {
          "ref": "d4d0c7db-ea20-4e9f-83f0-ddc29a3827ab",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "7f5d4b8f-cef3-49c1-8605-e2d98a4ff5db"
        },
        "item": {
          "id": "92cbe0de-424e-49a2-b2ef-4f0157b864d7",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f7700cf5-d955-41d0-a164-009aef0b9f7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc67730-dbfc-4fa0-bbc6-bd575d6635c2",
        "cursor": {
          "ref": "f062743b-c027-4b61-9cb2-082ed8b22462",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "3490e118-c5e5-41d8-a801-4bd83e5f4732"
        },
        "item": {
          "id": "7fc67730-dbfc-4fa0-bbc6-bd575d6635c2",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "81813237-9351-4da8-b7af-df8c208df13d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "040f3676-f13a-4551-9fb9-436c7f5f0d1a",
        "cursor": {
          "ref": "b9a4e1cd-c3d1-4060-bf77-e01e1793494f",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "5a6c17af-149a-4248-b329-6b348e4e26c8"
        },
        "item": {
          "id": "040f3676-f13a-4551-9fb9-436c7f5f0d1a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c733e4f2-d406-4f5e-bc13-b4c99b3f63b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7d2b00c-6b82-4af4-885b-e14411cc1b0a",
        "cursor": {
          "ref": "0d9a78da-16ab-4b31-a346-c2d2305e9c18",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6c5d6242-3fe2-4bef-b769-e7697689a4fe"
        },
        "item": {
          "id": "c7d2b00c-6b82-4af4-885b-e14411cc1b0a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "4a6fcb8b-d3f0-424b-a8ba-43010b6157b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "116048de-a5f2-42fe-9d41-cf69455e73a8",
        "cursor": {
          "ref": "211ff132-7017-4bed-b58f-35309f3fefcc",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "0bfc3f8b-6645-4825-8b15-7aedd9c42365"
        },
        "item": {
          "id": "116048de-a5f2-42fe-9d41-cf69455e73a8",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ffb4e57f-15cb-4a91-a6c8-f3413f7fa56f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476faa9d-0d08-4c52-af9d-642451361875",
        "cursor": {
          "ref": "459d3c1e-8c1a-4b6b-8082-c004a3cb299a",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "99a4f6ea-614d-4c1a-810a-cd4e7637d19e"
        },
        "item": {
          "id": "476faa9d-0d08-4c52-af9d-642451361875",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f019e1f7-5acb-4dee-9eac-076fb3f3287b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1628fb1d-c9ea-4b3a-a52b-9ce84454e9f7",
        "cursor": {
          "ref": "e0f48442-f578-4627-8927-6d4db2a92bae",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "db1aee00-e29b-46f9-ab37-fb743aafbcca"
        },
        "item": {
          "id": "1628fb1d-c9ea-4b3a-a52b-9ce84454e9f7",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "09c63735-b99a-427e-a15d-3ba3782689da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b4879d1-06e9-4c02-9a07-a9f24241f1a2",
        "cursor": {
          "ref": "d908f494-07f4-4241-9b7a-2967efb0c825",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "fdd7db32-7665-4c9c-91cf-38a243d995cf"
        },
        "item": {
          "id": "5b4879d1-06e9-4c02-9a07-a9f24241f1a2",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f02b007a-c87a-4d02-8d75-21e903253039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1baf53fd-0941-46cf-af96-b43519f5403d",
        "cursor": {
          "ref": "ff62ed72-6d71-4fbc-862f-03dd39af977a",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4e30f959-20d3-4e4f-b1bb-af563e022f0f"
        },
        "item": {
          "id": "1baf53fd-0941-46cf-af96-b43519f5403d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e0f78b27-5e36-4007-85f3-59f834f7e7af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73112588-bb54-4ac2-9d27-13138bdbcb47",
        "cursor": {
          "ref": "28ba692d-0fc2-4e05-a745-985f5681756e",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "4cc18b0b-1ab3-4930-bb8b-8484ec7c972c"
        },
        "item": {
          "id": "73112588-bb54-4ac2-9d27-13138bdbcb47",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "42651f87-7d38-4d7a-9c20-1130a127e0d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ec6269-d055-40b1-9bd9-ffdfbbf61320",
        "cursor": {
          "ref": "1596b7f2-5487-4601-bc5d-c1000696b5f4",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "31f512f5-ee40-44ea-aa3f-a506fab58cc0"
        },
        "item": {
          "id": "b1ec6269-d055-40b1-9bd9-ffdfbbf61320",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "066eeebe-5e54-4b5c-8824-a31f3a2753f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ef54aa-374b-4c44-8eb0-b20161a891f8",
        "cursor": {
          "ref": "9aa085a6-15fa-4d69-9428-4befb46002f4",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "fd5b3707-5f35-4164-81aa-78f76a23e81a"
        },
        "item": {
          "id": "e6ef54aa-374b-4c44-8eb0-b20161a891f8",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b3d25ef9-d58e-436b-8bbd-beec4047f6a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb28bf5-567c-4a11-842f-c65358614938",
        "cursor": {
          "ref": "9039bd34-6514-49eb-9c96-756f0f0b2559",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e6fe24b2-5f7f-4b45-a945-8c0e58aaaf5a"
        },
        "item": {
          "id": "4fb28bf5-567c-4a11-842f-c65358614938",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "bcb1cb63-35ac-42d4-bb82-9a06332a8cac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b538410-631a-4695-98cf-6faa7463f6df",
        "cursor": {
          "ref": "4adcf4b7-c673-4241-bbd3-b73072e5dc56",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e91c480d-ecd5-4127-b8e1-8d1417e398fb"
        },
        "item": {
          "id": "3b538410-631a-4695-98cf-6faa7463f6df",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "16e1c3f7-5882-477c-b391-01691380b82f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611aba3f-4081-40a6-811d-41755ae80025",
        "cursor": {
          "ref": "42b2d6dd-a8e4-4e3d-9aa1-6f6c150cc03b",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "85d556b3-cb8c-4d6c-b79b-16b02073f6df"
        },
        "item": {
          "id": "611aba3f-4081-40a6-811d-41755ae80025",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d65b6294-b6f6-4ffb-9a27-8c4b12904fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a84c79b4-4515-4f37-8e1e-be2821d4d622",
        "cursor": {
          "ref": "00a30c03-8bb9-4f0f-9bab-1b7f5237696a",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "26ed00da-0c46-47c7-a1ce-479e55ca61a0"
        },
        "item": {
          "id": "a84c79b4-4515-4f37-8e1e-be2821d4d622",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "11ab1244-d316-49a5-aee0-26b30452413f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edfcbda2-812f-4cd4-b9c0-cbf168c1ea22",
        "cursor": {
          "ref": "4984b79f-0a93-4775-bc64-355c0f034f7f",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "c4317e17-94b0-445e-9ede-64ea92541222"
        },
        "item": {
          "id": "edfcbda2-812f-4cd4-b9c0-cbf168c1ea22",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "e1d32d3a-2f69-428d-935c-e801ca156a45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "938265c5-227e-4ffa-92a0-82e6d4e2ddfd",
        "cursor": {
          "ref": "87108ffe-034a-4fef-80bf-d5284104c229",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "6dffabdb-677c-4d52-acc5-eb985ac8436e"
        },
        "item": {
          "id": "938265c5-227e-4ffa-92a0-82e6d4e2ddfd",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "2df7ff8d-83aa-4151-b767-90af139ddd18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf903b4a-c234-4dc2-8e71-852846c0ccfe",
        "cursor": {
          "ref": "4dcb6883-dede-4f3c-b4e2-e382b543d04a",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "82070870-13f0-4540-b0b0-725048e38bc3"
        },
        "item": {
          "id": "cf903b4a-c234-4dc2-8e71-852846c0ccfe",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "0756cf16-75f3-4f0a-a20f-5e089ce14477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df40de9-43a4-4e12-9909-ae7eb891638b",
        "cursor": {
          "ref": "70265aea-60fd-414c-bc72-8d3033892fa0",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "6c81840b-1615-4ee6-bcf3-538769c0e306"
        },
        "item": {
          "id": "6df40de9-43a4-4e12-9909-ae7eb891638b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "def666fb-5302-43a8-bcc7-87718eaa73fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "130141a2-e058-412f-be2c-7e7bfcb69e58",
        "cursor": {
          "ref": "f1fd60c2-a498-4670-874b-b05771850f8c",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "6ebe72a3-cbcb-4c31-898b-36b87ca6d2e7"
        },
        "item": {
          "id": "130141a2-e058-412f-be2c-7e7bfcb69e58",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "be2f6611-d4aa-486c-90bc-f0483372e5db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc9dcf0-0f9b-4b10-8e6a-361eb3ec25c1",
        "cursor": {
          "ref": "9646f997-c97d-4b35-8e51-b36e6ac9c5fe",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "aec76293-e7a4-41df-b0c0-148b38276c04"
        },
        "item": {
          "id": "4bc9dcf0-0f9b-4b10-8e6a-361eb3ec25c1",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a7e59574-d837-41ca-9572-de890f04189a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ce4e37-f486-44f9-a498-ec7e93b60cd5",
        "cursor": {
          "ref": "eaad65d6-97bb-45a7-aa4f-fd93e3673406",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "df47c523-666c-4d16-9d38-7212f3c969a3"
        },
        "item": {
          "id": "34ce4e37-f486-44f9-a498-ec7e93b60cd5",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "85115ffd-d8d9-4968-b280-61894c88b0e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f43908-145c-46c5-917a-86dea2375a07",
        "cursor": {
          "ref": "3d909e1d-1747-48cc-a0fc-8fc4afefd2bf",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "e86ec794-0336-49e5-a304-edf2db454a82"
        },
        "item": {
          "id": "d4f43908-145c-46c5-917a-86dea2375a07",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "e5ecfaf5-58d5-47b7-a2ac-72ab4b90744a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbc11b44-d7a5-49b0-8d56-1edb39b92bee",
        "cursor": {
          "ref": "dd137726-cebb-4b0f-80ef-73255d9e7c6d",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a3a860e6-7fb5-479c-b5a5-f319ee070486"
        },
        "item": {
          "id": "dbc11b44-d7a5-49b0-8d56-1edb39b92bee",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "97a5baaa-e78f-4410-8076-8731c471410e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "1f491023-611a-48e9-91eb-094d1a231429",
        "cursor": {
          "ref": "66a051ee-7f93-4a16-a6fa-35321e095826",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "71c0f454-a96f-4158-b22b-96705da62ff0"
        },
        "item": {
          "id": "1f491023-611a-48e9-91eb-094d1a231429",
          "name": "credentials_issue"
        },
        "response": {
          "id": "362af486-873c-46f4-8537-6af370121c73",
          "status": "Created",
          "code": 201,
          "responseTime": 23788,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4982df-1145-4c33-b2e0-a87c08c2f88c",
        "cursor": {
          "ref": "803764ba-c2bb-4167-a684-779ba08034f5",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "df9ea5ec-c5c0-4108-8a87-2afa4a4e3115"
        },
        "item": {
          "id": "ce4982df-1145-4c33-b2e0-a87c08c2f88c",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "0edb3126-903e-4d8a-90b0-2a926bc31307",
          "status": "Created",
          "code": 201,
          "responseTime": 22545,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec4a9015-b7f6-4b00-b96f-e7559398b4c7",
        "cursor": {
          "ref": "fe2d5769-9824-4370-bf72-acde27e859d1",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "cb66b23a-431b-4049-b969-5cd9591d60d0"
        },
        "item": {
          "id": "ec4a9015-b7f6-4b00-b96f-e7559398b4c7",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "09cb2842-45cc-4d7b-9f9d-6aadbd391e37",
          "status": "Created",
          "code": 201,
          "responseTime": 23653,
          "responseSize": 1229
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f39a627-dc7f-4c97-82fb-277e4c3e3868",
        "cursor": {
          "ref": "019cbb06-691b-4776-9de7-5f84aa272a9d",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "962b105e-8256-4879-8223-b2a41dc9929d"
        },
        "item": {
          "id": "5f39a627-dc7f-4c97-82fb-277e4c3e3868",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "32e16e0e-b976-4145-b6a9-f949178eeefc",
          "status": "Created",
          "code": 201,
          "responseTime": 22925,
          "responseSize": 1235
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "19f7d7e7-eb83-4424-afe8-3fb053de4c1f",
        "cursor": {
          "ref": "03422af6-0015-4446-bfc0-a213a2ee369c",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a617dd18-f9a4-4b3f-b348-06cbdf6fb8a5"
        },
        "item": {
          "id": "19f7d7e7-eb83-4424-afe8-3fb053de4c1f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "5c92356c-58d0-4a08-9f40-2c104816c95f",
          "status": "Created",
          "code": 201,
          "responseTime": 23752,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-09-20T00:46:05Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-09-20T00:46:05Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "b94c95b0-514b-4e24-ba00-4a396ead15ec",
        "cursor": {
          "ref": "f69308df-ebce-48f9-98ce-56a349c1647f",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "448fe124-0caa-4d58-b0f9-1155c86da53c"
        },
        "item": {
          "id": "b94c95b0-514b-4e24-ba00-4a396ead15ec",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "02fc6595-df5a-4373-ab2e-4012a3e4bd7e",
          "status": "Created",
          "code": 201,
          "responseTime": 23479,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5091440a-ce12-44de-b4eb-d6049c28f580",
        "cursor": {
          "ref": "16e0a261-dc32-42d6-8d9c-10d4bb306b96",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "dba090c1-4cd2-447e-9d3f-0c36c9a00d15"
        },
        "item": {
          "id": "5091440a-ce12-44de-b4eb-d6049c28f580",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2b1dde6b-f2a1-49e9-9f5a-dbbcbb8ad0cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 211,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c6647f4-222c-4f0e-a1e9-343b3df3a2b4",
        "cursor": {
          "ref": "b42f056b-3a4b-40b7-89f1-f3b75e7abed4",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "deea931a-87a6-4097-9108-b50ce5be0646"
        },
        "item": {
          "id": "7c6647f4-222c-4f0e-a1e9-343b3df3a2b4",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "81bfd14e-4055-41c7-8c7a-6d0b402be2a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25bdfab9-99f4-4563-84aa-bd1b493a066a",
        "cursor": {
          "ref": "6f638a56-0ef0-4586-830b-894ba592af90",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "fb72ef0b-4122-4c78-8aa2-171683d0df78"
        },
        "item": {
          "id": "25bdfab9-99f4-4563-84aa-bd1b493a066a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7a443a9e-c059-405e-a21c-7a75cbf9e9d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8144b45-56a7-4e83-90f1-4f6ca1cb2b7e",
        "cursor": {
          "ref": "0891301a-895f-4eb3-9de7-8266f6a52477",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "6fcc269a-b047-4df6-a132-f43b0ab78218"
        },
        "item": {
          "id": "d8144b45-56a7-4e83-90f1-4f6ca1cb2b7e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "61240ffe-3b87-4541-aa7d-84cf52f59122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d56bbabf-4bda-48cb-b6bf-c37ddd243f65",
        "cursor": {
          "ref": "39b07ff1-a9e9-408c-81ef-b2e3137f24ed",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "0889e7a9-19db-4c72-88c7-0e65ad8860c5"
        },
        "item": {
          "id": "d56bbabf-4bda-48cb-b6bf-c37ddd243f65",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9f10f35e-695f-427a-8740-609f90cd6bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b79540b2-fb69-4618-80e0-f21f19261a0b",
        "cursor": {
          "ref": "1824caf1-4d03-4071-b7cf-ababdf8532c8",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "3aa55ea9-429c-4312-b0d3-6c40f3dbec9c"
        },
        "item": {
          "id": "b79540b2-fb69-4618-80e0-f21f19261a0b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "aad6e77e-0906-4a42-ae0b-a419cef819f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24db7217-7bf3-45a2-a4b1-05e4a87dfe93",
        "cursor": {
          "ref": "36ecb811-da40-4f74-9757-1021ed6c3483",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "1a940bc2-7ff0-4ea9-b5a5-9816045a79e8"
        },
        "item": {
          "id": "24db7217-7bf3-45a2-a4b1-05e4a87dfe93",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d2a19748-9b7b-414b-9a3a-e787b241ea4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d404042-b08a-4009-9167-94153d50721a",
        "cursor": {
          "ref": "1beda806-f006-48bf-9a06-6765bd181cd4",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "6e20e59d-c2f1-432b-99e4-c008fbb37702"
        },
        "item": {
          "id": "6d404042-b08a-4009-9167-94153d50721a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a8203a04-ade2-4643-8fc7-8add9a6f8ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa4ade6-7dce-4ebc-860b-0ce6e351d028",
        "cursor": {
          "ref": "df0a163d-9327-444b-8a7c-80cc22cb2894",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "935a6af8-3b9e-4aa7-92b7-3ea447a5983d"
        },
        "item": {
          "id": "6aa4ade6-7dce-4ebc-860b-0ce6e351d028",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "504f7792-b879-4b65-8ca3-d6ff4c51273b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04b8a43-bd48-4331-9556-f8754498509c",
        "cursor": {
          "ref": "2dc22e5c-f51d-4810-a66c-01e8cc190636",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "92df79ef-36ff-463e-a211-b4e36c21513d"
        },
        "item": {
          "id": "e04b8a43-bd48-4331-9556-f8754498509c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4cf76145-4bd6-4e11-8d6a-9bbd67b803c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3bc56da-bb61-46f7-8247-64463a79f45a",
        "cursor": {
          "ref": "42f32e09-bb07-48f3-ad7c-3686882e9c7b",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d8a7fab9-0f08-4554-b0d0-50baedfea89f"
        },
        "item": {
          "id": "a3bc56da-bb61-46f7-8247-64463a79f45a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f61e116c-b1b8-4621-9f42-48011d6d4482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf99385b-344a-4735-a345-2b4c5d124f62",
        "cursor": {
          "ref": "b48623da-fddb-4cfd-8768-5f3ca4935749",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d728b8dc-3661-4871-8597-7ca3aa9496dd"
        },
        "item": {
          "id": "cf99385b-344a-4735-a345-2b4c5d124f62",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "61099aa4-9a3f-4a9b-ac8d-33a6b849feea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e936626a-3d1f-49e5-9750-2f4c98e090e5",
        "cursor": {
          "ref": "bdce0ba9-38a0-47a0-a453-aa3665f2a946",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "492559e4-7ed4-412c-8ea8-185ed1368292"
        },
        "item": {
          "id": "e936626a-3d1f-49e5-9750-2f4c98e090e5",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "75e6f6e3-d04d-453d-9ce8-3bb3367a5524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94aa0259-79de-4a0e-b81a-194e34e3c78b",
        "cursor": {
          "ref": "68df3dd5-7e0d-424f-b4d1-1c78eb9f4ee8",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ac8854e7-a3dc-44db-9d3d-ca442c2bc3b7"
        },
        "item": {
          "id": "94aa0259-79de-4a0e-b81a-194e34e3c78b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ef586c0f-3cab-42cb-8be5-b70798486503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0aa046-bd4a-4f8c-b26b-9c1d787356fb",
        "cursor": {
          "ref": "b465ba2f-64c1-4741-95a4-e227c1bfe3d9",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "d70cad04-f309-4dd1-bd66-49024d257af5"
        },
        "item": {
          "id": "ae0aa046-bd4a-4f8c-b26b-9c1d787356fb",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2348ebc1-4099-46ef-9933-4d2af403b7e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb9376c8-8b66-444b-a065-38a1d70eac74",
        "cursor": {
          "ref": "f8698d6d-13ee-4cb1-ac97-cd1e48165972",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "26df9785-17e8-49ca-a079-5a8817659ec9"
        },
        "item": {
          "id": "bb9376c8-8b66-444b-a065-38a1d70eac74",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8b8d516f-4df2-4f8c-a075-0596a18b9927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3734610-8d81-4601-9c70-18a6a66af84a",
        "cursor": {
          "ref": "6c9d32b1-8cbb-4643-a98c-a9b957b10634",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "7f5f8d35-2a04-4601-8544-4b1e7eb722a5"
        },
        "item": {
          "id": "f3734610-8d81-4601-9c70-18a6a66af84a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a9122535-4f3d-4d45-ac2b-415f4c66187f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91194aaf-44b0-4d91-9038-eccfac2dd765",
        "cursor": {
          "ref": "b58bc1b0-5dde-4eab-b356-50c39e6e6b0d",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a0d7e5a0-238b-4865-b39b-731166d1b0e2"
        },
        "item": {
          "id": "91194aaf-44b0-4d91-9038-eccfac2dd765",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9d05f2f9-c87c-4280-bd8b-e1d6f9c41c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dddb23e-759a-41bf-ae41-8678c7d9cf9d",
        "cursor": {
          "ref": "3a48b1c5-142d-4925-b01d-ad3bb99f9a0f",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "bc2dae24-f18d-4e38-80c6-5d1b85b58fbf"
        },
        "item": {
          "id": "3dddb23e-759a-41bf-ae41-8678c7d9cf9d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "77ef0e85-ee24-45fa-92ee-b3cc732bc343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b779591d-a0f5-4cf4-b32f-64fa51bde883",
        "cursor": {
          "ref": "eb33a234-8d17-465a-ab3a-f75853e243fc",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "9564c983-03ee-4a58-b327-b3e6ac2e9889"
        },
        "item": {
          "id": "b779591d-a0f5-4cf4-b32f-64fa51bde883",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f9cd6e1e-5f0a-42a1-8dc4-d88f4c5da79c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b6287fb-f022-4d04-8e07-a76475f00be2",
        "cursor": {
          "ref": "158b0c12-ace2-4a1d-b898-ebe603c31e14",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "12614361-7e6c-47fc-aa93-061d1bd20e2f"
        },
        "item": {
          "id": "9b6287fb-f022-4d04-8e07-a76475f00be2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "fe5b85a7-6730-4c8f-a2ba-05a449611e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "680d5f96-aac1-4a27-be75-3e9e5d0f4a77",
        "cursor": {
          "ref": "7b6b7666-69a3-4307-8bab-0f4f5fba7c6d",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c6072886-1919-44d0-bde9-0548ae6a50f5"
        },
        "item": {
          "id": "680d5f96-aac1-4a27-be75-3e9e5d0f4a77",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "74637abd-5c8d-4c66-92a3-76140998f4fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba72734-c0a0-43a3-b0eb-e3a0782e864c",
        "cursor": {
          "ref": "1cb85c5c-45f3-4faa-9c92-998dee739c9b",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "7fde7590-3f04-4d9c-a0a1-d01dd64220b1"
        },
        "item": {
          "id": "bba72734-c0a0-43a3-b0eb-e3a0782e864c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "adbf47e0-7e11-4461-a158-f68c63d13495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f127b853-4826-4c5e-9c16-6bbc8de983ef",
        "cursor": {
          "ref": "f7923d7d-520f-495d-9aa9-1640a5a70ccc",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "82fa2d23-84cb-4626-9859-3c0dbc00f2b0"
        },
        "item": {
          "id": "f127b853-4826-4c5e-9c16-6bbc8de983ef",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8f798e1f-2b40-4d26-939b-e3be6acb72cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54edfdcf-a11e-475c-bcc8-e6cb47f5f825",
        "cursor": {
          "ref": "64d56140-98b0-41d7-8d8d-f6f1fa90c1d7",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "aaba65c5-2c7a-4c0b-9e94-371d70f80931"
        },
        "item": {
          "id": "54edfdcf-a11e-475c-bcc8-e6cb47f5f825",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9868bd35-f90b-49a3-ae4c-5485bcde5456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cedb8970-ed1c-4e69-af5b-844b4020fe01",
        "cursor": {
          "ref": "0e250551-85dd-414e-8840-028123b6728a",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "2fce2290-9fe3-4d5d-bb71-755f117b176f"
        },
        "item": {
          "id": "cedb8970-ed1c-4e69-af5b-844b4020fe01",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "264c7563-47e0-4ec4-bc48-6137d3a58393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7921dfe-c68d-4599-834e-18aeeab75d60",
        "cursor": {
          "ref": "b9e1708c-4602-4685-a4d6-2599e1501c21",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "931f67c5-3af9-4963-a0a3-cbe7547ab8f3"
        },
        "item": {
          "id": "d7921dfe-c68d-4599-834e-18aeeab75d60",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b3a27532-6afe-4ce3-8c6c-6013d7fad128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bccb72a2-0e44-4f7b-98c3-9f11bfbdf450",
        "cursor": {
          "ref": "1cd04f98-f762-49b7-96c6-7eaa92df22bd",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "9886461f-cc83-4e83-979e-69825750ddf8"
        },
        "item": {
          "id": "bccb72a2-0e44-4f7b-98c3-9f11bfbdf450",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "620f2bb9-57d7-4ce2-a2a5-7354b192ad14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 124,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "042976fe-209f-4ea5-b7da-b08015a0b344",
        "cursor": {
          "ref": "4dea4d31-a78b-4fb4-80c4-dcb3950316c6",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a27d4dc5-de70-4820-b341-8a88072ab421"
        },
        "item": {
          "id": "042976fe-209f-4ea5-b7da-b08015a0b344",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ba627992-cd71-4ce0-b073-3048754207dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ac4a0d-6b4a-40bc-ad0a-93699135f93b",
        "cursor": {
          "ref": "8508f840-9570-48b4-80cd-4e85fc778de7",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "57988c06-3a39-47e1-bd5a-ee21a489569c"
        },
        "item": {
          "id": "22ac4a0d-6b4a-40bc-ad0a-93699135f93b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2c78d421-be61-4e1d-90bf-bb4564a72530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf1c8aa-5eb7-4053-bf6f-17544c137a29",
        "cursor": {
          "ref": "3455e427-bd4c-48fd-92f7-211dd2150833",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "7706962b-8e44-447c-b7f6-eed8fda860ad"
        },
        "item": {
          "id": "bbf1c8aa-5eb7-4053-bf6f-17544c137a29",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "52754e09-cdaf-429c-9f4b-d6cc5917037b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda1434e-4952-416d-b4be-4f59d615f346",
        "cursor": {
          "ref": "3666b826-590f-4a2d-972d-af04c7347b21",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "be4daccf-c9c8-466f-87b4-f3da359ae9ab"
        },
        "item": {
          "id": "bda1434e-4952-416d-b4be-4f59d615f346",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "edce5582-242d-4398-844c-4d637299f92c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e75b90-412e-4d04-a5c1-c39aadb625d7",
        "cursor": {
          "ref": "8be83343-1751-436b-8e42-568a63b0fc4c",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "0e98a6a6-3611-4c76-8799-efeede5ab392"
        },
        "item": {
          "id": "d9e75b90-412e-4d04-a5c1-c39aadb625d7",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "e780b4c1-f0a1-41dc-9ccf-259103d4963a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb19da2-28ce-4791-a7ec-310913e6030b",
        "cursor": {
          "ref": "6c2099b0-ca22-45d1-b911-250104a9b08d",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "1b3942e3-6695-4efc-a47b-58dc1a68bda5"
        },
        "item": {
          "id": "edb19da2-28ce-4791-a7ec-310913e6030b",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "8ced4fc1-ef1e-43e3-809b-40a909c47c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f52ddebe-1a8f-4dae-82f5-99cdc1d9f595",
        "cursor": {
          "ref": "4bb0f43f-d0b5-4824-9bae-f309fffb9a80",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "fab3cd64-2913-4ba2-bc70-982c44130864"
        },
        "item": {
          "id": "f52ddebe-1a8f-4dae-82f5-99cdc1d9f595",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "17b8e577-df65-42ea-88c1-b80ad771637d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f2b867a-b06b-476f-b5d5-bee0ad8f7e2b",
        "cursor": {
          "ref": "a8f59291-0da8-4967-a9ad-3df678389625",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b013bc8e-fcf5-4b79-bd5a-d741b119a0b0"
        },
        "item": {
          "id": "8f2b867a-b06b-476f-b5d5-bee0ad8f7e2b",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "bb9a7530-2489-4772-8ed4-0e52af409f30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca085f25-a437-43c4-82d6-d8be97097c6a",
        "cursor": {
          "ref": "06f21966-89fd-45e6-9857-08bd3ec0f518",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "5496df10-bfb5-4ac3-8ba7-8777bfae290c"
        },
        "item": {
          "id": "ca085f25-a437-43c4-82d6-d8be97097c6a",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "82ca826e-7392-44ec-b329-983cdeba605d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "324ae56f-5847-4c41-bb34-6ddabc076399",
        "cursor": {
          "ref": "fcb13544-68f6-4130-813b-d318248a8d74",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "89ac6df5-b20a-4c3f-a9f4-09bcbc8f49f9"
        },
        "item": {
          "id": "324ae56f-5847-4c41-bb34-6ddabc076399",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "985ae844-3109-4406-a353-726db6525aca",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36188b2f-e6cd-4bc6-9780-c010a5efffee",
        "cursor": {
          "ref": "6c8e2d43-a9a9-46d8-adec-3ca59128d697",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "21e7b31a-d78a-4c9b-8509-0d6d0ba5d795"
        },
        "item": {
          "id": "36188b2f-e6cd-4bc6-9780-c010a5efffee",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2988b540-7507-4102-8af6-4a09665d31f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f78520-a332-462b-94b9-2b62ae488f0f",
        "cursor": {
          "ref": "f24db8a4-b15f-4a8c-aba8-59a7b349850d",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "4ca609a4-c455-4f77-b5fd-44a2c969cb9b"
        },
        "item": {
          "id": "27f78520-a332-462b-94b9-2b62ae488f0f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "fd69d18a-fe86-4f7a-b8d7-ccfe66c2d8a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "195b42ed-ce35-4425-9b2d-b09a312b8f65",
        "cursor": {
          "ref": "de0a415c-7a4b-46d3-9174-ce0c38c9bcc2",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "6f0cee91-685d-406b-8c2c-5bfb6801b2d0"
        },
        "item": {
          "id": "195b42ed-ce35-4425-9b2d-b09a312b8f65",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a86fceba-511a-4909-ad15-2ff4abd34b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d20191af-9581-446d-84d0-dbb21cd76d7b",
        "cursor": {
          "ref": "15be941c-05d3-4527-9301-79a44b2cd59a",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "cede20ed-4d16-4cb2-964b-37ebc82af439"
        },
        "item": {
          "id": "d20191af-9581-446d-84d0-dbb21cd76d7b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d6d2380b-3388-4a22-9954-a77e8c069243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b92117-b191-4577-a840-ff5d22277255",
        "cursor": {
          "ref": "585b71d5-081d-4e29-9a15-d924e417cda8",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "5102c887-a88f-48b1-8b94-0bc72bef9998"
        },
        "item": {
          "id": "65b92117-b191-4577-a840-ff5d22277255",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "c38a172f-1189-40bf-8dbf-cfe4b879a264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72c072ff-44cb-49f0-81ba-8a2008bdcaba",
        "cursor": {
          "ref": "8aba3294-2f3c-419e-991a-50938e0c6419",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "58387c8b-be4f-4974-a09f-2b6be054fb6e"
        },
        "item": {
          "id": "72c072ff-44cb-49f0-81ba-8a2008bdcaba",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "9092b36b-48bc-4a44-b081-9a070c2d4b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c94a3436-2f67-4904-ad34-f615ea24d32e",
        "cursor": {
          "ref": "db5ea638-be4d-48ff-9a40-5bc404909814",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a826a3c9-076a-43fc-8e71-142803133f26"
        },
        "item": {
          "id": "c94a3436-2f67-4904-ad34-f615ea24d32e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "0b1a4dac-feeb-4c4b-a3b3-f7bf51c64195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf355cc-6793-4f31-84c6-ecc1c72fa762",
        "cursor": {
          "ref": "60719d69-a816-44cf-b915-7c72afff7a4c",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "3897c6aa-73b6-4e39-b69e-6e7c3ac4346d"
        },
        "item": {
          "id": "6cf355cc-6793-4f31-84c6-ecc1c72fa762",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "7d2ee344-9f73-4b07-989a-c5f908538870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "640e79e3-5bbf-48cc-bd31-dfc4d7e8d14d",
        "cursor": {
          "ref": "ee468a46-bd60-4819-8707-ec8af91f7161",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "7f28f108-542e-4dff-93e8-ce6b978e929a"
        },
        "item": {
          "id": "640e79e3-5bbf-48cc-bd31-dfc4d7e8d14d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b1f282ed-2151-41d9-8402-82614f7ef69a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ccb23e-5288-48fe-b165-8db341303258",
        "cursor": {
          "ref": "3d75807d-379f-4033-b8cc-773f81034d30",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "de992bad-cf72-45b3-aac6-a6c1850488bc"
        },
        "item": {
          "id": "05ccb23e-5288-48fe-b165-8db341303258",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "2acc1e87-0c27-4969-be8f-d460465dc91d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64750b97-d96a-4968-ac64-38aa54f551ea",
        "cursor": {
          "ref": "2c0c8805-c06d-4fd2-a663-6b1f9d88b3aa",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "34cf9769-d0a7-47c7-b50b-e0acfbc13f72"
        },
        "item": {
          "id": "64750b97-d96a-4968-ac64-38aa54f551ea",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "92efdb00-64bd-415d-9c53-ccc08ca49f0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4074a06-f056-45a2-b928-be1f43d77eb0",
        "cursor": {
          "ref": "a27f74b4-0a0e-46f9-8360-7ae5a1a69d99",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d895f279-bc15-437b-9c20-7c81a4490f21"
        },
        "item": {
          "id": "f4074a06-f056-45a2-b928-be1f43d77eb0",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c4203d09-dd85-4de5-84cc-52d654bf630c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee5f8aa-9d73-458d-a60b-7127b7c166e3",
        "cursor": {
          "ref": "9a74b645-5a6a-47f8-9e52-62ccd25b2035",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "fe0a2e05-3732-4562-9e8c-a75859c719d6"
        },
        "item": {
          "id": "cee5f8aa-9d73-458d-a60b-7127b7c166e3",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1285f219-d29d-4fe2-aa04-4a04b4969c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d4ad9fd-85b5-4f5e-99fe-3178d2ad3665",
        "cursor": {
          "ref": "8d781bb8-6e63-4cae-b7b7-38e4784f4713",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f289ebd3-52b7-4c4f-b3e8-1ecdc56fa610"
        },
        "item": {
          "id": "6d4ad9fd-85b5-4f5e-99fe-3178d2ad3665",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e18ebf4c-64c6-42e1-8195-341f86d8fdcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "047256cf-8a86-4998-aebe-478e6d482723",
        "cursor": {
          "ref": "76b9b1b3-d562-424f-9014-4583af2074b3",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "11222d1b-5013-4f52-a395-078c7e682607"
        },
        "item": {
          "id": "047256cf-8a86-4998-aebe-478e6d482723",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "3f3bc95b-3d95-4b5e-8be6-c616cf03c88d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f3c0f0e-9486-47f7-9c29-2a194ff731db",
        "cursor": {
          "ref": "30a7d248-5cef-4d8d-ba13-18b60371b21f",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "343902b9-5752-4527-9703-78d7fedaee61"
        },
        "item": {
          "id": "7f3c0f0e-9486-47f7-9c29-2a194ff731db",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "83b8589c-fc20-40bc-a858-a8d9d5df7b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1717c41-ed7f-453d-8679-9c7a99d57e02",
        "cursor": {
          "ref": "faefc510-657d-4a48-b966-7396c602f171",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "dd2bea5b-f7cb-46dc-9726-b7367c290412"
        },
        "item": {
          "id": "f1717c41-ed7f-453d-8679-9c7a99d57e02",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "adf54504-7c67-46a1-beed-8ca836cc4e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c9d0e9-7db1-4ec3-a853-854d26710a01",
        "cursor": {
          "ref": "518b9f94-f8b4-4da5-bec0-6c46de244031",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "1b5258fc-6fda-4194-97c5-e81b8100cd74"
        },
        "item": {
          "id": "b7c9d0e9-7db1-4ec3-a853-854d26710a01",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "06f28cc2-336f-4052-ab77-2bf135d92402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39599089-796c-4d6d-82ad-147ecbae7805",
        "cursor": {
          "ref": "ea32de06-1564-4490-86ab-5ac22d2b9276",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "975f55c8-bf91-46dd-8a98-547356f8941b"
        },
        "item": {
          "id": "39599089-796c-4d6d-82ad-147ecbae7805",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b020a725-3b50-4658-b8fc-505d171220ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62943593-12e3-4437-98c7-8a32d1918ff1",
        "cursor": {
          "ref": "be566902-0437-4ea6-ba51-fc23c48458de",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "021eb64b-e021-4353-89de-7c0305dec9d2"
        },
        "item": {
          "id": "62943593-12e3-4437-98c7-8a32d1918ff1",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "5c148288-646a-4e98-9e39-7d4ef9042abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5beef7-9d64-43ac-a364-b74c4fb7a1d4",
        "cursor": {
          "ref": "31ae159d-3ff3-4c19-949b-f8075d457e63",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a0f8f101-1a48-4b7b-99c5-2be97eb5ee43"
        },
        "item": {
          "id": "ea5beef7-9d64-43ac-a364-b74c4fb7a1d4",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "2c2fbfd2-f51a-45b2-add2-1fda8b6d4f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6f69b2-b978-43df-8893-a482f28c52bc",
        "cursor": {
          "ref": "ab2e67b3-3ed7-4a27-acf6-dcc8cfd1daa2",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "0998f0d9-0a4d-4181-ba49-055a2fe40a23"
        },
        "item": {
          "id": "dd6f69b2-b978-43df-8893-a482f28c52bc",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "bb75555d-9621-4457-8a3e-a54ef095b55b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea79611d-b742-4cbf-b626-e2eaebd4b403",
        "cursor": {
          "ref": "97c1fd6a-3706-4b13-8bfc-90b768b599cf",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d4e32144-38b4-4b25-b91a-97539f2f1379"
        },
        "item": {
          "id": "ea79611d-b742-4cbf-b626-e2eaebd4b403",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a341b2f7-8d74-43c8-bd25-28218c0ac72d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f2b26e-7593-4e9e-98c6-ba563616bb9d",
        "cursor": {
          "ref": "2bca0df9-004e-4061-ae86-615305d194cc",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a72cc21c-540b-4513-b677-d565365d9c09"
        },
        "item": {
          "id": "f6f2b26e-7593-4e9e-98c6-ba563616bb9d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "359a84c5-0eee-40ed-8e8c-5ddd29386cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ca6044-cb7b-4ab8-894f-b2d8c56f288e",
        "cursor": {
          "ref": "888a3da6-be1a-446b-b2b2-5dc4553e46e9",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d0b93300-a7ff-49c4-aac6-97f0423cf482"
        },
        "item": {
          "id": "e2ca6044-cb7b-4ab8-894f-b2d8c56f288e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "32d6fc7a-3a4d-4af2-a4e3-11b89172dc76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a1052f-564a-4829-9939-952f223f95f9",
        "cursor": {
          "ref": "f864b631-1245-4632-910c-1939c11d65d8",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "1a7e4cf1-1875-4b1b-a274-70e9f6619bde"
        },
        "item": {
          "id": "67a1052f-564a-4829-9939-952f223f95f9",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "0a043ee1-5c30-4608-9400-8b743b68f656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e72c23-fa30-4846-8909-3dd9d8eff9c4",
        "cursor": {
          "ref": "5744824e-423c-4123-b9c8-8c7a5cb89cdf",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f1c34d98-27fb-4da1-a796-06b0c74fb93a"
        },
        "item": {
          "id": "85e72c23-fa30-4846-8909-3dd9d8eff9c4",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "1079ff3d-cf9e-462f-a338-809fbb689608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8067fe64-c150-4b7d-8e55-0a1b4ae76b58",
        "cursor": {
          "ref": "970c1afd-9015-4161-b812-92964efcc9ce",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "8a3c0a78-0c46-41f3-a7ca-662f83676356"
        },
        "item": {
          "id": "8067fe64-c150-4b7d-8e55-0a1b4ae76b58",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "2cc3e138-554b-40f5-9c3c-a410fc5b2cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f614cd26-828b-4c65-bcbf-5b5fd80bf866",
        "cursor": {
          "ref": "24a3696a-5ba5-4df7-a6c2-469e8884b574",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2e6e94f2-2b34-425e-9062-148904f9daed"
        },
        "item": {
          "id": "f614cd26-828b-4c65-bcbf-5b5fd80bf866",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "b400c93e-b955-4a4a-8b95-4ede7564e849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc74acb7-32a9-46bf-8219-03788ae9c33f",
        "cursor": {
          "ref": "59d29d5a-2649-49dc-b6e1-d5de2eb9735c",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ee45d5a8-af7f-4a5c-becd-7c486e1c8478"
        },
        "item": {
          "id": "bc74acb7-32a9-46bf-8219-03788ae9c33f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "49728018-c1ff-4c48-9ded-c83b2b00ac74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b5f2ac-4d58-4957-adfa-bfa993a49593",
        "cursor": {
          "ref": "7a11bc5e-892f-46bf-ab98-5abf2e1307c4",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "137b274f-178e-4e62-aa33-b889bd3ff4e8"
        },
        "item": {
          "id": "04b5f2ac-4d58-4957-adfa-bfa993a49593",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "97ac7771-9052-4983-8bdb-9f7783cfaf58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a64b6d5-518f-402f-b842-f3ecb7e125c9",
        "cursor": {
          "ref": "e42dbd63-18ab-4aa8-914a-3d4bc84bffe5",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c132282b-f072-4c64-a096-ab10afb43055"
        },
        "item": {
          "id": "3a64b6d5-518f-402f-b842-f3ecb7e125c9",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "004589f7-801a-4594-9e18-f11980c7ba38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cfec4bf-2c7a-4471-81a5-55419e00b674",
        "cursor": {
          "ref": "28710032-bdb4-4f07-93cf-caaf70e64e50",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "05ff4f86-4f0f-4422-a76d-026ebde44140"
        },
        "item": {
          "id": "9cfec4bf-2c7a-4471-81a5-55419e00b674",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "cf05b092-0b7d-421d-84a5-4b8f0592af44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa321d08-b239-499b-8c07-7eef0ed62fe1",
        "cursor": {
          "ref": "6936bdd9-a1fd-4106-834c-53a28355e39b",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "21a2baed-4fca-4320-a60b-6803440a1c68"
        },
        "item": {
          "id": "aa321d08-b239-499b-8c07-7eef0ed62fe1",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "54acd022-6adf-4688-a12a-2da6e7abcfe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6c72e9c-c335-4a8c-b0b0-073e55452d74",
        "cursor": {
          "ref": "dabc13fe-d5f2-48ca-970b-efb44c3b7ac2",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f133da10-47b0-4b22-a993-ca3d35e5b5b2"
        },
        "item": {
          "id": "b6c72e9c-c335-4a8c-b0b0-073e55452d74",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "7f97fc34-1520-47a9-adc9-1c2fcfb8d3e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d5ccbd-dc67-49ac-9453-72b9bfae15be",
        "cursor": {
          "ref": "249b6f33-7bea-4b9f-9a59-a7c1cded5acc",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "5f2d6a56-b263-4dac-b1c9-94dc7958c56f"
        },
        "item": {
          "id": "54d5ccbd-dc67-49ac-9453-72b9bfae15be",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b6a92daf-b634-44b5-b946-ba6afdd2bc56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4332acc-b39d-4927-b0b1-95a50f29f38f",
        "cursor": {
          "ref": "6a4bfcae-f528-4108-aca3-ff224f4e1776",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "95e57d56-b540-4034-98a3-e1a6000376e7"
        },
        "item": {
          "id": "a4332acc-b39d-4927-b0b1-95a50f29f38f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "2d63c884-fc49-4d7c-b9ef-4fbcacf0ed11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3900c7a-7623-4aa7-b20c-131ff43a3f69",
        "cursor": {
          "ref": "5a9636fc-6936-4039-9371-c5c5e3ca3a0c",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "0f0ad440-0b1c-48b2-9483-f2046718ab61"
        },
        "item": {
          "id": "c3900c7a-7623-4aa7-b20c-131ff43a3f69",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a94952a9-af51-422c-b98c-3960b3af4159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe4d70ac-c890-45ff-96a9-60e4accc7cf7",
        "cursor": {
          "ref": "76c3530b-88ee-43ab-8c45-e1836d0e8095",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b904776f-d8ad-4b80-9eee-927fab3385ad"
        },
        "item": {
          "id": "fe4d70ac-c890-45ff-96a9-60e4accc7cf7",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8ffb9105-ade1-45d6-8d89-6a44a1239209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f2aca4-ca00-4154-a7c4-d5c064d81e2e",
        "cursor": {
          "ref": "2d372b24-47a9-4b1b-a168-01a216168875",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b9323cd8-e01b-490b-86a9-b262a64dfaeb"
        },
        "item": {
          "id": "10f2aca4-ca00-4154-a7c4-d5c064d81e2e",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7f09015d-68a9-48cc-bb70-a4acfc02b19a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71688171-9c06-4109-bece-bfbc025d4bd9",
        "cursor": {
          "ref": "7a3b887c-eafd-48c9-9410-e9e259b5f76a",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "4bcec288-a55c-4466-b4d9-16443d731ca3"
        },
        "item": {
          "id": "71688171-9c06-4109-bece-bfbc025d4bd9",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "207dbf04-9511-4722-a1e5-c38bd21c83bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e2e138-2d7b-4443-8b77-1e5f1c0cba2e",
        "cursor": {
          "ref": "8af6175e-7d36-4fca-8531-eac4ca8c8700",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "667b6564-5106-43f0-b433-42dec5591337"
        },
        "item": {
          "id": "a9e2e138-2d7b-4443-8b77-1e5f1c0cba2e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "6d015f3a-7e61-4be0-a6e1-14d77609f104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1247a73-ba96-4b13-8269-a4f7ce4cec76",
        "cursor": {
          "ref": "9dbdb5b2-875b-435c-88cf-186d5c6f8a7b",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "0c455ed1-ad55-4dca-a073-91228873b05a"
        },
        "item": {
          "id": "f1247a73-ba96-4b13-8269-a4f7ce4cec76",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "da9641a4-a47c-4fe4-a7f1-cd0ee24f8646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dfcf6a7-40df-4c55-a0cf-68a9e2b859f8",
        "cursor": {
          "ref": "40dbcdad-ee74-4cd4-86d7-401d1e2cd40d",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1a7a6077-e96d-45fd-9e7d-616d1afc4d43"
        },
        "item": {
          "id": "0dfcf6a7-40df-4c55-a0cf-68a9e2b859f8",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d0708cbd-6257-4d2b-bafd-9cbfc7bb5c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "290c26cf-8f85-4ee7-95d0-2329e9ddc489",
        "cursor": {
          "ref": "c15508ad-a812-4c05-91fa-4f71b72fb268",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "5e1e8854-4747-4f55-a23d-4765ac7f980d"
        },
        "item": {
          "id": "290c26cf-8f85-4ee7-95d0-2329e9ddc489",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f86d5d37-aeca-4c2c-9c9c-b66f70f13d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab861b0a-7976-47fb-a1fb-8a0101c5eb46",
        "cursor": {
          "ref": "e6bf842f-e2e7-4948-ab26-f6465eac2da4",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "1fe71022-f9d4-43e0-94ce-e3fb3c1ca45c"
        },
        "item": {
          "id": "ab861b0a-7976-47fb-a1fb-8a0101c5eb46",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "51da181b-97df-4611-ac52-4c681f7fd327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c26c56-96e9-4f69-a411-02941c6e15b3",
        "cursor": {
          "ref": "090d4fc7-0d8a-44dd-bb01-8fc6c33420d9",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ba734fb2-b4d9-491b-b4f6-4bf728be4190"
        },
        "item": {
          "id": "11c26c56-96e9-4f69-a411-02941c6e15b3",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "fedc5bfd-6beb-4152-9e88-a11e475d1f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "889e3f4c-5466-449c-b78b-1c2fe4cc351f",
        "cursor": {
          "ref": "278a9488-9854-44f1-b70f-4cb03eb668fc",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f16359fe-64c8-4b8d-a6c3-b870e91fa67c"
        },
        "item": {
          "id": "889e3f4c-5466-449c-b78b-1c2fe4cc351f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "5baba46b-7314-42b8-9247-159bb6a03600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "927514b6-73b4-441e-9baf-c25f4f8b66f2",
        "cursor": {
          "ref": "aaaa0ca7-beec-4b8f-a4c1-609ba0e4447e",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6f6a3e95-70a8-481d-9c63-71865dbd89e1"
        },
        "item": {
          "id": "927514b6-73b4-441e-9baf-c25f4f8b66f2",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "080295fe-3971-4043-be02-98a3002497ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab9da5e-70fb-421d-825f-efc336f86344",
        "cursor": {
          "ref": "35afdd11-847e-418a-9936-12b2da0b182c",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "9b37c5d5-6a2b-4e40-b0f1-3552402cf59a"
        },
        "item": {
          "id": "3ab9da5e-70fb-421d-825f-efc336f86344",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b5af3c71-2a6d-4841-ace7-b63bb55398c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6233b41a-1fa9-4d2d-b7f6-f6bae6a23429",
        "cursor": {
          "ref": "1ee6e6c5-122f-4029-9df4-b8f4e8ef5074",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "cc915a03-380b-4553-b7eb-067f29ec1228"
        },
        "item": {
          "id": "6233b41a-1fa9-4d2d-b7f6-f6bae6a23429",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "8dcf731b-1d2e-44b6-83e8-744bafb1aac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d50aa540-c265-49f5-8d68-d66d98c7c34c",
        "cursor": {
          "ref": "07d8cd1d-b7c5-4c55-bcdb-cf5874f7372a",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e5149ad2-29c1-4491-b5b0-e5cfd181f111"
        },
        "item": {
          "id": "d50aa540-c265-49f5-8d68-d66d98c7c34c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "3cdd3087-4c1a-4f2d-b08c-d33cb93c7d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59395f38-60a4-4ea6-8fb6-6af7bf9d09e7",
        "cursor": {
          "ref": "d5f2858e-4b9e-4d4f-8844-c032a1cff29a",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "febc448f-8fda-43c2-80c4-a433a95732c8"
        },
        "item": {
          "id": "59395f38-60a4-4ea6-8fb6-6af7bf9d09e7",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "aab8ac06-a874-4801-8283-d0f79b0a411b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e36d49f-6e83-4ac9-a468-b450cb1dc432",
        "cursor": {
          "ref": "b8a78a99-2b85-4d25-af6b-dddeaf8b04af",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "4d811059-7db8-4db2-8392-b138515e187d"
        },
        "item": {
          "id": "7e36d49f-6e83-4ac9-a468-b450cb1dc432",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "587460a7-26af-4d81-add7-5292cc9543a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e930f1-9d38-4e7d-b193-0ebe50c50f38",
        "cursor": {
          "ref": "f5556258-fc5c-43eb-a2e4-8c7bf1133915",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5dd7c8cf-4e50-4974-8948-4e555e80fe04"
        },
        "item": {
          "id": "b2e930f1-9d38-4e7d-b193-0ebe50c50f38",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "013b78ae-6fd5-4e4d-947b-9c71f2564385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0e15f5-3969-4b45-b6e2-a848bd6d265a",
        "cursor": {
          "ref": "2bf98e57-b1f0-4b33-b5e7-f90c4984375c",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "165d38f3-b879-4b0b-ae02-47f476840f07"
        },
        "item": {
          "id": "db0e15f5-3969-4b45-b6e2-a848bd6d265a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "ba1b9759-e6f1-4547-bf68-6b36c2c1aa01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f6c862-8feb-4201-b4a3-d3930b5ff0c8",
        "cursor": {
          "ref": "df55e133-f94e-4a6a-9844-404c1a35573a",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "7be67e7c-3ffc-4e03-9f6e-6c6b17a54ae5"
        },
        "item": {
          "id": "61f6c862-8feb-4201-b4a3-d3930b5ff0c8",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "264d0f1b-ebc7-4ee7-aaae-69eb158509ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a8f6ed-9102-4aa9-8b0d-2adec2bf7d38",
        "cursor": {
          "ref": "a1ece558-275d-49bf-b8e7-0f2aa1ca8332",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "38bfb5a8-6317-4e22-9b8b-132b38f73f9c"
        },
        "item": {
          "id": "86a8f6ed-9102-4aa9-8b0d-2adec2bf7d38",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a74c97fc-d42b-41af-bf1c-41000e4c4db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bba850a-4b62-4d55-9d50-8994e8a62884",
        "cursor": {
          "ref": "5bffafa2-6f73-4980-9737-428f80d58acc",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b2b66bd6-e22d-45f9-a003-661748c158ba"
        },
        "item": {
          "id": "5bba850a-4b62-4d55-9d50-8994e8a62884",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "3b935da3-bf1d-485b-b782-2aa9138eb695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde0f04f-b64c-4759-be15-08bf7a959be1",
        "cursor": {
          "ref": "20ce8ad9-4dcb-437c-b1a6-7434f0f239f5",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a4bdf111-21d8-4598-a06a-7be85ec4ebc4"
        },
        "item": {
          "id": "fde0f04f-b64c-4759-be15-08bf7a959be1",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f982ae2a-fbc2-444f-a722-a1bcc2d22dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40da31b2-404c-4293-9c36-f21b9c02a789",
        "cursor": {
          "ref": "b281c31e-3ee2-4489-8234-6dda60f7c399",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "9dee0467-5739-4651-8a3b-d0f96d03d30c"
        },
        "item": {
          "id": "40da31b2-404c-4293-9c36-f21b9c02a789",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f4e85d3f-6e51-4602-93b2-99a50e9e2dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "351d8798-ef76-4167-838f-ea103857cf6c",
        "cursor": {
          "ref": "9b750c53-6720-477b-bba9-2bf2faf8c1d6",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "6462d62c-7739-4d15-90ee-e519d37441f5"
        },
        "item": {
          "id": "351d8798-ef76-4167-838f-ea103857cf6c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "725cf4de-850c-48cd-8526-907e33aade1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6fb3623-2415-45c2-8411-a4572c637592",
        "cursor": {
          "ref": "8c68beac-15f8-4bdd-bb05-6eb49f43785d",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a71a913f-58ca-4072-b5a7-9d328cae61d9"
        },
        "item": {
          "id": "a6fb3623-2415-45c2-8411-a4572c637592",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "7503a82b-223d-42a4-84ec-b96ef50c5d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a576469b-bade-47ac-b8f2-ef43c981dbfe",
        "cursor": {
          "ref": "a05409a4-b954-4eec-8c18-fd610b0bf83c",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7cf57cb1-e078-4ba0-a13a-bad8f63bf0ee"
        },
        "item": {
          "id": "a576469b-bade-47ac-b8f2-ef43c981dbfe",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "3a9ac2d8-11d9-4eed-a21b-94acebdc4ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2611a6b7-b99d-492e-9a9c-05ea62e3977f",
        "cursor": {
          "ref": "9c9d1748-2aa6-4b71-aa58-2cf41689adae",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "23a4bb4f-75b0-4cdb-b572-d1f46040275a"
        },
        "item": {
          "id": "2611a6b7-b99d-492e-9a9c-05ea62e3977f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "438b40dc-0207-4802-8aad-0d32adc954ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8652a2a3-4f8f-4aa3-bc7c-d28022850a6f",
        "cursor": {
          "ref": "c5c4d512-97fd-4fa7-a9d4-8ff01d89b96e",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f7b187ff-19b1-44da-b193-11bba6d8c73c"
        },
        "item": {
          "id": "8652a2a3-4f8f-4aa3-bc7c-d28022850a6f",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "479cd862-3036-4213-a71a-60be2045188f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ba04e2-0479-41fe-a09b-f92c4822d99d",
        "cursor": {
          "ref": "a0dfe373-e85d-4371-973f-342d06a3ef12",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "9fa67ae4-18f0-4ed1-8543-aac732bdcb6d"
        },
        "item": {
          "id": "54ba04e2-0479-41fe-a09b-f92c4822d99d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "7fbbfe7c-ca82-4e03-a059-798517413000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "584f7887-7082-4e9e-b070-155ebef9eb32",
        "cursor": {
          "ref": "cd48adb9-1bf2-4b27-bfc6-cca89e04ded0",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f2a4bbf5-0496-4a09-8b2d-46786a61cb6c"
        },
        "item": {
          "id": "584f7887-7082-4e9e-b070-155ebef9eb32",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ee751207-1265-4c21-877a-bf1433182836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f733bff3-00d1-4f30-8b7c-738a97dd98bf",
        "cursor": {
          "ref": "1201a52f-6340-4a72-b0ed-294cbec89d6b",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6fbffbb7-9104-453c-a994-5f0e2ae24a52"
        },
        "item": {
          "id": "f733bff3-00d1-4f30-8b7c-738a97dd98bf",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "6e4700b6-085b-4f7b-ab50-388eee60cbda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb18dfa9-4777-47b7-93b2-ced7b38da272",
        "cursor": {
          "ref": "2dcc714a-c3b9-4633-9d9c-c2c547d55e0a",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "bc09f62e-b053-4c2a-9c7a-555d328bc746"
        },
        "item": {
          "id": "cb18dfa9-4777-47b7-93b2-ced7b38da272",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ff6f26dd-da77-42b9-826c-b5899b96d7c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b3e20ad-ffb5-44e3-bc76-7d7c9cddc010",
        "cursor": {
          "ref": "cd4179e0-e5cf-4318-bfc3-62157ef9de35",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "a76ac54e-b983-4bd1-9170-f7725bd889f7"
        },
        "item": {
          "id": "8b3e20ad-ffb5-44e3-bc76-7d7c9cddc010",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "dc875d5d-36e5-4a40-ab3f-4c4935c91550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe1dab08-ad24-4475-bdee-cca863a2315b",
        "cursor": {
          "ref": "711b8d3c-1539-4d00-a814-251ee2293d52",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "56f4b34e-fa9a-4dd5-be00-1e67ce734afc"
        },
        "item": {
          "id": "fe1dab08-ad24-4475-bdee-cca863a2315b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c0ce3707-1fcd-41f2-9e90-3ed48ccaf4c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "494c8db1-0bfe-4cc0-98ee-9c8cced7a9d1",
        "cursor": {
          "ref": "f4004dd7-bc6a-4cb3-9197-480d91a74f44",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a9865a00-a7eb-4e47-9aca-81e190796644"
        },
        "item": {
          "id": "494c8db1-0bfe-4cc0-98ee-9c8cced7a9d1",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "3048f875-12ce-4004-b4a3-760256bacc61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72c89d68-be32-488e-b2f4-692fc359fb7b",
        "cursor": {
          "ref": "2d14b7b9-4ef9-47d9-8c9e-6470c9a41441",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f83ff92e-fd36-4e97-aeab-21344fd313a9"
        },
        "item": {
          "id": "72c89d68-be32-488e-b2f4-692fc359fb7b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f402b62d-250a-49f3-a847-6e00ffc66a10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f597b505-bb0a-4f2e-ac82-1195e2d363c0",
        "cursor": {
          "ref": "863af329-4ef5-404f-81f9-95eaa9b1e439",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "abad0660-a078-4fdf-af1b-1c1a01cd769a"
        },
        "item": {
          "id": "f597b505-bb0a-4f2e-ac82-1195e2d363c0",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "161699c8-48fe-49a4-b473-954a91364bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0a0c2d8-7ce1-4750-8aee-d9f18524fef9",
        "cursor": {
          "ref": "f5772d01-bae8-4384-92a6-dd552a333fe2",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c62e5f94-7b7c-453f-8ed1-fcba919cd115"
        },
        "item": {
          "id": "f0a0c2d8-7ce1-4750-8aee-d9f18524fef9",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c747d7fb-1e1e-4906-bb7e-73f33e2ab8f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea139278-d6ce-4484-a673-abd8020b9312",
        "cursor": {
          "ref": "33115e46-8ba4-4010-b4af-9e7b0197c9f9",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "c797914a-9049-4166-bf12-1cbbb6439303"
        },
        "item": {
          "id": "ea139278-d6ce-4484-a673-abd8020b9312",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "81361595-9c1f-47bb-ae3c-c2a61e98acc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "977f9037-7a43-41b8-a27b-cc500c02214f",
        "cursor": {
          "ref": "6d97f940-cd09-4183-b817-2b238664d07b",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "48d05c4d-3de5-477e-a406-8b207463e735"
        },
        "item": {
          "id": "977f9037-7a43-41b8-a27b-cc500c02214f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "5a25f284-53f4-4190-844c-130bcc336766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edda64d6-1357-4c7b-b1c8-50d38f83ea1f",
        "cursor": {
          "ref": "c3a717fe-6ca8-4399-a16e-fd95e0a95ba8",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "5d3aca75-8026-4d8b-96db-dfec45380cc6"
        },
        "item": {
          "id": "edda64d6-1357-4c7b-b1c8-50d38f83ea1f",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "0aa57ae7-ffc9-4102-bbf7-24531e018c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6490757-ff63-4a4e-881b-b3bd3199e638",
        "cursor": {
          "ref": "96c0980f-3936-4de3-ab60-c22e000678a5",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "bd1d303e-79ea-41c7-8cc3-9fd222495ae2"
        },
        "item": {
          "id": "d6490757-ff63-4a4e-881b-b3bd3199e638",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "1134de0b-2e2f-40bd-b996-aec1a84e2c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16358a79-f0d4-4bfd-ac7f-a4513fff067b",
        "cursor": {
          "ref": "114d9b7e-24f7-4773-b3ec-966f0f98027c",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f6262cd9-f9d5-4f1c-885b-d2fbad942d9a"
        },
        "item": {
          "id": "16358a79-f0d4-4bfd-ac7f-a4513fff067b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c03664f6-2245-4614-a48b-6c8bef37964c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4987799-1897-4515-8f15-adff2af5ea0b",
        "cursor": {
          "ref": "7a321094-d54b-4c0a-bf24-381c3e13577e",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "6f013104-0578-467c-b378-138989fdbd9a"
        },
        "item": {
          "id": "d4987799-1897-4515-8f15-adff2af5ea0b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b20c63fa-0b83-470b-aab3-0d01974c7f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e56b2c72-315b-4c7f-8104-b36135d5aa42",
        "cursor": {
          "ref": "04e86b1a-b3ef-4cd1-b365-ecc3b2c2abd1",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1a656f1f-7267-4afe-acd3-33a72d98b06e"
        },
        "item": {
          "id": "e56b2c72-315b-4c7f-8104-b36135d5aa42",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "8bd1163f-cef4-4818-ae39-1a8ed3813dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b00a422-ea68-4b5a-b465-a46a2341cce4",
        "cursor": {
          "ref": "7d095286-30ec-4dee-a43d-3d69f7f10ee7",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "a21e7c5a-fe7f-44bc-8081-b8c230c2a2ac"
        },
        "item": {
          "id": "2b00a422-ea68-4b5a-b465-a46a2341cce4",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "bf485cd0-7f34-46c9-aefc-25aea5c2be51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a5093a-dbc1-4cdf-981c-4e71fa18b451",
        "cursor": {
          "ref": "3a31eae6-181b-4ba6-8ce5-5a7e8ceb8490",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "bbedff40-6069-441f-a218-a91fa24a54d3"
        },
        "item": {
          "id": "70a5093a-dbc1-4cdf-981c-4e71fa18b451",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b7272192-abb4-405d-9419-fb50596a6441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc818885-e9eb-418f-a092-797ad01f1f8a",
        "cursor": {
          "ref": "8e0570bc-3c84-4d7f-8709-cde2a2af5c1c",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "777150dc-8867-4905-9e42-e33ad68c925f"
        },
        "item": {
          "id": "fc818885-e9eb-418f-a092-797ad01f1f8a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "fffcacdf-14b8-4eb0-851f-3a0b298e0015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e5e02f-6b99-4926-aa63-ebc3bb5c5168",
        "cursor": {
          "ref": "8466cd8e-82c0-4e93-bfb8-0526e51aaca9",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "82eb684d-7c79-4433-8ac9-ce3ade756277"
        },
        "item": {
          "id": "04e5e02f-6b99-4926-aa63-ebc3bb5c5168",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "db016cfe-1941-432b-95f0-342c03c8f01d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df5664c-bcf0-4e67-b5af-aa7f6d8ed3d2",
        "cursor": {
          "ref": "6b0e7980-938a-4e0d-b067-5e9f7124c032",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "bbd9daea-770e-4281-a810-c99e777295db"
        },
        "item": {
          "id": "9df5664c-bcf0-4e67-b5af-aa7f6d8ed3d2",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d4e77ea2-56b5-4f45-aa05-f64ba19d875a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbba0f16-004d-4f22-8b05-292e19445e31",
        "cursor": {
          "ref": "f214a8f1-8fc6-4148-87ab-0dbc47dbceeb",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "8e09494c-681b-492c-b7b2-508b3cd9df6b"
        },
        "item": {
          "id": "cbba0f16-004d-4f22-8b05-292e19445e31",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a6d9161b-8412-441a-9ccb-fc5295955d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f4f7d9-6eb7-47e9-91b8-e111dfca622c",
        "cursor": {
          "ref": "669fc997-364e-4ae6-9e31-bffb8f35cd41",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c7646bdf-7c0f-44da-b397-18b5fced033b"
        },
        "item": {
          "id": "83f4f7d9-6eb7-47e9-91b8-e111dfca622c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "55dbd2b2-0d03-4f72-9927-8643266f76e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7845a95d-b9fe-4a45-a1f6-5d6681f03efd",
        "cursor": {
          "ref": "688b0541-2235-4d9a-ad34-88f249da3685",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c9feab3e-0f7e-4b60-8f90-0e04ca620a79"
        },
        "item": {
          "id": "7845a95d-b9fe-4a45-a1f6-5d6681f03efd",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "65001d3a-357c-4a64-aa9e-d78fdd3f6543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9434203-39db-4507-8de6-e47b7170b2af",
        "cursor": {
          "ref": "c1013e98-3f9f-4a3f-a5cb-4e3e0951e322",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "53069445-24b7-4cf2-a396-8f0aeb18c5b0"
        },
        "item": {
          "id": "d9434203-39db-4507-8de6-e47b7170b2af",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c44722c5-d3ab-492e-b3aa-f6380c9e2921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a61719-780a-4ea9-a1bd-0f2d9adca9d2",
        "cursor": {
          "ref": "53f99e0e-8f14-4a99-aa5d-f076de1c0e01",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "191b37cd-c33c-4d1e-beed-4af054ee5888"
        },
        "item": {
          "id": "95a61719-780a-4ea9-a1bd-0f2d9adca9d2",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "40027d5a-4f76-4760-85ad-967612cc516d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f866bbdc-bfcc-4330-847c-7b1de6b8a4f8",
        "cursor": {
          "ref": "a9fb9a51-304b-4fd1-8bc7-8af72b72b6df",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f8dda9a2-234b-42a4-824d-918b008314a2"
        },
        "item": {
          "id": "f866bbdc-bfcc-4330-847c-7b1de6b8a4f8",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f9627fc1-bb2b-46ee-804d-94e608105f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff1e1cd0-9f4f-403e-b407-e07002dc0ee1",
        "cursor": {
          "ref": "7cfc688f-c812-4026-b0c9-b8585a0de83a",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "494df112-287c-436e-9a3e-61d121c6746c"
        },
        "item": {
          "id": "ff1e1cd0-9f4f-403e-b407-e07002dc0ee1",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "4e63235e-b7a2-4a37-9020-0aef1503af35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16be8a62-86ac-4685-bffe-3a3418455bab",
        "cursor": {
          "ref": "c9e8dfd4-d3dd-46a9-961c-c6c74d41068e",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "4dbd7954-6e3f-44b1-bf64-6fdf7f27f331"
        },
        "item": {
          "id": "16be8a62-86ac-4685-bffe-3a3418455bab",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "10303438-207e-4f02-bc22-76b463d38446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f05823aa-7bd5-4c29-8d23-f0b106f7c636",
        "cursor": {
          "ref": "a8d6821c-dbdb-4755-a5e6-95bd2c28ce78",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "58628a2b-fae9-4ebc-90f8-6b4bff1a3a59"
        },
        "item": {
          "id": "f05823aa-7bd5-4c29-8d23-f0b106f7c636",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c6779c2c-590f-4642-a7cb-925a4514eb8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11346e1f-4e3d-4a1d-804b-58c82a4e5dc1",
        "cursor": {
          "ref": "d633c4ef-df1b-4036-88bd-a07e4e2234ad",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d1221011-7833-4609-a59e-d0ad4bd95156"
        },
        "item": {
          "id": "11346e1f-4e3d-4a1d-804b-58c82a4e5dc1",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "9faf4482-ddf9-4b9d-8f1c-0edb4d3b1909",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8938053e-e594-4f0e-beb7-85bb63b8027e",
        "cursor": {
          "ref": "c254c128-2b13-4480-acee-525f7678723b",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "2a563869-46a6-412d-a774-70c63dc08c5f"
        },
        "item": {
          "id": "8938053e-e594-4f0e-beb7-85bb63b8027e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "4c6a2ab9-c7ef-432b-9141-e988fe830a66",
          "status": "OK",
          "code": 200,
          "responseTime": 2511,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0775ebe-4a5a-4e03-b3a9-8e450131c05b",
        "cursor": {
          "ref": "7785ba2f-1f75-452c-a017-980f97071df5",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "6618ab93-c91e-404a-96ad-847f1be4f9ff"
        },
        "item": {
          "id": "e0775ebe-4a5a-4e03-b3a9-8e450131c05b",
          "name": "credentials_verify"
        },
        "response": {
          "id": "dd0dad98-065e-453f-8751-89801f53e542",
          "status": "OK",
          "code": 200,
          "responseTime": 4159,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0535c72-29c2-437c-b75c-5616c3b779b4",
        "cursor": {
          "ref": "e5ee4a1d-b640-47fb-89f1-21f92b10eb0a",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e3e0f0df-59dc-4a60-8420-1a22279cd14c"
        },
        "item": {
          "id": "d0535c72-29c2-437c-b75c-5616c3b779b4",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c75be99b-9350-43ac-a886-841cfbda4d36",
          "status": "OK",
          "code": 200,
          "responseTime": 3277,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f4dafb2-99de-4e1c-ae72-fa0be1c42944",
        "cursor": {
          "ref": "88f39f87-1531-4392-a8fa-3e559ba5a83d",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f8e7fa96-b526-44c3-a9aa-96bd1e82e363"
        },
        "item": {
          "id": "1f4dafb2-99de-4e1c-ae72-fa0be1c42944",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f6850bbe-afdd-4da8-aa34-ae931f64ece1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f4dafb2-99de-4e1c-ae72-fa0be1c42944",
        "cursor": {
          "ref": "88f39f87-1531-4392-a8fa-3e559ba5a83d",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f8e7fa96-b526-44c3-a9aa-96bd1e82e363"
        },
        "item": {
          "id": "1f4dafb2-99de-4e1c-ae72-fa0be1c42944",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f6850bbe-afdd-4da8-aa34-ae931f64ece1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aeb2192-d746-4352-8f86-9ac28631acf0",
        "cursor": {
          "ref": "ba8b98d4-c417-4c6c-943c-38089c1fde3d",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "25a39b48-faa2-48ff-b39d-d1ac23d4ee6f"
        },
        "item": {
          "id": "1aeb2192-d746-4352-8f86-9ac28631acf0",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "eefd8c63-5d82-446e-aa04-dfcb805fcd6e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9edce3-517f-428f-bcb5-16d21b6f1c27",
        "cursor": {
          "ref": "8a47f637-3300-4ca9-8feb-4ffea0d29c02",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e394d3c2-9ced-486d-a203-5537755af26c"
        },
        "item": {
          "id": "6a9edce3-517f-428f-bcb5-16d21b6f1c27",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "afc337c6-36aa-44f4-acb6-31e33ee8abd5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}