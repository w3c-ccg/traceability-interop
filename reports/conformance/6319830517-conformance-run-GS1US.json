{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "a2178c02-0b7d-4c1f-8047-642ac120d53d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c1aa1110-56ca-4ddd-ac42-d3d577234db2",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d08484b8-63a6-4d4b-a11f-6ddcada44cfb",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "fcbd88e1-80a5-460f-85df-103f8a27f160"
                }
              }
            ]
          },
          {
            "id": "eda07ebf-fc67-4d27-afeb-a1299f786e35",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "57e78dcc-e862-46a3-996a-23c67e98f92d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7a40efed-3e53-4c76-b416-5b394912ee44"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "48e9247e-292c-4b1f-811f-729f1f6f737e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d503c342-918e-438f-8226-0c989e09f53a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5093c166-98e9-47b0-b7be-1e19e65d465b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e09f5f5-9da9-4923-a3eb-a54f36ac577e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "00fa8418-7441-4d66-89b8-08ce7795d5b2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f7058b4d-3afd-41ce-9759-88b20de35ad8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "30ead411-a42f-4ef1-ac7c-3b30d31fa8e6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "74e2e3ec-1aa0-4160-bf87-86d1dbcd3abd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6630c095-3c6d-4391-aa05-ed81326fdcc2"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "39c90b2e-8dcc-4ab5-8d69-c7f2bb56c1bc",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "15a9bea3-161d-4540-a796-b6a935345f56"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "348abf21-fa02-4af3-aa7e-9f409bf642d9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e3088754-a91b-40ce-b5f5-927f2f03d687"
            }
          }
        ]
      },
      {
        "id": "4c146282-cac8-4cd7-a514-d2ec5202eb79",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "5b636ebd-0779-49db-bd91-b49660463937",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fa6171d9-23e6-489a-8c96-ed04a65aeb4f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "86493b57-9fc4-45d7-947c-52ecabe4649e",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a241d6-0f21-4d29-8dd3-dc21004f5ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b971cde0-1972-4ed7-b171-ef32c7917b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a81783e4-c5f3-4d46-baba-795a518f07e0",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5bc825f-e672-4e85-99b3-6587ad1fe3fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "62fb0c71-5f00-4855-8f7d-08f2c0033031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d5f8b8f-f7d3-4e25-974b-1843eddac9d2",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15454a95-921a-438a-ab82-bc8e75a3cf07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f41a6515-c842-4e9c-8330-49cf93062b6d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "882bead3-4fa9-4afd-aff9-0d197b640350",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6b790b52-eeff-4758-bce7-bd30f21cf4cf",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b7f532-92e5-4eb2-b299-3558c473f539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "03d91a37-ca33-4ef6-93fe-201e36a17f64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d71c8c05-6236-4d7f-ae78-5be1cca9f8c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b16c3931-0b79-483d-b730-94bbf1538c59"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "81c45bc1-c7ee-4fee-a9d6-345d9abfa44d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4cea38d3-ae0c-4dfc-8c3e-a9b11cb4736d",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b219a5f2-b4de-4ffa-ad92-35fa81f71688",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "877cc354-de32-4298-b9f9-10810d939fcd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "206cbc9d-f8a4-437e-a3a6-5c5ae77d08c6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "cefeca56-3256-429f-b12e-aece173b538f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "af337bd7-1abd-437d-8ba8-5e70f61f2004",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e64ec73e-5b4e-48e9-934b-f8b2884a38f8"
            }
          }
        ]
      },
      {
        "id": "a3f1fb24-832f-4b5a-a386-878817242b5a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1bdebecc-f99e-43d6-8415-84cbd55c432a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cca0a1c3-a32e-4c4d-bec0-dd77974c233f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "8dafdb8c-fd56-4232-b859-d5e910ae1598",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3310a8f-7b24-4a97-86d7-4d2c8052d8b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6fd6788-c4d3-4e5f-865c-2ec418080dd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4a1f0c9-6730-4787-b326-a393c14e0792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59166e82-0827-470a-b635-68d201c94e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ddeee4e-dd7d-4d3e-aa4b-a1799c584515",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c33bd4bd-6b80-4f2b-9b61-7e73f434ebb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07bdc4c9-7ce8-447a-ab7f-20364096adcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a43595d-f80f-47ed-a550-c2868a6fbd0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fef714ff-e0c9-4e2d-bdbe-bb05de798bc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f031d09f-bf6d-42ba-9280-759d07f77317",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f36d811-0bc0-4674-94ed-4c10274c1d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "644b99ae-456a-47f6-96dc-58d7a987d0fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "defc7ff5-155c-467d-b365-053cdc941fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "275760bf-3d6f-46d5-ba5a-99909e882198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4616ac7-e7e1-4ec9-b6a4-6499bb0a498c",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71fbf748-099c-4f4a-9296-a444b67ea087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b869a5f-f786-442c-ba88-62633fc0de14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff2b3e54-2285-43b6-9112-9b963a7fc781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7952d798-280b-43b3-8fc1-44853ebd027b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da0816f-c85c-4c13-b773-eadbebcb6870",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ad7c83-8dbe-4d15-b393-aacda021d10b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ff556ab-9020-458b-bbde-dfdebee4b8ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36563d14-a2ff-4878-aefa-6805f7eee238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c723b2a-f681-4692-9e84-21b7fc773dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "607b1a50-f5de-4ab7-b325-1ac35a73e0c5",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43467780-145a-491f-959d-ac0043a0357d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52d4432f-fdc3-4f65-9adb-d0bbd185b276"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "030827a4-751a-4277-84a0-10226f3be6a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e9570ee-2d69-45ff-9e3d-78dda4939aeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbca966a-1967-45be-9c7c-d6ea98d45e59",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f6003b5-f8a4-47d6-9cf6-73c596966c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08e7cfb0-96c2-4eba-815f-35e9ca6dbd91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "962d5e86-e9c3-4ed6-bfbd-154c78cfc2f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c594c34a-a52a-4ab8-9827-eb916c907ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea158a2c-fa3c-476d-9899-82fe222bbc10",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dfe57b7-1352-4a64-8f18-c9cc1440e98a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6ae6715-ba24-46a6-838b-142e10aaa9ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e04e3a8f-414d-42c5-a9e9-f02cf65ff347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c7ac9cf8-2e45-4b2d-b6ef-465f9ee5efa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "400df8fc-1551-4650-bd35-8536b9b68e8f",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfae8722-cb2b-4a6e-a399-abe411c3bb79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d450845-7027-48e2-8bd2-f9b8b827444d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37e48b0d-322a-48c2-8dda-58ab26239959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63dbb5ba-11cb-4260-ab15-e0093fc46b1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f842718a-f15d-4c10-af98-56ea7afba83f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7c8354f-3a80-492e-8b05-842b4ef8c313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "051dcc54-af10-4197-95e2-46cf1be4a007"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe4fa4b-3b67-4f58-bf99-1a35b30490a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ed61d42-67ff-4e60-a0eb-eda75e8409fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba5cf2ce-f462-4244-a6b8-4a50fe35f0bb",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42cb472e-bf0c-43c9-8ad2-a3e7e520bf17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6c9ee96-b3f1-42ef-97a9-00a35921df16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c30c67-47a6-44a0-9688-5e988c233025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a754a089-02a9-4634-9079-c9e1c629146d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eab62b5-67a3-435e-a377-a6b3e45ecac8",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6694083c-6372-4117-82dd-8d0d6e1494ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "186caa9b-494c-4d53-9258-f89c838c961c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d75a4ee-ed4a-4988-8ef6-75d3da0e7bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c121df56-ae83-4ea5-bdd7-656699e6ffde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2184ab9-16e6-4859-ae3d-412c73dac20c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c21737-4e74-4b9b-a5c3-df0dbd7eac26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d1d1500-f907-4fa7-bb0b-62885d7e326b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a50ad1d7-a642-407b-bf76-168bfe039f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "abcbd985-2ce0-4f4d-9962-5fee1080414d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e38947-cd4e-402f-ac94-e10f6d8eba92",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfa9cc10-3c8a-4b4e-b9de-30dc6261c751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d9671c1-d0b1-4250-b356-255a4e95f1a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bae22a29-f95b-4128-9e70-e7f7d56bf06a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "757acbb5-f0f0-4797-b748-c5370ab25884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d57792-f7e9-4097-b30d-2ddc0129e6a9",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d539cb0c-bf50-4f43-af2a-5cc621f9e704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48731607-faae-4cc8-9eda-6580136f8db6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f99939-6ba4-4478-af2a-1a8859623a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "853d90af-4d10-4a54-9ff3-7f75e6b21fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ef94c5-1aba-4edc-b6eb-435ce1965cbc",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c62bd1-97fb-4dbf-8116-5a9601e11dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d2f4f8b-27ff-4f28-9228-660b9c326cd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e328996-9b9d-43f0-8f2e-e241527a0c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77889cd7-9bc2-434a-9901-1b6c4be693fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "482d5cae-bc6a-4596-8572-fb897e74c86d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e879bf9-830d-49fd-a165-33320c90f20d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b1c1fb8-03c3-4c47-ae90-6b455db34033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc1c084-a4d6-4556-aacf-5581c67e1d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "226ab186-b8da-4cf2-bc11-5af961459b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e39e6f85-8424-46fa-9eed-81608371e80a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b28cee90-fa1c-4d3e-8ff4-419c986ec8f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e49f76d2-1519-463c-af83-6e0c8131a014"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1445604e-a517-44cf-9087-d701c4c1fa3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e7c8d82-a8ac-404c-9b43-1f50ad366ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8654d0ff-65ff-4684-953d-43794093c099",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eccd65f-0904-4e00-b355-8ad2503af618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dd50db9-def2-409e-8696-05199f6167bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9df2b84-62cf-4dc1-8f8d-abecbc1532e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "03345ea7-c19a-49a4-8a15-95b26f9d71cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5458d636-0b16-4933-a147-e99759c3b523",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b7ce95d-c764-4877-8b64-25ca9fefec2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "671f7116-eb60-4f0a-b0b7-50a89162ead0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e0fd1a9-183b-4f8f-9019-c23fa252e194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e4d6619-4d9c-4aac-a4fe-2661a04f7a60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a98efaca-5f68-415f-a32e-2e43984026de",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d00bc98e-f97b-4c71-a747-1902f71c48fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7278f12-2529-4807-983f-c3fa281e03d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70473a5f-326f-4c30-832a-d44d07490d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "066e0715-f296-47bc-b55c-b2865726d368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53b2c080-9d8f-4eb5-86e3-f37dc0dc443d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a709bd6a-8850-42f9-83ca-c8b9b6501b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9048365-7002-4916-a730-9d14fd381af5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26caed44-a065-4936-8ed6-79e72f3b51b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2094a858-88f3-4b09-bef8-f3fb7c52c8d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4088570a-3fc2-404d-acf7-08146cda4279",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "135faf31-ae10-4e0b-9798-4eedd954729e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40d78e7d-b6c1-4435-85b1-e809c2dffd4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32bee11e-c3ac-4700-96a4-6039d669efc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e7515d97-baee-4d29-bae6-c108651e2576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b2f5d18-b539-4a07-be45-7c33f1196bc0",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2d3da1-76b6-4c80-9af6-8a70fcab3da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "607e73b5-414a-4655-8a00-eec2ec3d9ef9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a45ebd-e956-44ad-9d91-edd36005c339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d91b6909-bcc1-4832-a432-dcd2fedf0cf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9cca0f5-3d8a-4f72-9b72-25d5764214fe",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41abc13f-5642-4a21-997b-3e8474640f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9150b3d2-2fbb-47af-b383-219c521f1313"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d87ac0-03b5-4bd7-9662-31838c90c5f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d61b2a4d-1de6-4aaa-9c51-ce270b8690f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf5806b-3541-4101-b81c-e1fe1e70f15d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef108e6-185c-4786-8737-075cd5764c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c446e44-67ba-489d-820c-74e1cda73ebb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f9d5a2a-a172-4af0-a63e-8a541b42edad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "13e4fd59-0023-40ce-a014-5db1c5fbd168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd44f65-707b-4c6b-bc33-b8c63b9b52f0",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80affad8-9c47-4446-bc7e-7802a216bb20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06211e86-460d-4917-9e0b-e9f57e10731b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b8784ed-3a75-46fc-ae8a-96fa5269f224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "08c7d192-9e90-4ff5-a624-bf8255357538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6389ba73-eb33-4669-bacb-e8fd13fb9c4b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "216073db-55b1-486c-9c0c-5c0891b0406e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13f4352f-4e68-42d5-9504-f84d2550b1e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d61de7ce-4f47-48e3-b965-a24c02b7a530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "72d1e272-80e0-4406-af4a-afeacc9024a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dcc8761-acb4-4dd9-a4cc-a3404f9b862b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb8eb15d-fa80-47ee-944b-e86db5101f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84732cf0-7f32-47c1-8380-13d823c01771"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0114865-4cc1-4fec-ba7d-8091eeb1360b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b454827-bfa6-4467-99cc-672282624c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca732caf-858b-4e81-b4e6-47b5ec93c15f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04b6e98-f023-4c95-b41f-a189d24b310e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a48b463-2c55-4730-b597-bee061c345a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f8d3150-ea99-444d-a014-bc2414a3fa28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "830465b9-52c4-4764-89ce-96bfc44e3250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4688182-419c-440e-8e76-d75d99ad9614",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e9fbbb-d86b-47c9-9938-02435e9a1b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15d15be0-847d-4548-9371-d472564b101c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb746b2-87f6-4e3e-9c98-0ab649423d87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d007a56e-f73d-4b1b-9b1c-92c5a5cfe877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e8f290-f33d-4311-bb27-b27db0cbe5c6",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b3ed0ff-6731-4c49-99fd-35da9623e347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0400427-65bc-463c-881a-4b2e0e70eced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff2a39a5-f921-4b91-a3aa-045dd8e9b82c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "46898460-3d11-41b0-9417-de9e43a858b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3309be4e-0c85-4f51-85e5-db6f177d4a36",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "397a4ef3-8e1e-414f-9d21-a84ee79bd017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25abbf0d-ea3a-4976-b23b-75b20fd26bfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c06f522-5b96-4ab7-bd6f-33ef6cfe7794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "003a0de9-8d49-45d3-968b-f87f3f53401a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e95cda4a-1b12-48d6-8fa8-a28c10c87a8b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96560069-5c9c-4006-a547-afdb307239e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6bb2148-c41a-4fa4-bd93-92002a22d328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "156c7ebb-5c06-4c2e-9a34-0ed503582c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ceb1525-04a8-4829-87a5-d9214339f8e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7477974f-11cb-4856-8569-726983726e46",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b5dc242-23fa-4376-bf50-12b7810df60d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "712d2f65-6743-43a4-be28-cb39109f8ca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f4e26cb-72c0-4e93-9ac4-8f246a334a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e1bdbdf0-befd-48a1-89c9-890ad90e542a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96b952ac-70df-42f3-bffd-43cc36e0299e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57db33c1-0a91-410b-92b7-e9e3521a53ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ba56403f-f731-431c-881b-51a1243a7afc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ca0142-cf7f-4d40-8009-f7d5aa26dc03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "34da9e91-26a1-407a-adad-ed4e547760b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d5da887-ded3-4d9c-8075-8a8234239d61",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e56c01eb-40d1-4b86-808c-ce711d05c80d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5ca4b50-ac19-42a8-a569-eef834cae3fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d054e60f-628e-4768-b439-3e106d5c60c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ecf4a2d-1dbb-4b2b-ba06-6e4d3fe19488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd90e7e5-4b50-484e-8c04-5bbbd6305f82",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab1de50a-deb7-452a-9e3e-d3c09654b523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a30b76b-c84a-45ea-b843-1037e3497a26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd68b89-9cf1-4884-b273-abcd57687b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ad580b9-1713-440e-be16-628d62699b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d869a1a3-0430-490d-9f2d-a7aa1a95abea",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba76cc07-b8c6-433d-a5e9-90860ea296dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d3643d-102b-477c-b38b-c0a70fb23bde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb766b2-9d67-4464-846a-2c04723f7d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "969e6e11-c538-4bd4-b846-933053b456bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd38e535-41dc-439f-85cd-cf958e1770c4",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f1d604-4116-4987-8c7e-fc208f90b3d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5c6ae59-e27c-4d6e-8c8f-0f8e5a7e23fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4feb5137-31d9-488b-8c91-a12c3990dfd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "67698f4f-c7cc-4ad7-a3ec-634b1c4bf8e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca6d8702-eed1-4915-8692-ed2e02049e4f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1115a48-7d4e-40b3-8f5c-0b08bc80fc10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66d62ff3-ca91-4196-96e3-64ef20670d61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ae6213-1954-4367-8e90-9bc400f414fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa3524e9-3534-4a54-a1b2-374257526d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22130dd9-fc5b-4923-87cb-ba5a9f931ee6",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bc12e04-255b-491c-b866-9ba37458d641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d121525-5974-4c97-b885-6bf853802de3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "453a6ae4-108f-4863-8548-24c828e04131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b161166e-65d4-487d-aa07-314ee0b14eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "701e1fae-391b-43d3-a7f8-2da0a62863a2",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8549ede2-8dff-492c-8e30-63110da6dfd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3c116af-1f83-47c0-9a93-c212c38b9a55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "157c4cb5-2595-4a8f-84e7-119cce01816d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d2c3b12-26b6-4156-b1d1-6120768bf9bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12f6110d-d211-4d63-b97f-6f67c112b73a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bcab302-6014-4a30-bf76-f669cab019cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "344c4760-5eda-49a7-aa32-1ecad2910881"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59a14928-4050-4c60-9e7b-c564a220a01e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "50cf936e-7049-4d2f-953d-b099581cbf10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd31e2f-8ea3-4c48-ae7b-347a9276c5bb",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19bfd5a7-11fa-46ce-a303-7f2be8402c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00ddea41-2486-490d-94cb-e9092028577e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b5a3a82-ae92-48f1-a8e1-e3c8e0ba7ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "266f7732-359a-45bd-ae2e-c88e999256a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac6b4ff5-65d7-412a-b716-24184f5b5f4a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea8d90b-937b-498e-8a43-70b04f3e7489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4ad0ea5-a610-40b7-9d0d-b5814e7bcaf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b37041-1325-44db-88b8-3532320254e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb5b9e1c-e984-45ad-ba0f-1815a446eb52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f9ec740-e808-4129-9cd0-73d0c36373ce",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc4ffabe-1471-4867-bd65-e796da1f0373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1442ffe8-6caf-4ee1-bf62-6692a9370d81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4db3ef0-5954-45b0-9b64-30da28c8a45f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "86d9c48f-e2d2-4a69-bde1-d1d11082d18c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b85b64-75c9-4443-b8e8-ee67093fcfd3",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee2b20b9-9be6-46eb-a059-f546776a4564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1c2325f-383e-4696-8aea-9a5768a70606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "659438c9-669d-4d59-9013-e3cbe2f7c6af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3468226-5f14-47d6-a5ec-1d3008557c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97b8e435-18e7-4094-a26d-485229d44eb7",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd82af6-af84-4afd-88b6-346dd87c6814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1dac40b-441a-431d-b3d0-5c2f246c2249"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25eab557-e423-479f-9e72-465b679dfa75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9a7ff5c-6ddc-48b3-8c8c-daa00d1d815a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff92f746-22ea-4a66-a36c-8b44536abe51",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b088a4-15a6-411b-b494-bbc6f4343847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70ede341-f3d7-4e0d-adc4-5ed882373323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e68311e-344d-4112-bdba-838a2c47e0aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a7288511-38c5-49a5-acff-5f83c4c24b33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b7d6952-11e7-4771-9321-abeef8c9f759",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f544eb7-f562-4b0d-abe8-d29013648a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56f47de2-0cab-448f-b7b7-8f3c145b71f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7023d11e-92d7-4b19-9c27-f26a91f3610a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ff52426-3c2a-43d3-b525-c803862769f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff033dbb-77cd-4be6-abe3-f9cac1635928",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e09e54e-e543-4d8e-b15c-bba9ecd9c358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53c8593b-cd89-4567-ad0c-cb73ef81eb63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d78b65e4-5c3d-4740-acd0-719e02fea956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "51e8868f-f454-4bd9-94a0-e1a7ef64daa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c10de4db-c6dd-4232-921b-3589339cf5b5",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b71012e-4ba8-4dae-958c-d8572fac2b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44a47548-ec92-4de2-bc0d-cb07b11449c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52068a93-d8a9-4b14-8bce-dbe57fcb6420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e47b054-8aed-4546-8975-07528dcbc54f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c23d9053-6999-40a6-9b4a-71a7be26eeca",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0694261a-3f0f-4d3e-bff7-6a0efb7dbc51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9c44d81-9524-4455-9839-4de4efd4820c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a13d0e-0a46-445f-92f9-e616fda051af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac520ea8-4f30-490f-8bfd-f8f3d7fc08b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65289265-635f-4d50-9620-b39557a83837",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be0fbab-49ed-49e6-a9cd-de3b49901224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6d26b0d-23c5-4c45-943e-a196f5a20af6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "174ff6bc-1f05-424c-8b16-9928aa2437ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "43734ff2-4188-452e-9be4-8db1e8ef75cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af3293a2-8662-4369-87b8-7001a7dc87da",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80cd8084-8567-493f-bf46-caacda0e60bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ff4e082-86cd-4cad-9210-03bb6bc3b714"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9646160-3844-498b-b2b7-14901a95cfee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "1f023c0a-822b-4d77-8102-e04a3e0963a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e9af681-6d84-4a83-842e-cfddb6dee9f6",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab1bd93b-f364-4544-823d-a65f943e949a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e110a31-bcf5-41ed-9de2-ac97b58e1389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c50cb5b-a3b9-4f96-aa32-133bba9b28b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "18f69e70-e324-482e-89de-02742fccafff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ea1fdd2-8322-450c-9006-7c03c0d8c57a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d221cc9c-10c8-4a43-82e3-11cb90c53465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0d67679-9075-4c0b-a467-8702952d4cda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb10e704-6f92-4a2b-a7da-5811016084b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "80bb096d-f978-4416-8cd0-abf924a905e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bd8ed4a-8bee-4074-b07d-66763cdc3acf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "013f9e27-caf7-426f-ba07-703cae7bb441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35a2f702-f5c3-490b-b99c-1a4605340171"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ed4ac2-a669-4f16-a73e-ce2936c1203d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0fd96c43-cbfd-45d4-9bb6-f9f21172b583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "911bb3a4-0dc7-4ed6-9522-dcc3195c9b80",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b3c2e9-804e-41ac-9262-83abceaf6ce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "039eff1c-3e89-4b2c-adce-a52d23de3019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "499b5510-946d-4bc7-994f-48dd0fb2f7bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5543d8c7-5f36-4b5f-80db-bdac914515ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a6b597-5f87-42f6-a998-e1aa73c7b4ec",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e7838c4-b3bd-4ec0-9dbf-b5b95222cda9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5ca723e-8bd9-4263-b720-e41d21646de0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a74af7-802f-4241-8020-02b9e35e79ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1bef5a35-1d32-4e9c-8c77-9a10cbbdf15a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e18033e2-f1d8-48cf-91a5-428d7ca799a4",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e215959a-49c3-4698-a258-17c8aed81c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "526ed53c-f751-4ce2-bffc-c02d83de23ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60acfcfb-1c70-443c-9600-4e2f0b8ff4a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "aae0c0be-b1dc-4c66-bbc1-743fd162c773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb1a93fa-b9a6-494f-a242-ed4ee8a2adc1",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6202df08-6f2a-4564-a39f-964403ba8ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0af6caf5-1738-4149-8108-4e32449a90a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c61a6d5-7785-43f2-84a0-853d7a04f735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6633266-17aa-468b-bc5c-8577c9dfac42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cfe7145-2eb5-4384-b3b6-271d5a8f6128",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a16c027-d898-402b-a0f2-0dd32538f1bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dac847a7-f27b-4595-8930-f9a0d5860e44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a005fbbf-1f1f-4426-8d90-143cd857d7ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5acdbc8-79ac-49c0-932a-8ebdf97fd697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb4e572-f26c-4287-b02b-99b99b1b5424",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6113342-bf42-4816-87e5-d7cd4a364d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "117a8df1-0a5e-4895-8e18-0af04616e06b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da9681e-51ee-4a38-9773-2e1a6ad72171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca43a398-f5f4-4300-9655-588420c230f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0b080e4-fbc5-4bce-aee0-ad2d08b9047c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59507d5e-0652-4750-a905-bddede5a7726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad1e1598-2d45-413f-8333-02261199629a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32d17c01-5850-458b-b26e-57442fde2dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fff73486-ce5b-4b9f-9ec0-3ab20c7e3760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b696faa9-9c25-4e56-b4d2-c08fb8442bc9",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae15a127-a0cb-4a1b-8857-1065a88f17da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1562320f-63d5-41ce-9dce-ba7a842c3ec0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "381524c5-33e8-44a4-82bb-fa7927d48334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "820e043b-773f-4555-a02c-a5bac2e05313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80a554b9-2080-4147-ba78-94b4985b0e71",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1efd6e8-eecb-4c81-af08-4f755e4622cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6606b555-e76b-4859-82bc-400d32286989"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d1a1275-a7f4-47ba-a1f3-5e7538ec6261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "95143f65-80de-4a59-bb0a-b138502de1d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b12727d-4c7b-4760-8282-24c6f623c65c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8217dd4e-60bb-4ff2-986e-769f8bc6db03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bb94a0f-629f-4c40-bd14-fea8505e3997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12956734-4c33-4c3f-bc5b-21059ee0f285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8febed54-1703-4034-b336-782d57d64ee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "280386ad-19b6-4873-aaa6-d3e334d15364",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6583d128-b86b-4bcc-a51b-df5718029f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a2756b9-5aaa-4a3f-859e-8d95c3121afc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c818d0d-5bcf-4361-aa3f-59118d25e3d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce0ab1a5-5d18-4188-a014-73d465fd3b88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c7c0f8-8aad-4116-b751-c05720cfbfdb",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4996ebc-fc6e-48d2-892b-cfdb76776a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f76eee0-2e55-4f8a-88fe-b0de8513f5b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c267b062-0b8e-4b1b-be31-49138553053e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd98694d-8c02-4d25-ac17-612817494fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b7153f5-5614-4afe-9996-a6b668bc90d8",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71091e16-d868-4ccc-8a4d-1d767817b631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79a0f5d3-b2dc-427f-a70c-078d5d9cce19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75431518-42b6-4ebb-9021-b12e09fbdd80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "27bf55bb-3b13-4171-a91b-a0d7c4044f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad2235fa-4288-4277-82e5-35e24f754fa7",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5735172-128c-44db-8459-7ccb11d14cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d97281ac-6dd6-4187-8632-1e3be01acc8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f64d98eb-33d1-44cb-a454-f43c239f48b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8fedc9c7-ea1c-46c0-960a-7fce7dce5210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e350c33-278f-4049-bddb-5d0ce95b793e",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bfa9ee2-fd15-4416-9443-4bd4b31cac28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8c3052b-a275-4011-a343-9fd8ee5dc044"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bce4e49-b975-4fd5-a026-641cb187a81e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fac18452-39eb-4913-b673-ab384fd1a582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a827f813-f478-4b4a-b6f0-8b0dba78dbab",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df409431-f2cd-42ac-9a8f-93ba8127f8c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "916cba16-817f-478e-805f-aaa1ecd5ff29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a880602-1397-4692-89b6-f94cc669579a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c948e8f-05c4-47fc-b427-4ac9ca9228f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acdf7a0d-1b34-4e8e-8b32-5dcab943201f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17bce6fc-f8e2-47ed-972c-ff6047c225ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fa09bc0-d10d-4bca-be2d-3e51b320c86e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0655b279-f017-4123-b239-faa31c5be284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e73622c-b750-45f4-aed5-832d5a8d40ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91acaad2-276e-458f-a10d-aa021f728455",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2738bbf3-f984-4798-a181-379426ef196b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b352c139-4d2f-4ed5-a9d4-3b9168d9275a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca970abd-9eb9-4e43-974d-5a940e6d54da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4f56ef6-cd3c-46d8-9d69-6da0c7fcca28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5022b5f3-12e7-472e-bdd0-8cf8f2f63ad8",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bcf1c8b-e203-4c75-a345-bb8161d96a83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "227a9f06-7f3f-4b12-8379-023b21171658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a8435b7-f2a3-4950-8d16-9bd8b2a0fda6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "18f08df6-33f8-4b1c-9363-e7aa38716516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dffa950-8872-4dca-8811-e5bd50416aa8",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "955afdfc-5091-4d44-89d7-28139759857e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c31dc5f-1aed-41bd-a9b9-c140a031b887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21174a15-548f-411d-885e-a2b93107eb0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "80c15117-a974-4499-8d3f-ecc3a80c19e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6832544-7d4c-42a6-b34d-c7cb047bb93e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46560ca3-1850-4d66-98d1-39cafafc6f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b34bb276-d8d8-4fb0-b7e2-5390a33a8b17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c43dbf-a7ee-4d46-82ac-9713c66801f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d2ae08a2-8bea-44b7-be53-8754a5f1d71c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c3b6bff-3a93-4c04-a883-a503344d9fb2",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cfbd8fb-5f1a-4d97-945d-69d896f13cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e64b86d1-2168-42ef-8be3-8d0696f642e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bf7f4f7-45d4-456c-aac4-bb8aef5507cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6de14a99-ebf4-468c-8341-ad26e72f296e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7912be35-9c4f-46f6-8ba6-9990fdce4f47",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f8abc1d-b229-4dc1-b3c9-fcf0329050c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "070f359c-0ac8-40a3-abde-4603778a664c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52dfb62a-7c0b-45fe-8930-3eb10733be22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "749559ee-c6f3-431e-8e38-02bb0734143a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d161d8-7120-45b4-a486-1041aba1530c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a7e5670-1f87-43e8-8e10-84a28818b1fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5b8edd6-b61e-49b1-86e4-e1e732d838f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97edc27a-b71e-4f92-97b2-8aa14c9c23d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0820dd1e-f8a3-4a2c-aa85-b095bc79eed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a56bf31-50f0-4777-837d-601585a7e638",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ced8048-2581-4096-a163-b3730fbaef56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e645f3b1-d552-423b-be35-5bd2781a08ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be3acfc6-8c89-4bdb-8c0a-1ceade87ce4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba252757-1408-426f-b33b-5233ba0a50e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb9956e-e1d2-4b0d-b305-16080e06f404",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "772c97de-92fa-4854-9481-37a44a42cb6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2afeaf9-2d1e-4fd7-9953-f9bc2d00919e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc954466-56df-4a21-bf44-de8c4600ea50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7cb367d7-1d66-454e-95ab-698193847f09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0877c901-28ea-43da-b36e-fc70401939a2",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea086fe0-542c-4860-ba65-265906933b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d35f30e-6e59-42c7-9316-1826ad030d2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "882efee5-fe29-46a9-969f-34a2744e72f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "65ad3aa1-4765-44f8-bfa5-e63566110355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8499854a-a374-4de9-8273-65bd1deee1a7",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "968ded7a-5de3-42be-b55d-50d2e416005f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb3658d6-8ecd-4171-b392-0281f60f9642"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7db33d9-b481-4439-89d0-8c49c1ee97cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c551a99-fb6c-4f9f-8ea8-d1621115cbc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5dbb469-9a45-42c4-831b-8d334de67fa7",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4a13ba3-6cb4-46b2-9993-60e613eeb9db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da6a899d-ba98-4f19-938b-3c9bf02acf8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d63358-7cc9-482b-a1dd-2dff94eacbf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f224980c-9f9b-4cfc-acdc-433b2890d827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75a790bc-81be-46ba-9fa1-cf80f4c1c578",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f77d5a-75fc-4d74-bd76-413da188573a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "910a3c0e-d773-4e8c-ae0e-f80bdd701e41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd4cc9ff-f680-4ea0-a5e6-2f3a217253d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d6e9455-5caa-4fec-8c40-dad9cb8a723d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78a25fa3-3574-4cbc-a7fb-49cc7a3df53c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a958313b-0145-45dc-9aba-fab22a60910b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de7c9da3-fcc4-4a50-8f78-021a50559b0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ebe5a91-c48f-4770-884a-b26e59c0adfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd72d7a6-0fbc-4ea4-bf89-98f969d13314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95949026-5fa4-4cde-ad0d-0c669d077a01",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceff4895-45c3-4a05-a170-432593f24f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f19adc42-c2bf-4a6d-ac8c-ead41b5a8a73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdf1fc7f-885e-427f-bec8-e303d4d6b55a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d87988e6-bf4c-466c-a75b-88e495d42426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a8afa40-98d1-42c9-a865-6068342a7d4a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc2fd9f3-933b-4f30-bebe-d3319e3d7fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "31feff6d-b2b5-406e-9637-3154c03901cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ee08c1-446d-4082-a591-10e0c1c71edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ee17f3b-58c8-4abb-a07f-c30eb8a3c571"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4c86cd0a-6d0e-4774-93cd-8d3532256620",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a053aa1a-82a2-4af4-80f9-7e6c82bda52f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80cd4148-8267-452e-b8a1-6e75ca92cc1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a3ff8e44-8b58-442e-b107-41856df74fbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbaba23a-af41-4b51-9bb5-5f4337dad5ba",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "612eecc9-add7-411c-befd-35581dad03a9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "70c643ca-4410-44c6-8ce1-31affce2e1d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "485ad567-5ed2-4309-82b4-f17421663124"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "28dcf1be-b156-440b-a38b-231e47b511d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19e424c7-78be-4f9e-9b90-f9598f18e9e4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "39e9b026-c454-4839-ae85-d7db7a8e175a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a68872d1-2e09-4af4-98b3-bb300397ce61"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8b74750b-fcc9-41a4-adbc-4337763fa866",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "41cd7f4d-49a6-4be6-85b5-cfc39c8ef0c9"
                }
              }
            ]
          },
          {
            "id": "5fcdcc38-6d03-4897-a9f6-3199e088311d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7da09789-ab52-41e9-bfd3-1c3253ffd685",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "41d268d2-3afc-409c-b248-6651f5486944",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "67ca0890-ff9d-4d45-b9b8-cdffd908c79a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2f8a4c17-3878-48af-8b6b-58750ea6b552",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "849f60c0-5260-47aa-b7da-1fd912fbb753"
                    }
                  }
                ]
              },
              {
                "id": "bce29e6c-dd50-4c96-a44f-3e8cc6f6de40",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "79d36d47-f6b3-49c6-8653-c18f22d5bf13",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cfdbb52e-0133-4ac3-82a0-cd2d5fcebb4d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d39d3c86-284d-489c-a6f6-6e379186d674",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "80297a26-05e9-48cf-9610-fb7c125633e4"
                    }
                  }
                ]
              },
              {
                "id": "5e923547-dd95-48b8-8559-14d069878979",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b38c7c0-df5a-4661-80a1-f9e20c68e86c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7fba84d6-42e6-4d30-aedc-114d6c10055b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03b9e0f3-dc31-4f1d-b672-037507eb0ec8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "834305f3-af2b-413c-9753-1b6f8c063ad3"
                    }
                  }
                ]
              },
              {
                "id": "525300e7-117e-4d5a-a2e3-b87b6acee332",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "40d80a1e-eec7-4ac0-a570-850f43740334",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "37f0faff-7332-4147-9e06-f51e2053031e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a63bfd3b-1dbb-49e2-9175-88b772a86f92",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "71972e9d-83a4-413c-992e-b1c47591122c"
                    }
                  }
                ]
              },
              {
                "id": "67efe0e6-4cd0-4223-ab91-fcd67fa0281d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7442fc07-efae-4f65-8780-722873434fa1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cb317368-2220-40de-9aca-8719d1ae9d8c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d9530de7-c341-481e-86c0-2f62f88f18a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "13febffd-28d7-4b01-b924-bfbeabd59787"
                    }
                  }
                ]
              },
              {
                "id": "6ce33263-93ed-4049-ad1a-ae9ed4568588",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b3b6829-d577-47fc-a4f6-fb73c0d47254",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e33c4fdd-4ca8-4ab7-b955-3af87fa25735"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c9693de-34c6-453f-9f95-57d25df3f3d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "970d5f69-4c55-4f0e-b733-52c16521bd3c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "38e5888f-cf1e-4e54-89ee-6d45f2a638b8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d098b9eb-1f14-498d-8d72-5ed979a10980"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f33cd934-ce69-4bfd-a603-22d5749c3c88",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "818aa44d-2695-45f1-82f5-a5e1f32c32ba"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "727db6a1-d7ae-4614-9da7-35323139e605",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "db3dd9a1-9480-4b4e-987f-9403cf85a21b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c63fb1b1-15f7-4b7e-9c7c-3885c7a73687",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b00bd5d0-32fb-43d7-a2e1-4901d93a1e41"
            }
          }
        ]
      },
      {
        "id": "9154c023-8485-4072-8a65-6ab0d1e66bb4",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "332a0668-05cc-4726-b1f7-9f7cf2a4d934",
            "name": "Negative Testing",
            "item": [
              {
                "id": "20c4d1f7-28e0-4be0-91b5-eb7d839c93e3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "de392b1f-759b-4318-8316-35b1f294a729",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59adbcba-b32d-4f14-bbeb-3b4b58c18bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8bd1dd7-b657-4024-be01-13bb0e2fbd9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef04aa5-9d30-4f67-bdfc-d93fe46cfe56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1858eaa7-2266-4ea6-b5a7-66edd1a4f8bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53eba91a-7d95-4869-9d24-433a5c3c9fca",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5292fea7-f8e3-4adc-b686-6c215f839086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd4590f8-e6a3-44b6-b761-baeeddad6923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02948ba7-ea48-48d6-8979-041cecb8209c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6349034a-32cb-4cc8-9f3b-8d3f0f5e1a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60659495-45ca-4959-927b-3c40c8166061",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7155464b-deba-4410-949d-c0d9cd60304c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c01d7c83-7340-4c5c-988d-e0ebc5c05067"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "228f19ad-dbef-4e5c-9df0-5622b4643893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6703465e-5f58-4ed2-885d-1a2fd00012b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58df7909-736c-4c86-99f2-c75c178c985b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e5476e-6c06-41bd-83db-366492c94571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6e0abb1-2a14-4989-b7d8-49ce445550eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "189dd446-c59c-4d5e-a4a9-c6178ef85121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5311200-1b3a-40be-9d37-9fa00477ed24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed10b991-8bb6-46b6-b66e-36181504d58f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9087404d-2da7-4199-9d14-f657fb928511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d70da066-e7b1-40e4-bfef-959ae6985fe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46361773-aecf-4777-8518-57a9054a7751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e6c8095-791f-44cd-b32e-25a52d30e9da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6fa0950-e0a3-4129-b328-4602f63791e6",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "564c38ec-a963-4095-8e28-2c105c0fab6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ecb54ac-639f-48fd-9a14-f187473c3eb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64964743-e6b0-4eac-bb79-56ea30594bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "70747eee-eac2-44f6-9653-3bfd8d56a598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bfadc6a-a0da-4afe-be07-975e68bc4360",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed7874b4-fb89-4f7d-a3eb-1c603c7b3ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bad6e2f-51c8-40e7-8b0c-e3cccbe3805e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a7f78de-3fc4-4f89-b0b3-8e31672ee74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7ce75e1-9674-42b5-9e6f-1f114e36ff85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8db6ce6-10b9-46f3-b75e-cd3d024ab6f6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81a837d6-1285-441d-aa91-010449b54eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a010838-b6be-4bb4-8cea-07801bf31ceb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "944bd721-4237-4a4e-b5f8-f2d3a9303a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b19a81a3-ccbb-48a2-a362-a214f3885729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a18cde2-21d3-494b-9ef2-798de3c6e2ee",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f744bc-3e40-4fbb-88e4-9c8c50394f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32dbb3af-a36b-4d8b-ab67-350c7ff5e738"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d96bb566-2b0a-4aa1-beba-943134e76b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "725c9fb9-47f9-469d-9391-4edd83ea7b4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab969ca6-2c19-41a7-8ee7-2b78896c6d05",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ed9ba9-1f09-4288-939d-00186f882e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "238a4134-c900-451e-af39-74bd4dfd20f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9144311d-d53e-455c-be3e-85e09b59036c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "480ca1e4-c39f-4007-914a-b510bd6d3fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f17e2cd-5585-4da6-9e71-6658f1915292",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b1bc8df-604f-4e5e-b221-b7742a92ce96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efb2690e-53a2-412b-9cdb-152b9b036f18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e18eff-7127-4044-895c-00c0b6d61a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b8bbbe9e-354a-48a9-bc4c-9ef3ad46776b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f95efa8-83a9-4627-ba0c-287ee93744f9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46db54bc-c3ef-4f13-b3ff-dc4a0ab9cb55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0c6623e-6cc5-468a-8417-ba27717cb096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f37bcc08-9bd6-4c66-a4b1-7139bba03420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1ec0b2eb-7037-4ee9-a1d0-ef362ef63b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc9fb32-ea7f-4080-82a5-7bdf5e0ac15f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "175dfb34-deb1-438e-a95f-8f1ad5acbc07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "277e883c-8224-4d42-8944-67b3805b2570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef24d660-8550-4d7e-be6d-78c22fd0932a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d50059a2-108a-4025-9f07-ef82f83681f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c57d2de-733e-411c-98f5-3c32f31be85e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb71b62-1f6d-431e-9e41-818770b7abda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a484dd21-5297-4b83-bbfe-305fc7756c1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f506a81-a4c8-488d-a5dc-1f501f84304c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec78e667-4190-41d0-bd2a-14cffb195792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ab7c74-14e4-4e49-bc5c-3053a1d66c47",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "950813a3-29b1-40f0-8b69-4bf56a49c901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cad264f-f097-4214-acef-a8ec4c320666"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e907980-efc5-4909-9136-04ae59494c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "07f22925-36ed-4dec-80b8-943e189d7dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "631fcfc6-7298-48e5-b75d-85f4794a0c6f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4971df-555f-4754-b28a-6e468adfbbfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91f40935-9b6c-4ef8-ae2f-c31318679b45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9cdf537-c6d5-4ad6-a632-7cea138d9929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "aff1cfe7-69f5-4a66-b289-ddcef7f04a31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e88e3d1c-e099-464e-b404-10421307685d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e534131-4b2e-4561-bafc-eec28f5b102c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dd7252e-f037-444a-991b-1676556f8ca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c5ac12-a2a4-4837-85d7-0957f32f0ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "904f91e9-ce1c-4cef-89be-083b9415fc6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b912b43e-18ed-481b-bd21-2346d9a99f8c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea48b3c-dbc6-42f0-8aa0-d59c424db025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a43faf75-c598-4533-9f51-a74220b1cd42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa980378-3b14-43b8-a5c7-74f87c8e381e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0cd77b8-3c90-472e-ab99-4ceafa6a6a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0562114-a6a8-4b39-a990-9cdc3a3edf23",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c370c52c-bd15-4f4e-b8f7-ac768633d29b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a3a272e-ca57-44a2-8e74-34c1915dda65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c6909f-6892-4085-8628-3ec089079334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e57edbc-5df2-4e58-b921-75aea03e240c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c1beb6-065a-4b3f-8c4a-83f48fcca138",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d2c928-92fd-4b47-a329-24da8dcd2c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f2986ef-ed4e-4f17-902a-54123773b171"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "089b7ced-daa7-45c9-a9e5-3b3bcf7bf0b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f90830a0-382d-482e-9a9f-5527407ebce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40395115-fade-48aa-9e66-bccf30d112e2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be5b49d-a27e-400e-8c00-6f2088c0f6d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95a9eaf4-e2e6-40ec-a29c-2945d8a36ac1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c7ecd9-dbb8-4e06-8342-fd4cbd9637c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5c89ccb-284a-4e27-879d-57f58a718c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36ae7993-c387-40e2-8afe-059faec457a4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7d898b-a03b-4336-bb8f-b0ddea5dca93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ce6437a-84ac-4d38-804f-dc0547fba74d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb13777-68ec-4a4c-bd6f-09d1a6c538ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "075cd318-fad5-41fc-b54e-39ab38961b82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176737a6-518f-44fb-99b3-9ba6c0f2e201",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "874ddc5e-4d8b-4e3d-87f1-7c5a7929b59c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "907f6e8c-c39e-4bb1-810d-12cf2c3f3244"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5beb6ff-4c28-4ee1-af55-80bab9d1e83f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "364db8b2-762e-4c3c-91a6-3d2df1b8776d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f19c007-5b5d-4c3e-b08b-daa93c071998",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b6f67ff-d6fb-42f3-b2b3-9babc9635f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c0baaba-7f5f-49b5-a44e-93d69bc45b31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de13a93b-a066-43a7-b6db-22207ea8c061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e699f3a6-17fe-469f-b1ce-d186a5732b0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08da997b-aa53-43ce-9c54-bbb76864eb73",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d90fa302-0f92-4e2f-90b4-b96b54f83206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20d790aa-64ef-40ae-b181-5e9c0e90dd42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ac7640-67a6-4835-ba72-405e7c90a497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd172daf-95b1-4dbc-ac8b-7e3dc41518b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6521a0d0-eb92-412e-bf39-d6e8a99f45fa",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2805ec2-122e-4e1d-9d53-3e9d94bad10e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b3e2b1c-8392-4aa5-b496-88479203dc98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c7e0b37-3d27-4423-ac86-6c762e58b493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66f22d2e-7d0c-4735-900f-40e4e1f92bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0554810c-fb9d-40df-b575-0e70fa1c7361",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab55943-3954-4f55-92bb-aedf8b92f634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19c19e1b-fc3d-4801-85db-884e20b4608e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b14360cc-5f5c-4976-b804-e2b4efc5985d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65b22611-42dd-4fb4-84fb-dd1dfb667be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b0be043-dd3e-401e-9fda-b20a1da90fe0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf872e60-4392-4245-a1df-42b13d455223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49d61ea1-dfe9-4805-9691-a0ee80d3272b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a0ad0f1-d937-4e22-b16b-0668d6d4b924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df5f3bfe-7194-4bbe-8f2f-b8e22bbbdc4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c55ec6-ab00-4a05-8b8e-165f89d2ef44",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9469a96c-704f-45e8-b414-e129c4228f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "207680f7-8055-4f94-8e34-3f3973fe6bb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c42a63d-0ab8-42af-a560-c1e5b933a360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d798562-2900-4018-955b-1369c17a4df5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67da16d0-cfcf-43aa-ad7d-faf6b7f34a41",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86f95676-d7b6-4b2a-adf9-460c612bbade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98316f08-6d5b-4038-814b-a7c9f8df2ed3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed0ab03-b656-4422-b065-adb3fa798468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0fcc5ef-ac0c-4a6a-84ef-e5cdbf12f39a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "121f808e-05fb-41df-b35f-05b6df06ae85",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b9c385-c3be-449f-9e66-6e9c0bfe0b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "804b0bdb-33b5-47ee-96d5-f02ceb679649"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d49710aa-f890-4586-8bcf-9d7e2fe7d70b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7828c794-a640-4cf5-bc83-c1461cb1c133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fade94a-6edd-40cb-bd43-2be74ef42d7b",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace7b7bf-66d9-428f-a6eb-26386bc1a417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a424c49c-189f-4ca3-a055-8926094d38b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b94e54e7-c26f-4664-a0ec-194fff5f7745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "637b7feb-44cc-4ecc-a487-188beedbb39f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8e2e01ad-10f5-40b5-b5d0-4e5722788e41",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5bdb0b51-1224-4bb3-a5d5-cf42037cbc0c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07795ff1-112a-4f45-9a5d-5c4827d69c2a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "369facce-1d17-474b-aa10-db8d69fa2cc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e552aa15-e8eb-43d6-a221-906a708e3356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "edb114cc-a10d-4b82-902e-0cfd0a80974c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13f6a98a-c2ab-4846-87ec-b07691cf392b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f3d7eab-5ab5-4aa5-a66a-a0305d0bee10"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "05dc6ea7-9a38-4290-babe-bd9291321ea1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "78c0d21a-921c-42b9-808b-6b8ae98d0a32"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c2579e9e-2492-4122-b9ee-13f41c04d889",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b9846b72-71f4-4577-b0ed-634d9f92c14c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aa7d3b43-093c-4278-afef-ca6e9a52dfab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "20e1cfa9-c802-421e-ad81-b0adb48844e4"
            }
          }
        ]
      },
      {
        "id": "e90fcebd-9a07-4770-b4ea-920739a604c9",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "d1ab3290-69b9-4004-9c4a-9ca59a3b02df",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7d98843a-9292-497e-814d-f7c1284544a6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c2bd3018-cdc5-4b51-8a52-fdddd8d99dfd",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6cf6d2a-5d85-4578-bdbc-5ec3c193350a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3142dd2d-dcb7-44c6-814a-9dab23ef3e87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6039b71-edbc-4f86-a445-3a7915cc9237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "08fc8fa1-8874-4915-ac24-5456c93c6adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "556d77fe-a474-407d-8cc0-927b9c403c29",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00edd23b-643b-4901-937d-658f88c49d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "571bc154-2482-427f-b3a1-63e3bde0950a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "165b193a-d6b6-48e8-9340-1bde94b22abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a27ea4f5-bf17-4e1f-a27d-0c10a6620bce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a47da6-8259-422d-ae95-e18821c78eff",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73b97d5a-5ee2-4fb8-9554-aae423671752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "475c0d28-ff3c-443e-8b38-cb99923d89f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa17e4c-2109-457b-aa17-b1d201a6c928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d7d32b5-1239-4948-9681-9a94f4e9a4ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3197eae2-48fa-4ab5-97aa-d32a8c2f6730",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d6899c-2204-4b27-b0b3-bf25ed5f06cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54bb0b35-be50-4985-a527-336409a6f193"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e9ea167-3ccf-4810-a459-9d01428ca84c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2c43c13-6bdc-4b09-a0ec-59b532f89a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27358943-be1d-4eb6-968d-9b3c7544196a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49cd1cbf-47bf-43f5-8174-e9cbf4dbfe58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d6c1a40-453c-4007-b1fb-c981c12d8535"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e920d0a5-ec08-446c-b1c4-182fbdab1233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "23ea73d4-a494-48a1-8af5-618942d4a41a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e5f07d-10fa-4ba0-b02f-70d66fb3769f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cefd239c-8bb3-4a99-8e04-b9303bb738f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2363e0a0-592a-4faf-9fa6-d63a6f4f23b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce035102-6b3a-4feb-a98e-60698b3deeba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba1d77fe-c3d4-45db-a0ca-7181cccec38f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4635df-3424-400e-b2dc-70571579d429",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d9af5c6-126b-4089-a691-ecd66c320d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64f3922d-324f-45f9-8815-47fdae3f56d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d0d47f0-3d00-46fa-9840-5612b1f1230a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd55d535-e8ec-4408-87f6-bf4c6d76dc69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aed5918-2430-4ec0-b97e-a3251c246bfc",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b11cfad-f1f9-4f46-8938-c500067d78aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a28ad0fb-18dc-403c-bbec-63f79c91482b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc6c4062-06c1-4ee6-a7bc-1fba2cb5222b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "190c9f2c-2f15-4ee9-a4e9-f8d85b0870ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "667bc9ef-e953-4f37-8c41-cc87090e5a48",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d32ca84-58ba-4f90-84dc-8a021493af71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27e4cbdc-d2d0-4635-9caf-fdd3f208da70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "902bfdcb-1c9f-491a-a034-d57031ec31cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bb136ad-cd30-4e53-981d-2cec824eab53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c44ac4fb-5659-40b7-9e06-8cd9f9db090a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a46dde97-e896-495a-a816-f28ffb622e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4481167-aa8f-46e3-a86d-8ebb203eee16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8d9e9b3-a811-476e-a12d-d479210b6985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "999f852a-9152-4f84-b825-028d46389526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52cdcc46-8f14-4a9a-8187-33a508f3c444",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece7d5fd-87ba-43df-8feb-543423f43896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6194f0a-6f7b-4847-b991-836681d25d5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b2a27d-cc7e-4852-984d-664be20c2dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "bfcf5ff3-68d3-45b0-91b0-5b4910fa8fe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ff5c79-e361-402e-a6b9-9fb5f9643bd4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0c588b-99fe-4b77-b22a-c0c621391921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afd628fd-6af4-4864-9d2c-6c88fa57822f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f589dcb7-41fd-4fe5-8326-ea5f50136793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8f300e7a-1846-4395-998d-84edf1030ab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d5a8caf-3687-4c61-9d83-68fa1a0ea35d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "182b8bca-a982-4e11-afe8-44ef25188065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "286774e2-bac9-44cb-aca5-e01d9f6aae5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c155bce3-ed46-4df7-8618-8615a55dd6dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa26f8dc-a16a-4541-a769-1c5cb7bda775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7483dd96-44ae-40b6-b14a-10a4ef53d71c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "909c2a0e-ed41-423f-8b16-f94ce0542d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d85a1140-d3a6-42d4-aa6b-3ce92f38812f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5191cfcb-7a8c-499c-9c9c-d29940f7a691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5852eeb2-1139-4854-b804-b601b2975a7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b032a8-d69f-43da-9910-5490902292ef",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a9a13b-1a1d-41c2-bb49-2e1ce42172e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e5a222c-a55e-425b-88e0-4cba50aee1be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a3d3a1-17b5-4c4e-9d3a-ca9fcdfefb8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0db448de-2771-42d6-9374-85331e59a545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50504088-45c1-4f0d-b988-33edec5118ad",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "166e7f53-581f-43e8-9aec-4a74651b198b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6d98744-7713-4bd1-ba36-fa3484ea334f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bf9f1e6-cef7-483e-9154-17aeacb66d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "426a9aef-dc61-4ffa-bf5f-c11d84a9efe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a7902e-7c9f-41e9-b1b3-b7ab320bd85d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb9c591f-8bb7-4d99-8044-1d1aeece4dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c8ef36a-952e-4c0b-848e-6af55402b915"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25dd5467-2608-4a63-bcc8-9bfcf03ce394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e735648-db9d-4093-8c3b-2d346aa1850b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b6db31d-7333-4685-a7bf-1dcc90c5cdc3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f09a23a3-8f26-47fd-91ea-37fe78dbd58d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7ab54b2-6312-4bf6-8fb8-c56149c02dfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa47dcb8-1afe-493c-bdc5-5f15f8a96727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "80f06e53-92c6-453f-9789-785847ff2a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8466a300-ec30-4848-95b8-f7b1b41b468e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f14737b-788f-4f8b-b899-ce2dfe17a056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdc3f629-55fd-478d-b090-78f6eee054b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e542a3e5-d2db-4ecb-b482-1ac13dfadfaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87cae4d6-8112-4962-a0f4-57ad7aace3c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f49d64c9-2781-449d-a459-04c97a865dad",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c89491ce-24c0-4f09-8e4a-625c6c782a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a496928-fef0-47cd-bdb0-2a133d22605d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ba3942-76b6-4e9e-9ce2-d899945364b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6d4ec74-353a-45e8-a9e8-516a6ab52b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e59b15f1-5ed0-4dd4-8be1-b7839a519706",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "083d268a-9dba-4a2c-b3d1-f51c45aa1810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa426094-dc4a-402d-9545-76facca80c3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc768c6-fa0f-4963-bb57-b3566d63dca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f58f0f5e-140c-4cb8-8425-f0e6c1ce9bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d7c8ce-030d-4f5c-b5c6-ba6228f6f7d4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "559b8999-cfe3-449f-b280-f528253ddc0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "318f3bd2-e74a-4996-8c9d-ccce93368ea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26cb54ba-b3f6-43c2-88dd-e230d6222b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbdf0fb0-63ec-4e9c-8f45-8f3535e5f556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3314da87-d375-41e9-9f13-e630e01488ff",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3fd6713-2247-4c63-91b4-c32da6412d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b738816-b439-4647-867d-bb84e5d88c3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb1b7fd-2209-40e5-91df-90da25f917d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd22110d-7186-457d-9a05-f7de38156d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e61bf31c-cf76-4e73-9303-3d8eba4913ac",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8025cdcf-d996-4885-b3cd-a6f69327ecf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46c427a3-bd03-4264-82e1-122c293b3764"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c526d0-6040-4c58-bc9f-fd817a4c673a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2328f25f-df1f-4427-94e6-608e9099b6f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff0805c-f824-4faa-b783-df477077164d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2717b83-5125-4800-ad5e-b312ec7eb56e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4593d55a-47f7-47e8-8728-44f63ae83011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8339ba38-1751-4640-803f-384c38b3f8f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c3c6e36-0fc5-4e37-98e4-5b1acd9d831c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27fdfff2-e7f9-47e8-8946-7e4eb09c1512",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1ecfd16-2261-4663-9a12-c2aac50c1481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ccd5efa-fce8-45b2-8077-d7b542607452"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d847a27-12b7-4203-b04b-245c114b8bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5e6ff91-5bae-465a-9e9b-09bb0fc3fcdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f329d1ed-e1fd-4928-ad90-363dd1593814",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b35acedf-ebee-41a7-b6c4-c67d1867e3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ad0cd8f-fcaf-4d60-8200-bf79895afbc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5efe9ea6-31a8-4df4-b2ba-2c5c12272246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb64d53b-5626-480b-aa11-8267567bff20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e7cb17-99a5-4f69-ab68-75d45997c1c0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ab6110-30dc-42ee-917e-156b6b96b907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a0101c0-3776-48fa-bd8a-5a57bdbf9811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d27b500-90d5-4eb5-b723-f8db612e0ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7129c4a6-73c3-4d07-b539-b64a2741815d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "072a2658-b25d-4e18-874c-3caf9018226e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "514170ed-47d8-4210-885f-a576284bbf94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05514dd3-ce6a-45b6-be99-860876abed2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08536667-7e7a-48fe-a826-aee8cbe59fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82f961dd-65eb-4916-97f2-ca5b63a2dc45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "706f22a1-9d00-4a78-9fcd-c0de689ace50",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9c40832-4d15-414e-a96f-6cd167dedea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e167ecc-1cbf-417a-b672-43e06b225d76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5551223c-f92c-4838-973e-298eb03e2217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cc07cc0-815e-4b99-9232-1d849370a2d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e97780e7-a937-402b-83ca-df57fdb640be",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05601a4e-9d7f-460a-aff8-42018a7933df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "901bd78a-a8a1-410a-b824-65dad0185557"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba96ee09-85bd-473b-be3c-4cf7e158b35e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70586089-091f-4940-b4e8-c4fcb05a67ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9734c01-038d-499e-87ba-c8da1258500f",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f9ae926-051e-4d21-aefd-59bf8d949e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68ff6cf8-7d01-4b12-864a-35e070cf0c77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b85b43-fbf2-4975-9e6e-e9c8e4a1b047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99583164-520e-4bb8-bbe8-8e6d6bf502e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd94e828-8655-4655-89ea-6cad7cf30d73",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab774095-6148-4180-99c0-6d3f15a1f68c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8b91d25-394f-4816-b0ab-4ccbe8631ed6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a0435fe-42cf-4ac2-91e6-ead521764b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ff83fe9-8f06-4188-8b3e-667467d35d79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb7285fc-40be-4ccd-91f8-3d6f6ed29ef4",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "989fd16c-1db2-4061-be5b-5f9e614b4662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d3a5294-41b5-4d22-b682-dc0654a649f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a0410f-6866-4a1d-8c3d-f24ca9f754b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "350a5e3f-3f43-4966-9043-e0f35c9ee539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be22a7c-05a9-4cc1-b430-e2fefcb71f95",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3376a1a5-3aac-4094-acc5-8984cb32002c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b646c596-db14-4bcf-b1e6-7d9f8b03f856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22e79325-4f33-4168-884a-92a3c2e4ed70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec04086f-26b2-464a-ae40-123888ae68eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d80912cd-ef78-4d7c-b294-7e66ced8fc69",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3333a11-d44f-42ad-bdf1-1dcb4bffd89e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d701d87-8461-4bf8-9e16-56378da350bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e302b65-7ef3-4f1c-a585-0c080215a9f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e22b6c6-6bf5-401f-8b02-411e8e4c896b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1e72fb-095d-4cc9-9ee7-ca7fd1bd2892",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d93d81f-a7fc-4aa9-a0fa-fe51bf4331ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b73880e4-41cf-4bcd-827a-def600e53b38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "404b9e99-bdc7-487f-bba7-a34f38d2cd04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03601351-fbac-4740-a70b-a4160ec635c6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "41d69c29-a904-4831-8e97-0e3e942e143e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "df57823c-e35d-4ed2-b012-2fb8f1b755dc",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08543766-d01b-4a2d-9fd5-a651e1efa1a1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c0c0ca68-3566-4159-bc3a-3bae6117f797"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef231b87-09c6-456b-a7d4-d9d7171db733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ceed19b9-8ecf-4307-a3a1-7aebb86a2c87"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a5d9543e-20aa-4cc9-9247-049a33149eea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d425da75-19b9-46f2-b1ff-6072561c78c5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4adfdd9-15f6-4a3b-a715-6584bd3d41a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7314d00f-47cc-4e7a-a0d2-ea64e422dfca"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "91aa648e-5379-4597-9632-23f5b7b400fa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "70b87ec4-ed79-404c-bddf-d5968b1da117"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0d8116c4-eeae-4aeb-adea-180160473c78",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0e02e716-6819-44f7-9aac-9f6da5e9dc9c"
            }
          }
        ]
      },
      {
        "id": "a3460646-cdb5-4336-bc08-438747c139ef",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "212271d7-c0d6-4922-8fd5-9d623cdcd372",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d9302c01-dd4f-493a-9405-563ebe7907c8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6caa5f57-9a9e-4ce9-9a25-99b89b2ffea4",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "184f2875-9c7f-4b59-8689-619c29b3e69f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "591e845c-2006-4f22-a7c3-0837fcf09675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ecf36b-2038-496a-a24c-4e1a62d4099d",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acc12e01-a1aa-4940-b1b0-1aeefe2eb2d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5bffdf7-2328-4f5f-9b52-5817b0ee8933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ba7404-accb-47ff-af40-4810837e7136",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a4d1b63-966e-4568-9a61-4ef36bed8d40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f49715f-674a-4579-aa07-a068146d6490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1c3bc52-6402-426d-8083-dcd001096c08",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf376549-9d52-4979-bbd1-ac9796aba40b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0c8c581-c4de-43bf-98dd-9892fa4879fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6408b837-13c4-43fc-b9e5-0d50a11ae679",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7496c476-fd36-4fc8-a52b-b99a1b01923c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa62fe75-a70b-4ac4-9e6a-9b9507c15642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2447e22f-a6f2-4da4-a058-fcf722ea39c0",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1621cb00-da90-40c7-b07f-62e1eaa61e5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5855f460-8559-4bc8-bc59-106a3dec5e04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "153ecb6e-2645-408d-ae16-b8b5c4ecf67f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ed59fe-1050-4456-93a9-afa647cf59c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82d970a2-09cf-4123-8299-c15404f5a471"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b024b4c5-04d6-4e47-9033-3a46b4a95316",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "985b32cb-9500-45dc-95f2-c9f0f6046e69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a09c4d-32e5-465f-8695-7cb1a0bbcc96",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab076e1-068e-4cbf-bfc5-6c4182830441",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5408ea1-6b88-4efc-8fe6-58faa0f21810"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66fdbc67-b8af-4304-8538-628e992a92af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c31ec940-1675-413e-941b-e1e331fd26f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67aa8410-a2e6-448a-b7eb-da7bc99b90d3",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee1a28a-c882-4dfc-aead-e4bbdf278338",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2a92d6c-82e3-48e8-b315-2c5d0fbefd62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "020be2be-92e2-4411-90cc-6a269469bf8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2f83dfd-6d6b-45e6-99c9-6a4d5e3a4167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b4ee23-76d4-442a-92b5-07456f7b518a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb22c235-b492-49b3-aba3-9a3089a7a4cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a63bbe8-dd0c-4060-bcaa-6554843ff149"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eafcacc-2676-447d-aac1-3bbd44c11e89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f796a19-0ca0-4323-8064-f5cf93df312c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40bf8386-4dc2-4cd9-94f5-cab43c5ab574",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b64aa2a-887c-4d5e-b794-54de7421c9d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55825a64-0e67-4b58-8c5b-bd1397543754"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1722ce45-1dda-4436-8b18-95ccf7494b15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f565d62e-99d5-4713-9e3e-3e3cef81b66e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "235cd402-4b22-474b-a38b-ff49aa6a608f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca0aecb-3d86-48f4-ac7d-4ada9ef47b75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef049038-8f55-4a32-83dc-cc6065e39849"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc5ef362-04a2-475f-a5c1-6cfe7125601b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "990a1700-7e91-4d4f-b150-296b972b2cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f86f320-d131-40c7-93a7-074f738e9fd8",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f823a9dd-4011-4db2-b954-3d945747dea3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30b0f7c1-20e2-45a7-9041-908bf41db179"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "844cea16-0f5d-4d04-916a-71271b96a2b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea134708-1795-420a-99cf-fac9e3ad7d5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "121287c1-a563-47f2-a2b0-6c2e8fa48a98",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b051279-e174-4741-b53e-373c97f6bf46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51ea97fc-78dd-43c1-99d5-7eab5ca38345"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b7c736-d1a9-4f09-9fda-5b7f880ee09a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d6f085f-8239-4e7a-a279-18f03874ae16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b1221e-866a-4980-8a0f-56fca79370aa",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6895540-9db6-44c0-9051-456198cd77c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ef31753-0026-4cb8-9ecb-2d6b8a34b41a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a9597a-6878-41ca-a378-7f3464a8fa75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afc5435e-5c8a-46d3-9b52-4f2d37d856b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c9e252a-dbb5-4186-bc62-914444e71c6a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b92a7bd-9c15-4993-b878-f7e5144a4e83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c38d3652-cb16-425f-b298-da1718f5b747"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "821430f3-19dc-4f1d-b3f3-3a469393aaf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abd58a57-d4ab-4dd5-80a0-2d6399f8944e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fafc15f-5620-4b11-939d-41bf0119b5da",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d640a135-b2b9-465c-944b-f0a09f4f8e2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84b7636e-cf10-4616-ae3d-938d5a6e533a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b657f0-daf3-45e9-b342-793e76eba972",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f9f760a-66e3-4795-9a3a-b086a1732dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "287daf6a-a050-4252-b4c7-d7f9689131da",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b9e144a-759e-49ec-b3fc-4d38f17b15ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7ed8abf-7030-4da1-82b6-7032c9e9fcd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c59282c-915c-49dd-9a64-c1a9d0d890b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce107639-fcc2-4f5c-a49e-ef900d461aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4eb87cb-c4c4-4c6f-a514-90a2ad689670",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d10bf262-032e-4ec8-a420-e7ef18398d07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48e4e851-f403-41a3-bc11-31336f5ba694"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b307f73f-9b70-4cb7-8cde-bc22c022082b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66c58d51-2904-4108-b5b2-9bdf4cc14570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c42493a2-700c-4178-9c43-ea05e7436dd2",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ff8063b-377e-4cc0-a7d8-36672bcd14cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6eb3637-9fa5-4af7-87f0-933be89342cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d66258da-7b92-4d81-a74f-f0e5e328ba8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8caefa9-4713-4e22-8cce-323499eca82c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4125b625-50bd-4a7a-8fe4-ea34a6dba4a9",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c74d30-af9f-4c8b-b2d2-eb8450b8876f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f63ddd9-a8d9-4248-832a-962115b932c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3887a4be-72e9-4f9b-944f-0c81157ce8ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ac77387-4ea7-49e9-8021-f9cd02c551ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce698fd3-f1e1-42dc-8981-af96d6b422d1",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c01d5d44-3598-4a0e-b742-fc32dca4387e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a102845d-f93a-49c0-9cdb-60fd9ef23989"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c8e1848-5c30-48e6-bfbf-aa71cb3c10d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6260939-7459-4ff3-b993-3f6e668fe3ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36c70208-649f-4518-a1da-8300939d46a0",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "118c2172-43d0-4907-b7eb-0ee0e31493d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88074ed5-122a-4cf8-9f22-64dad1c67829"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b54d52ca-bbc9-4cd6-9bb2-6c46df6c179c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9435ba8c-8e02-4b93-b2b8-476d7a644a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ebccc7a-28ab-4665-993b-c772dc0bbbbf",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b25580d0-cfa9-460a-bc6a-914377cc4424",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e0bd147-109a-49f0-9ee4-571fea7b4ab0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9862985a-5897-47e1-b74a-2ff3e12a436d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89eb3d62-d6c8-44f1-a311-c5e994e016bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d7db802-979a-40d1-b445-92cd4cab5702",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14bff347-e4ae-4629-a72f-88e4e839a68e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a83bc99-980d-4904-906c-fbeb16c1f223"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8789a57-31cd-44e1-b0a3-3a15efc37256",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3a1d862-3d22-4df8-89ea-64dbae153ce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ecc752-5a88-4035-88f8-5b78e1807ca6",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed4fbc70-b476-473b-ac67-cb7be02dfdf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e64d846-3234-40e3-913d-adeca1b9b7e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "403daa2b-9e80-4ea1-a077-03f5709482a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dd9daed-bfd1-41e8-b0e7-023c280e8551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e82da7c-00d2-4289-8c4a-463c78cf4ae6",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a97c903-016d-4efe-becb-05b30c98e7b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb56504f-3d75-4ff9-9a5e-9cbffa0d402d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "991230ae-4b3c-4ab7-9021-666b9b2b3ae6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a2bab40-b9d3-4306-a7f0-b25f570af628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6152509e-e3bf-492b-85af-e3958acb1d7f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "647aa6a8-b9c3-4aff-9a94-fc58ed6bcbdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18f0350a-7008-4109-b4e6-3b973b0e3b90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e756d5cb-c48e-4b99-8852-f6b8b5034bf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83125adb-38ac-44a7-ad45-06c9c2a66736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0212145-903a-4e24-867d-8d42a9ef9bd6",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "443aac7e-087e-4b0f-a9a6-c4be727e5ca8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dec423f-dbe5-4b8e-930f-c72e6951b31e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92359672-3741-4283-954d-ce2ad201dcb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b55bbf37-c940-462b-b80c-6d74924839d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bad2fb6-f6d2-4697-b11e-bae40c98170d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bceaee1-56db-406c-ad69-b3736aaf2476",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88fb8f83-0bdd-49f3-9ddd-5aa61c2d4e1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e87932-6bca-412d-880a-25d35836bfcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7fac236-73b1-497e-ba11-e05b5cbe190f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d03ba23-0696-4c40-bb87-5a0e6fec3f7a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17fcef1b-417e-440a-8d70-98dcf1456f6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44a3bc03-db24-4516-a5cc-a94bce0a029c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce12151b-b078-4a16-9535-9fc4f4a503c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92f3c3f2-50b4-44f2-b299-9d4496811045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9566abd-015e-4893-9d45-df7ecae46cca",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b848abf-dd1f-4c31-b04c-b001d45e1402",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e419ef60-1f0d-41ff-92fb-521cb4901a19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29362540-498d-479c-b65a-0c43126b6b1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ffc6736-eda9-48c5-8b26-c2cd3cd3409e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d54bd87e-27b5-4d53-a959-0cc7ac739b5d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c9b3dc-ddc6-4af0-a670-274a1ac11c53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8493753c-489f-440c-b981-e9cae36a96f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ccfee26-ba47-4d08-8984-b3b9e83713f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f33e636-e018-4ac2-9589-cadf1563c343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e14817-9f8f-481b-b268-153ab0d3970e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0733d33c-090f-4f64-8e2f-e02fc69d8cab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "187ec793-c896-45a6-be2d-4a534732612e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b6f4c3e-34d0-4fee-aec3-2dc26d9d87c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "622e8f40-d628-4f86-b557-4e119b7e65ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fbe2298-a9c4-439f-bdb5-76047717a2fe",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea1252f-ac73-4084-9584-6dd0c58a40d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b189dcb6-bdc2-4a90-8996-2ec60e907299"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12446df3-8872-4dce-ac9e-95434c89b78e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b63c5e65-f235-45d4-9ef6-e7f7cd5ffa0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6e0161c-7138-4864-87af-f0ff42cc147d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fc5de7e-f6e1-4021-a23a-38848b374dad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ce664fa-a266-40c4-8984-34953d8d23e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e5a507a-b017-449c-a7ba-d5186700214d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa2233e1-8fc7-48c0-aebe-5778c873efa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "120153d2-172a-41c3-b063-96a590b473a6",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8adb56ab-cbda-45e1-b40e-191147064d10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04512f25-0db2-4cf6-82c9-71b0fe1dfaa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7474ad8e-cd8c-42c2-a542-56f7dd6dc5aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f88ec0ad-747f-47da-92ab-4d1b4c0fbe07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36884a19-3e2f-4933-81ed-2b3bfa3a2fb4",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f9d7cb-315f-45c8-acfb-1e6db7c1d56e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d856b156-1249-4c6f-8860-5ad4ce581272"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "653c72f6-5976-4c40-b368-8c837e2deee5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f2c1ed6-bd54-4c41-ba5d-114226df942c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5b8ff67-0e33-4274-9a68-40d4dd595bc9",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5fcd33f-2374-4b5c-8b11-84cb4e66bb46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ec85d06-a07d-4f4a-92a7-6a94df12f861"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0edf0bc-331c-4ae3-8f42-8df06cfb9c1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f85313ee-2058-485f-a024-288bfec6c7e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "189c7eb3-c179-4adb-bb05-c01cace33368",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb68f5f6-e0ee-4649-993f-641e1a1bc34f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ac6c55c-2b72-4c54-8878-9c9d6d698fd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5309f9c6-4f99-407b-a3a3-e56564a7f854",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be0741e4-af6d-4fa3-b182-6d63c7b5631f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59f3efef-5835-49f5-a730-26491e3a99ff",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a0c1fa-4252-4812-9cba-b4f4a44d945e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d655f36-b03c-4d2b-a977-c8bfeef7c1e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1761cb9c-c81e-4f5b-98d2-306a1b0b4f71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "173c1dce-74bb-4ff2-a668-b964f2f84a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "317b0bba-c72d-4c4e-bd74-90ce45ca7cb9",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab7c304e-c0e6-48da-ab57-1cc0763bf070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69b47056-ddc0-4224-a4a9-7bf9b548a46f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b821dc9d-65ec-47b8-9f54-b3e0372fdaec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b80248fe-4245-4fb0-a3f5-ac4b1b124abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b9f698e-5cd8-40f1-ba87-379d950f7b5e",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36af1748-a9f8-444d-a637-bfff0fae0b47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7c0afd6-63cb-4b87-aa83-7b0043826b99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f875d89c-f2ca-4ee3-95ee-f3ed5389ddc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06d5fff3-b25f-40c1-a209-cab166a30c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ee9c64-c2b5-4d05-97cd-38ae51e7fc4a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "508564d3-1001-44eb-99ab-e82313dda57b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3c41306-3e41-4a3a-a9a7-c92c539cff98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "885ffbd6-2a3e-4cf5-8c74-562865cb14c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42cc311b-a3ce-44a1-a854-61b4d091417d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d2c7a9-d821-47b2-9f51-c460f9f5ecdb",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b784cd-e0db-4be2-af72-632a5e18406b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da91c83e-05a8-4ef6-b29a-56e6a3c57905"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a71d3e-3b05-4fd0-a26d-c5b0ca71cfcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c85d705b-dcc4-4743-a5ea-21403db028fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a78f02b-b4a3-4e68-906f-4a65461ff0f7",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d98dc47b-d206-456c-922a-22765159be3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c97539f2-15dd-4cc3-aeeb-76f68081eefa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e0e56c9-9b9d-41fa-8483-4a8544f7c643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f10fa21-7225-4d61-afc3-ee07eb090fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "448c6787-86ef-42bc-b00d-2a5b5e0aa635",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a518d251-1fbf-459d-86bd-2368b18631d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91c436f2-23e4-4baa-aa14-7eda9c16d622"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c67db417-038a-490b-bc9b-c5a619b864db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "133c84a6-ca5e-43a5-b7a8-2979b7773f41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d8fb7c9-d059-40af-a4d5-137792e6e17d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d1bf49-77c8-4962-8170-6df698cc7c07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1392b0e9-a834-42b5-8578-4f367e0e2341"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8039267-db3b-4373-b5ef-544d591a4ffc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "631671be-8c96-4288-9a84-15a0f395f64e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44ad7f6c-ddcd-4798-9d8d-1d604979f06c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c31a5e-b7c4-4be9-b47a-73493ebb9725",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13b3b6e2-9030-4d71-97c7-f45ab3406f5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b2f1a28-6c48-4ca8-a45a-c153e7b10ff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a6148cb-8cd8-4b75-86c0-720950be4049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1027a80-c265-4582-9efb-e6c50f21af67",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "280c23c3-ab57-4261-a145-7c06f3515b63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44630085-6521-4b7b-9847-053258bdc52d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25dbf08-0e87-4520-94f8-376ca4306127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a64c2c3-0a65-4dc0-85f7-426b3c71e0b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465722df-2fc4-43e3-bd55-c4a33f398476",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2759704-f2d3-4f93-91cb-cc22ec3634bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cf3e71e-b89a-49b4-8430-3d3f3ce86986"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f29e4d99-e0e6-4c0e-a071-61f05df0ccb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fff44c8d-8d8c-4c34-a713-2424403ffaa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc316987-2a9d-494d-af84-1df7eda41e41",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd2f241-6725-4dca-bcce-210c664e68a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6581556-e80d-4a0b-b6ca-fdb0abb44a95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "963f1c99-3f8d-4a90-8cdc-8bd255e9c9cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fdb68ea-5f8b-4f51-9981-5081d65d3407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d16c4da0-8dc9-43f2-bad5-92721126f9a6",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f67315f8-d85e-4acc-8269-f188beb39a41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1367c8c-7000-4d17-884c-53ed0ea01675"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f2ff5d-2356-4407-b85a-d7833a845e0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac821e14-fa85-4832-b9c1-63b0aaf3c9be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "395d95d3-ee95-4130-be8e-d27baba7ff8b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b4fbd0-cb6b-4940-9a6c-60f80a4aaa71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17f10db1-77b9-4b18-8e5d-946c18455713"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bfb8aeb-2f5f-4c1d-8c15-7484388e8558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b2b8fc5-1307-41e4-bb62-c6590fbeec57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2970129b-2d18-4b1f-8cbd-c3c081a560f9",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59fad474-5aeb-44f7-accf-4d2774f87f89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c2f2ecc-e4f4-4493-9391-7abbc60dfdc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "237642f6-69aa-4cf9-9592-c4f9d632f94c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68c6c56b-c74b-4009-b7d4-2ed63688cfb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "599aaa25-7c9a-4916-91b6-a684d105eb96",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b844ec9-42e8-4443-ba28-575bd01d56a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc363c66-d9ac-4248-aa7f-8b1ad48e0994"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b201b988-d572-4375-ae6d-dc45d83187bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b3d38a3-8aab-4ef2-8f16-482dc3681213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fdf04d1-5547-461f-97c1-939c3c9fe67a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba128fc-66d3-4700-9545-38b8e1e75583",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fca5da97-664e-4866-a2c7-fe79171b7358"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dce5998-84bd-4755-ba32-bb0b980a3722",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3145c3b5-093e-43cf-a55f-1b0a3c47db7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74a170c9-a46c-49cb-ba43-a10636673465",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87702dff-7732-4ad2-bd3d-2be6c102bdd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c001db3b-712f-4e72-a8c2-3148d73f92ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26f8c673-4169-4423-97dc-90127edef204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc2c6c74-06c8-4381-ad45-e4148c82e919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ba5b68-f9b1-4558-b6c5-c2720c0fd997",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c69bcf-b250-4fc7-b6fd-354a49a74d33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c8f98af-6cfb-4873-8f7a-f26078085446"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c60547b-69ea-43d3-bdce-4200f3d45851",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "029c5a6c-1254-49bb-b097-af148dc5d09d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce42605-ad9b-4ffb-a55c-d367f9bbcd37",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "481ec721-7995-4317-9409-a7b99e6a88c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb540171-791b-4613-9f00-4909bd409d65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "817f0147-5908-448a-9779-761d70257c30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24e5bf90-018c-4cc2-89ce-573fc365d7e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb3f6b6-36ca-4545-a2e4-24f415ee0ed6",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea0cf00-ab2e-4cd3-81db-1ee36e572ff7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24ff8cfe-12c7-4667-ad75-4f72bb49aea9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c741c615-e1a3-4ba8-a0ed-50f3d260939f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e609dd98-4e17-4bf7-b84e-08513280d14c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d49b5214-31b6-4e57-9ec7-358d4b13c1c2",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "377d7f0b-a9b6-4752-80d7-be599d345fee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c35ab25c-1bb6-4a02-b90d-08553a628867"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7937cc16-d325-4507-a1e2-80586f0f7e32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcfef866-1fdd-4ccf-81a9-834a5bb1121e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c4272e8-3350-422a-826e-b13e02c0f4e1",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b802e409-3d8a-4c7c-a64b-fb6860623698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc737097-00b9-4631-9c69-ab095df12176"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36a7b3a9-f4e8-4608-936b-e1a1ab5f0c67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aad28655-b72c-48cf-8f0d-155ec6ed639d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a631f2fa-6912-483a-87c4-573d6392f5e6",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c2a22ec-f3b1-4876-9ca3-6f97f3770d6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50ed5d39-e978-4dfb-b9ff-837c01bc0bb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e766e207-b4ec-4c02-8a9a-b6b9627afb4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "802c1ac1-81bc-4031-b25b-9477b95a6951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b62e342-fe38-4c68-b89f-790e6c65394a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b8e3295-8434-4729-aebf-42bc2fa8674b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b968bd9-be81-46b5-8baa-950d1cf4d598"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "648829f5-46a4-47b4-9bc9-c401e7ab2cf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e4ad035-76ae-4a9e-a5c1-9b10855228f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0f02ecc-2afe-45b5-8300-cc8f806d9d09",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3d48cf8-4922-4997-bbb0-2be3fbb25595",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b748c4fe-8216-4356-9310-43a89d4e1f4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e420e46-e17a-4d0b-9970-ad11c5218a72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e86f09f-2049-4919-9229-1a6cf95a18ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f0bb7b-6685-442c-bd1e-056ea83b9810",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20856c78-ea18-4621-bd2c-b1f90f228209",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd367bec-131c-45a2-9c81-2f4cb9b51bfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1011d615-550d-46ef-ac07-50c60ef2783a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71fc16ec-ca49-49c7-8942-b15c5ee3b96c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8abdafb0-955f-44ef-a0b8-24da8d460709",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6e6bdc-9502-4c41-9a64-82f089c8a4fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abac8eba-5a5e-4ce5-aaa2-433f1d59126d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48eedc23-a210-4129-97c4-f74076bef463",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75b3f15c-ce7e-4dd3-bd46-6440048fcbd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc4ed69-d023-4df9-a545-b191f996cb68",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "719f87d9-2acc-4d03-89b0-f2157947952c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48fe9f60-7e2e-4cbd-afb2-8111264bf189"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8b7c08-b4db-4a49-91bd-4cb0d828e3b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7b8ca50-9665-4713-825c-e963359f1be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c38a606d-7347-4de0-ac17-cad566dc2d32",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5925548b-9fd8-43b0-a26a-db418e831b95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "743a2a98-0320-46ac-ba65-5416780225fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de1d621-61c6-4098-9b33-5bc9ffeb3108",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7a9dd6e-8204-431d-a55e-bc9c5a2fa01d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1823d32-e59f-4642-8413-58b1a1907845",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f0595dd-582e-4830-a3a0-c7cfe32bf95d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3ea7504-0e4d-4559-88a6-c0f46f080510"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c134ef82-e9f1-412c-8d57-70b94c8083db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb59a21d-f81e-41fd-ba3f-1bfccce58fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "430cc6fb-4bdb-49d9-bb99-4b7df6c16947",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8979d30-4982-4fa3-af52-0d2116221925",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7b2b61e-1c5b-45f0-b6c6-eab84275a908"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be379370-7c3c-4737-9396-fea5361fe205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3828fbee-2d0a-4094-b1af-59a8192b603f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "617035e5-40bb-47ec-984c-f29d280f5c9c",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b7d80cd-c3f8-4aaf-8c92-1db489745c5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b974f745-18ab-4224-be0e-d81c33714d33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3918a52-a2d4-490c-aaf1-e422bcd77b72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bfc9648-9e17-4efe-bf67-b5290adaaea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f7c994-420d-4f67-8cfe-2b09073cd6ae",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "671fa57e-89ec-4c02-b212-4abbebd053f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa6ecc2c-6894-43fd-87b2-09110c31098e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88e0db38-97ba-4fb6-ba03-fa8e95d2ed3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7db5881a-7658-4511-b4eb-74ba82e78cbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc2c6847-c3ab-43ba-8795-ecd62ef2d983",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94479887-b4e6-44de-b61e-bae086290654",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a55e3d4e-8798-4288-a45e-6c11fdff2f5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a1360f-768e-44c5-b2b7-93d81d3e3697",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0e02b71-c87c-4e6d-920c-2771f4ce8c6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "829c5ed8-ae6f-46d7-bab1-20d3bef84c26",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b40457fd-f8c1-4d9c-aab5-2a15ddd417ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82a8ba57-8f4a-4288-b30e-d0b5ff8e468e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab187c2f-01ec-4498-bd93-8dba7dca7715",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10ceb85a-b326-43b4-bb91-0c11ddc52f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ba16b96-78ee-474d-97bd-fac54bf43099",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1df0abea-22da-49fe-8326-c5f7ff7f4b3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd453951-81c7-459f-befa-d1a09a0f7cc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbdd7319-dddb-40a5-a944-0612c92d3cbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be680fc4-54ed-4efc-85b2-64c075ba7739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de268c1c-bfe3-4215-8fdf-7a0bb61865ab",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c07cf2d-d442-4c78-894e-268e4003a2b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b57dfb9-0a43-4377-9c83-7f6912df3904"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7fc9941-ab99-468b-a4b5-ad7f38a04e26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "580a48b3-68f6-496b-88dd-2b27d6c88303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dddfbb26-f8dd-494e-a588-9ee18958c2c9",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f67858b0-9a06-4bc3-aee2-890acc46849b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7768280b-4224-4b6f-ad87-32676a518afe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b817a9-1f2c-4e8b-bd7f-b15bd6710579",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11db0af4-0e7f-4406-9558-5f1e2d244ca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f388d45-0d79-4fd0-87e0-cecff0438ddf",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e52f6111-9bbc-401a-b25c-8efe1ec1930d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef00af1e-57b5-4de1-84b9-e51df4b2957a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "997670b3-f246-4c28-b9c4-eb130f06fbc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfaa3633-4883-4857-ac98-101ac7baca3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e2992d0-2898-4e44-84d7-517571e5a916",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aca8976f-369a-4285-ae97-2106b7a3ad2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7748cf50-6fa0-4281-8dad-10c93c2ac7d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05eb00fa-8b70-4eac-ad88-32468fbc1e92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9426d55d-fd08-4505-8524-8613905f2a37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b73a8f05-f42c-43b6-8eff-53b54f3fa4f9",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "154037cb-d144-402a-87ad-cd4570d4cb75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fcff0da-dee3-4b2b-b605-9a94f0a040ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08457b11-a93d-4f4d-993a-5f3e60f15d4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66d644ea-b071-441f-92f4-c9fd5a0afd77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e4a5c13-52c5-4675-aeef-edb6cc0395fa",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22290de8-c28f-4faf-b076-e838a8d4bcd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17987d3b-4301-4ac6-a51d-9130cd577257"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5eba2d8-770c-47e6-ad21-b3a3e4a920cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8688b75d-7bef-41c9-9c09-8e4e5a593b5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f9ac3c-a75e-4d3f-a740-ee88139a9888",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4383be47-27e3-43e3-b4b6-b970913d74b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8560734c-7e04-4243-836b-41a941bfb63e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61242d78-0e8c-43a3-b455-8a6b0b123fa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03fe2b87-3dc4-4520-8768-b396cdee6a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef7f8984-d4fa-42e5-89a9-26a36ee9c083",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9c3ece9-b11e-4c69-b909-07cc1099eb49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f82970d-5793-4af5-8f6b-1510d2b60788"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca02236f-963a-4785-9493-6c5a8b3e0033",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3e36896-a0a9-406b-a3e5-cd13f00d2c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4edac3be-ef75-4e8c-a73f-d58f11ed7119",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "415531b2-e51a-4231-b5a5-8e19dddee947",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fdce6cb-cea7-43b8-a49d-984109f49849"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d82b92-f154-4418-a0e9-d354d8566a25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a67b732-2cde-4dd7-828a-330d74e325a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e73fd760-2f6b-40c9-b44a-3e353ce866a5",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c964b427-08fa-4505-9d0f-52f2ea69c241",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c37c7ae-aacc-4d15-a651-2ed1fa5dec3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab4b01a-016a-451a-ba5f-4e4376a9e82c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbf52ae8-b998-41f4-8afa-8906d7a12565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce346cc2-a2d4-4e3c-8da0-26457444d4cc",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c63f071-93a0-4534-874a-f346408159f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1fed503-5f94-49b8-8e67-53f31c3b997f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ebe075f-cd92-4f64-a390-f21f5637f1d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9a50723-e5dc-4ebc-ab65-90c0a1c4f660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca09df1-10f1-4e58-a26f-10e141365b9d",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2bcfc64-ed64-4198-987a-96fd2583c3fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb120769-a6b7-4063-8344-8f47c5cc5afb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "821f6640-866c-40d3-9ad6-2388d623bcdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ef5a58f-1cc4-4c5c-893b-43a926c712da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb46301-f9f9-44d4-8b23-9b46827d7ddd",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c8221f-c5d0-46a1-9564-ba562745fa37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b77f0d3e-a196-4cf8-9f77-776467f52bb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdeb9c6b-0709-4ff5-bce2-1f036b5d8805",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac00f6d4-7695-4a34-801d-5be7a01ff52a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebb13bec-cda7-494d-a518-e68b32eb6dc8",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "580d7c27-ef29-48a9-8bc5-0834376cd895",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34540453-5d2a-4ddf-b1cd-5ddf85238a91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c35861a-5b48-4ace-b229-8b66e31867e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e01915e-5e3c-479c-983b-7b0e890ca295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eecb552-168d-430a-ab7d-fc8ea6eabf5d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08551d56-492d-4c75-8b9e-308c9ffb536b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ee77d9e-87c3-4b33-8c17-26edf215eff6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec604dc3-61af-48a8-9db7-8302094cf780",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ada83d2-d66e-441a-bb21-b6a5c050b0f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da03379a-57aa-452f-b79a-2300e92b7b2b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6baf98d7-1cc8-41e2-9df5-30d7d3824477",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f2c7533-6679-4ae2-8c8f-236753d95ff7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daead916-c809-40ef-b894-28a6b5617c2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e52a8121-8f10-4bca-b2a9-09ac9d9caffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac71c5b9-d019-4b05-b3ad-c7d414840dce",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a53dc87-c2ad-4771-9232-f6a888daa334",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ce713bf-952b-4d5b-b687-4357e4bf1620"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b227e61e-4b46-4993-b3ce-0d7d5fb8828b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf0a3473-592a-4b72-922a-60c59712075d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e572fb7a-ea19-4b5f-a466-e4aab478ad90",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bd1cea6-ed33-4523-86d2-2f1da84fadc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8ce88f7-034b-4433-b3b4-285c6b727d9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d88cab4a-51c9-4bd3-8573-edb8245c8b7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e62febb-c539-4800-8c8b-d58c2cba338e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee12beec-72b5-44f0-97c3-07110c2f9a7f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47a19b2a-09c2-4b91-b80a-d65cfd5022c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aad4a648-9d59-46cc-b0d6-f9a39a540502"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a622fab-ced2-4b75-9f52-f425d2bacf8d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a269c616-9025-42f4-814a-5a876678682b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c1a046e-160a-46cd-9af8-64901bd0c8c4",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "067bbecb-57b9-45e2-8e72-83ba1f82556e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e85d69c-523b-40e7-beec-6a51a45e5d1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e011661-421f-4143-b034-7e5bb4bbd2b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c973c285-7665-4811-a600-df9a2064ce98"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b16bc73-d68e-4c2b-8103-eaacc3b2970d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "866e3758-a46f-4847-9481-23f9ee2703f8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "44962ebf-c79b-46da-8396-34ebc9f2aad3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "882911a9-63a4-449d-a343-de738d4f4c96"
                    }
                  }
                ]
              },
              {
                "id": "806f145a-4d13-4fc5-8749-9f97f55b24d4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5bce4bf5-dc00-4e03-a2c9-f94933344b68",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e0a355d-2c3d-476b-ac0f-d43d1b9e43c7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c18b3a5f-d0f8-4313-9dd2-2d0e49f0e1af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3607090c-2133-41ba-a76b-4ef90277ef3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c2cf22ac-b573-4ae6-985c-5a9341556be7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "809e1eaf-0268-44e5-bd22-d7f743931490",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "463ebf92-89c3-435f-92aa-cd86dadb07c3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b232ef5e-4ba6-44cb-bdb9-4d2fd85be098",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88d090c9-dc23-42ec-bc0c-cbc023c99ed5"
                    }
                  }
                ]
              },
              {
                "id": "f92dd3d8-8aa5-4e16-b768-31391e76eb32",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "da7de5d0-e349-44b7-94b7-ec07e102039f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f71f467-912a-44f1-be23-3f5deefa2951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "339c2aa2-dcea-425a-a489-53e959387a5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc2859b2-18b7-4bf6-b231-e995b576e7af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02716081-7ae4-4939-ae3b-dfe97d81d316"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3cd56df8-c87c-42f2-b902-581c42e02d8e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ec4b2369-a57c-46c0-a950-28ee3491f434",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e218577-db5a-4b7c-bbf5-8db966708018",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "080988ad-9380-45c0-8a79-ade14dc3109c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "86752112-a95e-420f-85f2-7ee18dec2929",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97585735-9683-40ec-a835-4a49013d8ac0"
                    }
                  }
                ]
              },
              {
                "id": "9af3125c-efdb-45c2-abb6-3e7f1483c790",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "017003a7-0f79-4460-b66f-26c6d20a903d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e06cc266-7752-4ca9-b133-7acb4067f0f9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a5a1a126-0c70-42e5-9e06-05895949301b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "128d75ad-0924-48cf-9a49-56c76f232a37"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5954e5a6-964d-472b-a7a0-88120754be6c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f674b7b3-d2b0-430f-b400-93907c12c594"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6da24005-7587-4d66-9d5c-3162bcd2aae8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "00b41cfc-b03b-4ff8-a12d-d7ac9ccfd98f"
            }
          }
        ]
      },
      {
        "id": "3f6eb7b3-1234-48fe-b082-5357dee7dec7",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f15466c6-53ea-46ad-b3a9-a36568226ecc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d8121f59-7fb8-4acb-adb8-3c0fa5f62e06",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d0459357-afc6-4a23-bda6-2a578a6bdee6",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9eb166d-979c-4f8a-99dd-c919aa388c89",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ec53ff02-df8c-4359-b75b-6d3b0dd05f6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b612e0-53d9-4e2f-8445-a35104b9a639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3da6230e-7ed8-4d37-a47c-3300354f7d73"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba30540a-5cf8-464a-8a0c-bd16980a5e5b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31716483-7dab-41dc-81e5-9d59dbd5cda4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9facff6-9610-4b3b-8267-1d18dc2eace8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0655d1d2-7390-4bc6-b967-d7025d9e1584"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d2f2ccd0-b7bd-4e17-b6c0-648dbd10236b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a116ca6e-78d5-44d2-9865-88c886520eee"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bc5aae6f-77fb-4983-8cd5-51315c596281",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0e9cdb44-76a1-45e2-a4c4-523e4efe9352"
            }
          }
        ]
      },
      {
        "id": "8f036e2d-ba49-4377-811e-b1ad1ff7cc68",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "938a5d6a-d4a4-4d0d-bac1-064ebe18f9f6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ce111ba0-4899-4c99-8eca-f45c7f409ff5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9bb7a428-ab68-4492-8401-ed7dd59bbbb2",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ea50c2-e3c7-4208-a685-2758bb514a4d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a4560ae-e610-4d8a-8ded-b55a4e6ea9a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60011d2b-86c5-4adb-9f39-57daca892bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "47ed3b71-579e-4bbd-9b01-0b3d6f607840"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6d69f214-fe23-4b45-b7e9-ffbbd437c6c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "72ef9847-c3ff-488e-9d91-dea9cc9651be"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a588e8ec-49d3-4906-8989-7ac5f0c2edd0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ed4e0702-3026-4dc4-90a8-82b2eab493d7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d2d103d1-e2a1-4b68-a64d-37b2d3c17924",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2096592a-1fe2-445a-bd1f-92efb4e861e1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6af4b38e-44ff-43e9-b948-cd68bb7e9c7e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9c51d4ff-e5cd-42c0-8f6f-04fe5418673a"
            }
          }
        ]
      },
      {
        "id": "312d2228-459c-42ab-a365-346400644479",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "3fca1a43-c5a5-44ec-868f-858ab5166e0c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "706d695c-0805-4e9d-bdb7-87bc3c3891af",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3b6d1155-1d0e-4654-9909-41f9bf547070",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eefe13e-c699-4e05-bc60-4433cc8b7f1a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6e6f7fa-a399-49a9-b20a-1795cde56f84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58096198-7cb6-4ff1-87c8-bfe7173f9608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ba8fb511-27be-4a0a-a8e2-124cc9b74150"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78826ac8-1cfd-48e3-94b4-f5cdb14da714",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b53d538-4adc-4004-bb87-de7782c3d40d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "10a66b69-2e0b-406f-aedb-57b8a4231bd6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "73519b65-a547-474f-87ac-1f8b5dd39e48"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "538f5cda-4095-43f6-b625-452dcd7f49eb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d3ec8da2-4231-49e8-8a96-5a1119b8e712"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a02c040e-bf01-4604-ac16-c46e57e8e36f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7f4c8104-cae0-4ee5-9111-ee4b07caa4f3"
            }
          }
        ]
      },
      {
        "id": "935d9a1f-fd62-4457-8989-c6a3252e6caa",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "701a9b9d-cc99-45ca-b33d-f045b7a517e3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5f098248-11e7-40d9-999b-1e606e5199f3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b21079eb-18db-474a-832c-f457c1f90737",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "36922124-4802-46b2-ac8a-3eef6c6df25c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c607c039-0294-4e19-b461-09b2cb95a288",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 134.60563380281693,
      "responseMin": 9,
      "responseMax": 4578,
      "responseSd": 440.29490689614204,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1695774825379,
      "completed": 1695774875745
    },
    "executions": [
      {
        "id": "c1aa1110-56ca-4ddd-ac42-d3d577234db2",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "292247d0-d9c9-4fba-b42b-9095a579945d",
          "httpRequestId": "55c5de59-c9c8-42c1-a960-d0c967ef312f"
        },
        "item": {
          "id": "c1aa1110-56ca-4ddd-ac42-d3d577234db2",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "0715d45c-1ee3-4af3-af51-b8df98bab939",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 0
        }
      },
      {
        "id": "eda07ebf-fc67-4d27-afeb-a1299f786e35",
        "cursor": {
          "ref": "4d7d8733-8ba1-4bc0-93e3-ae6ea8fff466",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b04a78f6-0f98-45ff-b16b-e3c81a84b37a"
        },
        "item": {
          "id": "eda07ebf-fc67-4d27-afeb-a1299f786e35",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "9c8d3f39-60d3-4ae7-a645-c1c63e88e031",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "5093c166-98e9-47b0-b7be-1e19e65d465b",
        "cursor": {
          "ref": "3ee64eb1-c408-4f46-abf4-7f1eca4cc62d",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "bd0b7418-1c55-4461-a9f6-3bbf491c9745"
        },
        "item": {
          "id": "5093c166-98e9-47b0-b7be-1e19e65d465b",
          "name": "did_json"
        },
        "response": {
          "id": "7240932c-1693-455f-b727-b057fb071919",
          "status": "OK",
          "code": 200,
          "responseTime": 329,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86493b57-9fc4-45d7-947c-52ecabe4649e",
        "cursor": {
          "ref": "bbc62497-80d7-4197-8725-53ab6f782378",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0ee5313e-4ce6-47a1-975a-fe3cbb609db8"
        },
        "item": {
          "id": "86493b57-9fc4-45d7-947c-52ecabe4649e",
          "name": "did:invalid"
        },
        "response": {
          "id": "8f7b3626-4375-40fe-9c8c-bbd7709876ec",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2257,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86493b57-9fc4-45d7-947c-52ecabe4649e",
        "cursor": {
          "ref": "bbc62497-80d7-4197-8725-53ab6f782378",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0ee5313e-4ce6-47a1-975a-fe3cbb609db8"
        },
        "item": {
          "id": "86493b57-9fc4-45d7-947c-52ecabe4649e",
          "name": "did:invalid"
        },
        "response": {
          "id": "8f7b3626-4375-40fe-9c8c-bbd7709876ec",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2257,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81783e4-c5f3-4d46-baba-795a518f07e0",
        "cursor": {
          "ref": "6e440d04-273e-4872-9894-cb1324639266",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f4c986d2-2f8c-4307-9372-db883af31597"
        },
        "item": {
          "id": "a81783e4-c5f3-4d46-baba-795a518f07e0",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0d3213d3-343e-41ff-b3f6-9c8897b350fd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 696,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d5f8b8f-f7d3-4e25-974b-1843eddac9d2",
        "cursor": {
          "ref": "8d93bad3-5ad0-4705-9765-17a77fd22122",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "2deee0ab-edd3-40e3-86e1-ca81f37db41c"
        },
        "item": {
          "id": "7d5f8b8f-f7d3-4e25-974b-1843eddac9d2",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "ec71c502-6ccd-474e-83aa-95b57b21e253",
          "status": "Not Found",
          "code": 404,
          "responseTime": 48,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b790b52-eeff-4758-bce7-bd30f21cf4cf",
        "cursor": {
          "ref": "708d7b4b-3a43-419c-8d79-cb896d5053b3",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "74306bd9-e347-4b6b-bdf6-cfa419069728"
        },
        "item": {
          "id": "6b790b52-eeff-4758-bce7-bd30f21cf4cf",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3eec81c1-eb45-40b1-93fd-d82b11ebd548",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 88,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cea38d3-ae0c-4dfc-8c3e-a9b11cb4736d",
        "cursor": {
          "ref": "cf8d69d2-61fa-48d7-9d8d-e28cb7a01cb5",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "4fa22a7f-a4c2-4176-8cb3-1248193eb5ec"
        },
        "item": {
          "id": "4cea38d3-ae0c-4dfc-8c3e-a9b11cb4736d",
          "name": "identifiers"
        },
        "response": {
          "id": "ca8578f6-a146-4595-bddb-a5055109c029",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dafdb8c-fd56-4232-b859-d5e910ae1598",
        "cursor": {
          "ref": "6f7d0c91-f2ca-4ee6-9f46-003295a011cb",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c2d7fc7c-d57a-4bd9-a6b4-286825e318b6"
        },
        "item": {
          "id": "8dafdb8c-fd56-4232-b859-d5e910ae1598",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "85c2c16a-dfaa-4ba6-a813-cc35f739ca36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ddeee4e-dd7d-4d3e-aa4b-a1799c584515",
        "cursor": {
          "ref": "20b49de8-4616-4dc4-8429-723c6abcf703",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0542320d-34c3-46e6-9521-96b51fae3b9b"
        },
        "item": {
          "id": "5ddeee4e-dd7d-4d3e-aa4b-a1799c584515",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "651eecf0-6e54-44c1-8b3e-2f6a6ea58ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f031d09f-bf6d-42ba-9280-759d07f77317",
        "cursor": {
          "ref": "f835d408-759d-41cf-8843-64091220f33c",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "2def903d-d8a1-42ca-b755-cf1cc79bc1b9"
        },
        "item": {
          "id": "f031d09f-bf6d-42ba-9280-759d07f77317",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "279fb346-ca88-47c1-a526-f42c79f7a7d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4616ac7-e7e1-4ec9-b6a4-6499bb0a498c",
        "cursor": {
          "ref": "82d2f24b-1972-43ed-9f4e-c2e4722039ad",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "7503d9ac-6283-4309-a358-bdce98ca5643"
        },
        "item": {
          "id": "b4616ac7-e7e1-4ec9-b6a4-6499bb0a498c",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c984b0b1-6507-498c-b301-bb1763c9bc0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da0816f-c85c-4c13-b773-eadbebcb6870",
        "cursor": {
          "ref": "3a8410d6-756d-4776-ae1b-bebfdb7ad8fc",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "01ff2ce1-f670-41b0-9c74-86300791456b"
        },
        "item": {
          "id": "8da0816f-c85c-4c13-b773-eadbebcb6870",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a9ecee4c-2bf7-4e5f-b9fd-3dda96b951b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "607b1a50-f5de-4ab7-b325-1ac35a73e0c5",
        "cursor": {
          "ref": "43dc52aa-c53c-4f01-b112-8a79c1074695",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f140d46b-4919-4db1-8892-0398dc8e9432"
        },
        "item": {
          "id": "607b1a50-f5de-4ab7-b325-1ac35a73e0c5",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "fad01b90-4ee2-4fd5-9338-623234ecb492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbca966a-1967-45be-9c7c-d6ea98d45e59",
        "cursor": {
          "ref": "50027191-3df6-4fc8-94a7-9dc051eb207c",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "074439c5-2cdc-4c7c-93c3-527cc0936622"
        },
        "item": {
          "id": "dbca966a-1967-45be-9c7c-d6ea98d45e59",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "380abe27-88fe-4562-a878-5933584c6308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea158a2c-fa3c-476d-9899-82fe222bbc10",
        "cursor": {
          "ref": "4534fc6a-7dd7-4958-aa63-68fc685332dd",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "380c1638-bad5-4210-9053-c24e46ae3404"
        },
        "item": {
          "id": "ea158a2c-fa3c-476d-9899-82fe222bbc10",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "e9761d06-20ec-4332-a2f2-285dcba87f64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "400df8fc-1551-4650-bd35-8536b9b68e8f",
        "cursor": {
          "ref": "7fad81a7-ff0a-44e9-9b0c-b70dd8b89ac8",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "60708b3b-5254-462a-9c5e-fb210d2577e8"
        },
        "item": {
          "id": "400df8fc-1551-4650-bd35-8536b9b68e8f",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "bb1f7985-2d70-4133-b71a-3f54e779e6db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f842718a-f15d-4c10-af98-56ea7afba83f",
        "cursor": {
          "ref": "f6062b21-01d7-4d6b-9b38-2a1f91562407",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "3a002ddc-f261-430c-9c5e-5e07840d4aed"
        },
        "item": {
          "id": "f842718a-f15d-4c10-af98-56ea7afba83f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "2a246b3b-b31d-480e-83fb-c689710e7259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba5cf2ce-f462-4244-a6b8-4a50fe35f0bb",
        "cursor": {
          "ref": "eea97c32-b9e4-43f1-ab07-924aa4d241f3",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3db9bc58-e0d3-40b3-b555-51602e88577e"
        },
        "item": {
          "id": "ba5cf2ce-f462-4244-a6b8-4a50fe35f0bb",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "04c745ea-4653-402c-bd5a-e386e0e25b48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eab62b5-67a3-435e-a377-a6b3e45ecac8",
        "cursor": {
          "ref": "fd68792a-44be-4bcb-8680-009facc45bcc",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "495d260e-a3ba-4a70-a08f-0f77fab8e13b"
        },
        "item": {
          "id": "0eab62b5-67a3-435e-a377-a6b3e45ecac8",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "2e923cee-1e0a-40e9-bc05-02f6d1be4546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2184ab9-16e6-4859-ae3d-412c73dac20c",
        "cursor": {
          "ref": "4122c41e-9a46-4059-a72f-59407c9b888c",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a8f11f1b-e7cc-4e7c-aba3-4c0bdde8a8a4"
        },
        "item": {
          "id": "d2184ab9-16e6-4859-ae3d-412c73dac20c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f6bb6c9d-3a92-409d-8ce9-2fd5c6881007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e38947-cd4e-402f-ac94-e10f6d8eba92",
        "cursor": {
          "ref": "5a18937c-391a-427a-877f-d3bad0186a11",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e779931b-d6b6-4c62-9ef7-45b49e523a70"
        },
        "item": {
          "id": "76e38947-cd4e-402f-ac94-e10f6d8eba92",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "5ce09404-520c-4f1a-a630-08e21cb97aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d57792-f7e9-4097-b30d-2ddc0129e6a9",
        "cursor": {
          "ref": "8266f9fa-c247-409e-ab31-fd3529252a99",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "baf01ee5-41a9-4cd2-ae5c-911f11a3ce52"
        },
        "item": {
          "id": "b0d57792-f7e9-4097-b30d-2ddc0129e6a9",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d5001469-d200-4a3f-8ea2-0d4906934557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ef94c5-1aba-4edc-b6eb-435ce1965cbc",
        "cursor": {
          "ref": "09649366-bb6c-47cb-8c1f-512bf20c74a9",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "28f8e17d-8511-4e02-8c52-b893569b52fb"
        },
        "item": {
          "id": "25ef94c5-1aba-4edc-b6eb-435ce1965cbc",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e543774d-f884-4277-a9ac-e1c442697dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "482d5cae-bc6a-4596-8572-fb897e74c86d",
        "cursor": {
          "ref": "73b31d46-cec6-4e6c-a770-f28ea6c0045a",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "7f9692eb-0e58-45da-94ee-e6d51609d358"
        },
        "item": {
          "id": "482d5cae-bc6a-4596-8572-fb897e74c86d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "71d681aa-c7fa-453c-bd06-ce6a79511a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e39e6f85-8424-46fa-9eed-81608371e80a",
        "cursor": {
          "ref": "d63cb79d-05ef-4196-912d-27965481f556",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "feee1447-74bb-439b-999e-29515d75146e"
        },
        "item": {
          "id": "e39e6f85-8424-46fa-9eed-81608371e80a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ee3346c8-1705-426a-bae8-6b86933f4a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8654d0ff-65ff-4684-953d-43794093c099",
        "cursor": {
          "ref": "526dbc9f-bcf0-4f75-966f-efca13784e32",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "225a7d84-543b-4748-b49a-4b5f46babcf6"
        },
        "item": {
          "id": "8654d0ff-65ff-4684-953d-43794093c099",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "07cf2cc1-f0f5-4b52-a04c-0ebee056599a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5458d636-0b16-4933-a147-e99759c3b523",
        "cursor": {
          "ref": "a55cb1ad-22df-4c57-a5a9-0c0399ea7251",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "0268c32e-3524-48a2-ad30-90a10333b5c9"
        },
        "item": {
          "id": "5458d636-0b16-4933-a147-e99759c3b523",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a4aa1b56-90ca-452b-ae76-621a09071d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a98efaca-5f68-415f-a32e-2e43984026de",
        "cursor": {
          "ref": "f476cc1e-437a-4e6c-b8f7-fc59b3b8fe59",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "26c7a766-25f1-4b2c-90d5-490665445cf2"
        },
        "item": {
          "id": "a98efaca-5f68-415f-a32e-2e43984026de",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "1e1f5209-7a07-47c2-820e-9e141445bcc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53b2c080-9d8f-4eb5-86e3-f37dc0dc443d",
        "cursor": {
          "ref": "615aa271-db91-4b82-aaf6-0ed4426ba01b",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "b2bd2afb-6709-447b-9293-bb28a3093f3b"
        },
        "item": {
          "id": "53b2c080-9d8f-4eb5-86e3-f37dc0dc443d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "54ea694c-67ff-43be-b468-7543fc9847c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4088570a-3fc2-404d-acf7-08146cda4279",
        "cursor": {
          "ref": "8a589807-237f-4618-9e17-31178374d00f",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7e9de268-a910-4eb7-aeab-344a12a39cd3"
        },
        "item": {
          "id": "4088570a-3fc2-404d-acf7-08146cda4279",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ef211ae7-34bd-4911-b511-e6bb0216dd70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b2f5d18-b539-4a07-be45-7c33f1196bc0",
        "cursor": {
          "ref": "edcc5da6-cbb5-4284-8526-fa050b539cce",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7c9944e4-5b03-4295-8a32-b9928be1044b"
        },
        "item": {
          "id": "0b2f5d18-b539-4a07-be45-7c33f1196bc0",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "fb569bbc-a9ce-4b01-b0f3-e4d82a814564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9cca0f5-3d8a-4f72-9b72-25d5764214fe",
        "cursor": {
          "ref": "85915e64-c1c3-4aa2-8146-14014b0e8f2c",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "096f877e-ccc2-4702-9617-9e4f785712a9"
        },
        "item": {
          "id": "c9cca0f5-3d8a-4f72-9b72-25d5764214fe",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "8045c87e-9b45-4d1f-9640-32a4f57069bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf5806b-3541-4101-b81c-e1fe1e70f15d",
        "cursor": {
          "ref": "b44f9f33-55e4-4752-8b21-471c31cd0f94",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "21ce18a9-a478-407c-85d3-eb5d6661c89a"
        },
        "item": {
          "id": "9cf5806b-3541-4101-b81c-e1fe1e70f15d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "26187c8d-e8f4-47f5-a0ab-8bc0dceab020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd44f65-707b-4c6b-bc33-b8c63b9b52f0",
        "cursor": {
          "ref": "d2a73d89-9172-4058-9996-9e7061a92b36",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "012e6779-4197-4ccc-84c7-1be435deb646"
        },
        "item": {
          "id": "5bd44f65-707b-4c6b-bc33-b8c63b9b52f0",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "369edff9-ae58-44c3-973a-e41c768aa9c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6389ba73-eb33-4669-bacb-e8fd13fb9c4b",
        "cursor": {
          "ref": "ad868cc2-3cb9-42eb-92d5-e68eda68915e",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "209e68b4-599e-4c7c-a39f-ee12d9020a2c"
        },
        "item": {
          "id": "6389ba73-eb33-4669-bacb-e8fd13fb9c4b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "fdaf13d0-f0ca-4e12-8e88-efc3e1bf2240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dcc8761-acb4-4dd9-a4cc-a3404f9b862b",
        "cursor": {
          "ref": "4f3a83c2-9611-4750-b08f-d6bb319157b3",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "635e93dd-6531-451b-bd99-a8f8f15e7c2f"
        },
        "item": {
          "id": "8dcc8761-acb4-4dd9-a4cc-a3404f9b862b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "971b733d-e867-4442-9951-0bdeaf669e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca732caf-858b-4e81-b4e6-47b5ec93c15f",
        "cursor": {
          "ref": "7e805af5-4765-4e54-98cd-6be2c018bc4d",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "b01204fc-d8bb-4bc8-a3fd-3293585fc111"
        },
        "item": {
          "id": "ca732caf-858b-4e81-b4e6-47b5ec93c15f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c9078096-746e-4831-94db-a69e7c40be2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4688182-419c-440e-8e76-d75d99ad9614",
        "cursor": {
          "ref": "b84b0f1b-9d14-49c8-8e35-c391e7b1e597",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "87d3dffa-edc8-4adc-a030-2b96f82e641e"
        },
        "item": {
          "id": "d4688182-419c-440e-8e76-d75d99ad9614",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "afb8ad37-eeb2-4f36-8b4c-67601dbea076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e8f290-f33d-4311-bb27-b27db0cbe5c6",
        "cursor": {
          "ref": "144be617-e55e-475f-a83e-ee1de4aa42b1",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "0865b60b-6010-40ce-9b10-ca0e0f043f5c"
        },
        "item": {
          "id": "31e8f290-f33d-4311-bb27-b27db0cbe5c6",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "0f39f17f-2899-4e02-bc01-32f5135024dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3309be4e-0c85-4f51-85e5-db6f177d4a36",
        "cursor": {
          "ref": "cffff3ea-47e8-4b14-8fa4-0a07f57a61d2",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "e51ecd7d-2f53-4882-aa84-1c7d068261c4"
        },
        "item": {
          "id": "3309be4e-0c85-4f51-85e5-db6f177d4a36",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "4178b660-5e0a-46c7-9f93-2a3c0c0fd8d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e95cda4a-1b12-48d6-8fa8-a28c10c87a8b",
        "cursor": {
          "ref": "6cb8987d-92f5-4c6f-938c-64a1eea9ef50",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "39e2439a-5e34-46a5-8d1d-880bfd67fb76"
        },
        "item": {
          "id": "e95cda4a-1b12-48d6-8fa8-a28c10c87a8b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "0c2ebadd-e936-41ed-8a1a-b756cc2fdb21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7477974f-11cb-4856-8569-726983726e46",
        "cursor": {
          "ref": "272dbb04-a332-4d32-9dbd-b4484df913a3",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "cf056c20-5673-415b-a039-35682dc7221d"
        },
        "item": {
          "id": "7477974f-11cb-4856-8569-726983726e46",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b0cde940-fda5-409f-ba2f-d5736a18ae2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b952ac-70df-42f3-bffd-43cc36e0299e",
        "cursor": {
          "ref": "d42d3cae-0a69-4dc0-a642-b72389ff733a",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7dc39c84-2b0f-4dc6-9135-fda270cc6cfe"
        },
        "item": {
          "id": "96b952ac-70df-42f3-bffd-43cc36e0299e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "86fab546-3f22-4663-a71b-8b9c1670294a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d5da887-ded3-4d9c-8075-8a8234239d61",
        "cursor": {
          "ref": "be55e7a4-8c9f-47e7-9f52-172d0d4b3b8c",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e10cecac-ab0f-4e9f-8f05-9ee86933986d"
        },
        "item": {
          "id": "2d5da887-ded3-4d9c-8075-8a8234239d61",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "755de9e4-2707-4d30-b762-eca1c256839b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd90e7e5-4b50-484e-8c04-5bbbd6305f82",
        "cursor": {
          "ref": "a738df59-e060-4828-9888-60d9dc790ce2",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a6942953-2508-4441-ac64-50ba25d8120a"
        },
        "item": {
          "id": "fd90e7e5-4b50-484e-8c04-5bbbd6305f82",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "11c8c74b-5e95-4efb-bd6b-0eeedfd1849a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d869a1a3-0430-490d-9f2d-a7aa1a95abea",
        "cursor": {
          "ref": "446d88b9-93c9-4700-81b7-fba42040b016",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "cf36b2af-331c-4e21-a9bb-be0b13ea1683"
        },
        "item": {
          "id": "d869a1a3-0430-490d-9f2d-a7aa1a95abea",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3d65d750-fe07-46b7-afe6-75e06be1b118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd38e535-41dc-439f-85cd-cf958e1770c4",
        "cursor": {
          "ref": "91f26849-4d68-4887-9872-f75de9a19ff8",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "092480a6-bc12-4416-a23c-eb39fd1ad8b2"
        },
        "item": {
          "id": "fd38e535-41dc-439f-85cd-cf958e1770c4",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "6db9e05d-e493-497f-b7a2-1bd5ef731588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca6d8702-eed1-4915-8692-ed2e02049e4f",
        "cursor": {
          "ref": "37a78d7f-4196-49e3-8a57-de900ebcacc4",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "16badcf4-adae-49cf-b307-f197e0dfe361"
        },
        "item": {
          "id": "ca6d8702-eed1-4915-8692-ed2e02049e4f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "7291dd74-82a5-43e2-af37-8c868b2c93d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22130dd9-fc5b-4923-87cb-ba5a9f931ee6",
        "cursor": {
          "ref": "4df7340d-25cd-4568-821b-05f982104af8",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "8635bd2e-7780-403e-b083-e7800929d4bd"
        },
        "item": {
          "id": "22130dd9-fc5b-4923-87cb-ba5a9f931ee6",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "3e20d1fc-dcc2-43ab-b78b-9c8a5b2b0232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "701e1fae-391b-43d3-a7f8-2da0a62863a2",
        "cursor": {
          "ref": "9794559c-73e9-417d-bdf5-6e4f888739a4",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "607bdeb0-3643-4702-ab08-d274fee3cb9a"
        },
        "item": {
          "id": "701e1fae-391b-43d3-a7f8-2da0a62863a2",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "5d4469cd-7856-40cd-bdb1-4a7927bc5625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12f6110d-d211-4d63-b97f-6f67c112b73a",
        "cursor": {
          "ref": "b72b683a-fc11-4bc1-b753-6b41a5a08182",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9fd440c6-fbe6-494b-bc29-04fe2bf89107"
        },
        "item": {
          "id": "12f6110d-d211-4d63-b97f-6f67c112b73a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "aacb0630-f520-4466-b94d-a2e2706455e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd31e2f-8ea3-4c48-ae7b-347a9276c5bb",
        "cursor": {
          "ref": "53eeeb94-7f0f-4df1-8a1c-f9841f3984ba",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3bd9cb36-fbbe-4686-81ba-d03faf55275b"
        },
        "item": {
          "id": "bfd31e2f-8ea3-4c48-ae7b-347a9276c5bb",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "bd86761c-78dc-40d0-ab9d-14947f9b8d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac6b4ff5-65d7-412a-b716-24184f5b5f4a",
        "cursor": {
          "ref": "06a8c82f-bb1a-41e2-8f9e-ab6d29ff6c78",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "0250e3dc-ddc9-46a4-a16d-9ec3406ada1b"
        },
        "item": {
          "id": "ac6b4ff5-65d7-412a-b716-24184f5b5f4a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "6186dfed-11df-40a0-8bdc-bbf236906338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9ec740-e808-4129-9cd0-73d0c36373ce",
        "cursor": {
          "ref": "19beb4f5-29ff-4785-ba9e-73190ddc1953",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "1876aa07-3eae-49c9-a52d-000955a8de06"
        },
        "item": {
          "id": "9f9ec740-e808-4129-9cd0-73d0c36373ce",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "315263ba-d018-47c0-92e3-4c67e9d141a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b85b64-75c9-4443-b8e8-ee67093fcfd3",
        "cursor": {
          "ref": "fecefe06-751f-4b78-a589-8c4bf6f1ad82",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6adc44de-c836-472c-862c-02dc25400a05"
        },
        "item": {
          "id": "d5b85b64-75c9-4443-b8e8-ee67093fcfd3",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "54be2f81-0b73-4a02-bc68-903d50973551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b8e435-18e7-4094-a26d-485229d44eb7",
        "cursor": {
          "ref": "11feca6e-d302-42e8-87ee-521b1684fde2",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b7bdc469-67ad-41cb-8f47-7e010db9d8a0"
        },
        "item": {
          "id": "97b8e435-18e7-4094-a26d-485229d44eb7",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "77c65af3-04e4-41de-96c7-04058156011d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff92f746-22ea-4a66-a36c-8b44536abe51",
        "cursor": {
          "ref": "4fac570c-8618-493d-98aa-bc71b2586b0a",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "8b5b3603-be43-43d6-8adc-c225af6dcb14"
        },
        "item": {
          "id": "ff92f746-22ea-4a66-a36c-8b44536abe51",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "631339cc-ea36-4201-b2e0-c3a8e1f4bdb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b7d6952-11e7-4771-9321-abeef8c9f759",
        "cursor": {
          "ref": "388e0bee-1b51-40ec-a506-724863335e7d",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "5f69c3d7-2049-4977-9333-d4d4ffdbdc5a"
        },
        "item": {
          "id": "0b7d6952-11e7-4771-9321-abeef8c9f759",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "1c7d3e93-e6e6-4069-a3c2-eac437023131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff033dbb-77cd-4be6-abe3-f9cac1635928",
        "cursor": {
          "ref": "7560bb6e-0179-4883-bde2-befaa1f830de",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "b3d740c9-1571-4cb3-9622-e42bd0aa7f03"
        },
        "item": {
          "id": "ff033dbb-77cd-4be6-abe3-f9cac1635928",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f34bc9e3-7cda-4f45-8265-395ea8fbb9f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c10de4db-c6dd-4232-921b-3589339cf5b5",
        "cursor": {
          "ref": "1eebdb98-7184-4a1c-aff1-eb98fea345b8",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ed83cecd-1629-414f-950d-47283c2c452e"
        },
        "item": {
          "id": "c10de4db-c6dd-4232-921b-3589339cf5b5",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9ebe7353-e5da-4066-81db-4cf95fd87b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c23d9053-6999-40a6-9b4a-71a7be26eeca",
        "cursor": {
          "ref": "2eb5c10f-ddef-49d6-a117-281c1f4edac2",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "bc53ed5f-0913-4d0f-91c6-5ef8b7a226e7"
        },
        "item": {
          "id": "c23d9053-6999-40a6-9b4a-71a7be26eeca",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "621c3f21-28d6-486e-8f11-960a26249a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65289265-635f-4d50-9620-b39557a83837",
        "cursor": {
          "ref": "383361b7-a858-4156-8b8d-2c8f686f9163",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b17fdea5-362f-4996-8d27-cd8196c4517f"
        },
        "item": {
          "id": "65289265-635f-4d50-9620-b39557a83837",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e1a49e40-ef25-4d34-84a9-ac7fad55a629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af3293a2-8662-4369-87b8-7001a7dc87da",
        "cursor": {
          "ref": "871b0bd8-2cd2-4aaa-a171-0c0b228cc3ef",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "bd4ea71c-81ad-4d10-99a4-ba5d28502c81"
        },
        "item": {
          "id": "af3293a2-8662-4369-87b8-7001a7dc87da",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "d0261600-6405-42d4-8cf2-00b81eada272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e9af681-6d84-4a83-842e-cfddb6dee9f6",
        "cursor": {
          "ref": "fb229f2b-0da5-446a-9565-52653da82183",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d30578ac-887e-432b-bbdb-041bb35f75c9"
        },
        "item": {
          "id": "2e9af681-6d84-4a83-842e-cfddb6dee9f6",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "321d1809-16ec-45b1-aebb-49c4fa75de75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea1fdd2-8322-450c-9006-7c03c0d8c57a",
        "cursor": {
          "ref": "e4e002ad-70cf-428d-b709-f09b3010eae2",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7c4eeff2-2d00-4cd7-8a87-38bf81c5c967"
        },
        "item": {
          "id": "4ea1fdd2-8322-450c-9006-7c03c0d8c57a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b8664b02-c157-4c49-8b59-f661ffa97df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bd8ed4a-8bee-4074-b07d-66763cdc3acf",
        "cursor": {
          "ref": "ccb9f9f6-ecfb-4d13-85ef-e9d428071362",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "dc8f6d7f-87e4-4edd-8dfb-850c741c891a"
        },
        "item": {
          "id": "0bd8ed4a-8bee-4074-b07d-66763cdc3acf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "7dd3fe86-3498-4ae9-ac38-ae0bde27ebe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "911bb3a4-0dc7-4ed6-9522-dcc3195c9b80",
        "cursor": {
          "ref": "3eaba86c-1d66-48ad-aa5f-02377145713f",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f24109ca-0323-449a-b037-879e44a942cb"
        },
        "item": {
          "id": "911bb3a4-0dc7-4ed6-9522-dcc3195c9b80",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "e1ca6b46-39aa-4fdc-b734-f44ab639ee60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a6b597-5f87-42f6-a998-e1aa73c7b4ec",
        "cursor": {
          "ref": "aaa9c12e-362b-411b-944b-3494f3a8e698",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ddb0c1d2-5128-426f-8ab8-bc792128ae0a"
        },
        "item": {
          "id": "89a6b597-5f87-42f6-a998-e1aa73c7b4ec",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e24c3060-2bf6-4c59-a3f3-dba28e09cab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e18033e2-f1d8-48cf-91a5-428d7ca799a4",
        "cursor": {
          "ref": "52be69e2-e1fe-4483-8cb7-97716c2e4fd0",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "79d7b7ff-f9fb-49ee-a8c5-965bbef7c50f"
        },
        "item": {
          "id": "e18033e2-f1d8-48cf-91a5-428d7ca799a4",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "fc1ff6c7-b862-484d-b94d-cfc6c2637fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb1a93fa-b9a6-494f-a242-ed4ee8a2adc1",
        "cursor": {
          "ref": "c60dc547-e261-44c5-9702-c7e957e24ff1",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "7450cc96-d24d-4a2b-8a17-12f9c3f016e9"
        },
        "item": {
          "id": "cb1a93fa-b9a6-494f-a242-ed4ee8a2adc1",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "3a8e769b-ecd1-4ecd-80b2-e2c60bd8750f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cfe7145-2eb5-4384-b3b6-271d5a8f6128",
        "cursor": {
          "ref": "cc4406bc-a349-41bb-8e3c-d4e95b5ad400",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ece54157-0c91-45c0-b1b5-8bce9298c640"
        },
        "item": {
          "id": "2cfe7145-2eb5-4384-b3b6-271d5a8f6128",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a50a632c-9739-492b-8fba-552952c03911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb4e572-f26c-4287-b02b-99b99b1b5424",
        "cursor": {
          "ref": "02dfcd95-8f4f-4efd-823a-16f9add03c9b",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "1860164a-5ab8-4ddc-8e24-a176b75c9eba"
        },
        "item": {
          "id": "3eb4e572-f26c-4287-b02b-99b99b1b5424",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "82c4f53a-b2de-4876-9a5d-5aacc7ae2d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0b080e4-fbc5-4bce-aee0-ad2d08b9047c",
        "cursor": {
          "ref": "f911560e-843a-4461-9d96-c4fa4698c71c",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "3e52b32f-ba99-4347-9576-aeb51ef6f812"
        },
        "item": {
          "id": "d0b080e4-fbc5-4bce-aee0-ad2d08b9047c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "91d1fd10-9f13-4216-ba8c-573058025181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b696faa9-9c25-4e56-b4d2-c08fb8442bc9",
        "cursor": {
          "ref": "ffbe4bd2-800e-4dfc-a425-efb88a9b56bf",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "dfd39590-9f94-406a-b6de-bdecf9f0b6ec"
        },
        "item": {
          "id": "b696faa9-9c25-4e56-b4d2-c08fb8442bc9",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "92d480e3-3265-4e69-9769-455e43c9814c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a554b9-2080-4147-ba78-94b4985b0e71",
        "cursor": {
          "ref": "e8f316c4-8ff7-4409-95af-c596990261cc",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b0cb97d1-4ddc-46f9-a0e9-f725297c7d5b"
        },
        "item": {
          "id": "80a554b9-2080-4147-ba78-94b4985b0e71",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "699291eb-c04a-480e-8f24-356456d50124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b12727d-4c7b-4760-8282-24c6f623c65c",
        "cursor": {
          "ref": "7bab4800-7027-4912-bee8-822998cd2c3c",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "eee1871d-dbe0-47ee-b4fa-d0dad56190e8"
        },
        "item": {
          "id": "7b12727d-4c7b-4760-8282-24c6f623c65c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "4cd1cc52-cd9b-41e5-8af4-1c7863e2a708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "280386ad-19b6-4873-aaa6-d3e334d15364",
        "cursor": {
          "ref": "0b75b266-c122-4e9d-acef-394d6cff2189",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c1432d7c-3d54-418c-8148-3fcb948b2650"
        },
        "item": {
          "id": "280386ad-19b6-4873-aaa6-d3e334d15364",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "368bcc64-61f5-48c2-98c5-e046545b174d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c7c0f8-8aad-4116-b751-c05720cfbfdb",
        "cursor": {
          "ref": "fc6d854a-ad4c-4745-88a2-e3861cfd0f67",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f0f475b3-69ba-4eff-86ce-a602c57fac39"
        },
        "item": {
          "id": "17c7c0f8-8aad-4116-b751-c05720cfbfdb",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "6aa7e563-2900-4086-86e5-e2cde18a27c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b7153f5-5614-4afe-9996-a6b668bc90d8",
        "cursor": {
          "ref": "b7273f27-6df0-40f7-8b69-6074bd7db8e6",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "dd2c8e69-a3b0-4326-aedf-6ee30c444376"
        },
        "item": {
          "id": "8b7153f5-5614-4afe-9996-a6b668bc90d8",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "7ce979f7-466d-4255-b6f8-72d3727968d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2235fa-4288-4277-82e5-35e24f754fa7",
        "cursor": {
          "ref": "f35c618a-8f46-4831-9f56-eaf3b44db406",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "5b1c4d42-cff5-4d56-aa09-3bfd12f2e90b"
        },
        "item": {
          "id": "ad2235fa-4288-4277-82e5-35e24f754fa7",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "fa085e37-6757-4694-aa78-4c1af54b6eb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 201,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e350c33-278f-4049-bddb-5d0ce95b793e",
        "cursor": {
          "ref": "b1897a2c-c222-4507-922a-fb926c15b5b5",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "68d6cca6-0dfa-4233-946e-6a272069c16d"
        },
        "item": {
          "id": "6e350c33-278f-4049-bddb-5d0ce95b793e",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "81eb6c7c-5685-4e36-b23a-67fbaabdef2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a827f813-f478-4b4a-b6f0-8b0dba78dbab",
        "cursor": {
          "ref": "322bcc8a-b943-4613-9f65-7c2e4e208dbb",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "05ed90e7-a352-473a-b191-6de5a5a6fcc5"
        },
        "item": {
          "id": "a827f813-f478-4b4a-b6f0-8b0dba78dbab",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e03d70e3-e080-494e-aa26-f3fdfb5e060e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acdf7a0d-1b34-4e8e-8b32-5dcab943201f",
        "cursor": {
          "ref": "8868a671-59fa-4445-86e1-4d4a0ed5d6a7",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "1b6e6614-9c1a-403d-8991-020ff6a85e99"
        },
        "item": {
          "id": "acdf7a0d-1b34-4e8e-8b32-5dcab943201f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "56b5ee1d-f9a1-446a-a8cc-f017aa3c66aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91acaad2-276e-458f-a10d-aa021f728455",
        "cursor": {
          "ref": "1e106c29-2c4b-4f32-b36c-7a9290aeed8b",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "1ab51124-10cc-4003-b13e-a3a5b859bf34"
        },
        "item": {
          "id": "91acaad2-276e-458f-a10d-aa021f728455",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b9b9e0b9-1c08-4190-8c1f-eeb8ad0091e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5022b5f3-12e7-472e-bdd0-8cf8f2f63ad8",
        "cursor": {
          "ref": "ef8b0e7a-a528-4bae-867b-8b24672f0080",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d2f9cf0b-18f8-433f-b382-d25140deda53"
        },
        "item": {
          "id": "5022b5f3-12e7-472e-bdd0-8cf8f2f63ad8",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "060e135a-cbf5-4c94-b716-45e49aa8ac5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dffa950-8872-4dca-8811-e5bd50416aa8",
        "cursor": {
          "ref": "c538dd5f-fbe5-4384-960a-8584e37f013b",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "5bdd35a8-952c-4873-965f-303946350639"
        },
        "item": {
          "id": "0dffa950-8872-4dca-8811-e5bd50416aa8",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "41c9183e-99cd-4947-a006-f0ade158e581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6832544-7d4c-42a6-b34d-c7cb047bb93e",
        "cursor": {
          "ref": "735384b3-ac0e-4ac0-82ef-f29808cc816d",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "aa5fc1da-0f74-47fc-a034-4b3b453002ef"
        },
        "item": {
          "id": "c6832544-7d4c-42a6-b34d-c7cb047bb93e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "92aecb60-4fcd-4c7e-aa68-64b0a3e327a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c3b6bff-3a93-4c04-a883-a503344d9fb2",
        "cursor": {
          "ref": "f880d623-ab71-496e-a32e-75e399736e66",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "1a1c5e53-d419-4e52-a06b-800929033a91"
        },
        "item": {
          "id": "4c3b6bff-3a93-4c04-a883-a503344d9fb2",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "bbdb845f-3458-435f-b452-75733391662c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7912be35-9c4f-46f6-8ba6-9990fdce4f47",
        "cursor": {
          "ref": "033c90de-f89e-4d20-ae06-d47e414ec9e8",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "86462f93-41f8-4e53-ad91-00145d9258fb"
        },
        "item": {
          "id": "7912be35-9c4f-46f6-8ba6-9990fdce4f47",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "bca6c861-759a-40f8-95fa-eb0055281f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d161d8-7120-45b4-a486-1041aba1530c",
        "cursor": {
          "ref": "8580fa82-31c1-46e5-b6d3-5c7a2b84a8eb",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "9b5597ad-dce5-4385-a555-aed86a9cf341"
        },
        "item": {
          "id": "c5d161d8-7120-45b4-a486-1041aba1530c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "92b6680b-d624-491d-9240-dd69ce995603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a56bf31-50f0-4777-837d-601585a7e638",
        "cursor": {
          "ref": "548f8248-c287-4bef-9b24-00c866be363a",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "5f05ced5-378e-4cd3-8be6-6a84bbc11f86"
        },
        "item": {
          "id": "3a56bf31-50f0-4777-837d-601585a7e638",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "02ee5b8f-ee4f-42e4-b247-65c7c20b4c2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb9956e-e1d2-4b0d-b305-16080e06f404",
        "cursor": {
          "ref": "fd0ff058-d788-46e6-b33d-5f5077f9ea33",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0e0d0f21-8db8-4298-9878-a6ca94e3145e"
        },
        "item": {
          "id": "ecb9956e-e1d2-4b0d-b305-16080e06f404",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "cd02579e-bbf8-4230-863d-f0c75ca324d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0877c901-28ea-43da-b36e-fc70401939a2",
        "cursor": {
          "ref": "577d8e5b-c022-46d2-aaa6-c591d1c4db62",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "c8adfef2-00b5-4201-86f2-71602cc3a6ed"
        },
        "item": {
          "id": "0877c901-28ea-43da-b36e-fc70401939a2",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "1b3404a6-021e-4a3d-92f5-cc2b4aff25b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8499854a-a374-4de9-8273-65bd1deee1a7",
        "cursor": {
          "ref": "435311f3-02f6-4aa1-a2ec-652217648cc1",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1f0fff91-84a4-43a7-ae5b-33f3a4b2b49a"
        },
        "item": {
          "id": "8499854a-a374-4de9-8273-65bd1deee1a7",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "8b6f05a4-1ecc-40c8-8eea-c3406230197f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5dbb469-9a45-42c4-831b-8d334de67fa7",
        "cursor": {
          "ref": "8e28a8b5-c21c-422c-9de2-7350dd77bbd4",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d19bc5a6-5bd0-4356-99b8-fbe4b7298d67"
        },
        "item": {
          "id": "c5dbb469-9a45-42c4-831b-8d334de67fa7",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "daa6c771-9510-4d9a-9736-18b7fe0e32b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75a790bc-81be-46ba-9fa1-cf80f4c1c578",
        "cursor": {
          "ref": "3d0dc434-ac98-4ed9-9ceb-7ddb9b5dc36a",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "2369ef80-6017-43b0-8558-b9343806aa19"
        },
        "item": {
          "id": "75a790bc-81be-46ba-9fa1-cf80f4c1c578",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "471726b3-494a-4587-bd8c-f69e8dec8b11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a25fa3-3574-4cbc-a7fb-49cc7a3df53c",
        "cursor": {
          "ref": "db281996-7b10-4548-9ef4-b226a4028c64",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "20541360-df38-4228-82ae-d569838dee81"
        },
        "item": {
          "id": "78a25fa3-3574-4cbc-a7fb-49cc7a3df53c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e1d6c660-2e91-40ff-97f8-7e88b3e1217e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95949026-5fa4-4cde-ad0d-0c669d077a01",
        "cursor": {
          "ref": "49cd7041-ae79-48e5-9f3f-6f234345496f",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "45f7307b-51cf-40ee-b61c-c73ccb623a80"
        },
        "item": {
          "id": "95949026-5fa4-4cde-ad0d-0c669d077a01",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "08c482fe-eb2e-4e07-b340-906bc2dd693c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a8afa40-98d1-42c9-a865-6068342a7d4a",
        "cursor": {
          "ref": "000b011d-4d99-476f-a021-6c78eb91392f",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c92b3cb0-d3e3-4e02-958a-c25e970202d8"
        },
        "item": {
          "id": "1a8afa40-98d1-42c9-a865-6068342a7d4a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "9ee8e8a8-e832-46aa-9692-91984a62ca74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a053aa1a-82a2-4af4-80f9-7e6c82bda52f",
        "cursor": {
          "ref": "53f80880-8196-4eae-9183-18096fd4170a",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d24e352e-f3f7-429f-8504-3d71209ce159"
        },
        "item": {
          "id": "a053aa1a-82a2-4af4-80f9-7e6c82bda52f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "67e32a44-9a7c-40cc-aa49-ad98624e153d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da09789-ab52-41e9-bfd3-1c3253ffd685",
        "cursor": {
          "ref": "ddd24888-7b5c-4b9b-8bdf-b956a962af1a",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "8cf2a6ee-97eb-4e88-b28a-014f78977baf"
        },
        "item": {
          "id": "7da09789-ab52-41e9-bfd3-1c3253ffd685",
          "name": "credentials_issue"
        },
        "response": {
          "id": "eebdc593-995b-4763-a34d-82e1c6464601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "bce29e6c-dd50-4c96-a44f-3e8cc6f6de40",
        "cursor": {
          "ref": "f9d689a1-64fd-4e71-b1c0-dd44e199223f",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "0b320317-7d14-4de2-8c45-941e8247dc26"
        },
        "item": {
          "id": "bce29e6c-dd50-4c96-a44f-3e8cc6f6de40",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "bff2f7d2-90f0-4ce8-9511-33e83ed99348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "5e923547-dd95-48b8-8559-14d069878979",
        "cursor": {
          "ref": "f4e7ffeb-4e82-4aba-8032-1041b789cf14",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1b662738-046d-46f0-bf2f-79a076e9ec39"
        },
        "item": {
          "id": "5e923547-dd95-48b8-8559-14d069878979",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "f5a3566f-a2e1-4630-8474-2c83fbb07ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "525300e7-117e-4d5a-a2e3-b87b6acee332",
        "cursor": {
          "ref": "5425180d-5b76-4a73-979f-9fe3077889b0",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "785ff254-8dd1-48a9-b2b2-225aa4baa444"
        },
        "item": {
          "id": "525300e7-117e-4d5a-a2e3-b87b6acee332",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "17de4537-daa2-4fca-93d3-092225db8b7f",
          "status": "Created",
          "code": 201,
          "responseTime": 4578,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "67efe0e6-4cd0-4223-ab91-fcd67fa0281d",
        "cursor": {
          "ref": "b94d8050-161c-45a3-9bd3-392d717ca454",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "013b3a30-03be-48a2-9bad-9c8a703fb734"
        },
        "item": {
          "id": "67efe0e6-4cd0-4223-ab91-fcd67fa0281d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "2cad5aa1-0db2-48a4-b013-0bd7d2fda468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "6ce33263-93ed-4049-ad1a-ae9ed4568588",
        "cursor": {
          "ref": "f24e75c0-8b4b-4b31-8b3c-c921a9e93a27",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "9ee6dddf-7ad8-48c0-8772-aab127a3abd7"
        },
        "item": {
          "id": "6ce33263-93ed-4049-ad1a-ae9ed4568588",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "009df228-3ba3-49e5-aaf1-599a603f3fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "de392b1f-759b-4318-8316-35b1f294a729",
        "cursor": {
          "ref": "d6440494-7033-4179-84ab-febbe287e7c9",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "4110c832-5b77-4c42-ae92-d367a77239ff"
        },
        "item": {
          "id": "de392b1f-759b-4318-8316-35b1f294a729",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7ad012db-006c-4c03-980d-3728449f8860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53eba91a-7d95-4869-9d24-433a5c3c9fca",
        "cursor": {
          "ref": "5e0233e6-5276-4d86-b489-0d9c95de0c45",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "9ca2cbc6-a3b9-4775-8d97-87384ac7182f"
        },
        "item": {
          "id": "53eba91a-7d95-4869-9d24-433a5c3c9fca",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e03fbdb5-ddad-4059-875f-1873daa87b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60659495-45ca-4959-927b-3c40c8166061",
        "cursor": {
          "ref": "70cc17e1-4ffd-4e47-9279-e1a62c35e32a",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "4ca523d3-1f6d-40b1-8964-21254278c95a"
        },
        "item": {
          "id": "60659495-45ca-4959-927b-3c40c8166061",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a781b41e-ca25-4e61-b5e2-b5f8d0324529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58df7909-736c-4c86-99f2-c75c178c985b",
        "cursor": {
          "ref": "df5d347b-cbf5-4718-ad23-a1c1182085af",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "1a2439c1-2fcf-467c-bb97-6ef0020b3081"
        },
        "item": {
          "id": "58df7909-736c-4c86-99f2-c75c178c985b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "15468de8-6960-4610-85fa-5add38e09be1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed10b991-8bb6-46b6-b66e-36181504d58f",
        "cursor": {
          "ref": "b0c61271-0cbd-4bba-9706-399def8aacbe",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7041ca8b-d45a-4790-a5a8-7b131f90b6cf"
        },
        "item": {
          "id": "ed10b991-8bb6-46b6-b66e-36181504d58f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "049b849b-e3d5-4f22-bb49-44d00bb7a2db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6fa0950-e0a3-4129-b328-4602f63791e6",
        "cursor": {
          "ref": "8bc8ef97-0650-4aed-a0a4-14b5e0177a26",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3c779e26-09b3-408e-918b-6510e47b159f"
        },
        "item": {
          "id": "b6fa0950-e0a3-4129-b328-4602f63791e6",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "62b749cf-bbe1-455d-8fa2-22ba128451f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bfadc6a-a0da-4afe-be07-975e68bc4360",
        "cursor": {
          "ref": "f56d7db6-38a2-4d50-bfee-bcdd563bf2ec",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "fce62782-c2b4-4e72-b282-20677a968c8b"
        },
        "item": {
          "id": "0bfadc6a-a0da-4afe-be07-975e68bc4360",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f48f32b7-a77e-4f63-ba4a-5b1a8dd13134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8db6ce6-10b9-46f3-b75e-cd3d024ab6f6",
        "cursor": {
          "ref": "71c3c7d0-6194-48ed-8774-626f923e6384",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "e05e7023-6010-4afc-ba92-8a5690c7cab2"
        },
        "item": {
          "id": "d8db6ce6-10b9-46f3-b75e-cd3d024ab6f6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6cebfd92-2696-4140-9ca0-7d24dd7332c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a18cde2-21d3-494b-9ef2-798de3c6e2ee",
        "cursor": {
          "ref": "d8b5a96e-8452-4cd1-b1ab-7987e6c66a68",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "b79c37a0-0d2d-4918-860c-0db83f4f976c"
        },
        "item": {
          "id": "7a18cde2-21d3-494b-9ef2-798de3c6e2ee",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8bb3a378-a42a-431a-bdcb-77091f4606c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab969ca6-2c19-41a7-8ee7-2b78896c6d05",
        "cursor": {
          "ref": "2d5e7999-b971-43a9-a79b-8959c438719f",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ad34238d-eef2-454f-8821-f9ddd3d8a4ef"
        },
        "item": {
          "id": "ab969ca6-2c19-41a7-8ee7-2b78896c6d05",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3c0204c9-6152-44d2-9d63-a0b0e542ca97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f17e2cd-5585-4da6-9e71-6658f1915292",
        "cursor": {
          "ref": "3f48d7f7-7ca2-43db-b092-d38e6e9f8245",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "782e940b-4c93-4fb3-9e06-38b25d95f3ec"
        },
        "item": {
          "id": "4f17e2cd-5585-4da6-9e71-6658f1915292",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "97dd8b63-4c03-47d2-9044-5b5489eb3253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f95efa8-83a9-4627-ba0c-287ee93744f9",
        "cursor": {
          "ref": "266abb1b-90b1-4b91-bd26-53a562853b9c",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d12bbf85-8366-4e61-af3e-eb3394f0bdd2"
        },
        "item": {
          "id": "3f95efa8-83a9-4627-ba0c-287ee93744f9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a087520d-5cba-468c-824b-1130234929a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc9fb32-ea7f-4080-82a5-7bdf5e0ac15f",
        "cursor": {
          "ref": "50079b76-8cfc-459a-87f1-9c0f2f582e63",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "ee2b381c-6fcd-40ae-8df1-a3445c0aac53"
        },
        "item": {
          "id": "dfc9fb32-ea7f-4080-82a5-7bdf5e0ac15f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "15e49eb4-f170-40ee-944a-cd20f4623c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c57d2de-733e-411c-98f5-3c32f31be85e",
        "cursor": {
          "ref": "d9a9bff3-e73b-4d0e-b8a2-0041dac88bba",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "64b7144a-97e8-438b-8f6b-95782d51b5be"
        },
        "item": {
          "id": "5c57d2de-733e-411c-98f5-3c32f31be85e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8f8fa4e2-cd90-41e0-8d68-00293dd91182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ab7c74-14e4-4e49-bc5c-3053a1d66c47",
        "cursor": {
          "ref": "9555bfc0-f20f-4f48-a016-8f008dcc1f5d",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "8fde974a-e221-449d-950c-39771aca5982"
        },
        "item": {
          "id": "c6ab7c74-14e4-4e49-bc5c-3053a1d66c47",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2c6b4357-b27d-4a5f-8e3d-3fd4cd38d50f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "631fcfc6-7298-48e5-b75d-85f4794a0c6f",
        "cursor": {
          "ref": "dca5e654-3f9c-4a53-8c0d-5d2b48b1ee0c",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "2494d861-fe05-4619-b755-31d4abf1d75e"
        },
        "item": {
          "id": "631fcfc6-7298-48e5-b75d-85f4794a0c6f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2a8fc2a8-11cc-4b53-814d-3a18c107fc9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e88e3d1c-e099-464e-b404-10421307685d",
        "cursor": {
          "ref": "8b30df31-0a2a-4c3f-9100-6ef7e6562e9a",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "52153aba-9dd8-41fb-8cb3-918e93552732"
        },
        "item": {
          "id": "e88e3d1c-e099-464e-b404-10421307685d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "bfdd8ec7-9c97-4dd2-a51a-1a9f0867f933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b912b43e-18ed-481b-bd21-2346d9a99f8c",
        "cursor": {
          "ref": "38fd9a35-495b-4481-83e0-2e8d09353af4",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "4705864f-28c8-451c-9eed-84bceb2ae423"
        },
        "item": {
          "id": "b912b43e-18ed-481b-bd21-2346d9a99f8c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d0872186-970e-4bee-8c31-4b6b563e2dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0562114-a6a8-4b39-a990-9cdc3a3edf23",
        "cursor": {
          "ref": "dc357a6b-959b-4bb7-bafe-0bf0e11f23c8",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "3fb8d42d-93a1-43d3-8ec0-2772c9ef0704"
        },
        "item": {
          "id": "a0562114-a6a8-4b39-a990-9cdc3a3edf23",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4252df81-6cb0-4ffd-a000-a446b773f928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c1beb6-065a-4b3f-8c4a-83f48fcca138",
        "cursor": {
          "ref": "e8c755cb-68bf-46ab-b8ac-aea43213be04",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0cab337f-f9e6-4994-a73d-8694d78d1eb5"
        },
        "item": {
          "id": "c3c1beb6-065a-4b3f-8c4a-83f48fcca138",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ce653765-7e66-4cba-a7f5-8828ca37e555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40395115-fade-48aa-9e66-bccf30d112e2",
        "cursor": {
          "ref": "5c6c75f7-8d42-4cb6-9d73-1ff8518d24f0",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "0ba86efe-6a31-4730-bc9c-39c61eca9c74"
        },
        "item": {
          "id": "40395115-fade-48aa-9e66-bccf30d112e2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "cba92cdb-7f8e-4654-9fc9-769964d86778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36ae7993-c387-40e2-8afe-059faec457a4",
        "cursor": {
          "ref": "e2183e01-6a9b-40a6-a488-1e2f5f68e8e6",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "cbfb0c1d-0c8a-4b5c-85f9-68c259515cb3"
        },
        "item": {
          "id": "36ae7993-c387-40e2-8afe-059faec457a4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0c4fc0e7-bd0b-49e8-beb2-d078c2990ca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176737a6-518f-44fb-99b3-9ba6c0f2e201",
        "cursor": {
          "ref": "4a75a39a-e1a3-4465-a119-fd3071fddefd",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7f3d31ac-746b-4a56-8525-1e99075998eb"
        },
        "item": {
          "id": "176737a6-518f-44fb-99b3-9ba6c0f2e201",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "fc2a85a4-4c03-4b40-900f-4cc5e3274557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f19c007-5b5d-4c3e-b08b-daa93c071998",
        "cursor": {
          "ref": "58a3e4f0-dd89-477d-b3fc-8e4edb17f1c0",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f5cd4201-7266-41a5-9ae6-2dc6ed1db4fe"
        },
        "item": {
          "id": "9f19c007-5b5d-4c3e-b08b-daa93c071998",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a89fec12-6ebf-4727-9d91-bf98836ac067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08da997b-aa53-43ce-9c54-bbb76864eb73",
        "cursor": {
          "ref": "3d7c0386-fcc4-4921-b696-00232ca1b03a",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "9b4c7c92-5804-4d8b-9d76-d4fee96a04d1"
        },
        "item": {
          "id": "08da997b-aa53-43ce-9c54-bbb76864eb73",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5ed7e8f6-c9dc-4bf8-8fc0-6d8f442ac6e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6521a0d0-eb92-412e-bf39-d6e8a99f45fa",
        "cursor": {
          "ref": "91629d51-db97-4052-a522-545d30249e6e",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "434225e6-dad9-487c-a346-0f88d160feda"
        },
        "item": {
          "id": "6521a0d0-eb92-412e-bf39-d6e8a99f45fa",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e0b1fff6-5384-47b3-88a6-461934530945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0554810c-fb9d-40df-b575-0e70fa1c7361",
        "cursor": {
          "ref": "4d60519a-d409-4d4f-a7f9-b7a6916b0fea",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "0ece1623-0044-4036-9cea-56acee94c974"
        },
        "item": {
          "id": "0554810c-fb9d-40df-b575-0e70fa1c7361",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2542a67b-2b05-4784-9981-04fc0c96516b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b0be043-dd3e-401e-9fda-b20a1da90fe0",
        "cursor": {
          "ref": "43488935-8153-42af-a961-2fce38c1fc67",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "c402ce4a-429b-4ed6-bdb0-936e50fc1ee6"
        },
        "item": {
          "id": "0b0be043-dd3e-401e-9fda-b20a1da90fe0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "021766c3-0f05-4769-9018-cc457ab03bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c55ec6-ab00-4a05-8b8e-165f89d2ef44",
        "cursor": {
          "ref": "88bedcb7-0a43-4cf4-bad8-7c3435c6842f",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "381bc9e2-be49-4f5b-a061-ee6e89566388"
        },
        "item": {
          "id": "74c55ec6-ab00-4a05-8b8e-165f89d2ef44",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7180f2d1-a89e-4447-a9af-0fd501952cf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67da16d0-cfcf-43aa-ad7d-faf6b7f34a41",
        "cursor": {
          "ref": "1b2a31cb-dd7e-4d7c-8b8c-46b7725db800",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e919a185-dbfb-4b5b-9c9f-2e1b4f4a4592"
        },
        "item": {
          "id": "67da16d0-cfcf-43aa-ad7d-faf6b7f34a41",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7c0e2a44-5abb-487d-9ef5-f6be6961a730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "121f808e-05fb-41df-b35f-05b6df06ae85",
        "cursor": {
          "ref": "047d3766-c1e8-47fb-878e-4d7cb39826b2",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a95795da-5522-4dcb-90f5-a8fbb8cd875e"
        },
        "item": {
          "id": "121f808e-05fb-41df-b35f-05b6df06ae85",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "25e7fdfe-b189-44bb-96ad-34c0bafddf89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fade94a-6edd-40cb-bd43-2be74ef42d7b",
        "cursor": {
          "ref": "2f2f3df5-b7ed-480f-9b45-1e10c94b57fd",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "1eccb552-7a87-4630-a4a9-a73811d2bf75"
        },
        "item": {
          "id": "9fade94a-6edd-40cb-bd43-2be74ef42d7b",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "ab565420-a215-4f4d-82f3-4e6237108c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bdb0b51-1224-4bb3-a5d5-cf42037cbc0c",
        "cursor": {
          "ref": "b03bbdb7-f88a-44af-b64c-34480f870281",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "2b20307b-b8a6-4bae-8732-69825fc640ae"
        },
        "item": {
          "id": "5bdb0b51-1224-4bb3-a5d5-cf42037cbc0c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "decf9ebc-6358-4c39-9577-fb78bb160dea",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2bd3018-cdc5-4b51-8a52-fdddd8d99dfd",
        "cursor": {
          "ref": "07990a9c-1c34-4c5b-a846-e889537f8763",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "eac2a814-bce7-45fb-8b90-5d754fc464c2"
        },
        "item": {
          "id": "c2bd3018-cdc5-4b51-8a52-fdddd8d99dfd",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d068bd67-b1e3-4baf-992a-1fef35f16b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "556d77fe-a474-407d-8cc0-927b9c403c29",
        "cursor": {
          "ref": "0a4b0694-bdc6-4b47-bcf8-b30133d00d2b",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d989ff11-ac68-49c8-8e31-a12fb50bdb09"
        },
        "item": {
          "id": "556d77fe-a474-407d-8cc0-927b9c403c29",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "27153993-6bff-465f-ac09-28518c32dd97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a47da6-8259-422d-ae95-e18821c78eff",
        "cursor": {
          "ref": "730d991f-f6ce-4511-a3c2-b3850461f0e8",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "25b4f433-bec9-4bad-accf-f35c62dc2194"
        },
        "item": {
          "id": "d6a47da6-8259-422d-ae95-e18821c78eff",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0400ada1-3dd9-4946-9f1d-f28930753a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3197eae2-48fa-4ab5-97aa-d32a8c2f6730",
        "cursor": {
          "ref": "7fe20204-a0b5-48b1-93a6-e99694c24069",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "bd2ccff7-54ad-4345-9e3e-f0de8e8fca6d"
        },
        "item": {
          "id": "3197eae2-48fa-4ab5-97aa-d32a8c2f6730",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b6c1c617-c8a7-4e63-a80e-fc35de3ec4c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27358943-be1d-4eb6-968d-9b3c7544196a",
        "cursor": {
          "ref": "7500e00a-5b97-417a-a6b5-fdb4edd10ac6",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "1573b953-f8da-4790-914d-f09ffee8fb7d"
        },
        "item": {
          "id": "27358943-be1d-4eb6-968d-9b3c7544196a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "49cd5e5a-be73-4c9f-9d05-70edbe829980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e5f07d-10fa-4ba0-b02f-70d66fb3769f",
        "cursor": {
          "ref": "31a2af16-051f-4f2e-8a82-f435e7cad7fc",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "3d4c1438-7e11-49fa-977c-a304b2d3f146"
        },
        "item": {
          "id": "b5e5f07d-10fa-4ba0-b02f-70d66fb3769f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f633e9f0-d889-4313-a3f9-314241157797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4635df-3424-400e-b2dc-70571579d429",
        "cursor": {
          "ref": "a492060b-8088-4da3-956b-2ae1c84f9905",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "70b6d471-9ecb-4556-a77f-d7fd15dcd028"
        },
        "item": {
          "id": "1e4635df-3424-400e-b2dc-70571579d429",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5c11e2d9-3b3a-4f68-9177-c73123a668bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aed5918-2430-4ec0-b97e-a3251c246bfc",
        "cursor": {
          "ref": "77cd9c2f-c1c2-44be-aae6-609890c06ca1",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "3a9ec48b-60f6-421b-aace-c5e7f19746df"
        },
        "item": {
          "id": "9aed5918-2430-4ec0-b97e-a3251c246bfc",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0407abdf-0756-4fa8-9b9b-c6b4bf8f3152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "667bc9ef-e953-4f37-8c41-cc87090e5a48",
        "cursor": {
          "ref": "b7b2b733-4e9d-4ff5-a7ea-2e30884ec787",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "52669aa1-d4f7-4726-a969-653158c49dd5"
        },
        "item": {
          "id": "667bc9ef-e953-4f37-8c41-cc87090e5a48",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f287c92b-7c0b-4f56-ac1b-9ec3c9b80963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 131,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c44ac4fb-5659-40b7-9e06-8cd9f9db090a",
        "cursor": {
          "ref": "b4b55ede-386c-4662-be0e-00b11895d0b7",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "959294a4-8e8c-4bf2-95f5-842c0663476d"
        },
        "item": {
          "id": "c44ac4fb-5659-40b7-9e06-8cd9f9db090a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "011019fb-447a-4589-aa53-76680871cb1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52cdcc46-8f14-4a9a-8187-33a508f3c444",
        "cursor": {
          "ref": "565bca6b-2bdc-4c64-a112-7b668d43ef0d",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b4150c7b-b15e-4851-8a56-fd9a040fa479"
        },
        "item": {
          "id": "52cdcc46-8f14-4a9a-8187-33a508f3c444",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3871e19d-eb0f-4dfe-b8d4-9fa3c010f621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ff5c79-e361-402e-a6b9-9fb5f9643bd4",
        "cursor": {
          "ref": "18114781-3c02-4b9e-a03a-69aa7bf5f1a5",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b00e8ff2-f0ce-4218-b7ca-0de7a92448df"
        },
        "item": {
          "id": "40ff5c79-e361-402e-a6b9-9fb5f9643bd4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e7e5b214-e22d-4344-9219-9697ee430f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d5a8caf-3687-4c61-9d83-68fa1a0ea35d",
        "cursor": {
          "ref": "2d6d8f2d-8dcb-4c51-a364-fb66352f1a02",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "0a1ddaa1-a8dc-4a53-b57e-4122ad904246"
        },
        "item": {
          "id": "0d5a8caf-3687-4c61-9d83-68fa1a0ea35d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3781b4b4-3322-4b8a-b9c3-8c4ccb7fd6eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7483dd96-44ae-40b6-b14a-10a4ef53d71c",
        "cursor": {
          "ref": "21169318-4354-4338-a053-0db0574259ff",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e4ba4e2e-cdc4-485a-a5a2-80ae6d318d46"
        },
        "item": {
          "id": "7483dd96-44ae-40b6-b14a-10a4ef53d71c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "68b8e16e-817b-4e0b-8a74-a8ed06df330b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b032a8-d69f-43da-9910-5490902292ef",
        "cursor": {
          "ref": "a4175d88-4ca8-47a6-b294-2ec115d316f7",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "6d220523-5ce5-4e9d-8abc-5c1e50b0ee2c"
        },
        "item": {
          "id": "25b032a8-d69f-43da-9910-5490902292ef",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "826cac74-78b1-4c7c-a5fb-bc677549ce4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50504088-45c1-4f0d-b988-33edec5118ad",
        "cursor": {
          "ref": "5217a120-cc43-4c35-9a55-d79d19a3f1be",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b0cfbba6-3ad7-4e4e-b54b-1c65901df1e2"
        },
        "item": {
          "id": "50504088-45c1-4f0d-b988-33edec5118ad",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "08eb931b-e85e-45af-a9e9-b7be5839d836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a7902e-7c9f-41e9-b1b3-b7ab320bd85d",
        "cursor": {
          "ref": "d1e108bc-7c57-4483-8422-6f34b38d7170",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b373c943-795a-4d00-80e4-2ab5d26e2cc9"
        },
        "item": {
          "id": "39a7902e-7c9f-41e9-b1b3-b7ab320bd85d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5a6fc81a-5428-44b5-a3ba-4b38d7d0a191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b6db31d-7333-4685-a7bf-1dcc90c5cdc3",
        "cursor": {
          "ref": "46852c57-83e8-47a7-a01c-067051877c41",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3a51136a-fcc8-4eee-9c3b-3148246c2cc3"
        },
        "item": {
          "id": "7b6db31d-7333-4685-a7bf-1dcc90c5cdc3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1a8d42cc-908d-477d-8b4f-e119d0ee2ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8466a300-ec30-4848-95b8-f7b1b41b468e",
        "cursor": {
          "ref": "2762674e-60d5-4e66-96c2-6105fc9ffefa",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "27de65aa-9af6-4af3-b326-263a034ed9df"
        },
        "item": {
          "id": "8466a300-ec30-4848-95b8-f7b1b41b468e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0478dde4-156d-4723-86db-04b7cb9c54d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f49d64c9-2781-449d-a459-04c97a865dad",
        "cursor": {
          "ref": "a338c7c6-8875-484c-b525-0278ff176392",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "729e4f90-ab72-429d-89eb-baf2853c9c8b"
        },
        "item": {
          "id": "f49d64c9-2781-449d-a459-04c97a865dad",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c4149c69-cabf-4ac5-8557-8d9867f6fbff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e59b15f1-5ed0-4dd4-8be1-b7839a519706",
        "cursor": {
          "ref": "923f4e73-6bad-4537-b6ec-99b29834a193",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "0c29874c-13d4-4194-a0d2-51122dd128ec"
        },
        "item": {
          "id": "e59b15f1-5ed0-4dd4-8be1-b7839a519706",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9267fba4-7be3-4cad-9d12-3a925bbbc6af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d7c8ce-030d-4f5c-b5c6-ba6228f6f7d4",
        "cursor": {
          "ref": "870b0038-6a72-4371-a837-0a33d7178dfa",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "0f2ecf30-a8a3-4b7d-972b-67e1d9da8e4c"
        },
        "item": {
          "id": "88d7c8ce-030d-4f5c-b5c6-ba6228f6f7d4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4600ad08-ffe3-4863-9057-a4a44b2d97c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3314da87-d375-41e9-9f13-e630e01488ff",
        "cursor": {
          "ref": "0fe86d7d-54b3-4ce1-a776-e09a1ce139e5",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "97a16c18-7b56-4ed2-9cdd-61ae0396f22a"
        },
        "item": {
          "id": "3314da87-d375-41e9-9f13-e630e01488ff",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "1692b5b9-2a66-4370-ab70-0baacff3e271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e61bf31c-cf76-4e73-9303-3d8eba4913ac",
        "cursor": {
          "ref": "1e58f983-18b3-4477-9f11-778a59e23fad",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "5fdc02aa-2f16-4f88-b9b5-eec9ef8afe12"
        },
        "item": {
          "id": "e61bf31c-cf76-4e73-9303-3d8eba4913ac",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5ac9df32-125e-46c7-bae3-9d479d626f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff0805c-f824-4faa-b783-df477077164d",
        "cursor": {
          "ref": "9948c14d-a824-4f74-b337-ae024b42ae1d",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f020e6c0-b4c0-4749-b560-b4cdd3debbeb"
        },
        "item": {
          "id": "fff0805c-f824-4faa-b783-df477077164d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9aabce17-872f-46ad-8d5f-d37294a51650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27fdfff2-e7f9-47e8-8946-7e4eb09c1512",
        "cursor": {
          "ref": "d50cbc17-eaba-43d4-a991-237dfe996357",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "90b0feb0-09f2-4358-8464-16539afbdb26"
        },
        "item": {
          "id": "27fdfff2-e7f9-47e8-8946-7e4eb09c1512",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a08340c7-4e2f-45e8-8824-6bdc32d931da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f329d1ed-e1fd-4928-ad90-363dd1593814",
        "cursor": {
          "ref": "51cf1169-6eeb-4022-aada-c8266ef31f32",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "b32d0111-66de-44d0-9fa9-906549485cb5"
        },
        "item": {
          "id": "f329d1ed-e1fd-4928-ad90-363dd1593814",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "fee9de59-9fd6-473b-9e05-44028b09735c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e7cb17-99a5-4f69-ab68-75d45997c1c0",
        "cursor": {
          "ref": "d4825b98-37e9-47c3-87dc-50a34cda2f18",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "9b9ab7c2-00e0-4ec4-ac9e-3829c24f8546"
        },
        "item": {
          "id": "89e7cb17-99a5-4f69-ab68-75d45997c1c0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c66330e4-78a9-4372-a7b4-8c0243ec0fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "072a2658-b25d-4e18-874c-3caf9018226e",
        "cursor": {
          "ref": "9bdfb672-6903-46be-a42e-46f59c0d12fb",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "5d1a8a86-b935-4690-9226-4e1015b80157"
        },
        "item": {
          "id": "072a2658-b25d-4e18-874c-3caf9018226e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "368b5cc6-bf03-427d-ac13-2762a2af84e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "706f22a1-9d00-4a78-9fcd-c0de689ace50",
        "cursor": {
          "ref": "c09fa59b-75ca-42da-81af-600b9e39a4b2",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "98035518-12bb-4218-a21f-4fcf4ef5ebda"
        },
        "item": {
          "id": "706f22a1-9d00-4a78-9fcd-c0de689ace50",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0b24ce72-bff8-4393-a269-57bf627a561d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e97780e7-a937-402b-83ca-df57fdb640be",
        "cursor": {
          "ref": "983ae62f-cf16-4f08-a90d-1b89ef59ca99",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "52f7846f-4408-4230-89f8-3816178c20bb"
        },
        "item": {
          "id": "e97780e7-a937-402b-83ca-df57fdb640be",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3369cfa5-1229-4b61-8b94-5d4555670888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9734c01-038d-499e-87ba-c8da1258500f",
        "cursor": {
          "ref": "1bc3448e-d82b-4853-8dd1-ad2b5dcd32b2",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "461c46f3-1318-478d-8a2a-37c66ba41d7e"
        },
        "item": {
          "id": "f9734c01-038d-499e-87ba-c8da1258500f",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "0a4de77f-179d-4689-9ec9-175a521bd7ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd94e828-8655-4655-89ea-6cad7cf30d73",
        "cursor": {
          "ref": "cff1a66a-2b92-4e38-8a76-cc4bbd4b1583",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "85dffc2e-ba66-4a2d-895c-de2db5215aab"
        },
        "item": {
          "id": "dd94e828-8655-4655-89ea-6cad7cf30d73",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "c7e8d268-b545-4826-855d-2c8bba49af3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb7285fc-40be-4ccd-91f8-3d6f6ed29ef4",
        "cursor": {
          "ref": "f4bff88e-e586-4898-8058-7a99779ba1f4",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e1fecb5d-441f-402d-a9c6-3fc643573313"
        },
        "item": {
          "id": "fb7285fc-40be-4ccd-91f8-3d6f6ed29ef4",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "71e12b79-262a-411f-8b0b-b8047acdbaab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be22a7c-05a9-4cc1-b430-e2fefcb71f95",
        "cursor": {
          "ref": "b6bbf877-429d-466c-88cf-16081f856c45",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "35c338ea-3b7a-4529-8fd7-20946393fb6d"
        },
        "item": {
          "id": "0be22a7c-05a9-4cc1-b430-e2fefcb71f95",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "303f1a40-effc-4e65-96a0-dc771d890f46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d80912cd-ef78-4d7c-b294-7e66ced8fc69",
        "cursor": {
          "ref": "77841c5f-6b63-44e5-88d1-015826a8479e",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "5f2d9049-0a1c-4fd1-9f54-448926280bbf"
        },
        "item": {
          "id": "d80912cd-ef78-4d7c-b294-7e66ced8fc69",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "7e794bd6-80bd-45ee-b6a5-c89de0c43a9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1e72fb-095d-4cc9-9ee7-ca7fd1bd2892",
        "cursor": {
          "ref": "575ca81d-5483-425b-ab28-2c89c9318fea",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "975376d9-8fd1-42c7-a136-5819959e6e9b"
        },
        "item": {
          "id": "db1e72fb-095d-4cc9-9ee7-ca7fd1bd2892",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "06a6780a-caf9-41ae-8701-0076319a5b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df57823c-e35d-4ed2-b012-2fb8f1b755dc",
        "cursor": {
          "ref": "5c26eb72-a6b5-4eec-b2d2-7d295ed34b61",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "3600bc1e-337a-444b-afb4-5506a6da0ec1"
        },
        "item": {
          "id": "df57823c-e35d-4ed2-b012-2fb8f1b755dc",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4cdc7ffd-990f-4157-ad6c-a4352aeb9bd0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6caa5f57-9a9e-4ce9-9a25-99b89b2ffea4",
        "cursor": {
          "ref": "05f50c4c-588b-40a1-9761-0ba4326ad5f4",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "bf4f3c84-3624-4894-8695-a6becf38d9b2"
        },
        "item": {
          "id": "6caa5f57-9a9e-4ce9-9a25-99b89b2ffea4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "03684c45-f8bd-4c0f-9d3b-0ec987ab1d24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ecf36b-2038-496a-a24c-4e1a62d4099d",
        "cursor": {
          "ref": "e6a6030e-70c5-4d1e-b379-b4ba752ce2ea",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "53509340-460d-4c9c-9b85-8b3c4901f04b"
        },
        "item": {
          "id": "b3ecf36b-2038-496a-a24c-4e1a62d4099d",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "fc2abb71-1ee3-47ce-90b2-50ac56bff4e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ba7404-accb-47ff-af40-4810837e7136",
        "cursor": {
          "ref": "d0545be3-bdac-4aa2-865d-b3afc8cf71aa",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c71702b2-037c-4e49-bb09-d07847df65c1"
        },
        "item": {
          "id": "63ba7404-accb-47ff-af40-4810837e7136",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f06e03b0-93c0-472d-9be4-d860e2e92730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c3bc52-6402-426d-8083-dcd001096c08",
        "cursor": {
          "ref": "362ee02c-ec38-471d-b3c7-24245678ce17",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "78d52dfa-04e0-4c37-a005-5a266abe21d2"
        },
        "item": {
          "id": "c1c3bc52-6402-426d-8083-dcd001096c08",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "0623cc05-1b3b-4d18-a6e9-b088470c041e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6408b837-13c4-43fc-b9e5-0d50a11ae679",
        "cursor": {
          "ref": "e3ec9184-b471-4c98-babf-6b7e3fe745f7",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "e2be207f-ae25-4265-959b-70d7836923e5"
        },
        "item": {
          "id": "6408b837-13c4-43fc-b9e5-0d50a11ae679",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "12e8f8f1-0a28-49cb-b648-57518f916387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2447e22f-a6f2-4da4-a058-fcf722ea39c0",
        "cursor": {
          "ref": "6399cbd7-3677-4288-aabc-f9f4b7c12818",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "ae3c6ee5-87f7-4989-9404-66108cf304cc"
        },
        "item": {
          "id": "2447e22f-a6f2-4da4-a058-fcf722ea39c0",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "755a16d8-17d8-4244-baea-cf8073f64eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "153ecb6e-2645-408d-ae16-b8b5c4ecf67f",
        "cursor": {
          "ref": "947af6c5-cc4b-47be-bdfd-78422704ac77",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "70ed7f05-9f1b-4a85-8ca5-d5c35a2c3e2d"
        },
        "item": {
          "id": "153ecb6e-2645-408d-ae16-b8b5c4ecf67f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "c93ba8af-0ec7-4be5-8ca3-55fcb3cc3e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a09c4d-32e5-465f-8695-7cb1a0bbcc96",
        "cursor": {
          "ref": "61f7b416-dcd8-4a28-a135-ce0926293b40",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "bb4f066f-be35-4435-be92-64d51d44981b"
        },
        "item": {
          "id": "b7a09c4d-32e5-465f-8695-7cb1a0bbcc96",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "538df827-3f4f-40b0-8bbe-d6b573ddff99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67aa8410-a2e6-448a-b7eb-da7bc99b90d3",
        "cursor": {
          "ref": "a6c8a6b6-5658-445f-9595-26adfa2c05b2",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "1d4b07b1-3eea-4ba0-bf0e-34108c3a34ca"
        },
        "item": {
          "id": "67aa8410-a2e6-448a-b7eb-da7bc99b90d3",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b1279de2-e4d7-4e1e-ad85-6a87135b2823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b4ee23-76d4-442a-92b5-07456f7b518a",
        "cursor": {
          "ref": "cfc31a72-c9ff-477a-be1e-aa8bee27b220",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "268288cf-b8f5-4e7b-9e9b-eb795e620ec7"
        },
        "item": {
          "id": "88b4ee23-76d4-442a-92b5-07456f7b518a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "db647a30-6b21-406f-8d9f-e0c39fe21c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40bf8386-4dc2-4cd9-94f5-cab43c5ab574",
        "cursor": {
          "ref": "7b20faee-72b5-44b6-afad-5e9fcb3fe8b4",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "b3232f32-3082-49a3-8b01-80c9aa911bd0"
        },
        "item": {
          "id": "40bf8386-4dc2-4cd9-94f5-cab43c5ab574",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d4eaef04-ac38-4261-a0b9-2d18a61bd924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "235cd402-4b22-474b-a38b-ff49aa6a608f",
        "cursor": {
          "ref": "3b06c1a5-49c2-4643-ab0b-fe42067ab09f",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "935ab332-b098-4e57-aa20-06f0f5c9b24e"
        },
        "item": {
          "id": "235cd402-4b22-474b-a38b-ff49aa6a608f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "252363e0-92b3-43cc-b63d-c4ea0cdbb2cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f86f320-d131-40c7-93a7-074f738e9fd8",
        "cursor": {
          "ref": "fbcc6a7c-c12c-46a5-8186-e3f32dadf351",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "58bb2b13-75a9-49f4-9342-48204a5ebfaf"
        },
        "item": {
          "id": "7f86f320-d131-40c7-93a7-074f738e9fd8",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "cd195ec7-7c41-4cc3-ab04-c9a1e4b37f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "121287c1-a563-47f2-a2b0-6c2e8fa48a98",
        "cursor": {
          "ref": "945ede9f-7c54-49a7-9539-c17d92fc6685",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "be2fe274-43aa-4014-92e8-2085701bc974"
        },
        "item": {
          "id": "121287c1-a563-47f2-a2b0-6c2e8fa48a98",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "39cca1b1-9ae5-40cd-baa8-2a8dd1242f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b1221e-866a-4980-8a0f-56fca79370aa",
        "cursor": {
          "ref": "10fbf928-5dc9-45e9-8d9b-11d2440b813d",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "76506145-5fa6-4dc8-8fc7-2d911581dac3"
        },
        "item": {
          "id": "60b1221e-866a-4980-8a0f-56fca79370aa",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "96b38803-4f3e-4d0f-854b-5de9098faa66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c9e252a-dbb5-4186-bc62-914444e71c6a",
        "cursor": {
          "ref": "1d19c63b-8d63-4613-bcf6-5b9807866d2b",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "1a4dc4bf-475e-4fe5-a0d8-1a422b3c3286"
        },
        "item": {
          "id": "3c9e252a-dbb5-4186-bc62-914444e71c6a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "68415ed3-c631-44fa-a7e7-67e21f27d865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fafc15f-5620-4b11-939d-41bf0119b5da",
        "cursor": {
          "ref": "0402a9b5-c45f-4292-a18c-03038aa2266a",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6b02a343-18fb-4a57-a9a8-8fe56068df66"
        },
        "item": {
          "id": "1fafc15f-5620-4b11-939d-41bf0119b5da",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "126a601c-db33-487c-b2e8-065f2988576e",
          "status": "OK",
          "code": 200,
          "responseTime": 597,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "287daf6a-a050-4252-b4c7-d7f9689131da",
        "cursor": {
          "ref": "3ffb8234-20f7-4082-88c8-c0a00bbe93b8",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c4e78c84-c9f3-435c-aefe-828921c408c6"
        },
        "item": {
          "id": "287daf6a-a050-4252-b4c7-d7f9689131da",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "e688da92-8a77-430d-8a82-ee9961e7e293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4eb87cb-c4c4-4c6f-a514-90a2ad689670",
        "cursor": {
          "ref": "a08f2670-1f7c-44b5-9af4-4e6f1094cac4",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "24fd68c7-80a8-42a5-858d-5c8ae5385b33"
        },
        "item": {
          "id": "d4eb87cb-c4c4-4c6f-a514-90a2ad689670",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a5703489-972a-47b3-977e-2a341bcc77d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 975,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c42493a2-700c-4178-9c43-ea05e7436dd2",
        "cursor": {
          "ref": "d7b11fd2-6911-4ec9-9ed6-c29ce84b1a09",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "031d9774-342d-4811-88f1-c5a0f341d609"
        },
        "item": {
          "id": "c42493a2-700c-4178-9c43-ea05e7436dd2",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "21a095e6-74bf-46ca-a4b1-99dfdefdf789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4125b625-50bd-4a7a-8fe4-ea34a6dba4a9",
        "cursor": {
          "ref": "f68cd8e8-00a6-43c5-8055-ba9397345c21",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "ff80526f-2cb7-4cc5-8004-4ab7e742ad56"
        },
        "item": {
          "id": "4125b625-50bd-4a7a-8fe4-ea34a6dba4a9",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d4189cb2-d5db-4f1f-9d39-e58109f604b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce698fd3-f1e1-42dc-8981-af96d6b422d1",
        "cursor": {
          "ref": "5a1fd144-f82d-47b8-b2b8-637145bc6fe0",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "715ff5ea-2bd2-4bf9-9225-bb4ca5935c2e"
        },
        "item": {
          "id": "ce698fd3-f1e1-42dc-8981-af96d6b422d1",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3aefd138-e132-4492-8519-8b67995a32b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36c70208-649f-4518-a1da-8300939d46a0",
        "cursor": {
          "ref": "050a7d11-2877-4b5c-948e-32dbc60d70ed",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "66feca87-6076-4a7d-8635-cbd14ec18461"
        },
        "item": {
          "id": "36c70208-649f-4518-a1da-8300939d46a0",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "b7b0c624-49e4-431c-8b4c-afe195a47e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ebccc7a-28ab-4665-993b-c772dc0bbbbf",
        "cursor": {
          "ref": "5ad2dba6-5fef-4c14-850f-a4b701a6adc4",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "0a33e427-f854-4a9e-a128-a4aac1a23ef7"
        },
        "item": {
          "id": "3ebccc7a-28ab-4665-993b-c772dc0bbbbf",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "42813ed2-0c41-439d-a064-d027f96ed23a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d7db802-979a-40d1-b445-92cd4cab5702",
        "cursor": {
          "ref": "6024f70e-aa52-42b2-bf67-6a4e76ca0752",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d3f7a7cd-b5a1-4623-9d34-2bd792c76ea0"
        },
        "item": {
          "id": "8d7db802-979a-40d1-b445-92cd4cab5702",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "108cb341-1101-4560-abac-0962a7458910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ecc752-5a88-4035-88f8-5b78e1807ca6",
        "cursor": {
          "ref": "53adcb75-12bf-4748-aff9-3a4dc6e1eb7d",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b76d0276-ad51-4158-b684-faaba3ccba29"
        },
        "item": {
          "id": "40ecc752-5a88-4035-88f8-5b78e1807ca6",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "5ca97e8b-3cce-47ab-8e74-17659d9b07ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e82da7c-00d2-4289-8c4a-463c78cf4ae6",
        "cursor": {
          "ref": "e2fa0787-00e5-4106-8357-032cb5b68621",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "3ba98fcf-8e6a-4110-aef4-a573aa4a7e9c"
        },
        "item": {
          "id": "3e82da7c-00d2-4289-8c4a-463c78cf4ae6",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "7b69e817-10ad-4d89-b439-2353f3c3a59c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6152509e-e3bf-492b-85af-e3958acb1d7f",
        "cursor": {
          "ref": "a7741daf-7c45-4061-bb54-061a10dc0d1b",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "74c339d2-1418-4073-9c89-432a7317ac56"
        },
        "item": {
          "id": "6152509e-e3bf-492b-85af-e3958acb1d7f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "0d0c0c49-7f1d-494a-853d-ea7b332928ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0212145-903a-4e24-867d-8d42a9ef9bd6",
        "cursor": {
          "ref": "8420561c-e852-4544-9f2f-13088395507d",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "63e6da06-d9d8-4d98-94a2-deeb0020da7d"
        },
        "item": {
          "id": "a0212145-903a-4e24-867d-8d42a9ef9bd6",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "6d81aac0-9263-4ed6-b919-7e82a6a17498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bad2fb6-f6d2-4697-b11e-bae40c98170d",
        "cursor": {
          "ref": "96639202-f325-4cf5-a65e-16f252eefd18",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "ba4216c2-13bc-4c69-b6c9-e3916b983a31"
        },
        "item": {
          "id": "8bad2fb6-f6d2-4697-b11e-bae40c98170d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "fe618e93-0dfe-4007-b855-a46c4c3ace82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d03ba23-0696-4c40-bb87-5a0e6fec3f7a",
        "cursor": {
          "ref": "b5f0233c-de17-498d-aef7-20538d67d3f2",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "1d25f117-ab0d-4062-bd1f-9edc6005af89"
        },
        "item": {
          "id": "7d03ba23-0696-4c40-bb87-5a0e6fec3f7a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "0892ab5d-756e-4e81-9300-7ec1e8f5814c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9566abd-015e-4893-9d45-df7ecae46cca",
        "cursor": {
          "ref": "908d7af6-2eea-468e-9685-fd97ac0df6f8",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "97180de9-fd95-40e4-a3f1-52b825bd7fd2"
        },
        "item": {
          "id": "c9566abd-015e-4893-9d45-df7ecae46cca",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d759e04d-be83-4e55-a786-4ce3d0e8bb95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d54bd87e-27b5-4d53-a959-0cc7ac739b5d",
        "cursor": {
          "ref": "8c04f4c0-6a3d-4ac5-92fb-fcd4ea66f5f2",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "10176413-a8e7-478b-b734-120b5d137671"
        },
        "item": {
          "id": "d54bd87e-27b5-4d53-a959-0cc7ac739b5d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "23445946-9539-4f8c-a2e5-0ff4631e2cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e14817-9f8f-481b-b268-153ab0d3970e",
        "cursor": {
          "ref": "00116db1-95ba-4f4b-ba7c-7fa3f7e5caeb",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f9d51950-d72e-4c9c-bc42-542654f63d92"
        },
        "item": {
          "id": "73e14817-9f8f-481b-b268-153ab0d3970e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "acb3ab9a-6507-4225-8d9e-5179b99dec48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fbe2298-a9c4-439f-bdb5-76047717a2fe",
        "cursor": {
          "ref": "e47b636f-6362-40d4-ab78-3d0265a9c27a",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "bcd91e48-4d6a-4355-b748-0572e35e4a3d"
        },
        "item": {
          "id": "9fbe2298-a9c4-439f-bdb5-76047717a2fe",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "2731139d-9976-45e9-8902-f6d3bfe62842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e0161c-7138-4864-87af-f0ff42cc147d",
        "cursor": {
          "ref": "d2096cb0-2f52-4768-862e-c99cc0b5b6df",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6266a9cd-2b63-43b1-bfd8-30da717e9911"
        },
        "item": {
          "id": "a6e0161c-7138-4864-87af-f0ff42cc147d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "2579d5d2-db72-4cb5-b485-cf62fff8141d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "120153d2-172a-41c3-b063-96a590b473a6",
        "cursor": {
          "ref": "34ad206d-1e33-4d39-82cb-7fe5e79c68f8",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "98ffd90a-3412-4f4b-80b9-387c70a51684"
        },
        "item": {
          "id": "120153d2-172a-41c3-b063-96a590b473a6",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "7df2bb3c-f1d9-4b24-af92-db1568750882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36884a19-3e2f-4933-81ed-2b3bfa3a2fb4",
        "cursor": {
          "ref": "99eeb9b1-59fc-4dec-a1fa-d8307225f316",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "294f9e3a-3eed-44b6-bf6e-4e09123a35d0"
        },
        "item": {
          "id": "36884a19-3e2f-4933-81ed-2b3bfa3a2fb4",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "918e2453-1638-4025-948c-f1408692f22f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b8ff67-0e33-4274-9a68-40d4dd595bc9",
        "cursor": {
          "ref": "bddce44e-fbf7-4cc9-a1fc-d6daff358cf0",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "2790cd02-67ff-4d09-82d7-5cad81906528"
        },
        "item": {
          "id": "c5b8ff67-0e33-4274-9a68-40d4dd595bc9",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8a11b6f7-e345-44e1-96b8-19d13481c13d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "189c7eb3-c179-4adb-bb05-c01cace33368",
        "cursor": {
          "ref": "c68baba7-66e6-402e-8f7e-dbeb4b587086",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "5142275f-6594-43bf-ac87-bf3dcbfa29de"
        },
        "item": {
          "id": "189c7eb3-c179-4adb-bb05-c01cace33368",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "25599575-9ecb-477a-b30b-cc46e79fb98b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f3efef-5835-49f5-a730-26491e3a99ff",
        "cursor": {
          "ref": "651fc6de-d7ed-473e-82e3-2cb652cd8a0f",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "9639e7b0-a306-4c31-a20b-dec8c87c51ca"
        },
        "item": {
          "id": "59f3efef-5835-49f5-a730-26491e3a99ff",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "3bca1481-e168-4cb6-b1c2-fec03895e979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "317b0bba-c72d-4c4e-bd74-90ce45ca7cb9",
        "cursor": {
          "ref": "473730b4-fc2b-403e-bb48-9742a488883a",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "ccfcbd7f-6a70-4519-8ada-c433ee0d6ed7"
        },
        "item": {
          "id": "317b0bba-c72d-4c4e-bd74-90ce45ca7cb9",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "3c4f2219-f59f-4e4a-a310-49640bb2fb3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b9f698e-5cd8-40f1-ba87-379d950f7b5e",
        "cursor": {
          "ref": "fe35b748-b1e9-46c3-a985-d336b62ef907",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c81d7bd7-6de3-49d5-a949-1ede5fa24bc8"
        },
        "item": {
          "id": "4b9f698e-5cd8-40f1-ba87-379d950f7b5e",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "98a33c8e-fd06-4978-a095-eff18bb91552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ee9c64-c2b5-4d05-97cd-38ae51e7fc4a",
        "cursor": {
          "ref": "4ca23661-e271-45da-9e01-eef295392101",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c85be833-b95c-4312-8789-b3b5cd5a2247"
        },
        "item": {
          "id": "97ee9c64-c2b5-4d05-97cd-38ae51e7fc4a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a23953eb-4244-4f9a-87eb-a6abf4273b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d2c7a9-d821-47b2-9f51-c460f9f5ecdb",
        "cursor": {
          "ref": "1af16424-06fa-4db2-9073-9219a4a946a0",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "19ea57fa-19d0-4007-9bee-9fcd28ed6e23"
        },
        "item": {
          "id": "b6d2c7a9-d821-47b2-9f51-c460f9f5ecdb",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "031ee67a-a66b-45bb-9d09-602cbc1fea42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a78f02b-b4a3-4e68-906f-4a65461ff0f7",
        "cursor": {
          "ref": "ef72af21-b40e-47c0-960d-55809bc165f6",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "49042aeb-10e3-4391-9dd6-8ad98cd9cdae"
        },
        "item": {
          "id": "7a78f02b-b4a3-4e68-906f-4a65461ff0f7",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0282ba31-0a39-4b66-84ff-21e57605b4a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "448c6787-86ef-42bc-b00d-2a5b5e0aa635",
        "cursor": {
          "ref": "a4005ad1-1412-4c44-975d-3d1de483f24d",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "cd32b847-4710-4ff4-81d3-32f77efdf8da"
        },
        "item": {
          "id": "448c6787-86ef-42bc-b00d-2a5b5e0aa635",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "67b1029a-f3d9-4104-814f-63e76e417f40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d8fb7c9-d059-40af-a4d5-137792e6e17d",
        "cursor": {
          "ref": "41676187-497a-49bf-ac02-13a79c6d0662",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "133b993a-1634-4017-bd6f-38e78b244f79"
        },
        "item": {
          "id": "3d8fb7c9-d059-40af-a4d5-137792e6e17d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "1989f965-30da-484c-84f5-b1a2052d9c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ad7f6c-ddcd-4798-9d8d-1d604979f06c",
        "cursor": {
          "ref": "27503be0-88e0-482f-a4b7-febd27a31515",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "0493c13a-c41b-4a3d-bea3-44dc0b23b383"
        },
        "item": {
          "id": "44ad7f6c-ddcd-4798-9d8d-1d604979f06c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "5e68dbc8-2932-4cae-9409-835a383f874d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1027a80-c265-4582-9efb-e6c50f21af67",
        "cursor": {
          "ref": "fad7c283-5f2e-4145-951e-22b4fa9589d5",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4976be38-e20b-4361-8f51-964589868b83"
        },
        "item": {
          "id": "d1027a80-c265-4582-9efb-e6c50f21af67",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d3947b71-e444-4de9-b071-3c9b2542b35a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465722df-2fc4-43e3-bd55-c4a33f398476",
        "cursor": {
          "ref": "ed2f55b7-98a5-4ccf-8f4a-281d67f1bce0",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "87b51492-c057-406c-9cdb-4480ac9bb824"
        },
        "item": {
          "id": "465722df-2fc4-43e3-bd55-c4a33f398476",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "2c292fee-05f2-4d08-9c9d-ea93edd14324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc316987-2a9d-494d-af84-1df7eda41e41",
        "cursor": {
          "ref": "7fbb527a-9b3d-4a92-be74-d4c8d9c39de9",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "708c6cde-56d3-469d-9da0-7c137cf03d36"
        },
        "item": {
          "id": "dc316987-2a9d-494d-af84-1df7eda41e41",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "9fe4e4dd-95eb-426b-a29a-5d1b24aa5089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16c4da0-8dc9-43f2-bad5-92721126f9a6",
        "cursor": {
          "ref": "5bf21185-334e-4e1b-983a-8216a51be053",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "13e8f598-9980-498f-8e3d-04ca5e764173"
        },
        "item": {
          "id": "d16c4da0-8dc9-43f2-bad5-92721126f9a6",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "6e373f5e-11d2-4ae3-b359-7471fb082120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "395d95d3-ee95-4130-be8e-d27baba7ff8b",
        "cursor": {
          "ref": "c4f0ab65-e13a-4ce8-8d60-5e24f8aacbfe",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "666dfc17-9b60-45f8-9885-5a67e406685e"
        },
        "item": {
          "id": "395d95d3-ee95-4130-be8e-d27baba7ff8b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e38f8137-28c7-43f0-bcd0-1d117be3848c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2970129b-2d18-4b1f-8cbd-c3c081a560f9",
        "cursor": {
          "ref": "da17d550-d11e-4107-9a85-711a58d5a74e",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d9369d72-db7b-4071-8e1e-03c29c528ea4"
        },
        "item": {
          "id": "2970129b-2d18-4b1f-8cbd-c3c081a560f9",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "7b0853b9-f34c-401c-9c61-1d987f5d9511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "599aaa25-7c9a-4916-91b6-a684d105eb96",
        "cursor": {
          "ref": "9b2cd027-d56a-4392-89b9-11bd862b3dca",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "fb795cf7-03d4-4a19-8b6c-48022a75bf25"
        },
        "item": {
          "id": "599aaa25-7c9a-4916-91b6-a684d105eb96",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7d4655f5-a821-4cd7-b243-7578def0f1e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fdf04d1-5547-461f-97c1-939c3c9fe67a",
        "cursor": {
          "ref": "448d99ae-13de-4cb7-8a6c-d613601b57d7",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d8aa8878-275c-4b89-9846-5563e8abfbdf"
        },
        "item": {
          "id": "9fdf04d1-5547-461f-97c1-939c3c9fe67a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "bbbe7ed7-5fb7-488a-9d1c-4bdd80a2e61a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a170c9-a46c-49cb-ba43-a10636673465",
        "cursor": {
          "ref": "50109fb8-42b4-4982-9f33-7a26d848a214",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "6be4d6f3-3c49-435a-aeba-9e73473d4404"
        },
        "item": {
          "id": "74a170c9-a46c-49cb-ba43-a10636673465",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "276117ad-58ee-4ef5-8457-ea88ec3dfc4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ba5b68-f9b1-4558-b6c5-c2720c0fd997",
        "cursor": {
          "ref": "f0c493f5-a1a4-42da-b5c9-14c6340788db",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "cc5bf3c0-5c5b-4433-8b9d-c90229794cd0"
        },
        "item": {
          "id": "59ba5b68-f9b1-4558-b6c5-c2720c0fd997",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "532cae12-5019-4719-8756-589a89a4bf06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce42605-ad9b-4ffb-a55c-d367f9bbcd37",
        "cursor": {
          "ref": "58184112-c919-4fe6-a2bf-b6677c1a0568",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d511372a-8ee2-4718-8113-f8148775369e"
        },
        "item": {
          "id": "cce42605-ad9b-4ffb-a55c-d367f9bbcd37",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b0d56fe9-74bc-4eea-9fbe-d18c17fa426b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb3f6b6-36ca-4545-a2e4-24f415ee0ed6",
        "cursor": {
          "ref": "59c4aa23-9fdf-4221-b16d-827c1fc7c6f3",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a0d29293-f9c0-4ea8-aece-f98ebf4ccff6"
        },
        "item": {
          "id": "5fb3f6b6-36ca-4545-a2e4-24f415ee0ed6",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "14c8caca-2c9b-44fe-bf6c-9a3b70a0347e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d49b5214-31b6-4e57-9ec7-358d4b13c1c2",
        "cursor": {
          "ref": "939e126f-2732-4307-b9fe-2bdbb83cbb73",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ad740da3-2e3c-4194-9185-1d727eff1fe0"
        },
        "item": {
          "id": "d49b5214-31b6-4e57-9ec7-358d4b13c1c2",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "477259e9-38a9-48b7-9a90-cf40087b09a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4272e8-3350-422a-826e-b13e02c0f4e1",
        "cursor": {
          "ref": "6fcd11e7-4539-4018-b666-621c9a43e9be",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c4c9e2d9-c75f-4409-8b19-1c68f0be32e8"
        },
        "item": {
          "id": "3c4272e8-3350-422a-826e-b13e02c0f4e1",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "8181172f-c8e4-4453-9a8e-e239fa18dc7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a631f2fa-6912-483a-87c4-573d6392f5e6",
        "cursor": {
          "ref": "b3c8e250-6841-4ac4-984c-2f60141bdd7a",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "048a6e5f-16a2-446b-a322-c61e4394fc63"
        },
        "item": {
          "id": "a631f2fa-6912-483a-87c4-573d6392f5e6",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "ec6820f9-c846-4825-8e9d-d08308d53013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b62e342-fe38-4c68-b89f-790e6c65394a",
        "cursor": {
          "ref": "77b4a141-5d48-43ee-bf09-9e0941ec9473",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "cb6e7ed7-6f0b-4588-b356-a448da878af8"
        },
        "item": {
          "id": "3b62e342-fe38-4c68-b89f-790e6c65394a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "2586d801-507d-4a8d-8412-51e75da7b390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f02ecc-2afe-45b5-8300-cc8f806d9d09",
        "cursor": {
          "ref": "81ba2894-28cc-4c3d-9ce2-7c91b222194b",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a2c8e54a-3122-4685-9134-d30790583f7e"
        },
        "item": {
          "id": "c0f02ecc-2afe-45b5-8300-cc8f806d9d09",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d2c9dc4a-074c-4581-8d1f-7242cc1b2459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f0bb7b-6685-442c-bd1e-056ea83b9810",
        "cursor": {
          "ref": "0d635221-1035-4828-9a59-37a6575350ff",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "3de325bd-947a-42b2-bd70-faef26e89bd9"
        },
        "item": {
          "id": "04f0bb7b-6685-442c-bd1e-056ea83b9810",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "bd716954-2122-43b1-8c72-dd70f6adcb4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8abdafb0-955f-44ef-a0b8-24da8d460709",
        "cursor": {
          "ref": "c2c31d73-8792-49bb-8012-ee946d95ca48",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "879ba6e3-1d23-4eca-b87f-02ce64d59c38"
        },
        "item": {
          "id": "8abdafb0-955f-44ef-a0b8-24da8d460709",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "35ced926-73e8-48d4-8a68-d48dadebfe9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc4ed69-d023-4df9-a545-b191f996cb68",
        "cursor": {
          "ref": "216aa9f1-54b0-4c19-bb5a-4e6277bb4f73",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "f1f441a8-ac94-4476-8b7f-74dffec6050c"
        },
        "item": {
          "id": "2bc4ed69-d023-4df9-a545-b191f996cb68",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f83180f0-8258-49d2-8f3f-8ccd89bef0fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c38a606d-7347-4de0-ac17-cad566dc2d32",
        "cursor": {
          "ref": "9904f2f3-2099-4d12-a85a-dd684570443c",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ece08d0d-5424-4137-88c7-09a5892d969d"
        },
        "item": {
          "id": "c38a606d-7347-4de0-ac17-cad566dc2d32",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "5683ddfe-b0d6-49b7-b6e6-2dc56724f151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1823d32-e59f-4642-8413-58b1a1907845",
        "cursor": {
          "ref": "4b12f9ae-d2b6-411a-a6a3-e5e449f48ccd",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "5ec8a822-e0ef-4e92-aa5e-8212867ef627"
        },
        "item": {
          "id": "c1823d32-e59f-4642-8413-58b1a1907845",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "ecd9a594-a5a1-418a-80df-b08a0709ee4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "430cc6fb-4bdb-49d9-bb99-4b7df6c16947",
        "cursor": {
          "ref": "4526afd4-b3a2-4789-99fb-f703a1aa5737",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0a90d9db-bad6-4fd6-bd56-b764dd725728"
        },
        "item": {
          "id": "430cc6fb-4bdb-49d9-bb99-4b7df6c16947",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "87d6c9f5-dafe-44c4-80eb-9e9e0bcb30c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "617035e5-40bb-47ec-984c-f29d280f5c9c",
        "cursor": {
          "ref": "eb9b77ad-9b23-4445-bc1a-2a6e4b01f69d",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "cef6ec82-c389-4a03-94d7-ebc3c93193ad"
        },
        "item": {
          "id": "617035e5-40bb-47ec-984c-f29d280f5c9c",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "0e33be35-c6a3-4d12-b48d-a43b2ec3c739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f7c994-420d-4f67-8cfe-2b09073cd6ae",
        "cursor": {
          "ref": "d6dde33d-2a55-4926-bc8b-53d752578004",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "f445341f-cf5a-47fa-9982-9fd0173225c8"
        },
        "item": {
          "id": "b2f7c994-420d-4f67-8cfe-2b09073cd6ae",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "78fae471-56be-4f67-ac30-4709078ea168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc2c6847-c3ab-43ba-8795-ecd62ef2d983",
        "cursor": {
          "ref": "27e181fa-8249-4409-8a7e-549dcd075ee8",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "994e3f02-db6d-4213-a329-7c7668b4a16b"
        },
        "item": {
          "id": "bc2c6847-c3ab-43ba-8795-ecd62ef2d983",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "21c21ae0-034d-44bc-92c7-784e90970826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "829c5ed8-ae6f-46d7-bab1-20d3bef84c26",
        "cursor": {
          "ref": "b0dc612d-fae4-40bd-8bd5-e07370edd36a",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "9c22b9e0-3143-4600-ba5a-48588c8a591e"
        },
        "item": {
          "id": "829c5ed8-ae6f-46d7-bab1-20d3bef84c26",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "12856c0f-7fc1-4e76-9933-22523a86abe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ba16b96-78ee-474d-97bd-fac54bf43099",
        "cursor": {
          "ref": "2c295a14-42ee-4d7c-ab50-c05b967ef9b6",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "9499814b-5b43-464d-8e22-86b41fb2f323"
        },
        "item": {
          "id": "5ba16b96-78ee-474d-97bd-fac54bf43099",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "3825452f-1a94-4eca-bfd2-a9bc52621ba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de268c1c-bfe3-4215-8fdf-7a0bb61865ab",
        "cursor": {
          "ref": "62f99748-9170-4e73-9308-19566eeb4af7",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "15adb010-5503-42df-80ec-fb597bec1c7a"
        },
        "item": {
          "id": "de268c1c-bfe3-4215-8fdf-7a0bb61865ab",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "2ab7753d-64c0-4713-af11-2b82a25a51af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dddfbb26-f8dd-494e-a588-9ee18958c2c9",
        "cursor": {
          "ref": "e3e018db-c0d3-4b87-946f-87c7c94ef69e",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "a9f536d9-37db-4159-a2d3-45197117fd49"
        },
        "item": {
          "id": "dddfbb26-f8dd-494e-a588-9ee18958c2c9",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "0a3145c1-9910-4f7c-8f7e-9fc2ef18464e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f388d45-0d79-4fd0-87e0-cecff0438ddf",
        "cursor": {
          "ref": "f4f3cb6f-60ec-4550-92b0-48566e6ee279",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "1641968a-cb3f-4820-b65b-09a2301f0091"
        },
        "item": {
          "id": "1f388d45-0d79-4fd0-87e0-cecff0438ddf",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "7e6171d9-e36c-439e-b847-fdd38a2e23a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e2992d0-2898-4e44-84d7-517571e5a916",
        "cursor": {
          "ref": "15bac9f8-f2e4-4cb3-8c54-6a2bf73a21d8",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "16d57105-a26c-42cc-8347-aff38c61763d"
        },
        "item": {
          "id": "1e2992d0-2898-4e44-84d7-517571e5a916",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "06c391c8-e5fb-4614-bed7-10b2e9b930b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b73a8f05-f42c-43b6-8eff-53b54f3fa4f9",
        "cursor": {
          "ref": "659977ec-9eac-4a81-8337-c0d543c6e513",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "d3b24f62-6287-4849-a9e9-70aa4951365a"
        },
        "item": {
          "id": "b73a8f05-f42c-43b6-8eff-53b54f3fa4f9",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a6691899-34ee-4547-809f-a7202ec3e644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e4a5c13-52c5-4675-aeef-edb6cc0395fa",
        "cursor": {
          "ref": "d2506fb2-c02c-4c5e-a629-013de946ab0b",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "36cc8e42-efdb-444b-aee3-7741fd6ff2c3"
        },
        "item": {
          "id": "8e4a5c13-52c5-4675-aeef-edb6cc0395fa",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "565adb19-4764-4fb2-84d6-87056a50cf8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f9ac3c-a75e-4d3f-a740-ee88139a9888",
        "cursor": {
          "ref": "d15dd7d4-75d8-49a1-93d7-d2de0fa27e26",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "86f57ba3-f9a7-4834-9000-4533f3d3f7d7"
        },
        "item": {
          "id": "32f9ac3c-a75e-4d3f-a740-ee88139a9888",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "16eb24f8-0f01-4ab7-a05b-d45804d2634f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef7f8984-d4fa-42e5-89a9-26a36ee9c083",
        "cursor": {
          "ref": "53a12616-9ea5-4d19-93a2-73bbce936cce",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "3f3a4f3b-fa9c-46c6-97d4-c8f10c6efaa3"
        },
        "item": {
          "id": "ef7f8984-d4fa-42e5-89a9-26a36ee9c083",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a6780b38-b353-4951-8baa-c669e35b33ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4edac3be-ef75-4e8c-a73f-d58f11ed7119",
        "cursor": {
          "ref": "9f27dc17-601c-41a8-8ea1-8df288d0cc24",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "884ad851-ae4a-4fd4-b912-7c5be32d977f"
        },
        "item": {
          "id": "4edac3be-ef75-4e8c-a73f-d58f11ed7119",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "8cdf77a3-9ce1-4c91-923d-b32e62f6a022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e73fd760-2f6b-40c9-b44a-3e353ce866a5",
        "cursor": {
          "ref": "b10552d0-7878-43f2-91c4-a24c667151cf",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "3f0ae48a-f51c-4c53-9b01-64b7eabd1f82"
        },
        "item": {
          "id": "e73fd760-2f6b-40c9-b44a-3e353ce866a5",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "1379fedb-4706-45ac-b29b-38b222e19b07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce346cc2-a2d4-4e3c-8da0-26457444d4cc",
        "cursor": {
          "ref": "bbbaad32-9c36-43a9-a9b8-19a501c1944c",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "8bfeacb4-2bcf-49bd-bebc-51779354d9e0"
        },
        "item": {
          "id": "ce346cc2-a2d4-4e3c-8da0-26457444d4cc",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "debe2219-2b06-4c72-a4fb-3b281be3ff1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca09df1-10f1-4e58-a26f-10e141365b9d",
        "cursor": {
          "ref": "56fd02b4-c540-4560-8220-c1669131b9ac",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "54198051-a8d3-4ad3-b8d8-5687c9759b05"
        },
        "item": {
          "id": "8ca09df1-10f1-4e58-a26f-10e141365b9d",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "5eb4f002-de30-42aa-8869-177096cf174a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb46301-f9f9-44d4-8b23-9b46827d7ddd",
        "cursor": {
          "ref": "968781ef-39c4-44e3-a2fa-68c5fa2bf37d",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "b3571e2e-623d-467c-9221-df95040a6255"
        },
        "item": {
          "id": "ecb46301-f9f9-44d4-8b23-9b46827d7ddd",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "8e97a722-3d11-4baa-ab7c-27204d908b67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb13bec-cda7-494d-a518-e68b32eb6dc8",
        "cursor": {
          "ref": "2e561671-12dd-420f-98a5-9e5ddfa88049",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "5a540cae-7e35-4dd5-b8b0-b66ab493804c"
        },
        "item": {
          "id": "ebb13bec-cda7-494d-a518-e68b32eb6dc8",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "fb44b1eb-0f2d-4245-aeff-1782da4f682b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eecb552-168d-430a-ab7d-fc8ea6eabf5d",
        "cursor": {
          "ref": "2bf5b9d7-82eb-4857-9efa-d082c49380b9",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "657d672f-603a-4d82-b747-3bdf5e936c25"
        },
        "item": {
          "id": "6eecb552-168d-430a-ab7d-fc8ea6eabf5d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "3693fc2e-86f3-4ce1-a217-012d7ad862b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da03379a-57aa-452f-b79a-2300e92b7b2b",
        "cursor": {
          "ref": "4dbeecbf-05be-4bbd-93d5-01f5236d0c88",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "31dd8848-45b1-42f5-8943-5f0efc49df14"
        },
        "item": {
          "id": "da03379a-57aa-452f-b79a-2300e92b7b2b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b2f3be18-3d45-4a6b-946f-1b4a58d76fc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac71c5b9-d019-4b05-b3ad-c7d414840dce",
        "cursor": {
          "ref": "82f10ef1-d50e-40a1-ba5d-565eea077612",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "d4462b61-a80a-4972-bbac-437356dce4e9"
        },
        "item": {
          "id": "ac71c5b9-d019-4b05-b3ad-c7d414840dce",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "bb7ad49d-ef2d-4517-83c6-6fa33decb480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e572fb7a-ea19-4b5f-a466-e4aab478ad90",
        "cursor": {
          "ref": "a58680e5-c373-47fd-8e16-8fed326beee0",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "97f16d67-6a22-47a0-9f05-8f09c180a3f0"
        },
        "item": {
          "id": "e572fb7a-ea19-4b5f-a466-e4aab478ad90",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "45be1871-bafe-43ed-820d-65e0204a329c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee12beec-72b5-44f0-97c3-07110c2f9a7f",
        "cursor": {
          "ref": "149d1d59-962d-41f8-bd5e-11e8ef152bd8",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "4cafd210-3d72-4aac-8f5a-0760ef549378"
        },
        "item": {
          "id": "ee12beec-72b5-44f0-97c3-07110c2f9a7f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a61a245d-d74d-4e5d-b012-371f00e5657a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c1a046e-160a-46cd-9af8-64901bd0c8c4",
        "cursor": {
          "ref": "f4eb8202-3b08-4412-b78f-2bda37f6f4f6",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "e0b27849-ab0e-442d-bd6d-528b72806133"
        },
        "item": {
          "id": "0c1a046e-160a-46cd-9af8-64901bd0c8c4",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "973e05e8-b436-4a42-9081-b5aa0fe2afcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bce4bf5-dc00-4e03-a2c9-f94933344b68",
        "cursor": {
          "ref": "e7faf589-7249-45a8-a054-891242a98384",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "4ef9dd38-3238-4f2e-b7f0-0bf791cca0a6"
        },
        "item": {
          "id": "5bce4bf5-dc00-4e03-a2c9-f94933344b68",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "17263f65-9599-4344-b475-64da9d5df3a2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da7de5d0-e349-44b7-94b7-ec07e102039f",
        "cursor": {
          "ref": "97fd197f-ecb9-4e2b-ac5a-008ad5fc362a",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "be642999-c6ec-4f9f-9bea-94cb834ee865"
        },
        "item": {
          "id": "da7de5d0-e349-44b7-94b7-ec07e102039f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "a064fe6f-106b-4c98-be03-c14cfcf09759",
          "status": "OK",
          "code": 200,
          "responseTime": 891,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec4b2369-a57c-46c0-a950-28ee3491f434",
        "cursor": {
          "ref": "f2bb2c93-c18a-409f-b97a-ef7038a6aa4a",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "0dba923a-479e-4dc8-ac19-be70cdd60f2f"
        },
        "item": {
          "id": "ec4b2369-a57c-46c0-a950-28ee3491f434",
          "name": "credentials_verify"
        },
        "response": {
          "id": "bc5a1b62-e8a5-439d-8143-533a992d7127",
          "status": "OK",
          "code": 200,
          "responseTime": 3886,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af3125c-efdb-45c2-abb6-3e7f1483c790",
        "cursor": {
          "ref": "4326010f-56d2-42cf-aaa9-6a621917b592",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "c4cddae8-dda8-4b18-bded-739c578d041d"
        },
        "item": {
          "id": "9af3125c-efdb-45c2-abb6-3e7f1483c790",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "13d5b302-5307-465d-b935-f1bf275402fb",
          "status": "OK",
          "code": 200,
          "responseTime": 2653,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0459357-afc6-4a23-bda6-2a578a6bdee6",
        "cursor": {
          "ref": "37662fd8-0350-4dd1-a003-c69e5fd57b7a",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ba502bd8-84c8-4a7b-8c5d-c296cf51728f"
        },
        "item": {
          "id": "d0459357-afc6-4a23-bda6-2a578a6bdee6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5d9f7d5b-12cc-4e16-9bad-375697a80f0c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0459357-afc6-4a23-bda6-2a578a6bdee6",
        "cursor": {
          "ref": "37662fd8-0350-4dd1-a003-c69e5fd57b7a",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ba502bd8-84c8-4a7b-8c5d-c296cf51728f"
        },
        "item": {
          "id": "d0459357-afc6-4a23-bda6-2a578a6bdee6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5d9f7d5b-12cc-4e16-9bad-375697a80f0c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb7a428-ab68-4492-8401-ed7dd59bbbb2",
        "cursor": {
          "ref": "137611c2-184e-4bfb-abf5-1d7d1ade447c",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "cb9e3b63-e6d5-4a63-887c-13290b6a5801"
        },
        "item": {
          "id": "9bb7a428-ab68-4492-8401-ed7dd59bbbb2",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e69033d9-dd66-4ad5-93cb-c333551b27f9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b6d1155-1d0e-4654-9909-41f9bf547070",
        "cursor": {
          "ref": "b7a959c2-4890-40a8-a389-d74c3b4b8919",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "df766722-8d75-4074-9409-837a60e01b8b"
        },
        "item": {
          "id": "3b6d1155-1d0e-4654-9909-41f9bf547070",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "7d8c324b-3ef8-4010-9a22-c7286334790f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}